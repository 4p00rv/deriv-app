{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./_common/base/socket_base.js","webpack:///./Modules/Reports/Helpers/market-underlying.js","webpack:///./Services/logout.js","webpack:///./_common/common_functions.js","webpack:///./_common/string_util.js","webpack:///./Stores/Modules/Trading/Constants/contract.js","webpack:///./Stores/Modules/Portfolio/Helpers/details.js","webpack:///./Stores/connect.js","webpack:///./Constants/ui.js","webpack:///./_common/base/currency_base.js","webpack:///./App/Components/Routes/button-link.jsx","webpack:///./App/Components/Elements/VerticalTabs/vertical-tab-content-container.jsx","webpack:///./App/Components/Elements/VerticalTabs/vertical-tab-headers.jsx","webpack:///./Modules/Trading/Components/Elements/full-screen-dialog.jsx","webpack:///./Services/socket-general.js","webpack:///./App/Containers/Redirect/redirect.jsx","webpack:///./Modules/Reports/Components/empty-portfolio-message.jsx","webpack:///./Modules/Contract/Containers/contract-link.jsx","webpack:///./Assets/SvgComponents/portfolio/ic-check.svg","webpack:///./Assets/SvgComponents/portfolio/ic-cross.svg","webpack:///./App/Components/Elements/PositionsDrawer/result-overlay.jsx","webpack:///./App/Components/Elements/PositionsDrawer/positions-drawer-card.jsx","webpack:///./App/Components/Elements/PositionsDrawer/positions-drawer.jsx","webpack:///./App/Components/Elements/market-is-closed-overlay.jsx","webpack:///./Modules/Trading/Containers/test.jsx","webpack:///./Modules/Trading/Components/Form/screen-large.jsx","webpack:///./Modules/Trading/Components/Form/form-layout.jsx","webpack:///./Modules/Trading/Containers/trade.jsx","webpack:///./App/Constants/routes-config.js","webpack:///./App/Components/Routes/binary-link.jsx","webpack:///./App/Components/Elements/login-prompt.jsx","webpack:///./App/Components/Routes/route-with-sub-routes.jsx","webpack:///./App/Components/Routes/binary-routes.jsx","webpack:///./App/Components/Elements/ContentLoader/positions-card.jsx","webpack:///./App/Components/Elements/ContentLoader/trade-params.jsx","webpack:///./App/Components/Elements/ContentLoader/index.js","webpack:///./Modules/PageError/PageError.jsx","webpack:///./App/Components/Elements/ui-loader.jsx","webpack:///./Modules/Trading/Helpers/digits.js","webpack:///./Assets/Header/NavBar/icon-deriv.jsx","webpack:///./templates/app/components/loading.jsx","webpack:///./App/Components/Elements/chart-loader.jsx","webpack:///./Modules/Reports/Helpers/shortcode.js","webpack:///./App/Constants/app-config.js","webpack:///./App/Components/Elements/tooltip.jsx","webpack:///./App/Components/Form/InputField/increment-buttons.jsx","webpack:///./App/Components/Form/InputField/input.jsx","webpack:///./App/Components/Form/InputField/input-field.jsx","webpack:///./App/Components/Elements/VerticalTabs/vertical-tab.jsx","webpack:///./App/Components/Elements/underlying-icon.jsx","webpack:///./App/Components/Elements/PositionsDrawer/ProgressSlider/positions-progress-ticks.jsx","webpack:///./App/Containers/remaining-time.jsx","webpack:///./App/Components/Elements/PositionsDrawer/ProgressSlider/positions-progress-slider.jsx","webpack:///./App/Components/Elements/localize.jsx","webpack:///./Stores/Modules/Contract/Helpers/logic.js","webpack:///./_common/storage.js","webpack:///./Stores/Modules/Trading/Helpers/barrier.js","webpack:///./Stores/Modules/Trading/Helpers/contract-type.js","webpack:///./App/Components/Elements/PositionsDrawer/contract-type-cell.jsx","webpack:///./App/Components/Elements/Calendar/calendar-footer.jsx","webpack:///./App/Components/Form/ButtonToggleMenu/button-highlight.jsx","webpack:///./App/Components/Form/ButtonToggleMenu/button-highlight-wrapper.jsx","webpack:///./App/Components/Form/ButtonToggleMenu/button-toggle-menu.jsx","webpack:///./App/Components/Form/DropDown/items.jsx","webpack:///./App/Components/Form/DropDown/native-select.jsx","webpack:///./App/Components/Form/DropDown/helpers.js","webpack:///./App/Components/Form/DropDown/dropdown.jsx","webpack:///./Stores/Modules/Trading/Helpers/allow-equals.js","webpack:///./Modules/Trading/Components/Form/TradeParams/allow-equals.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/amount.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/barrier.jsx","webpack:///./App/Components/Form/RangeSlider/tick-steps.jsx","webpack:///./App/Components/Form/RangeSlider/range-slider.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/Duration/duration-toggle.jsx","webpack:///./App/Components/Form/DatePicker/helpers.js","webpack:///./App/Components/Elements/Calendar/calendar.jsx","webpack:///./App/Components/Form/DatePicker/date-picker.jsx","webpack:///./Modules/Trading/Components/Form/DatePicker/trading-date-picker.jsx","webpack:///./App/Components/Form/TimePicker/dialog.jsx","webpack:///./App/Components/Form/TimePicker/time-picker.jsx","webpack:///./Stores/Modules/Trading/Helpers/end-time.js","webpack:///./Modules/Trading/Components/Form/TimePicker/trading-time-picker.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/Duration/advanced-duration.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/Duration/simple-duration.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/Duration/duration.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/Duration/duration-wrapper.jsx","webpack:///./App/Components/Form/number-selector.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/last-digit.jsx","webpack:///./Modules/Trading/Containers/trade-params.jsx","webpack:///./App/Components/Elements/Calendar/panels/types.js","webpack:///./App/Components/Elements/Calendar/panels/calendar-days.jsx","webpack:///./App/Components/Elements/Calendar/panels/calendar-months.jsx","webpack:///./App/Components/Elements/Calendar/panels/calendar-years.jsx","webpack:///./App/Components/Elements/Calendar/panels/calendar-decades.jsx","webpack:///./App/Components/Elements/Calendar/calendar-body.jsx","webpack:///./Modules/Trading/Components/Form/ContractType/contract-type-dialog.jsx","webpack:///./Modules/Trading/Components/Form/ContractType/contract-type-item.jsx","webpack:///./Modules/Trading/Components/Form/ContractType/contract-type-list.jsx","webpack:///./Modules/Trading/Components/Form/TradeTypeInfo/trade-type-info-dialog.jsx","webpack:///./Modules/Trading/Components/Form/TradeTypeInfo/trade-type-info-item.jsx","webpack:///./Modules/Trading/Components/Form/ContractType/contract-type-widget.jsx","webpack:///./Modules/Trading/Containers/contract-type.jsx","webpack:///./Modules/Trading/Components/Form/Purchase/contract-info.jsx","webpack:///./Modules/Trading/Components/Elements/purchase-button.jsx","webpack:///./Modules/Trading/Components/Elements/purchase-fieldset.jsx","webpack:///./Modules/Trading/Containers/purchase.jsx","webpack:///./App/Components/Elements/NotificationMessage/close-button.jsx","webpack:///./App/Components/Elements/NotificationMessage/constants.js","webpack:///./App/Components/Elements/NotificationMessage/notification.jsx","webpack:///./Utils/Language/language.js","webpack:///./Utils/Language/index.js","webpack:///./App/Components/Elements/Calendar/calendar-button.jsx","webpack:///./App/Components/Elements/Calendar/calendar-header.jsx","webpack:///./App/Components/Elements/Errors/error-component.jsx","webpack:///./App/Components/Elements/PositionsDrawer/helpers/positions-helper.js","webpack:///./App/Components/Elements/PositionsDrawer/helpers/index.js","webpack:///./_common/base/network_monitor_base.js","webpack:////Users/negar/git/deriv-app-staging/packages/components/lib/button.js","webpack:///./Constants/index.js","webpack:///./_common/base/client_base.js","webpack:///./App/i18n.js","webpack:///./_common/url.js","webpack:///./App/Containers/Lazy/lazy.jsx","webpack:///./_common/base/server_time.js","webpack:///./Stores/Modules/Trading/Helpers/duration.js","webpack:///./Utils/Date/date-time.js","webpack:///./Utils/Date/index.js","webpack:///./_common/language.js","webpack:///./Constants/routes.js","webpack:///./_common/lib/polyfills/nodelist.foreach.js","webpack:///./_common/lib/polyfills/element.closest.js","webpack:///./_common/lib/plugins.js","webpack:///./_common/base/subscription_manager.js","webpack:///./Services/trackjs.js","webpack:///./Services/ws-methods.js","webpack:///./_common/lib/polyfills/element.matches.js","webpack:///./_common/os_detect.js","webpack:///./App/Components/Elements/Errors/error-boundary.jsx","webpack:///./App/Containers/Layout/app-contents.jsx","webpack:///./App/Containers/server-time.jsx","webpack:///./App/Components/Layout/Footer/network-status.jsx","webpack:///./App/Components/Layout/Footer/toggle-fullscreen.jsx","webpack:///./App/Components/Layout/Footer/toggle-positions.jsx","webpack:///./App/Components/Elements/modal.jsx","webpack:///./App/Components/Layout/Footer/toggle-settings.jsx","webpack:///./App/Containers/Layout/footer.jsx","webpack:///./App/Components/Layout/Header/menu-links.jsx","webpack:///./App/Components/Layout/Header/login-button.jsx","webpack:///./App/Components/Layout/Header/signup-button.jsx","webpack:///./App/Components/Layout/Header/upgrade-button.jsx","webpack:///./App/Components/Layout/Header/account-actions.jsx","webpack:///./App/Constants/header-links.js","webpack:///./App/Containers/Layout/header.jsx","webpack:///./App/Containers/Routes/routes.jsx","webpack:///./Services/network-monitor.js","webpack:///./Services/outdated-browser.js","webpack:///./Stores/Helpers/client-notifications.js","webpack:///./Utils/Validator/declarative-validation-rules.js","webpack:///./Utils/Validator/errors.js","webpack:///./Utils/Validator/validator.js","webpack:///./Stores/base-store.js","webpack:///./Stores/Modules/Trading/Helpers/currency.js","webpack:///./Stores/client-store.js","webpack:///./Stores/Helpers/client.js","webpack:///./Stores/common-store.js","webpack:///./Stores/gtm-store.js","webpack:///./Stores/Modules/Cashier/cashier-store.js","webpack:///./Stores/Modules/SmartChart/Constants/barriers.js","webpack:///./Stores/Modules/Contract/Helpers/chart-barriers.js","webpack:///./Modules/SmartChart/Components/Markers/marker-line.jsx","webpack:///./Modules/SmartChart/Components/Markers/marker-spot.jsx","webpack:///./Modules/SmartChart/Components/Markers/marker-spot-label.jsx","webpack:///./Stores/Modules/SmartChart/Constants/markers.js","webpack:///./Stores/Modules/Contract/Helpers/chart-marker-helpers.js","webpack:///./Stores/Modules/Contract/Helpers/chart-markers.js","webpack:///./Stores/Modules/Portfolio/Helpers/portfolio-notifcations.js","webpack:///./Stores/Modules/Contract/contract-replay-store.js","webpack:///./Stores/Modules/Contract/contract-trade-store.js","webpack:///./Stores/Modules/Trading/Helpers/active-symbols.js","webpack:///./Stores/Modules/Portfolio/Helpers/format-response.js","webpack:///./Stores/Modules/Portfolio/portfolio-store.js","webpack:///./Stores/Modules/Profit/Helpers/format-request.js","webpack:///./Stores/Modules/Profit/Helpers/format-response.js","webpack:///./Stores/Modules/Profit/profit-store.js","webpack:///./Stores/Modules/SmartChart/Helpers/barriers.js","webpack:///./Stores/Modules/SmartChart/chart-barrier-store.js","webpack:///./Stores/Modules/SmartChart/chart-marker-store.js","webpack:///./Stores/Modules/SmartChart/smart-chart-store.js","webpack:///./Stores/Modules/Statement/statement-store.js","webpack:///./Stores/Modules/Statement/Helpers/format-response.js","webpack:///./Stores/Modules/Trading/Actions/purchase.js","webpack:///./Stores/Modules/Trading/Actions/symbol.js","webpack:///./Stores/Modules/Trading/Constants/validation-rules.js","webpack:///./Stores/Modules/Trading/Actions/contract-type.js","webpack:///./Stores/Modules/Trading/Actions/duration.js","webpack:///./Stores/Modules/Trading/Actions/start-date.js","webpack:///./Stores/Modules/Trading/Helpers/process.js","webpack:///./Stores/Modules/Trading/Helpers/proposal.js","webpack:///./Stores/Modules/Trading/trade-store.js","webpack:///./Stores/Modules/Trading/Helpers/chart.js","webpack:///./Stores/Modules/index.js","webpack:///./Stores/ui-store.js","webpack:///./Stores/index.js","webpack:///./App/app.js","webpack:///./Utils/Events/storage.js","webpack:///./App/app.jsx","webpack:///./Utils/pwa/register-service-worker.js","webpack:///./App/Components/Elements/Popover/popover-bubble.jsx","webpack:///./App/Components/Elements/Popover/popover.jsx","webpack:///./App/Components/Form/fieldset.jsx","webpack:///./Stores/Modules/Trading/Helpers/start-date.js","webpack:///./_common/base/login.js","webpack:///./Stores/Modules/Contract/Helpers/digits.js","webpack:///./Assets/icon.jsx","webpack:///./config.js","webpack:///./Constants/contract.js","webpack:///./App/Components/Elements/money.jsx","webpack:///./Constants/date-time.js","webpack:///./_common/utility.js","webpack:///./App/Components/Elements/Calendar/helper.js","webpack:///./Services/index.js","webpack:///./App/Components/Routes/helpers.js","webpack:///./_common/base/socket_cache.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","prefetchChunks","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","deferredPrefetch","apply","shift","deferredModules","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","forEach","undefined","link","document","createElement","nc","setAttribute","rel","as","href","jsonpScriptSrc","head","appendChild","installedModules","installedCssChunks","main","p","404","account-info","contract","digits","info-box","modals","notification-messages","push-notification","reports","screen-small","settings-chart","settings-language","settings-theme","toggle-menu-drawer","vendors~open_position~7c650be5","default~open_position~1833eefb","open_positions","profit_table","statement","vendors~smart_chart","smart_chart","work-in-progress","two-month-picker","exports","module","l","e","promises","Promise","resolve","reject","fullhref","existingLinkTags","getElementsByTagName","dataHref","tag","getAttribute","existingStyleTags","linkTag","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","error","clearTimeout","chunk","errorType","realSrc","message","name","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","startupResult","binary_socket","config","buffered_sends","req_id","wrong_app_id","is_available","is_disconnect_called","is_connected_before","socket_url","timeouts","no_duplicate_requests","sent_requests","waiting_list","clearTimeouts","isReady","hasReadyState","sendBufferedRequests","wait","send","ClientBase","require","SocketCache","getLanguage","State","cloneObject","getPropertyValue","isEmptyObject","PromiseClass","getAppId","getSocketURL","BinarySocketBase","concat","items","clear","has","msg_type","indexOf","add","remove","promise_obj","response","this_promises","pr","another_exists","keys","some","req_obj","options","arguments","has_callback","callback","find","forced","set","skip_cache_update","JSON","stringify","time","assign","last_response","subscribe","isOnline","passthrough","wsEvent","init","_typeof","WebSocket","onopen","isLoggedIn","authorize","onOpen","onReconnect","onmessage","msg","parse","test","this_req_id","onMessage","onclose","onDisconnect","_len2","msg_types","Array","_key2","is_resolved","availability","status","_len","states","_key","readyState","sendBuffered","setOnDisconnect","setOnReconnect","removeOnReconnect","removeOnDisconnect","__webpack_exports__","getMarketInformation","getMarketName","getTradeTypeName","Constants__WEBPACK_IMPORTED_MODULE_0__","shortcode","market_info","category","underlying","extracted","RegExp","exec","toLowerCase","getMarketNamesMap","toUpperCase","getContractConfig","requestLogout","_common_base_client_base__WEBPACK_IMPORTED_MODULE_0__","_common_base_client_base__WEBPACK_IMPORTED_MODULE_0___default","_common_base_socket_cache__WEBPACK_IMPORTED_MODULE_1__","_common_base_socket_cache__WEBPACK_IMPORTED_MODULE_1___default","_common_storage__WEBPACK_IMPORTED_MODULE_2__","_ws_methods__WEBPACK_IMPORTED_MODULE_3__","WS","logout","doLogout","removeCookies","Client","clearAllAccounts","isVisible","elem","offsetWidth","offsetHeight","getElementById","id_selector","parent","padLeft","txt","len","char","text","String","join","numberToString","toTitleCase","str","replace","charAt","substr","compareBigUnsignedInt","a","b","first_num","second_num","max_length","Math","max","order","getLocalizedBasis","payout","localize","stake","multiplier","getContractTypesConfig","rise_fall","title","trade_types","basis","components","barrier_count","rise_fall_equal","high_low","touch","end","stay","asian","match_diff","even_odd","over_under","lb_call","lb_put","lb_high_low","getContractCategoriesConfig","_ref","_defineProperty","getCurrentTick","getDurationUnitText","getDurationPeriod","getDurationTime","App_i18n__WEBPACK_IMPORTED_MODULE_0__","_common_utility__WEBPACK_IMPORTED_MODULE_1__","Utils_Date__WEBPACK_IMPORTED_MODULE_2__","_Contract_Helpers_digits__WEBPACK_IMPORTED_MODULE_3__","contract_info","tick_stream","unique","current_tick","isDigitContract","contract_type","isEndTime","duration","obj_duration","unit_map","name_plural","name_singular","h","duration_ms","asMilliseconds","getDiffDuration","epochToMoment","purchase_time","date_start","date_expiry","tick_count","floor","is_end_time","string_format","formatMiliseconds","getDurationUnitValue","SPECIAL_REACT_KEYS","children","ref","MobxProvider","_Provider","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","_inherits","Provider","_createClass","stores","baseStores","context","mobxStores","props","store","_objectSpread","childContextTypes","PropTypes","client","common","gtm","ui","connect","StoreClass","mapper","Component","inject","observer","connect_global_store","observed","StoredComponent","_Component","_getPrototypeOf2","_this","args","propTypes","React","wrappedDisplayName","displayName","constructor","MAX_MOBILE_WIDTH","MAX_TABLET_WIDTH","crypto_config","currencies_config","formatCurrency","currency","addComma","num","decimal_points","is_crypto","number","toFixed","parseFloat","toString","$0","$1","$2","getDecimalPlaces","isCryptocurrency","calcDecimalPlaces","CryptoConfig","BTC","min_withdrawal","pa_max_withdrawal","pa_min_withdrawal","BCH","ETH","ETC","LTC","UST","USB","getMinWithdrawal","formatMoney","currency_value","amount","exclude_currency","decimals","minimumFractionDigits","money","sign","Number","decimal_places","isNaN","abs","Intl","maximumFractionDigits","NumberFormat","format","setCurrencies","website_status","getCurrencyName","getTransferLimits","which","transfer_limits","min","getTransferFee","currency_from","currency_to","transfer_fee","getMinimumTransferFee","pow","getTextFormat","getMinPayout","getPaWithdrawalLimit","limit","getCurrencies","classnames__WEBPACK_IMPORTED_MODULE_0__","classnames__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","ButtonLink","className","to","onClick","classNames","string","func","VerticalTabContentContainer","PureComponent","_this$props","action_bar","action_bar_classname","id","is_routed","selected","selected_item","item","label","TabContent","react__WEBPACK_IMPORTED_MODULE_1___default","map","component","icon","Assets_icon_jsx__WEBPACK_IMPORTED_MODULE_3__","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","exact","from","routes","positions","_ref2","path","render","component_icon","VerticalTabHeaders","header_title","onChange","activeClassName","vertical-tab__header--active","vertical-tab__header__icon--active","FullScreenDialog","visible","wrapperClassName","body","classList","fullscreen-dialog--open","tagName","scrollToTarget","el","viewport_offset","getBoundingClientRect","top","clientHeight","innerHeight","new_el_top","scrollTop","scrollToElement","currentTarget","addEventListener","removeEventListener","onClose","any","bool","client_store","common_store","gtm_store","setResidence","setBalance","handleError","authorizeAccount","mobx__WEBPACK_IMPORTED_MODULE_0__","_common_base_login__WEBPACK_IMPORTED_MODULE_1__","_common_base_login__WEBPACK_IMPORTED_MODULE_1___default","_common_base_server_time__WEBPACK_IMPORTED_MODULE_2__","_common_base_server_time__WEBPACK_IMPORTED_MODULE_2___default","_common_base_socket_base__WEBPACK_IMPORTED_MODULE_3__","_common_base_socket_base__WEBPACK_IMPORTED_MODULE_3___default","_common_storage__WEBPACK_IMPORTED_MODULE_4__","_common_utility__WEBPACK_IMPORTED_MODULE_5__","App_i18n__WEBPACK_IMPORTED_MODULE_6__","_logout__WEBPACK_IMPORTED_MODULE_7__","_ws_methods__WEBPACK_IMPORTED_MODULE_8__","BinarySocketGeneral","setIsSocketOpened","is_ready","Login","isLoginPages","is_valid_login","subscribeWebsiteStatus","ResponseHandlers","websiteStatus","ServerTime","action","server_time","is_active_tab","sessionStorage","getItem","removeItem","loginid","is_populating_account_list","get_settings","country_code","setEmail","email","eventHandler","responsePayoutCurrencies","payout_currencies","pushTransactionData","residence","landingCompany","flow","regeneratorRuntime","mark","_callee","balance","wrap","_context","prev","next","BinarySocket","stop","setError","responseAuthorize","subscribeBalance","sendRequest","getAccountStatus","payoutCurrencies","mt5LoginList","country","accounts","is_virtual","getSelfExclusion","accepted_bch","site_status","location","reload","setWebsiteStatus","Redirect","history","setCashierActiveTab","setVerificationCode","toggleAccountSignupModal","toggleCashierModal","url_params","URLSearchParams","search","replaceState","root","withRouter","EmptyPortfolioMessage","react_default","Fragment","ContractLink","contract_id","openContract","node","onMount","contract_trade","ic_check","styles","_objectWithoutProperties","_extends","xmlns","width","height","fill","fillRule","cx","cy","ic_cross","ic_cross_objectWithoutProperties","ic_cross_extends","stroke","strokeLinecap","ResultOverlay","handleClick","is_unsupported","preventDefault","is_visible","onClickRemove","is_contract_won","react_transition_group","in","enter","enterDone","exit","unmountOnExit","positions-drawer-card__result--won","positions-drawer-card__result--lost","react_router_dom","getContractPath","result__caption--won","result__caption--lost","oneOfType","has_same_contract_mounted","PositionsDrawerCard","active_position","indicative","is_dark_theme","is_loading","is_sell_requested","is_valid_to_sell","profit_loss","onClickSell","sell_price","toggleUnsupportedContractModal","loader_el","ContentLoader","speed","fallback_result","contract_el","underlying_icon","market","display_name","contract_type_cell","is_high_low","Shortcode","isHighLow","is_sold","ProgressSlider","start_time","expiry_time","ticks_count","positions-drawer-card__profit-loss--is-crypto","positions-drawer-card__profit-loss--negative","positions-drawer-card__profit-loss--positive","positions-drawer-card__indicative--movement-complete","buy_price","positions-drawer-card__wrapper--active","parseInt","result_overlay","positions-drawer-card--active","positions-drawer-card--green","positions-drawer-card--red","contract_link","button_default","btn--loading","is_disabled","duration_unit","exit_spot","sell_time","PositionsDrawer","onUnmount","all_positions","active_contract_id","is_contract_mode","is_empty","is_positions_drawer_on","toggleDrawer","body_content","portfolio_position","appear","positions_drawer_card","positions_drawer_extends","positions-drawer--open","positions-drawer--contract-mode","lib","style","autoHide","empty_portfolio_message","MobxPropTypes","arrayOrObservableArray","portfolio","removePositionById","is_dark_mode_on","togglePositionsDrawer","startAnimation","children_background_color","getComputedStyle","firstElementChild","converted_rgba","startsWith","split","querySelectorAll","element","backgroundColor","requestAnimationFrame","toggleFade","opacity","direction","color","sub_or_add","reduction","new_opacity","stopId","cancelAnimationFrame","querySelector","contains","click","MarketIsClosedOverlay","i18n_default_text","classNameSpan","Test","state","setVisibility","stateVisibility","test_assertThisInitialized","container","fontSize","lineHeight","position","zIndex","background","padding","marginTop","display","overflowY","prop_name","componentDidMount","componentWillUnmount","ctrlKey","keyCode","setState","_this2","entries","sort","_slicedToArray","k","v","test_typeof","toJS","array","_ref3","trade","ScreenLarge","is_contract_visible","is_market_closed","is_trade_enabled","sidebar__items--is-disabled","sidebar__items--market-closed","fieldset","trade_params","purchase","FormLayout","is_mobile","Lazy","ctor","should_load","screen_large","SmartChart","lazy","Trade","showPositions","hidePositions","onCloseContract","form_wrapper_class","should_show_bottom_widgets","is_digit_contract","should_show_last_digit_stats","isDigitTradeType","is_chart_visible","is_chart_loading","is_chart_ready","positions_drawer","has_progress","Suspense","fallback","chart_loader","is_dark","symbol","chart_id","chart_type","Digits","is_trade_page","digits_info","display_status","is_ended","InfoBox","error_message","removeError","end_epoch","granularity","is_static_chart","onSymbolChange","scroll_to_epoch","start_epoch","cursor","market_is_closed_overlay","form_layout","purchase_info","routesConfig","removeErrorMessage","scroll_to_left_epoch","hidePositionsFooterToggle","showPositionsFooterToggle","has_only_forward_starting_contracts","setHasOnlyForwardingContracts","ContractDetails","Reports","OpenPositions","ProfitTable","Statement","Page404","route_default","getRoutesConfig","is_authenticated","index","RouterRedirect","icon_component","default","profit","error404","redirect","BinaryLink","active_class","binary_link_objectWithoutProperties","normalizePath","route","findRouteByPath","binary_link_extends","LoginPrompt","onLogin","onSignup","page_title","PageError","header","values","messages","defaultProps","open","urlFor","pushDataLayer","react_router","pathname","is_logged_in","login_prompt","redirectToLogin","route_with_sub_routes_extends","Language","setCookie","default_title","BinaryRoutes","idx","route_with_sub_routes","binary_routes_extends","PositionsCardLoader","react_content_loader_es","primaryColor","secondaryColor","x","y","rx","ry","TradeParamsLoader","positions_card_PositionsCardLoader","trade_params_TradeParamsLoader","buttonOnClick","error_code","redirect_label","redirect_url","has_html","dangerouslySetInnerHTML","__html","button_link","UILoader","classNameBlock","block_class","loading_class","viewBox","strokeWidth","strokeMiterlimit","digitTypesMap","includes","IconDeriv","Loading","is_slow_loading","theme","inx","ChartLoader","loading","extractInfoFromShortcode","info_from_shortcode","barrier_1","_ref$shortcode","_ref$shortcode_info","shortcode_info","website_name","Tooltip","show_tooltip_balloon_icon","onMouseEnter","onMouseLeave","alignment","classNameIcon","has_error","icon_class","tooltip--error","data-tooltip","data-tooltip-pos","Assets_icon","tooltip__balloon-icon--show","IncrementButtons","decrementValue","incrementValue","max_is_disabled","min_is_disabled","tabIndex","Input","changeValue","checked","classNameInlinePrefix","data_value","data_tip","display_value","fractional_digits","inline_prefix","is_autocomplete_disabled","is_hj_whitelisted","is_incrementable","is_read_only","onKeyPressed","placeholder","required","autoComplete","data-for","data-hj-whitelist","data-tip","data-value","disabled","maxLength","navigator","userAgent","selectionStart","evt","selectionEnd","onKeyDown","readOnly","InputField","classNameInput","classNamePrefix","error_messages","helper","is_float","_this$props$is_hj_whi","is_negative_disabled","_this$props$is_read_o","_this$props$is_signed","is_signed","_this$props$is_unit_a","is_unit_at_right","max_value","min_value","prefix","unit","Icon","has_valid_length","getDecimals","val","array_value","increment_value","new_value","calculateDecrementedValue","decrement_value","is_increment_input","input","InputField_input","trim","signed_regex","is_number","is_not_completed_number","has_zero_at_end","is_scientific_notation","input--error","increment_buttons","InputField_increment_buttons","input_tooltip","tooltip","tooltip--with-label","htmlFor","VerticalTab","changeSelected","applicable_routes","list","filter","current_path","selected_index","vertical-tab--full-screen","is_full_width","_vertical_tab_headers_jsx__WEBPACK_IMPORTED_MODULE_4__","_vertical_tab_content_container_jsx__WEBPACK_IMPORTED_MODULE_3__","arrayOf","shape","isRequired","UnderlyingIcon","react__WEBPACK_IMPORTED_MODULE_1__","ProgressTicks","arr_ticks","_toConsumableArray","progress-slider__ticks-step--marked","RemainingTime","_ref$end_time","end_time","unix","remaining_time","formatDuration","percentage","getTimePercentage","positions_progress_ticks","Containers_remaining_time","progress-slider__line--green","progress-slider__line--orange","progress-slider__line--red","prop_types__WEBPACK_IMPORTED_MODULE_0__","prop_types__WEBPACK_IMPORTED_MODULE_0___default","react_i18next__WEBPACK_IMPORTED_MODULE_2__","Localize","defaults","getChartConfig","getChartType","getChartGranularity","getDisplayStatus","getIndicativePrice","getLastTickFromTickStream","isEnded","isUserSold","isValidToSell","getEndTime","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","is_from_purchase","start","hour_to_granularity_map","getExpiryTime","moment","diff","asHours","calculateGranularity","getFinalPrice","bid_price","is_expired","is_settleable","exit_tick_time","is_path_dependent","is_tick_contract","Cookies","isProduction","getObject","setObject","setItem","Storage","isStorageSupported","storage","Store","InScriptStore","obj","isArray","getResponse","CookieStorage","cookie_name","cookie_domain","hostname","initialized","domain","expires","Date","read","cookie_value","write","expireDate","isSecure","secure","SessionStore","LocalStore","localStorage","domains","parent_path","cookie_names","cookie","contract_types","available_contract_types","available_categories","trading_times","buildTradeTypesConfig","getArrayDefaultValue","getComponents","getDurationUnitsList","getDurationUnit","getDurationMinMax","getStartType","getStartDates","hours","minutes","getValidTime","buildMoment","setMinuteMultipleByFive","getTradeTypes","getBarriers","getBasis","ContractType","contract_display","arr_new_values","c_type","form_components","contract_start_type","duration_units_list","duration_units","arr_units","contract_expiry_type","duration_min_max","start_date","current_start_date","start_dates_list","has_spot","forward_starting_dates","sessions","compare_moment","start_moment","isSessionAvailable","minute","hour","date","isTimeValid","toMoment","moment_obj","ceil","arr_basis","localized_basis","basis_list","reduce","cur","bas","buildContractTypesConfig","contractsFor","has_contracts","contracts_for","available","start_type","contract_categories","barriers","sub_cats","durations","buildDurationConfig","count","obj_barrier","field","expiry_type","buildBarriersConfig","buildForwardStartingConfig","barrier_values","barrier","high_barrier","barrier_2","low_barrier","getContractType","arr_list","ct","getContractValues","obj_basis","obj_trade_types","obj_start_dates","obj_start_type","getFullContractTypes","getExpiryDate","expiry_date","proper_expiry_date","moment_start","moment_expiry","hasIntradayDurationUnit","isBefore","isAfter","clone","isSameOrBefore","market_close_times","market_close_time","end_moment","expiry_sessions","close","minDate","is_end_of_day","is_end_of_session","subtract","getExpiryType","getSessions","option","getStartTime","getTradingTimes","trading_times_response","submarkets","symbols","_args","abrupt","sent","markets","echo_req","times","_x","getContractCategories","contract_types_list","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","Constants_contract__WEBPACK_IMPORTED_MODULE_2__","ContractTypeCell","getContractTypeDisplay","Assets_icon_jsx__WEBPACK_IMPORTED_MODULE_2__","App_i18n__WEBPACK_IMPORTED_MODULE_3__","FooterIcon","use_icon","CalendarFooter","footer","has_today_btn","has_range_selection","duration_date","is_minimum","Highlight","left","left_offset","highlight_style","transform","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","HighlightWrapper","buttonClick","updateHighlightPosition","closest","resetHighlight","offsetLeft","active_button_el","getElementsByClassName","other_props","classnames","Children","child","cloneElement","button_highlight_Highlight","ButtonToggleMenu","buttons_arr","is_animated","menu","button-menu__button--active","selected_value","button_highlight_wrapper","Items","handleSelect","has_symbol","symbol_type_class_name","list__item--highlighted","list__item--selected","list__item--disabled","has_tooltip","Popover","NativeSelect","getItemFromValue","findInArray","findIndex","isArrayLike","getValueFromIndex","getPrevIndex","getNextIndex","Dropdown","list_ref","createRef","curr_index","is_list_visible","handleVisibility","setWrapperRef","wrapper_ref","handleClickOutside","is_single_option","prev_index","next_index","is_alignment_left","firstChars","is_nativepicker","native_select","left_alignment_style","list_width","dropdown--left","dropdown--show","dropdown--disabled","classNameDisplay","dropdown__display--clicked","dropdown__display--has-symbol","dropdown__select-arrow--left","onEntered","current","dropdown__list--left","list--left","autoHeight","autoHeightMax","renderTrackHorizontal","dropdown_extends","renderThumbHorizontal","DropDown_items","hasCallPutEqual","contract_type_list","hasDurationForCallPutEqual","contract_duration_list","allow_equals_toConsumableArray","AllowEquals","has_callputequal_duration","has_callputequal","isRiseFallEqual","input_field","_e$target","classNameTarget","margin","Amount","currencies_list","is_equal","is_minimized","is_single_currency","validation_errors","button_toggle_menu","dropdown","trade-container__currency-options-dropdown","allow_equals","observableObject","Barrier","barrier_title","input_class","is_center","TickSteps","hover_value","tick_steps_toConsumableArray","isActive","isMarked","isMarkedOnHover","range-slider__ticks-step--active","range-slider__ticks-step--marked","range-slider__ticks-step--marked-hover","RangeSlider","handleChange","resetOnHover","rangeSliderTrack","getRangeSliderTrackWidth","_e$nativeEvent","nativeEvent","offsetX","offsetY","is_hover","range-slider__error","steps","tick_steps","DurationToggle","icon_className","advanced-simple-toggle__icon--active","react","classNamePath","trading_events","getTradingEvents","events","Calendar","calendar_classCallCheck","calendar_possibleConstructorReturn","calendar_getPrototypeOf","switchView","view","calendar_view","navigateTo","new_date","calendar_date","date_format","onChangeCalendarMonth","start_of_month","getStartOfMonth","onMouseOver","hovered_date","updateSelectedDate","max_date","min_date","onSelect","moment_date","dataset","startOf","is_before","is_after","formatted_date","selected_date","updateSelected","stopPropagation","isPeriodDisabled","month","year","decade","resetCalendar","_this$props2","default_date","setToday","_this$props3","now","_this$props4","start_of_period","endOf","current_date","default_message","_this$props5","holidays","weekends","_this$state","calendar_header","calendar_body","calendar_footer","dates","descrip","DatePicker","date_value","is_datepicker_visible","is_clear_btn_visible","is_mounted","onClickOutside","mainNode","updateDatePickerValue","formatDate","is_clearable","onSelectCalendar","isDateValid","onChangeInput","formatted_value","addDays","clearDatePickerInput","updateStore","calendar","daysFromTodayTo","new_date_value","renderInputField","initial_value","disable_trading_events","defaultValue","datepicker__icon--is-hidden","datepicker__icon--with-label","datepicker__picker--left","date_picker_objectSpread","TradingDatePicker","max_date_duration","min_date_expiry","duration_d","is_24_hours_contract","has_intraday_unit","min_duration","daily","moment_contract_start_date_time","setTime","max_daily_duration","is_duration_contract","date_picker","disable_year_selector","Dialog","preClass","selected_time","start_time_moment","end_time_moment","seconds","milliseconds","to_compare_moment","_selected_time$split2","dialog_toConsumableArray","selectOption","current_value","prev_value","is_enabled","_prev_value$split","_prev_value$split2","prev_hour","prev_minute","start_time_reset_minute","is_hour_enabled","isBetween","is_minute_enabled","dialog_defineProperty","mm","TimePicker","is_open","toggleDropDown","arg","time_picker_typeof","saveRef","nodeName","target_element","dialog","getClosestTime","interval","TradingTimePicker","market_open_times","moment_expiry_date","market_open_datetime","market_close_datetime","expiry_datetime","server_datetime","boundaries","market_open_time","getBoundaries","getSelectedTime","time_picker","AdvancedDuration","advanced_duration_unit","advanced_expiry_type","duration_t","changeDurationUnit","getDurationFromUnit","expiry_list","number_input_props","onChangeUiStore","shared_input_props","has_intraday_duration_unit","isSame","endtime_container_class","has-time","range_slider","advanced_duration_extends","ticks","trading_date_picker","trading_time_picker","SimpleDuration","arr","filtered_arr","simple_duration_unit","has_label","du","simple_duration_extends","Duration","hasDurationUnit","is_advanced_duration","onChangeMultiple","has_end_time","expiry","pop","duration_unit_text","duration_value","shared_input","duration_name","number_input","has_toggle","trade-container__fieldset--advanced","duration_extends","advanced_duration","simple_duration","duration_toggle","_ref4","current_duration_unit","new_trade_store_values","duration_objectSpread","DurationWrapper","duration_list","duration_wrapper_toConsumableArray","advancedHasWrongExpiry","handleEndTime","getDurationMinMaxValues","convertDurationLimit","new_duration_unit","new_duration_value","current_unit","current_duration","_this$getDurationMinM2","duration_wrapper_slicedToArray","has_missing_duration_unit","simple_is_missing_duration_unit","_this$getDurationMinM4","setDurationUnit","Duration_duration","duration_wrapper_extends","duration_h","duration_m","duration_s","NumberSelector","arr_arr_numbers","selected_number","arr_numbers","number-selector__selection--selected","LastDigit","last_digit","arr_five","last_digit_toConsumableArray","number_selector","TradeParams","component_key","duration_wrapper","TradeParams_last_digit","TradeParams_amount","CommonPropTypes","CalendarDays","days","hide_others","moment_today","moment_cur_date","num_of_days","daysInMonth","moment_month_start","moment_month_end","moment_selected","subMonths","day","subDays","start_of_next_month","addMonths","moment_start_date","moment_hovered","is_active","is_today","getDaysOfTheWeek","has_events","is_closes_early","match","duration_from_today","is_between","is_between_hover","is_before_min_or_after_max_date","is_other_month","calendar__cell--active","calendar__cell--today","calendar__cell--active-duration","calendar__cell--today-duration","calendar__cell--disabled","calendar__cell--is-hidden","calendar__cell--other","calendar__cell--between-hover","calendar__cell--between","data-date","data-duration","classNameTargetIcon","getDays","week_headers_abbr","CalendarMonths","moment_selected_date","month_headers","data-month","calendar_months_objectSpread","CalendarYears","_getDecade$split2","getDecade","start_of_decade","end_of_decade","years","is_other_decade","data-year","calendar_years_objectSpread","CalendarDecades","decades","min_year","getCentury","_decade$split2","calendar_decades_slicedToArray","is_other_century","data-decade","calendar_decades_objectSpread","CalendarBody","calendar_days_CalendarDays","calendar_months_CalendarMonths","calendar_years_CalendarYears","calendar_decades_CalendarDecades","ContractTypeDialog","full_screen_dialog","ContractTypeItem","contracts","handleInfoClick","contract-type-item--selected","contract-type-item--invisible","ContractTypeList","contract_type_item","objectOrObservableObject","TradeTypeInfoDialog","TradeTypeInfoItem","handleNavigationClick","handleNextClick","handlePrevClick","item_index","itemList","onBackButtonClick","onSubmitButtonClick","ContractTypeWidget","is_dialog_open","is_info_dialog_open","handleInfoVisibility","navigationLength","nextIndex","list_item","prevIndex","onWidgetClick","getDisplayText","getItemIndex","curr_item","getItemList","contract-type-widget__display--clicked","contract_type_dialog","trade_type_info_dialog","trade_type_info_item","Contract","contract_type_widget","ContractInfo","has_increased","should_fade","proposal_info","has_error_or_not_loaded","trade-container__price-info--disabled","trade-container__price-info--slide","trade-container__price-info--fade","stakeOrPayout","obj_contract_basis","PurchaseButton","buy_info","info","is_proposal_empty","purchased_states_arr","setPurchaseState","onClickPurchase","is_button_disabled","btn-purchase--disabled","btn-purchase--animated--slide","btn-purchase--animated--fade","btn-purchase--swoosh","returns","PurchaseFieldset","is_proposal_error","onHoverPurchase","purchase_button","Elements_purchase_button","btn-purchase__shadow-wrapper--disabled","classNameBubble","Purchase","is_client_allowed_to_visit","isLoading","has_error_details","purchase_fieldset","Elements_purchase_fieldset","getContractTypePosition","unshift","is_purchase_locked","onPurchase","purchase_states","CloseButton","notification_order","types","danger","success","warning","contract_sold","sortNotifications","Notification","removeNotification","destroy","is_closed_by_user","closeOnClick","is_auto_close","delay","notification--small","size","should_hide_close_btn","close_button","oneOf","currentLanguage","getAllowedLanguages","exclude_languages","getAll","EN","getURL","lang","language_getAllowedLanguages","language_getURL","CalendarButton","is_hidden","CalendarHeader","disable_month_selector","hide_disabled_periods","is_date_view","is_month_view","is_year_view","is_decade_view","num_of_years","century","is_prev_month_disabled","is_prev_year_disabled","subYears","is_next_month_disabled","is_next_year_disabled","addYears","is_select_year_disabled","should_hide_next_month","should_hide_prev_month","should_hide_prev_year","should_hide_next_year","onClickPrevYear","onClickNextYear","onClickPrevMonth","onClickNextMonth","calendar_button","calendar__nav--disabled","calendar__nav--is-hidden","calendar__btn--disabled","ErrorComponent","redirectOnClick","_ref$should_show_refr","should_show_refresh","refresh_message","duration_from_purchase","round","getBarrierLabel","isDigitType","getBarrierValue","digitTypeMap","addCommaToNumber","DIGITDIFF","DIGITEVEN","DIGITMATCH","DIGITODD","DIGITOVER","DIGITUNDER","positions_helper_getTimePercentage","positions_helper_getBarrierLabel","_pending_timeouts","status_config","ws_config","network_status","updateUI","StatusConfig","pendings","pending_keys","pending_timeouts","setStatus","ws_events_map","setPending","clearPendings","NetworkMonitorBase","online","class","offline","blinking","ws_init","ws_request","onLine","ping","socket_general_functions","fncUpdateUI","resetWarningCache","elementType","instanceOf","objectOf","checkPropTypes","u","has_effect","f","effect","_contract__WEBPACK_IMPORTED_MODULE_0__","_routes__WEBPACK_IMPORTED_MODULE_1__","current_loginid","types_map_config","client_object","getAllAccountsObject","getAllLoginids","getAccountType","isAccountOfType","getAccountOfType","TypesMapConfig","updateAccountList","canTransferFundsTo","only_enabled","this_type","financial","gaming","virtual","account_list","account","excluded_until","param","param_to_set","value_to_set","to_loginid","from_currency","to_currency","from_landing_company","to_landing_company","maltainvest","malta","is_from_crypto","is_to_crypto","isValidLoginid","valid_login_ids","every","current_client","account_type","hasAccountType","hasCurrencyType","loginids","getAccountTitle","types_map","valueOf","landing_company_name","shouldAcceptTnc","website_tnc_version","client_tnc_status","setNewAccount","token","currentLandingCompany","landing_company_response","this_shortcode","landing_company_prop","shouldCompleteTax","getMT5AccountType","group","getBasicUpgradeInfo","can_upgrade_to","upgradeable_landing_companies","can_open_multi","current_landing_company","landing_companies","landing_company","canUpgrade","can_upgrade","getLandingCompanyValue","landing_company_object","real","financial_company","gaming_company","getRiskAssessment","is_high_risk","canTransferFunds","hasSvgAccount","canChangeCurrency","mt5_login_list","is_current","has_no_mt5","has_no_transaction","transactions","has_account_criteria","i18n_config","resources","translation","hashTransKey","crc32","lng","query","fallbackLng","i18n","use","initReactI18next","urlForLanguage","getCurrentProductionDomain","location_url","static_host","paramsHash","host_map","Url","bot.binary.com","developers.binary.com","academy.binary.com","tech.binary.com","blog.binary.com","getUrlBase","reset","param_hash","arr_params","parsed","URL","p_l","params","pars","language","should_change_to_legacy","new_url","urlForCurrentDomain","current_domain","url_object","urlForStatic","websiteUrl","protocol","getHostMap","resetStaticHost","_this$props$should_lo","component_props","LazyLoadedComponent","ui_loader","performance_request_time","get_time_interval","update_time_interval","onTimeUpdated","clock_started","pending","requestTime","timeCounter","fncTimeUpdated","clearInterval","setInterval","performance","start_timestamp","performance_response_time","server_time_at_response","updateTime","time_since_response","utc","timePromise","getDurationMaps","to_second","min_max","units_display","obj_min","getDurationFromString","min_contract_duration","obj_max","max_contract_duration","convertDurationUnit","duration_maps","from_unit","to_unit","duration_string","root_store","duration_is_day","expiry_is_after_today","isInteger","resetEndTimeOnVolatilityIndices","createFromInputFallback","_d","NaN","epoch","isValid","isUTC","today_moment","second","convertToUnix","toGMTFormat","diffInMonths","asDays","formatted_str","time_str","isHourValid","isMinuteValid","num_of_months","date_1","date_2","miliseconds","str_format","date_time_epochToMoment","date_time_toMoment","date_time_toGMTFormat","date_time_getDiffDuration","date_time_formatDuration","date_time_isDateValid","date_time_minDate","date_time_formatMiliseconds","all_languages","url_lang","lang_regex","languageFromUrl","current_lang","ACH","DE","ES","FR","ID","IT","PL","PT","RU","TH","VI","ZH_CN","ZH_TW","crowdin_lang","url","urlLang","custom_url","account_password","apps","cashier_password","exclusion","limits","personal","settings","NodeList","thisArg","Element","documentElement","matches","parentElement","nodeType","hide","show","toggleClass","class_name","should_add","make_visible","html","content","innerHTML","subscriptions","forget_requested","subscription_id","dispatch","forget","forgetStream","hasCallbackFunction","hasValues","SubscriptionManager","sub_id","stream_id","subscription","sub_info","subscribers","fnc","fncCallback","match_values","forgets_list","request_obj","values_obj","addSubscriptionFromRequest","send_request","subscribe_request","subscription_props","is_stream","prop","should_forget_first","isDeepEqual","forgetAll","types_to_forget","sub_ids","forget_all","ignored_responses_in_trackjs","queue","ResponseQueue","ApiCallProxyHandler","prop_key","receiver","target_value","Reflect","return_value","TrackJS","log","fresh","track","getMessage","activeSymbols","active_symbols","buy","proposal_id","price","cashier","verification_code","get_account_status","get_self_exclusion","getSettings","newAccountVirtual","client_password","new_account_virtual","oauthApps","oauth_apps","profitTable","offset","date_boundaries","description","proposalOpenContract","proposal_open_contract","residenceList","residence_list","sell","sellExpired","sell_expired","request_object","force_request","verifyEmail","verify_email","cb","is_forced","subscribeProposal","req","subscribeProposalOpenContract","subscribeProposalOpenContractOnBuy","buy_request","subscribeTicks","subscribeTicksHistory","subscribeTransaction","transaction","trackJSNetworkMonitor","Proxy","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","ownerDocument","isMobile","ErrorBoundary","componentDidCatch","hasError","Errors","AppContents","is_app_disabled","is_route_modal_on","app-contents--show-positions-drawer","app-contents--contract-mode","app-contents--is-disabled","app-contents--is-route-modal","tt_react_custom_scrollbars_lib","addNotificationBar","pwa_prompt_event","setPWAPromptEvent","gmt_time","NetworkStatus","network-status__circle--offline","network-status__circle--online","network-status__circle--blinker","ToggleFullScreen","toggle_fullscreen_classCallCheck","toggle_fullscreen_possibleConstructorReturn","toggle_fullscreen_getPrototypeOf","onFullScreen","is_full_screen","fullscreen_map","toggleFullScreen","to_exit","fncToCall","fnc_enter","fnc_exit","full_screen_icon_class","ic-fullscreen--active","TogglePositions","positions_count","toggle_positions_class","ic-positions--active","ic-positions--has-count","data-count","ModalElement","modal_classCallCheck","modal_possibleConstructorReturn","modal_getPrototypeOf","modal_root","toggleModal","ReactDOM","createPortal","vertical_tab","classNameHeader","modal_content","Modal","modal_ModalElement","ThemeSetting","LanguageSettingContainer","ChartSettingContainer","ToggleSettings","enableApp","is_settings_visible","disableApp","toggleSettings","toggle_settings_class","ic-settings--active","modal_Modal","Footer","active_positions","is_settings_modal_on","show_positions_toggle","toggleSettingsModal","footer--is-disabled","toggle_positions_TogglePositions","Containers_server_time","toggle_settings_ToggleSettings","toggle_fullscreen_ToggleFullScreen","MenuLinks","login_only","Components_Routes","link_to","logo","image","LoginButton","SignupButton","UpgradeButton","AccountInfo","AccountActions","account_actions_classCallCheck","account_actions_possibleConstructorReturn","account_actions_getPrototypeOf","account_actions_inherits","nextProps","active_cashier_tab","is_acc_switcher_on","is_cashier_modal_on","onClickUpgrade","toggleAccountsDialog","is_upgrade_enabled","is_dialog_on","toggleDialog","upgrade_button_UpgradeButton","login_button_LoginButton","signup_button_SignupButton","hideFullBlur","showFullBlur","header_links","icon_deriv","Header","header--is-disabled","menu_links_MenuLinks","account_actions_AccountActions","is_dark_mode","is_accounts_switcher_on","Routes","NetworkMonitor","is_online","setNetworkStatus","OutdatedBrowser","showError","opening_tag","closing_tag","interpolation","escapeValue","$buoop","vs","api","noclose","reminder","onshow","nomessage","insecure","pre_build_dvrs","client_notifications","self_exclusion","exclusion_end","authenticate","cashier_locked","withdrawal_locked","mt5_withdrawal_locked","document_needs_action","unwelcome","mf_retail","financial_limit","risk","tax","tnc","required_fields","handleClientNotifications","addNotification","_response$get_account","prompt_client_to_authenticate","_getStatusValidations","validations","account_status","document_under_review","ukrts_max_turnover_limit_not_set","professional","is_mf_retail","landing_company_shortcode","checkAccountStatus","necessary_withdrawal_fields","necessary_signup_fields","required_settings_fields","getRequiredFields","hasMissingRequiredField","validRequired","validEmail","validPassword","validLetterSymbol","validGeneral","validAddress","validPostCode","validPhone","validRegular","regex","validEmailToken","validTaxID","validBarrier","validCompare","validNotEqual","validMin","validLength","validNumber","opts","allow_empty","is_ok","decimal_count","format_money","isMoreThanMax","getPreBuildDVRs","address","permitted_characters","compare","general","letter_symbol","not_equal","value_one","value_two","password","phone","postcode","regular","signup_token","tax_id","errors_classCallCheck","errors","attribute","Validator","rules","validator_classCallCheck","error_count","rule","is_rule_string","rule_object","validator","template","name1","name2","ruleObject","getRuleObject","condition","addFailure","check","BaseStore","bound","base_store_classCallCheck","_initializerDefineProperty","_descriptor","_descriptor2","switchAccountDisposer","switch_account_listener","_descriptor3","waitFor","_asyncToGenerator","local_storage_properties","session_storage_properties","validation_rules","store_name","writable","setValidationRules","setupReactionForLocalStorage","setupReactionForSessionStorage","retrieveFromStorage","properties","snapshot","reaction","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","getSnapshot","_this3","propertyName","_this4","_this5","addRule","_this6","intercept","change","validateProperty","newValue","_this7","trigger","inputs","isPassed","setValidationErrorMessages","_this8","listener","_this9","when","switch_broadcast","_callee2","_context2","switchEndSignal","onSwitchAccount","t0","disposeSwitchAccount","reactions","act","partial_fetch_time","freeze","observable","ClientStore","client_store_classCallCheck","client_store_initializerDefineProperty","client_store_getPrototypeOf","client_store_descriptor","client_store_assertThisInitialized","client_store_descriptor2","client_store_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","fiat","crypto","isCrypto","currency_defineProperty","selectCurrency","session_start","upgrade_info","user_id","removeAllNotifications","setSwitched","setUserLogin","authorize_response","setLoginId","setAccounts","registerReactions","switched","getAccount","all_loginids","clearContract","clearTable","switchAccount","switchAccountHandler","setLoginFlag","resetLocalStorageValues","getToken","broadcastAccountChange","selected_currency","should_refresh_active_symbols","client_store_asyncToGenerator","_callee4","_context4","resetErrorServices","refresh","debouncedProposal","_x2","obj_params","active_loginid","map_names","is_allowed_real","acct1","param_value","token1","runInAction","storeClientAccounts","_this10","isDisabled","getAccountInfo","default_currency","valid_login_ids_regex","_this11","_this12","acc","computed","CommonStore","is_socket_opened","is_network_online","common_store_objectSpread","deposit_url","withdraw_url","GTMStore","gtm_store_classCallCheck","gtm_store_possibleConstructorReturn","gtm_store_getPrototypeOf","is_gtm_applicable","accountSwitcherListener","gtm_store_asyncToGenerator","dataLayer","gtm_store_objectSpread","common_variables","contract_data","bom_ui","barrier1","barrier2","chart","toolbar_position","is_chart_layout_default","chart_asset_info","is_chart_asset_info_visible","extra_data","moment_now","storage_key","gtm_transactions","timestamp","transactions_arr","transaction_id","bom_account_type","bom_today","transaction_time","login_event","is_new_account","affiliate_token","visitorId","country_abbrev","today","bom_date_joined","acc_type","login","event_name","userId","Config","cashier_store_classCallCheck","is_session_timeout","onIframeLoaded","timeout_session","cashier_store_initializerDefineProperty","cashier_store_descriptor","cashier_store_descriptor2","cashier_store_descriptor3","CashierStore","cashier_store_getPrototypeOf","cashier_store_descriptor4","cashier_store_assertThisInitialized","cashier_store_descriptor5","containers","deposit","withdraw","current_action","setErrorMessage","setContainerHeight","setLoading","checkIframeLoaded","setIframeUrl","response_cashier","setSessionTimeout","clearTimeoutCashierUrl","clearVerification","setTimeoutCashierUrl","removeOnIframeLoaded","origin","iframe_url","iframe_height","is_session_time_out","is_button_clicked","verification","is_email_sent","is_resend_clicked","resend_timeout","timeout_button","clearTimeoutVerification","setVerificationButtonClicked","response_verify_email","setVerificationEmailSent","setTimeoutVerification","setCountDownResendVerification","sendVerificationEmail","setVerificationResendTimeout","resend_interval","setVerificationResendClicked","cashier_store_asyncToGenerator","_callee6","_context6","_x5","CONTRACT_SHADES","CALL","PUT","CALLE","PUTE","EXPIRYRANGE","EXPIRYMISS","RANGE","UPORDOWN","ONETOUCH","NOTOUCH","ASIANU","ASIAND","DEFAULT_SHADES","1","2","BARRIER_COLORS","BARRIER_LINE_STYLES","DASHED","DOTTED","SOLID","createChartBarrier","SmartChartStore","removeBarriers","createBarriers","line_style","not_draggable","updateBarrierShade","MarkerLine","marker_config","LINE_END","content_config","chart-marker-line__icon--won","chart-marker-line__icon--lost","LINE_START","MarkerSpot","spot_count","MarkerSpotLabel","marker_spot_label_classCallCheck","marker_spot_label_possibleConstructorReturn","marker_spot_label_getPrototypeOf","handleHoverToggle","show_label","has_hover_toggle","marker_spot","Markers_marker_spot","spot_className","align_label","spot_epoch","chart-spot-label__value-container--won","chart-spot-label__value-container--lost","spot_value","MARKER_TYPES_CONFIG","ContentComponent","LINE_PURCHASE","SPOT_ENTRY","SPOT_SELL","SPOT_EXIT","SPOT_MIDDLE","createMarkerConfig","marker_type","extend","getSpotCount","createMarkerSpotEntry","entry_tick_time","entry_tick","entry_tick_display_value","createMarkerSpotExit","tick","is_user_sold","exit_tick","exit_tick_display_value","createMarkerSpotMiddle","spot","tick_display_value","createChartMarkers","addTickMarker","addMarker","marker_spots","marker_lines","chart_markers_defineProperty","_marker_spots","_marker_lines","chart_markers_asyncToGenerator","marker_obj","createMarker","markers","_x3","addLabelAlignment","prev_tick","is_entry_spot","is_middle_spot","is_exit_spot","_x4","contractSold","sold_for","ContractReplayStore","is_ongoing_contract","prev_indicative","handleSubscribeProposalOpenContract","proposal_open_contract_request","forgetProposalOpenContract","setContractMode","populateConfig","indicative_status","sell_info","cleanupContractChartView","setIsChartLoading","new_indicative","updateMargin","handleDigits","extendObservable","getDigitInfo","handleSell","services_error","contract_replay_store_objectSpread","toggleServicesErrorModal","ContractTradeStore","is_from_positions","_this$contract_info","is_one_tick_contract","setStaticChart","setContractStart","setContractEnd","longcode","onMountBuy","updateProposal","has_existing_id","resetValues","switchToContractMode","applySavedTradeChartLayout","handleChartType","setChartView","drawChart","updateChartType","updateGranularity","showUnavailableLocationError","clients_country_code","clients_country_text","clients_country","obj_country","isMarketClosed","symbol_info","exchange_is_open","pickDefaultSymbol","getFavoriteOpenSymbol","getFirstOpenSymbol","chart_favorites","client_favorite_list","client_fav_symbol","client_first_open_symbol","isSymbolOpen","first_open_symbol","submarket","getSymbolDisplayName","formatPortfolioPosition","portfolio_pos","details","reference","getUnsupportedContracts","PortfolioStore","getPositionById","createTransformer","pos","pos1","pos2","res","new_pos","pushNewPosition","proposalOpenContractHandler","getPositionIndexById","populateResultDetails","proposal","entry_spot","portfolio_store_objectSpread","contract_idx","portfolio_store_asyncToGenerator","initializePortfolio","_callee3","_context3","portfolioHandler","transactionHandler","contract_response","current_spot","current_spot_time","getDateTo","date_to","getDateFrom","should_load_partially","date_from","shouldSendDateFrom","getDateBoundaries","format_request_objectSpread","formatProfitTableTransactions","format_string","should_exclude_currency","format_response_objectSpread","delay_on_scroll_time","ProfitTableStore","fetchOnScroll","debounce","fetchNextBatch","has_loaded_all","shouldFetchNextBatch","profitTableResponseHandler","formatted_transactions","profit_store_toConsumableArray","_event$target","left_to_scroll","scrollHeight","assertHasValidCache","client_loginid","clearDateFilter","date_values","previous","barriersObjectToArray","reference_array","js_object","ChartBarrierStore","chart_barrier_store_dec","chart_barrier_store_dec2","chart_barrier_store_dec3","chart_barrier_store_dec4","chart_barrier_store_descriptor","chart_barrier_store_applyDecoratedDescriptor","chart_barrier_store_class","onChartBarrierChange","chart_barrier_store_classCallCheck","chart_barrier_store_initializerDefineProperty","chart_barrier_store_descriptor2","chart_barrier_store_descriptor3","chart_barrier_store_descriptor4","chart_barrier_store_descriptor5","chart_barrier_store_descriptor6","chart_barrier_store_descriptor7","chart_barrier_store_descriptor8","lineStyle","onBarrierChange","high","low","shade","default_shade","has_barrier","relative","draggable","hidePriceLines","isFromChart","should_display","updateBarriers","chart_barrier_store_toConsumableArray","is_relative","barriers_list","barriersToString","configurable","initializer","getOwnPropertyDescriptor","ChartMarkerStore","chart_marker_store_descriptor","chart_marker_store_applyDecoratedDescriptor","chart_marker_store_class","chart_marker_store_classCallCheck","chart_marker_store_initializerDefineProperty","chart_marker_store_descriptor2","barriers_empty_array","markers_empty_array","trade_chart_symbol","trade_chart_granularity","trade_chart_type","wsSubscribe","smart_chart_store_objectSpread","wsForget","wsForgetStream","wsSendRequest","is_from_other_position","saveAndClearTradeChartLayout","removeMarkers","resetScrollToLeft","resetPurchaseStates","is_title_enabled","updateEpochScrollToValue","updateBarrierColor","should_export_layout","should_import_layout","trade_chart_layout","should_clear_chart","isDone","requestProposal","layout","smart_chart_store_defineProperty","has_differing","barriers_array","next_barrier","markers_array","marker","next_marker","assetInformation","countdown","is_chart_countdown_visible","isHighestLowestMarkerEnabled","current_language","barrier_config","main_barrier","isBarrierSupported","StatementStore","statementHandler","balance_after","action_type","refid","desc","app_id","formatStatementTransaction","statement_store_toConsumableArray","processPurchase","onChangeSymbolAsync","getValidationRules","start_moment_clone","_value$split2","_value$split4","onChangeContractTypeList","onChangeContractType","onChangeExpiry","onChangeStartDate","obj_contract_start_type","obj_sessions","obj_start_time","obj_duration_units_list","obj_duration_unit","obj_expiry_type","obj_expiry_date","obj_market_open_times","obj_market_close_times","obj_expiry_time","obj_duration_min_max","start_date_objectSpread","processTradeParams","new_state","functions","getMethodsList","extendOrReplace","t1","t2","ContractTypeHelper","process_toConsumableArray","StartDate","source","new_values","map_error_field","getProposalErrorField","error_field","error_id","el_error","getElementsByName","createProposalRequestForContract","type_of_contract","obj_expiry","proposal_objectSpread","TradeStore","trade_store_classCallCheck","trade_store_getPrototypeOf","trade_store_initializerDefineProperty","trade_store_descriptor","trade_store_assertThisInitialized","trade_store_descriptor2","trade_store_descriptor3","trade_store_descriptor4","trade_store_descriptor5","trade_store_descriptor6","trade_store_descriptor7","trade_store_descriptor8","trade_store_descriptor9","trade_store_descriptor10","trade_store_descriptor11","trade_store_descriptor12","trade_store_descriptor13","trade_store_descriptor14","trade_store_descriptor15","trade_store_descriptor16","trade_store_descriptor17","trade_store_descriptor18","trade_store_descriptor19","trade_store_descriptor20","trade_store_descriptor21","trade_store_descriptor22","_descriptor23","_descriptor24","_descriptor25","_descriptor26","_descriptor27","_descriptor28","_descriptor29","_descriptor30","_descriptor31","_descriptor32","_descriptor33","_descriptor34","_descriptor35","_descriptor36","_descriptor37","proposal_requests","initial_barriers","is_initial_barrier_applied","_descriptor38","_descriptor39","_descriptor40","disablePurchaseButtons","el_purchase_value","el_purchase_buttons","changeDurationValidationRules","onAllowEqualsChange","is_symbol_in_active_symbols","processNewValuesAsync","trade_store_objectSpread","setActiveSymbols","trade_store_asyncToGenerator","setDefaultSymbol","setContractTypes","validateAllProperties","trade_store_defineProperty","previous_symbol","setMarketStatus","is_over","is_purchase_enabled","_response$buy","drawContractStartTime","openPositionsDrawer","pushPurchaseData","obj_new_values","is_changed_by_user","obj_old_values","prev_currency","setPreviousSymbol","requests","new_req","current_req","createProposalRequests","setIsDigitContract","onProposalResponse","prev_proposal_info","obj_prev_contract_basis","ask_price","contract_basis","getProposalInfo","proposal_response","_proposal_response$ec","setChartBarrier","duration_options","_callee7","_context7","is_trade_component_mounted","_ref5","_callee8","_context8","prepareTradeStore","smart_chart_store","restoreTradeChart","pushState","_callee10","_context10","_callee9","_context9","_this13","_this14","ModulesStore","Modules_classCallCheck","contract_replay","UIStore","ui_store_classCallCheck","ui_store_getPrototypeOf","ui_store_initializerDefineProperty","ui_store_descriptor","ui_store_assertThisInitialized","ui_store_descriptor2","ui_store_descriptor3","ui_store_descriptor4","ui_store_descriptor5","ui_store_descriptor6","ui_store_descriptor7","ui_store_descriptor8","ui_store_descriptor9","ui_store_descriptor10","ui_store_descriptor11","ui_store_descriptor12","ui_store_descriptor13","ui_store_descriptor14","ui_store_descriptor15","ui_store_descriptor16","ui_store_descriptor17","ui_store_descriptor18","ui_store_descriptor19","ui_store_descriptor20","ui_store_descriptor21","ui_store_descriptor22","ui_store_descriptor23","ui_store_descriptor24","ui_store_descriptor25","ui_store_descriptor26","ui_store_descriptor27","ui_store_descriptor28","ui_store_descriptor29","ui_store_descriptor30","ui_store_descriptor31","ui_store_descriptor32","handleResize","autorun","screen_width","innerWidth","active_tab","tab","is_reports_visible","is_services_error_visible","is_main_drawer_on","is_notifications_drawer_on","notification","notification_messages","ui_store_toConsumableArray","push_notifications","state_change","is_unsupported_contract_modal_visible","is_account_signup_modal_visible","RootStore","Stores_classCallCheck","configure","enforceActions","initStore","hidden","setStorageEvents","isTouchDevice","App","base","basename","is_tablet","Layout_header","error_boundary","app_contents","wrapper","app_App","path_name","sw_url","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","FadeIn","posed","span","transition","PopoverBubble","calculatePosition","target_rectangle","_this$props$margin","bottom","right","popover_bubble","react_pose_es","initialPose","data-popover-pos","popover__bubble--error","popover_classCallCheck","popover_possibleConstructorReturn","popover_getPrototypeOf","toggleOpen","Boolean","target_reference","toggleClose","disable_target_icon","icon_class_name","Popover_popover_bubble","Fieldset","fieldset_header_class","fieldset_info_class","_common_base_server_time__WEBPACK_IMPORTED_MODULE_0__","_common_base_server_time__WEBPACK_IMPORTED_MODULE_0___default","Utils_Date__WEBPACK_IMPORTED_MODULE_1__","forward_starting_config","forward_starting_options","duplicated_option","opt","current_session","isBeforeDate","should_only_check_hour","now_moment","session","loginUrl","domain_app_ids","server_url","signup_device","date_first_contact","marketing_queries","default_binary_url","initOneAll","provider","el_button","brand","_getLastTickFromTickS","createDigitInfo","spot_time","digit","icons","IconArrowBold","IconArrow","IconBack","IconCalendarToday","IconCalendar","IconChevronDoubleLeft","IconChevronDoubleRight","IconChevronLeft","IconChevronRight","IconClear","IconClock","IconClose","IconCountryFlag","IconDanger","IconDeposit","IconDepositSmall","IconExclamation","IconFlag","IconInfoBlue","IconInfoOutline","IconInformation","IconMinimize","IconMinus","IconPlus","IconQuestion","IconRedDot","IconSuccess","IconWarning","IconWip","IconWithdrawal","IconWithdrawalSmall","ContractIconClose","IconEndTime","ContractIconFlag","IconStartTime","IconTick","IconAuthenticateWithdrawals","IconEmailSent","ModalIconClose","IconMaximize","IconPositions","IconSettings","IconAccountsCurrency","IconLogout","IconBell","IconCashier","IconHamburger","IconPortfolio","IconReports","IconTrade","IconDemo","IconOpenPositions","IconProfitTable","IconStatement","IconCalendarForwardToday","IconCharts","IconLanguage","IconPurchase","IconTheme","IconBuy","IconPayout","IconSell","IconWallet","IconBarrierDown","IconBarrierUp","IconTradeCategory","TradeCategoriesGIF","TradeCategories","IconTradeType","IconLock","IconPriceMove","classNameRect","IconLazy","deriv.app","all_domains","config_app_id","is_real","server","FRXAUDCAD","FRXAUDCHF","FRXAUDJPY","FRXAUDNZD","FRXAUDPLN","FRXAUDUSD","FRXBROUSD","FRXEURAUD","FRXEURCAD","FRXEURCHF","FRXEURGBP","FRXEURJPY","FRXEURNZD","FRXEURUSD","FRXGBPAUD","FRXGBPCAD","FRXGBPCHF","FRXGBPJPY","FRXGBPNOK","FRXGBPUSD","FRXNZDJPY","FRXNZDUSD","FRXUSDCAD","FRXUSDCHF","FRXUSDJPY","FRXUSDNOK","FRXUSDPLN","FRXUSDSEK","FRXXAGUSD","FRXXAUUSD","FRXXPDUSD","FRXXPTUSD","OTC_AEX","OTC_AS51","OTC_DJI","OTC_FCHI","OTC_FTSE","OTC_GDAXI","OTC_HSI","OTC_IBEX35","OTC_N225","OTC_NDX","OTC_SPC","OTC_SSMI","OTC_SX5E","R_10","R_25","R_50","R_75","R_100","RDBEAR","RDBULL","WLDAUD","WLDEUR","WLDGBP","WLDUSD","RESETCALL","RESETPUT","TICKHIGH","TICKLOW","LBFLOATCALL","LBFLOATPUT","LBHIGHLOW","CALLSPREAD","PUTSPREAD","RUNHIGH","RUNLOW","getSupportedContracts","_common_base_currency_base__WEBPACK_IMPORTED_MODULE_3__","Money","_ref$currency","has_sign","_ref$is_formatted","is_formatted","abs_value","final_amount","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","Mondays","Tuesdays","Wednesdays","Thursdays","Fridays","Saturdays","Sundays","static_hash","isEqualArray","isEqualObject","arr1","arr2","obj1","obj2","to_replace","tag_name","attributes","attr","textContent","getStaticHash","Utils_Date__WEBPACK_IMPORTED_MODULE_0__","_logout__WEBPACK_IMPORTED_MODULE_0__","_socket_general__WEBPACK_IMPORTED_MODULE_1__","_ws_methods__WEBPACK_IMPORTED_MODULE_2__","react_router__WEBPACK_IMPORTED_MODULE_0__","Constants_routes__WEBPACK_IMPORTED_MODULE_1__","routes_config","route_info","match_path","matchPath","route_path","getPath","data_obj","msg_type_mapping","isEmptyValue","makeKey","expire","map_to","exchange_rates","ticks_history","candles","is_empty_data","response_data","response_obj","source_obj","map_key","ws_cache","curr_lang","active_symbols_obj","cached_response","cached_message","new_message","has_error_or_missing","has_new_value","has_old_cache","has_valid_cache","should_match_all","data_key"],"mappings":"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","file":"js/main.bc1bae03a7065d860954.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\tvar prefetchChunks = data[3] || [];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\tdeferredPrefetch.push.apply(deferredPrefetch, prefetchChunks);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\tif(deferredModules.length === 0) {\n \t\t\t// chunk prefetching for javascript\n \t\t\tdeferredPrefetch.forEach(function(chunkId) {\n \t\t\t\tif(installedChunks[chunkId] === undefined) {\n \t\t\t\t\tinstalledChunks[chunkId] = null;\n \t\t\t\t\tvar link = document.createElement('link');\n\n \t\t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\t\tlink.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t\t}\n \t\t\t\t\tlink.rel = \"prefetch\";\n \t\t\t\t\tlink.as = \"script\";\n \t\t\t\t\tlink.href = jsonpScriptSrc(chunkId);\n \t\t\t\t\tdocument.head.appendChild(link);\n \t\t\t\t}\n \t\t\t});\n \t\t\tdeferredPrefetch.length = 0;\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"main\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"main\": 0\n \t};\n\n \tvar deferredModules = [], deferredPrefetch = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"404\":\"404\",\"account-info\":\"account-info\",\"contract\":\"contract\",\"digits\":\"digits\",\"info-box\":\"info-box\",\"modals\":\"modals\",\"notification-messages\":\"notification-messages\",\"push-notification\":\"push-notification\",\"reports\":\"reports\",\"screen-small\":\"screen-small\",\"settings-chart\":\"settings-chart\",\"settings-language\":\"settings-language\",\"settings-theme\":\"settings-theme\",\"toggle-menu-drawer\":\"toggle-menu-drawer\",\"vendors~open_position~7c650be5\":\"vendors~open_position~7c650be5\",\"default~open_position~1833eefb\":\"default~open_position~1833eefb\",\"open_positions\":\"open_positions\",\"profit_table\":\"profit_table\",\"statement\":\"statement\",\"vendors~smart_chart\":\"vendors~smart_chart\",\"smart_chart\":\"smart_chart\",\"work-in-progress\":\"work-in-progress\",\"two-month-picker\":\"two-month-picker\"}[chunkId]||chunkId) + \".\" + \"bc1bae03a7065d860954\" + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"digits\":1,\"modals\":1,\"notification-messages\":1,\"reports\":1,\"screen-small\":1,\"work-in-progress\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + chunkId + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \tvar startupResult = (function() {\n \t// add entry module to deferred list\n \tdeferredModules.push([508,\"vendors~main\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n \t})();\n\n \twebpackJsonpCallback([[], {}, 0, [\"digits\",\"info-box\",\"modals\",\"settings-chart\",\"settings-language\",\"settings-theme\"]]);\n \treturn startupResult;\n","const ClientBase       = require('./client_base');\nconst SocketCache      = require('./socket_cache');\nconst getLanguage      = require('../language').get;\nconst State            = require('../storage').State;\nconst cloneObject      = require('../utility').cloneObject;\nconst getPropertyValue = require('../utility').getPropertyValue;\nconst isEmptyObject    = require('../utility').isEmptyObject;\nconst PromiseClass     = require('../utility').PromiseClass;\nconst getAppId         = require('../../config').getAppId;\nconst getSocketURL     = require('../../config').getSocketURL;\n\n/*\n * An abstraction layer over native javascript WebSocket,\n * which provides additional functionality like\n * reopen the closed connection and process the buffered requests\n */\nconst BinarySocketBase = (() => {\n    let binary_socket;\n\n    let config               = {};\n    let buffered_sends       = [];\n    let req_id               = 0;\n    let wrong_app_id         = 0;\n    let is_available         = true;\n    let is_disconnect_called = false;\n    let is_connected_before  = false;\n\n    const socket_url = `${getSocketURL()}?app_id=${getAppId()}&l=${getLanguage()}`;\n    const timeouts   = {};\n    const promises   = {};\n\n    const no_duplicate_requests = [\n        'authorize',\n        'get_settings',\n        'residence_list',\n        'landing_company',\n        'payout_currencies',\n        'asset_index',\n        'active_symbols',\n    ];\n\n    const sent_requests = {\n        items : [],\n        clear : () => { sent_requests.items = []; },\n        has   : msg_type => sent_requests.items.indexOf(msg_type) >= 0,\n        add   : (msg_type) => { if (!sent_requests.has(msg_type)) sent_requests.items.push(msg_type); },\n        remove: (msg_type) => {\n            if (sent_requests.has(msg_type)) sent_requests.items.splice(sent_requests.items.indexOf(msg_type, 1));\n        },\n    };\n\n    const waiting_list = {\n        items: {},\n        add  : (msg_type, promise_obj) => {\n            if (!waiting_list.items[msg_type]) {\n                waiting_list.items[msg_type] = [];\n            }\n            waiting_list.items[msg_type].push(promise_obj);\n        },\n        resolve: (response) => {\n            const msg_type      = response.msg_type;\n            const this_promises = waiting_list.items[msg_type];\n            if (this_promises && this_promises.length) {\n                this_promises.forEach((pr) => {\n                    if (!waiting_list.another_exists(pr, msg_type)) {\n                        pr.resolve(response);\n                    }\n                });\n                waiting_list.items[msg_type] = [];\n            }\n        },\n        another_exists: (pr, msg_type) => (\n            Object.keys(waiting_list.items)\n                .some(type => (\n                    type !== msg_type &&\n                    waiting_list.items[type].indexOf(pr) !== -1\n                ))\n        ),\n    };\n\n    const clearTimeouts = () => {\n        Object.keys(timeouts).forEach((key) => {\n            clearTimeout(timeouts[key]);\n            delete timeouts[key];\n        });\n    };\n\n    const isReady = () => hasReadyState(1);\n\n    const isClose = () => !binary_socket || hasReadyState(2, 3);\n\n    const hasReadyState = (...states) => binary_socket && states.some(s => binary_socket.readyState === s);\n\n    const sendBufferedRequests = () => {\n        while (buffered_sends.length > 0 && is_available) {\n            const req_obj = buffered_sends.shift();\n            send(req_obj.request, req_obj.options);\n        }\n    };\n\n    const wait = (...msg_types) => {\n        const promise_obj = new PromiseClass();\n        let is_resolved   = true;\n        msg_types.forEach((msg_type) => {\n            const last_response = State.get(['response', msg_type]);\n            if (!last_response) {\n                if (msg_type !== 'authorize' || ClientBase.isLoggedIn()) {\n                    waiting_list.add(msg_type, promise_obj);\n                    is_resolved = false;\n                }\n            } else if (msg_types.length === 1) {\n                promise_obj.resolve(last_response);\n            }\n        });\n        if (is_resolved) {\n            promise_obj.resolve();\n        }\n        return promise_obj.promise;\n    };\n\n    /**\n     * @param {Object} data: request object\n     * @param {Object} options:\n     *      forced  : {boolean}  sends the request regardless the same msg_type has been sent before\n     *      msg_type: {string}   specify the type of request call\n     *      callback: {function} to call on response of streaming requests\n     */\n    const send = function (data, options = {}) {\n        const promise_obj = options.promise || new PromiseClass();\n        const has_callback = typeof options.callback === 'function';\n\n        if (!data || isEmptyObject(data)) return promise_obj.promise;\n\n        const msg_type = options.msg_type || no_duplicate_requests.find(c => c in data);\n\n        // Fetch from cache\n        if (!options.forced) {\n            const response = SocketCache.get(data, msg_type);\n            if (response) {\n                State.set(['response', msg_type], cloneObject(response));\n                if (isReady() && is_available && !options.skip_cache_update && !has_callback) { // make the request to keep the cache updated\n                    binary_socket.send(JSON.stringify(data), { forced: true });\n                } else if (+data.time !== 1) { // Do not buffer all time requests\n                    buffered_sends.push({\n                        request: data,\n                        options: Object.assign(options, { promise: promise_obj, forced: true }),\n                    });\n                }\n                promise_obj.resolve(response);\n                if (has_callback) {\n                    options.callback(response);\n                } else {\n                    return promise_obj.promise;\n                }\n            }\n        }\n\n        // Fetch from state\n        if (!options.forced && msg_type && no_duplicate_requests.indexOf(msg_type) !== -1) {\n            const last_response = State.get(['response', msg_type]);\n            if (last_response) {\n                promise_obj.resolve(last_response);\n                return promise_obj.promise;\n            } else if (sent_requests.has(msg_type)) {\n                return wait(msg_type).then((response) => {\n                    promise_obj.resolve(response);\n                    return promise_obj.promise;\n                });\n            }\n        }\n\n        if (!data.req_id) {\n            data.req_id = ++req_id;\n        }\n        promises[data.req_id] = {\n            callback: (response) => {\n                if (has_callback) {\n                    options.callback(response);\n                } else {\n                    promise_obj.resolve(response);\n                }\n            },\n            subscribe: !!data.subscribe,\n        };\n\n        if (isReady() && is_available && config.isOnline()) {\n            is_disconnect_called = false;\n            if (!getPropertyValue(data, 'passthrough') && !getPropertyValue(data, 'verify_email')) {\n                data.passthrough = {};\n            }\n\n            binary_socket.send(JSON.stringify(data));\n            config.wsEvent('send');\n            if (msg_type && !sent_requests.has(msg_type)) {\n                sent_requests.add(msg_type);\n            }\n        } else if (+data.time !== 1) { // Do not buffer all time requests\n            buffered_sends.push({ request: data, options: Object.assign(options, { promise: promise_obj }) });\n        }\n\n        return promise_obj.promise;\n    };\n\n    const init = (options) => {\n        if (wrong_app_id === getAppId()) {\n            return;\n        }\n        if (typeof options === 'object' && config !== options) {\n            config         = options;\n            buffered_sends = [];\n        }\n        clearTimeouts();\n        config.wsEvent('init');\n\n        if (isClose()) {\n            binary_socket = new WebSocket(socket_url);\n            State.set('response', {});\n        }\n\n        binary_socket.onopen = () => {\n            config.wsEvent('open');\n            if (ClientBase.isLoggedIn()) {\n                send({ authorize: ClientBase.get('token') }, { forced: true });\n            } else {\n                sendBufferedRequests();\n            }\n\n            if (typeof config.onOpen === 'function') {\n                config.onOpen(isReady());\n            }\n\n            if (typeof config.onReconnect === 'function' && is_connected_before) {\n                config.onReconnect();\n            }\n\n            if (!is_connected_before) {\n                is_connected_before = true;\n            }\n        };\n\n        binary_socket.onmessage = (msg) => {\n            config.wsEvent('message');\n            const response = msg.data ? JSON.parse(msg.data) : undefined;\n            if (response) {\n                SocketCache.set(response);\n                const msg_type = response.msg_type;\n\n                // store in State\n                if (!getPropertyValue(response, ['echo_req', 'subscribe']) || /balance|website_status/.test(msg_type)) {\n                    State.set(['response', msg_type], cloneObject(response));\n                }\n                // resolve the send promise\n                const this_req_id = response.req_id;\n                const pr          = this_req_id ? promises[this_req_id] : null;\n                if (pr && typeof pr.callback === 'function') {\n                    pr.callback(response);\n                    if (!pr.subscribe) {\n                        delete promises[this_req_id];\n                    }\n                }\n                // resolve the wait promise\n                waiting_list.resolve(response);\n\n                if (getPropertyValue(response, ['error', 'code']) === 'InvalidAppID') {\n                    wrong_app_id = getAppId();\n                }\n\n                if (typeof config.onMessage === 'function') {\n                    config.onMessage(response);\n                }\n            }\n        };\n\n        binary_socket.onclose = () => {\n            sent_requests.clear();\n            clearTimeouts();\n            config.wsEvent('close');\n\n            if (wrong_app_id !== getAppId() && typeof config.onDisconnect === 'function' && !is_disconnect_called) {\n                config.onDisconnect();\n                is_disconnect_called = true;\n            }\n        };\n    };\n\n    const clear = (msg_type) => {\n        buffered_sends = [];\n        if (msg_type) {\n            State.set(['response', msg_type], undefined);\n            sent_requests.remove(msg_type);\n        }\n    };\n\n    const availability = (status) => {\n        if (typeof status !== 'undefined') {\n            is_available = !!status;\n        }\n        return is_available;\n    };\n\n    return {\n        init,\n        wait,\n        send,\n        clear,\n        clearTimeouts,\n        availability,\n        hasReadyState,\n        sendBuffered      : sendBufferedRequests,\n        get               : () => binary_socket,\n        setOnDisconnect   : (onDisconnect) => { config.onDisconnect = onDisconnect; },\n        setOnReconnect    : (onReconnect) => { config.onReconnect = onReconnect; },\n        removeOnReconnect : () => { delete config.onReconnect; },\n        removeOnDisconnect: () => { delete config.onDisconnect; },\n    };\n})();\n\nmodule.exports = BinarySocketBase;\n","import { getMarketNamesMap, getContractConfig } from 'Constants';\n\n/**\n * Fetch market information from shortcode\n * @param shortcode: string\n * @returns {{underlying: string, category: string}}\n */\nexport const getMarketInformation = (shortcode) => {\n    const market_info = {\n        category  : '',\n        underlying: '',\n    };\n\n    const pattern = new RegExp('^([A-Z]+)_((OTC_[A-Z0-9]+)|R_[\\\\d]{2,3}|[A-Z]+)_'); // Used to get market name from shortcode\n    const extracted = pattern.exec(shortcode);\n    if (extracted !== null) {\n        market_info.category   = extracted[1].toLowerCase();\n        market_info.underlying = extracted[2];\n    }\n\n    return market_info;\n};\n\nexport const getMarketName = (underlying) => underlying ? getMarketNamesMap()[underlying.toUpperCase()] : null;\n\nexport const getTradeTypeName = (category) => category ? getContractConfig()[category.toUpperCase()].name : null;\n","import Client            from '_common/base/client_base';\nimport SocketCache       from '_common/base/socket_cache';\nimport { removeCookies } from '_common/storage';\nimport WS                from './ws-methods';\n\nexport const requestLogout = () =>\n    WS.logout().then(doLogout);\n\nconst doLogout = (response) => {\n    if (response.logout !== 1) return;\n    removeCookies('affiliate_token', 'affiliate_tracking');\n    Client.clearAllAccounts();\n    Client.set('loginid', '');\n    SocketCache.clear();\n};\n","const createElement = require('./utility').createElement;\n\n/*\n * function to check if element is visible or not\n *\n */\nconst isVisible = elem => !(!elem || (elem.offsetWidth === 0 && elem.offsetHeight === 0));\n\n/*\n * @param  {String}  id_selector   the selector for the element\n * @param  {Element} parent        optional selector to use for parent, defaults to document\n * @return {Element}               return element if it exists, if it doesn't return a dummy element\n */\nconst getElementById = (id_selector, parent = document) => parent.getElementById(id_selector) || createElement('div');\n\nmodule.exports = {\n    isVisible,\n    getElementById,\n};\n","const toTitleCase = str => (\n    (str || '').replace(/\\w[^\\s/\\\\]*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase())\n);\n\nconst padLeft = (txt, len, char) => {\n    const text = String(txt || '');\n    return text.length >= len ? text : `${Array((len - text.length) + 1).join(char)}${text}`;\n};\n\nconst compareBigUnsignedInt = (a, b) => {\n    let first_num  = numberToString(a);\n    let second_num = numberToString(b);\n    if (!first_num || !second_num) {\n        return '';\n    }\n    const max_length = Math.max(first_num.length, second_num.length);\n    first_num        = padLeft(first_num, max_length, '0');\n    second_num       = padLeft(second_num, max_length, '0');\n\n    // lexicographical comparison\n    let order = 0;\n    if (first_num !== second_num) {\n        order = first_num > second_num ? 1 : -1;\n    }\n\n    return order;\n};\n\nconst numberToString = n => (typeof n === 'number' ? String(n) : n);\n\nmodule.exports = {\n    toTitleCase,\n    padLeft,\n    numberToString,\n    compareBigUnsignedInt,\n};\n","import { localize } from 'App/i18n';\n\nexport const getLocalizedBasis = () => ({\n    payout    : localize('Payout'),\n    stake     : localize('Stake'),\n    multiplier: localize('Multiplier'),\n});\n\n/**\n * components can be undef or an array containing any of: 'start_date', 'barrier', 'last_digit'\n *     ['duration', 'amount'] are omitted, as they're available in all contract types\n */\nexport const getContractTypesConfig = () => (\n    {\n        rise_fall      : { title: localize('Rise/Fall'),                  trade_types: ['CALL', 'PUT'],               basis: ['stake', 'payout'], components: ['start_date'], barrier_count: 0 },\n        rise_fall_equal: { title: localize('Rise/Fall'),                  trade_types: ['CALLE', 'PUTE'],             basis: ['stake', 'payout'], components: ['start_date'], barrier_count: 0 },\n        high_low       : { title: localize('Higher/Lower'),               trade_types: ['CALL', 'PUT'],               basis: ['stake', 'payout'], components: ['barrier'],    barrier_count: 1 },\n        touch          : { title: localize('Touch/No Touch'),             trade_types: ['ONETOUCH', 'NOTOUCH'],       basis: ['stake', 'payout'], components: ['barrier'] },\n        end            : { title: localize('Ends Between/Ends Outside'),  trade_types: ['EXPIRYMISS', 'EXPIRYRANGE'], basis: ['stake', 'payout'], components: ['barrier'] },\n        stay           : { title: localize('Stays Between/Goes Outside'), trade_types: ['RANGE', 'UPORDOWN'],         basis: ['stake', 'payout'], components: ['barrier'] },\n        asian          : { title: localize('Asians'),                     trade_types: ['ASIANU', 'ASIAND'],          basis: ['stake', 'payout'], components: [] },\n        match_diff     : { title: localize('Matches/Differs'),            trade_types: ['DIGITMATCH', 'DIGITDIFF'],   basis: ['stake', 'payout'], components: ['last_digit'] },\n        even_odd       : { title: localize('Even/Odd'),                   trade_types: ['DIGITODD', 'DIGITEVEN'],     basis: ['stake', 'payout'], components: [] },\n        over_under     : { title: localize('Over/Under'),                 trade_types: ['DIGITOVER', 'DIGITUNDER'],   basis: ['stake', 'payout'], components: ['last_digit'] },\n        lb_call        : { title: localize('Close-Low'),                  trade_types: ['LBFLOATCALL'],               basis: ['multiplier'],      components: [] },\n        lb_put         : { title: localize('High-Close'),                 trade_types: ['LBFLOATPUT'],                basis: ['multiplier'],      components: [] },\n        lb_high_low    : { title: localize('High-Low'),                   trade_types: ['LBHIGHLOW'],                 basis: ['multiplier'],      components: [] },\n    }\n);\n\nexport const getContractCategoriesConfig = () => (\n    {\n        [localize('Up/Down')]       : ['rise_fall', 'rise_fall_equal', 'high_low'],\n        [localize('Touch/No Touch')]: ['touch'],\n        [localize('In/Out')]        : ['end', 'stay'],\n        [localize('Asians')]        : ['asian'],\n        [localize('Digits')]        : ['match_diff', 'even_odd', 'over_under'],\n        // [localize('Lookback')]      : ['lb_call', 'lb_put', 'lb_high_low'],\n    }\n);\n","import { localize }        from 'App/i18n';\nimport { unique }          from '_common/utility';\nimport {\n    epochToMoment,\n    formatMiliseconds,\n    getDiffDuration }      from 'Utils/Date';\nimport { isDigitContract } from '../../Contract/Helpers/digits';\n\nexport const getCurrentTick = (contract_info) => {\n    const tick_stream = unique(contract_info.tick_stream, 'epoch');\n    const current_tick = isDigitContract(contract_info.contract_type) ? tick_stream.length : tick_stream.length - 1;\n    return (!current_tick || current_tick < 0) ? 0 : current_tick;\n};\n\nexport const getDurationUnitValue = (obj_duration) => {\n    const duration_ms = obj_duration.asMilliseconds() / 1000;\n    // Check with isEndTime to find out if value of duration has decimals\n    // for days we do not require precision for End Time value since users cannot select with timepicker if not in same day\n    // Seconds is the smallest End Time duration displayed thus we can keep the same formatting as normal Duration\n\n    if (duration_ms >= 86400000) {\n        const duration = duration_ms / (1000 * 60 * 60 * 24);\n        return Math.floor(duration);\n    } else if (duration_ms >= 3600000 && duration_ms < 86400000) {\n        const duration      = duration_ms / (1000 * 60 * 60);\n        const is_end_time   = isEndTime(duration);\n        const has_seconds   = isEndTime(duration_ms / (1000 * 60));\n        const string_format = has_seconds ? 'HH[h] mm[m] ss[s]' : 'HH[h] mm[m]';\n\n        return is_end_time ?\n            formatMiliseconds(duration_ms, string_format)\n            :\n            Math.floor(duration_ms / (1000 * 60 * 60));\n    } else if (duration_ms >= 60000 && duration_ms < 3600000) {\n        const duration = duration_ms / (1000 * 60);\n        const is_end_time = isEndTime(duration);\n        return is_end_time ?\n            formatMiliseconds(duration_ms, 'mm[m] ss[s]')\n            :\n            Math.floor(duration_ms / (1000 * 60));\n    } else if (duration_ms >= 1000 && duration_ms < 60000) {\n        return Math.floor(duration_ms / 1000);\n    }\n    return Math.floor(duration_ms / 1000);\n};\n\nexport const isEndTime = (duration) => (duration % 1) !== 0;\n\nexport const getDurationUnitText = (obj_duration) => {\n    const unit_map = {\n        d: { name_plural: localize('days'),    name_singular: localize('day') },\n        h: { name_plural: localize('hours'),   name_singular: localize('hour') },\n        m: { name_plural: localize('minutes'), name_singular: localize('minute') },\n        s: { name: localize('seconds') },\n    };\n    const duration_ms = obj_duration.asMilliseconds() / 1000;\n    // return empty suffix string if duration is End Time set except for days and seconds, refer to L18 and L19\n\n    if (duration_ms) {\n        if (duration_ms >= 86400000) {\n            const days_value = duration_ms / 86400000;\n            return (days_value <= 2) ? unit_map.d.name_singular : unit_map.d.name_plural;\n        } else if (duration_ms >= 3600000 && duration_ms < 86400000) {\n            if (isEndTime(duration_ms / (1000 * 60 * 60))) return '';\n            return (duration_ms === 3600000) ? unit_map.h.name_singular : unit_map.h.name_plural;\n        } else if (duration_ms >= 60000 && duration_ms < 3600000) {\n            if (isEndTime(duration_ms / (1000 * 60))) return '';\n            return (duration_ms === 60000) ? unit_map.m.name_singular : unit_map.m.name_plural;\n        } else if (duration_ms >= 1000 && duration_ms < 60000) {\n            return unit_map.s.name;\n        }\n    }\n    return unit_map.s.name;\n};\n\nexport const getDurationPeriod = (contract_info) => (\n    getDiffDuration(\n        epochToMoment(contract_info.purchase_time || contract_info.date_start),\n        epochToMoment(contract_info.date_expiry)\n    )\n);\n\nexport const getDurationTime = (contract_info) => (\n    contract_info.tick_count ?\n        contract_info.tick_count\n        :\n        getDurationUnitValue(getDurationPeriod(contract_info))\n);\n","import {\n    inject,\n    Provider,\n    observer }   from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst SPECIAL_REACT_KEYS = { children: true, key: true, ref: true };\n\nexport class MobxProvider extends Provider {\n    getChildContext() {\n        const stores = {};\n\n        // inherit stores\n        const baseStores = this.context.mobxStores;\n        if (baseStores) {\n            for (const key in baseStores) { // eslint-disable-line\n                stores[key] = baseStores[key];\n            }\n        }\n\n        // add own stores\n        for (const key in this.props.store) { // eslint-disable-line\n            if (!SPECIAL_REACT_KEYS[key]) {\n                stores[key] = this.props.store[key];\n            }\n        }\n\n        return {\n            mobxStores: stores,\n            ...stores,\n        };\n    }\n\n    static childContextTypes = {\n        mobxStores: PropTypes.object,\n        client    : PropTypes.object,\n        common    : PropTypes.object,\n        gtm       : PropTypes.object,\n        modules   : PropTypes.object,\n        ui        : PropTypes.object,\n    };\n}\n\nconst connect_global_store = (mapper) => Component => inject(mapper)(observer(Component));\n\nexport const connect = (StoreClass, mapper) => Component => {\n    if (!mapper) {\n        return connect_global_store(StoreClass)(Component);\n    }\n\n    const observed = observer(Component);\n\n    class StoredComponent extends Component {\n        store = new StoreClass();\n\n        render() {\n            return React.createElement(\n                observed,\n                {\n                    ...this.props,\n                    store: this.store,\n                },\n                this.props.children,\n            );\n        }\n\n        propTypes = {\n            children: PropTypes.object,\n        }\n    }\n\n    const wrappedDisplayName = Component.displayName\n        || Component.name\n        || (Component.constructor && Component.constructor.name)\n        || 'Unknown';\n    StoredComponent.displayName = `store-${wrappedDisplayName}`;\n\n    return inject(mapper)(StoredComponent);\n};\n","export const MAX_MOBILE_WIDTH = 767;\nexport const MAX_TABLET_WIDTH = 1024;\n","const getLanguage      = require('../language').get;\nconst localize         = require('../../App/i18n').localize;\nconst getPropertyValue = require('../utility').getPropertyValue;\n\nlet currencies_config = {};\n\nconst getTextFormat = (number, currency) => `${currency} ${addComma(number, getDecimalPlaces(currency), isCryptocurrency(currency))}`;\n\nconst formatMoney = (currency_value, amount, exclude_currency, decimals = 0, minimumFractionDigits = 0) => {\n    let money = amount;\n    if (money) money = String(money).replace(/,/g, '');\n    const sign           = money && Number(money) < 0 ? '-' : '';\n    const decimal_places = decimals || getDecimalPlaces(currency_value);\n\n    money = isNaN(money) ? 0 : Math.abs(money);\n    if (typeof Intl !== 'undefined') {\n        const options = {\n            minimumFractionDigits: minimumFractionDigits || decimal_places,\n            maximumFractionDigits: decimal_places,\n        };\n        money = new Intl.NumberFormat(getLanguage().toLowerCase().replace('_', '-'), options).format(money);\n    } else {\n        money = addComma(money, decimal_places);\n    }\n\n    return sign + (exclude_currency ? '' : formatCurrency(currency_value)) + money;\n};\n\nconst formatCurrency = currency => `<span class=\"symbols ${(currency || '').toLowerCase()}\"></span>`;\n\nconst addComma = (num, decimal_points, is_crypto) => {\n    let number = String(num || 0).replace(/,/g, '');\n    if (typeof decimal_points !== 'undefined') {\n        number = (+number).toFixed(decimal_points);\n    }\n    if (is_crypto) {\n        number = parseFloat(+number);\n    }\n\n    return number.toString().replace(/(^|[^\\w.])(\\d{4,})/g, ($0, $1, $2) => (\n        $1 + $2.replace(/\\d(?=(?:\\d\\d\\d)+(?!\\d))/g, '$&,')\n    ));\n};\n\nconst calcDecimalPlaces = (currency) => isCryptocurrency(currency) ? 8 : 2;\n\nconst getDecimalPlaces = (currency) => (\n    // need to check currencies_config[currency] exists instead of || in case of 0 value\n    currencies_config[currency] ? getPropertyValue(currencies_config, [currency, 'fractional_digits']) : calcDecimalPlaces(currency)\n);\n\nconst setCurrencies = (website_status) => {\n    currencies_config = website_status.currencies_config;\n};\n\n// (currency in crypto_config) is a back-up in case website_status doesn't include the currency config, in some cases where it's disabled\nconst isCryptocurrency = currency => /crypto/i.test(getPropertyValue(currencies_config, [currency, 'type'])) || (currency in CryptoConfig.get());\n\nconst CryptoConfig = (() => {\n    let crypto_config;\n\n    const initCryptoConfig = () => ({\n        BTC: { name: localize('Bitcoin'),       min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        BCH: { name: localize('Bitcoin Cash'),  min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        ETH: { name: localize('Ether'),         min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        ETC: { name: localize('Ether Classic'), min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        LTC: { name: localize('Litecoin'),      min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        UST: { name: localize('Tether'),        min_withdrawal: 0.02,  pa_max_withdrawal: 2000, pa_min_withdrawal: 10 },\n        USB: { name: localize('Binary Coin'),   min_withdrawal: 0.02,  pa_max_withdrawal: 2000, pa_min_withdrawal: 10 },\n    });\n\n    return {\n        get: () => {\n            if (!crypto_config) {\n                crypto_config = initCryptoConfig();\n            }\n            return crypto_config;\n        },\n    };\n})();\n\nconst getMinWithdrawal = currency => (isCryptocurrency(currency) ? (getPropertyValue(CryptoConfig.get(), [currency, 'min_withdrawal']) || 0.002) : 1);\n\n/**\n * Returns the transfer limits for the account.\n * @param currency\n * @param {string} max|undefined\n * @returns numeric|undefined\n */\nconst getTransferLimits = (currency, which) => {\n    const transfer_limits = getPropertyValue(currencies_config, [currency, 'transfer_between_accounts', 'limits']) || getMinWithdrawal(currency);\n    const decimals        = getDecimalPlaces(currency);\n    if (which === 'max') {\n        return transfer_limits.max ? transfer_limits.max.toFixed(decimals) : undefined;\n    }\n\n    return transfer_limits.min ? transfer_limits.min.toFixed(decimals) : undefined;\n};\n\nconst getTransferFee = (currency_from, currency_to) => {\n    const transfer_fee = getPropertyValue(currencies_config, [currency_from, 'transfer_between_accounts', 'fees', currency_to]);\n    return `${typeof transfer_fee === 'undefined' ? '1' : transfer_fee}%`;\n};\n\n// returns in a string format, e.g. '0.00000001'\nconst getMinimumTransferFee = (currency) => {\n    const decimals = getDecimalPlaces(currency);\n    return `${currency} ${(1 / Math.pow(10, decimals)).toFixed(decimals)}`; // we need toFixed() so that it doesn't display in scientific notation, e.g. 1e-8 for currencies with 8 decimal places\n};\n\n// @param {String} limit = max|min\nconst getPaWithdrawalLimit = (currency, limit) => {\n    if (isCryptocurrency(currency)) {\n        return getPropertyValue(CryptoConfig.get(), [currency, `pa_${limit}_withdrawal`]); // pa_min_withdrawal and pa_max_withdrawal used here\n    }\n    return limit === 'max' ? 2000 : 10; // limits for fiat currency\n};\n\nconst getCurrencyName = currency => getPropertyValue(CryptoConfig.get(), [currency, 'name']) || '';\n\nconst getMinPayout = currency => getPropertyValue(currencies_config, [currency, 'stake_default']);\n\nmodule.exports = {\n    formatMoney,\n    formatCurrency,\n    addComma,\n    getDecimalPlaces,\n    setCurrencies,\n    isCryptocurrency,\n    getCurrencyName,\n    getMinWithdrawal,\n    getTransferLimits,\n    getTransferFee,\n    getMinimumTransferFee,\n    getTextFormat,\n    getMinPayout,\n    getPaWithdrawalLimit,\n    getCurrencies: () => currencies_config,\n};\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport { Link }   from 'react-router-dom';\n\nconst ButtonLink = ({ children, className, to, onClick }) => (\n    <Link\n        className={classNames('btn btn--link', className, 'effect')}\n        to={to}\n        onClick={onClick}\n    >\n        {children}\n    </Link>\n);\n\nButtonLink.propTypes = {\n    children : PropTypes.object,\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n    to       : PropTypes.string,\n};\n\nexport default ButtonLink;\n","import classNames                  from 'classnames';\nimport React                       from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport Icon                        from 'Assets/icon.jsx';\nimport routes                      from 'Constants/routes';\n\nclass VerticalTabContentContainer extends React.PureComponent {\n    render() {\n        const {\n            action_bar,\n            action_bar_classname,\n            id,\n            is_routed,\n            items,\n            selected,\n        } = this.props;\n        const selected_item = items.find(item => item.label === selected.label);\n        const TabContent    = selected_item.value;\n\n        return (\n            <div className='vertical-tab__content'>\n                { action_bar &&\n                    <div className={classNames('vertical-tab__action-bar', {\n                        [action_bar_classname]: !!action_bar_classname,\n                    })}\n                    >\n                        {\n                            action_bar.map(({ component, icon, onClick, title }) => {\n                                const Component = component;\n                                return (\n                                    component ?\n                                        <Component key={title} />\n                                        :\n                                        <div\n                                            id={`dt_${id}_close_icon`}\n                                            className='vertical-tab__action-bar-wrapper'\n                                            key={title}\n                                            onClick={onClick}\n                                        >\n                                            <Icon\n                                                className='vertical-tab__action-bar--icon'\n                                                icon={icon}\n                                            />\n                                        </div>\n                                );\n                            })\n                        }\n                    </div>\n                }\n                { is_routed ?\n                    <Switch>\n                        <Redirect exact from={routes.reports} to={routes.positions} />\n                        {\n                            items.map(({ value, path, icon }) => {\n                                const Component = value;\n                                return (\n                                    <Route\n                                        key={path}\n                                        path={path}\n                                        render={() => <Component component_icon={icon} />}\n                                    />\n                                );\n                            })\n                        }\n                    </Switch>\n                    :\n                    <TabContent\n                        key={selected_item.label}\n                        className='item-id'\n                    />\n                }\n            </div>\n        );\n    }\n}\n\nexport { VerticalTabContentContainer };\n","import classNames  from 'classnames';\nimport React       from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Icon        from 'Assets/icon.jsx';\n\nclass VerticalTabHeaders extends React.PureComponent {\n    render() {\n        return (\n            <div className='vertical-tab__tab'>\n                {this.props.header_title &&\n                    <div className='vertical-tab__header-title'>\n                        <p>{ this.props.header_title }</p>\n                    </div>\n                }\n\n                {this.props.items.map(item => {\n                    // Capitalize only the first letter of the label and make the rest lowercase\n                    const label = item.label.charAt(0).toUpperCase() + item.label.slice(1).toLowerCase();\n\n                    return (\n                        this.props.is_routed ?\n                            <NavLink\n                                id={`dt_${label}_link`}\n                                key={item.path}\n                                to={item.path}\n                                onClick={() => this.props.onChange(item)}\n                                className='vertical-tab__header'\n                                activeClassName={\n                                    classNames({\n                                        'vertical-tab__header--active': this.props.selected.label === item.label,\n                                    })\n                                }\n                            >\n                                <Icon\n                                    icon={item.icon}\n                                    className={classNames('vertical-tab__header__icon', {\n                                        'vertical-tab__header__icon--active': this.props.selected.label === item.label,\n                                    })}\n                                />\n                                <span className='vertical-tab__header__link'>{label}</span>\n                            </NavLink>\n                            :\n                            <div\n                                id={`dt_${label}_link`}\n                                className={\n                                    classNames('vertical-tab__header', {\n                                        'vertical-tab__header--active': this.props.selected.label === item.label,\n                                    })\n                                }\n                                key={item.label}\n                                onClick={() => this.props.onChange(item)}\n                            >\n                                <Icon\n                                    icon={item.icon}\n                                    className={classNames('vertical-tab__header__icon', {\n                                        'vertical-tab__header__icon--active': this.props.selected.label === item.label,\n                                    })}\n                                />\n                                <a\n                                    key={item.label}\n                                    className='vertical-tab__header__link'\n                                >\n                                    {label}\n                                </a>\n                            </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport { VerticalTabHeaders };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Icon       from 'Assets/icon.jsx';\n\nconst FullScreenDialog = (props) => {\n    const { title, visible, children, wrapperClassName } = props;\n\n    const checkVisibility = () => {\n        if (props.visible) {\n            document.body.classList.add('no-scroll');\n            document.getElementById('deriv_app').classList.add('no-scroll');\n        } else {\n            document.body.classList.remove('no-scroll');\n            document.getElementById('deriv_app').classList.remove('no-scroll');\n        }\n    };\n\n    const scrollToElement = (parent, el) => {\n        const viewport_offset = el.getBoundingClientRect();\n        const hidden = viewport_offset.top + el.clientHeight + 20 > window.innerHeight;\n        if (hidden) {\n            const new_el_top = (window.innerHeight - el.clientHeight) / 2;\n            parent.scrollTop += viewport_offset.top - new_el_top;\n        }\n    };\n\n    // sometimes input is covered by virtual keyboard on mobile chrome, uc browser\n    const handleClick = (e) => {\n        if (e.target.tagName === 'INPUT' && e.target.type === 'number') {\n            const scrollToTarget = scrollToElement(e.currentTarget, e.target);\n            window.addEventListener('resize', scrollToTarget, false);\n\n            // remove listener, resize is not fired on iOS safari\n            window.setTimeout(() => {\n                window.removeEventListener('resize', scrollToTarget, false);\n            }, 2000);\n        }\n    };\n\n    checkVisibility();\n\n    return (\n        <div\n            className={classNames('fullscreen-dialog', {\n                'fullscreen-dialog--open': visible,\n            })}\n            onClick={handleClick}\n        >\n            <div className='fullscreen-dialog__header'>\n                <h2 className='fullscreen-dialog__title'>\n                    {title}\n                </h2>\n                <div\n                    className='icons btn-close fullscreen-dialog__close-btn'\n                    onClick={props.onClose}\n                >\n                    <Icon icon='IconClose' className='fullscreen-dialog__close-btn-icon' />\n                </div>\n            </div>\n            <div className='fullscreen-dialog__header-shadow-cover' />\n            <div className='fullscreen-dialog__header-shadow' />\n            <div className='fullscreen-dialog__content'>\n                <div className={`fullscreen-dialog__${wrapperClassName || 'contracts-modal-list'}`}>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nFullScreenDialog.propTypes = {\n    children        : PropTypes.any,\n    onClose         : PropTypes.func,\n    title           : PropTypes.string,\n    visible         : PropTypes.bool,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default FullScreenDialog;\n","import { action, flow }     from 'mobx';\nimport Login                from '_common/base/login';\nimport ServerTime           from '_common/base/server_time';\nimport BinarySocket         from '_common/base/socket_base';\nimport { State }            from '_common/storage';\nimport { getPropertyValue } from '_common/utility';\nimport { localize }         from 'App/i18n';\nimport { requestLogout }    from './logout';\nimport WS                   from './ws-methods';\n\nlet client_store,\n    common_store,\n    gtm_store;\n\n// TODO: update commented statements to the corresponding functions from app\nconst BinarySocketGeneral = (() => {\n    const onDisconnect = () => {\n        common_store.setIsSocketOpened(false);\n    };\n\n    const onOpen = (is_ready) => {\n        // Header.hideNotification();\n        if (is_ready) {\n            if (!Login.isLoginPages()) {\n                if (!client_store.is_valid_login) {\n                    requestLogout();\n                    return;\n                }\n                WS.subscribeWebsiteStatus(ResponseHandlers.websiteStatus);\n            }\n            ServerTime.init(action('setTime', () => { common_store.server_time = ServerTime.get(); }));\n            common_store.setIsSocketOpened(true);\n        }\n    };\n\n    const onMessage = (response) => {\n        handleError(response);\n        // Header.hideNotification('CONNECTION_ERROR');\n        switch (response.msg_type) {\n            case 'authorize':\n                if (response.error) {\n                    const is_active_tab = sessionStorage.getItem('active_tab') === '1';\n                    if (getPropertyValue(response, ['error', 'code']) === 'SelfExclusion' && is_active_tab) {\n                        sessionStorage.removeItem('active_tab');\n                        // Dialog.alert({ id: 'authorize_error_alert', message: response.error.message });\n                    }\n                    requestLogout();\n                } else if (!Login.isLoginPages() && !/authorize/.test(State.get('skip_response'))) {\n                    // is_populating_account_list is a check to avoid logout on the first logged-in session\n                    // In any other case, if the response loginid does not match the store's loginid, user must be logged out\n                    if (response.authorize.loginid !== client_store.loginid &&\n                        !client_store.is_populating_account_list) {\n                        requestLogout();\n                    } else if (response.authorize.loginid === client_store.loginid) {\n                        // All other cases continue with the loginid and authorize the profile\n                        authorizeAccount(response);\n                    }\n                }\n                break;\n            case 'landing_company':\n                // Header.upgradeMessageVisibility();\n                break;\n            case 'get_self_exclusion':\n                // SessionDurationLimit.exclusionResponseHandler(response);\n                break;\n            case 'get_settings':\n                if (response.get_settings) {\n                    setResidence(response.get_settings.country_code);\n                    client_store.setEmail(response.get_settings.email);\n                    gtm_store.eventHandler(response.get_settings);\n                }\n                break;\n            case 'payout_currencies':\n                client_store.responsePayoutCurrencies(response.payout_currencies);\n                break;\n            case 'transaction':\n                gtm_store.pushTransactionData(response);\n                break;\n            // no default\n        }\n    };\n\n    const setResidence = (residence) => {\n        if (residence) {\n            client_store.setResidence(residence);\n            WS.landingCompany(residence);\n        }\n    };\n\n    const setBalance = flow(function* (balance) {\n        yield BinarySocket.wait('website_status');\n        client_store.setBalance(balance);\n    });\n\n    const handleError = (response) => {\n        const msg_type   = response.msg_type;\n        const error_code = getPropertyValue(response, ['error', 'code']);\n        switch (error_code) {\n            case 'WrongResponse':\n            case 'InternalServerError':\n            case 'OutputValidationFailed': {\n                if (msg_type !== 'mt5_login_list') {\n                    common_store.setError(true, { message: response.error.message });\n                }\n                break;\n            }\n            case 'RateLimit':\n                if (msg_type !== 'cashier_password') {\n                    common_store.setError(true, { message: localize('You have reached the rate limit of requests per second. Please try later.') });\n                }\n                break;\n            case 'InvalidAppID':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'DisabledClient':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            // no default\n        }\n    };\n\n    const init = (store) => {\n        client_store = store.client;\n        common_store = store.common;\n        gtm_store    = store.gtm;\n\n        return {\n            onDisconnect,\n            onOpen,\n            onMessage,\n        };\n    };\n\n    const authorizeAccount = (response) => {\n        client_store.responseAuthorize(response);\n        WS.subscribeBalance(ResponseHandlers.balance, true);\n        WS.sendRequest({ get_settings: 1 }, { forced: true });\n        WS.getAccountStatus();\n        WS.payoutCurrencies();\n        WS.mt5LoginList();\n        setResidence(\n            response.authorize.country ||\n            client_store.accounts[client_store.loginid].residence\n        );\n        if (!client_store.is_virtual) {\n            WS.getSelfExclusion();\n        }\n        BinarySocket.sendBuffered();\n        if (/bch/i.test(response.authorize.currency) && !client_store.accounts[client_store.loginid].accepted_bch) {\n            // showPopup({\n            //     url        : urlFor('user/warning'),\n            //     popup_id   : 'warning_popup',\n            //     form_id    : '#frm_warning',\n            //     content_id : '#warning_content',\n            //     validations: [{ selector: '#chk_accept', validations: [['req', { hide_asterisk: true }]] }],\n            //     onAccept   : () => { Client.set('accepted_bch', 1); },\n            // });\n        }\n    };\n\n    return {\n        init,\n        setBalance,\n        authorizeAccount,\n    };\n})();\n\nexport default BinarySocketGeneral;\n\nconst ResponseHandlers = (() => {\n    let is_available = false;\n    const websiteStatus = (response) => {\n        if (response.website_status) {\n            is_available = /^up$/i.test(response.website_status.site_status);\n            if (is_available && !BinarySocket.availability()) {\n                window.location.reload();\n                return;\n            }\n            if (response.website_status.message) {\n                // Footer.displayNotification(response.website_status.message);\n            } else {\n                // Footer.clearNotification();\n            }\n            BinarySocket.availability(is_available);\n            client_store.setWebsiteStatus(response);\n        }\n    };\n\n    const balance = (response) => {\n        if (!response.error){\n            BinarySocketGeneral.setBalance(response.balance.balance);\n        }\n    };\n\n    return {\n        websiteStatus,\n        balance,\n    };\n})();\n","import PropTypes      from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect }    from 'Stores/connect';\nimport routes         from '../../../Constants/routes';\n\nconst Redirect = ({\n    history,\n    setCashierActiveTab,\n    setVerificationCode,\n    toggleAccountSignupModal,\n    toggleCashierModal,\n}) => {\n    const url_params = new URLSearchParams(window.location.search);\n\n    setVerificationCode(url_params.get('code'));\n\n    switch (url_params.get('action')) {\n        case 'signup': {\n            toggleAccountSignupModal(true);\n            break;\n        }\n        case 'payment_withdraw': {\n            setCashierActiveTab('withdraw');\n            toggleCashierModal();\n            break;\n        }\n        default: break;\n    }\n\n    // Clear URL search params and route to root (currently set to `trade`)\n    window.history.replaceState({}, document.title, '/');\n    history.push(routes.root);\n\n    return null;\n};\n\nRedirect.propTypes = {\n    history                 : PropTypes.object,\n    setVerificationCode     : PropTypes.func,\n    toggleAccountSignupModal: PropTypes.func,\n    toggleCashierModal      : PropTypes.func,\n};\n\nexport default withRouter(connect(\n    ({ client, ui }) => ({\n        setCashierActiveTab     : ui.setCashierActiveTab,\n        setVerificationCode     : client.setVerificationCode,\n        toggleAccountSignupModal: ui.toggleAccountSignupModal,\n        toggleCashierModal      : ui.toggleCashierModal,\n    }),\n)(Redirect));\n","import React        from 'react';\nimport { localize } from 'App/i18n';\nimport Icon         from 'Assets/icon.jsx';\n\nconst EmptyPortfolioMessage = ({ error }) => (\n    <div className='portfolio-empty'>\n        <div className='portfolio-empty__wrapper'>\n            { error ?\n                <span className='portfolio-empty__text'>{error}</span>\n                :\n                <React.Fragment>\n                    <Icon icon='IconPositions' className='portfolio-empty__icon' />\n                    <span className='portfolio-empty__text'>{localize('No open positions')}</span>\n                </React.Fragment>\n            }\n        </div>\n    </div>\n);\n\nexport default EmptyPortfolioMessage;\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nconst ContractLink = ({\n    contract_id,\n    children,\n    className,\n    openContract,\n}) => (\n    <a\n        className={className}\n        onClick={() => openContract(contract_id, true)}\n    >\n        {children}\n    </a>\n);\n\nContractLink.propTypes = {\n    children   : PropTypes.node,\n    className  : PropTypes.string,\n    contract_id: PropTypes.number,\n    onMount    : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        openContract: modules.contract_trade.onMount,\n    }),\n)(ContractLink);\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" {...props}><g fill=\"none\" fillRule=\"evenodd\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#4BBFAB\" /><path fill=\"#FFF\" fillRule=\"nonzero\" d=\"M6.5 10.8l5.65-5.65a.5.5 0 0 1 .7.7l-6 6a.5.5 0 0 1-.7 0l-3-3a.5.5 0 1 1 .7-.7l2.65 2.64z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" {...props}><g fill=\"none\" fillRule=\"evenodd\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#E31C4B\" fillRule=\"nonzero\" /><path stroke=\"#FFF\" strokeLinecap=\"round\" d=\"M10.5 5.5l-5 5m5 0l-5-5\" /></g></svg>);","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { NavLink }         from 'react-router-dom';\nimport { getContractPath } from 'App/Components/Routes/helpers';\nimport IconCheck           from 'Assets/SvgComponents/portfolio/ic-check.svg';\nimport IconCross           from 'Assets/SvgComponents/portfolio/ic-cross.svg';\nimport { localize }        from 'App/i18n';\n\nclass ResultOverlay extends React.PureComponent {\n\n    handleClick = (e) => {\n        if (this.props.is_unsupported) {\n            e.preventDefault();\n            this.props.onClick();\n        }\n    }\n\n    render() {\n        const {\n            contract_id,\n            is_visible,\n            onClickRemove,\n            result } = this.props;\n        const is_contract_won = (result === 'won');\n        return (\n            <React.Fragment>\n                <CSSTransition\n                    in={is_visible}\n                    timeout={250}\n                    classNames={{\n                        enter    : 'positions-drawer-card__result--enter',\n                        enterDone: 'positions-drawer-card__result--enter-done',\n                        exit     : 'positions-drawer-card__result--exit',\n                    }}\n                    unmountOnExit\n                >\n                    <div\n                        id={`dt_drawer_${contract_id}_result`}\n                        className={classNames('positions-drawer-card__result', {\n                            'positions-drawer-card__result--won' : is_contract_won,\n                            'positions-drawer-card__result--lost': !is_contract_won,\n                        })}\n                    >\n                        <span\n                            id={`dt_drawer_${contract_id}_result_close_icon`}\n                            className='result__close-btn'\n                            onClick={() => onClickRemove(contract_id)}\n                        />\n                        <NavLink\n                            className='result__caption-wrapper'\n                            to={getContractPath(contract_id)}\n                            onClick={this.handleClick}\n                        >\n                            <span\n                                className={classNames('result__caption', {\n                                    'result__caption--won' : is_contract_won,\n                                    'result__caption--lost': !is_contract_won,\n                                }\n                                )}\n                            >\n                                {\n                                    (is_contract_won) ?\n                                        <React.Fragment>\n                                            {localize('won')}\n                                            <IconCheck className='result__icon' />\n                                        </React.Fragment>\n                                        :\n                                        <React.Fragment>\n                                            {localize('lost')}\n                                            <IconCross className='result__icon' />\n                                        </React.Fragment>\n                                }\n                            </span>\n                        </NavLink>\n                    </div>\n                </CSSTransition>\n            </React.Fragment>\n        );\n    }\n}\n\nResultOverlay.propTypes = {\n    contract_id              : PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    has_same_contract_mounted: PropTypes.bool,\n    is_unsupported           : PropTypes.bool,\n    is_visible               : PropTypes.bool,\n    onClick                  : PropTypes.func,\n    onClickRemove            : PropTypes.func,\n    result                   : PropTypes.string,\n};\n\nexport default ResultOverlay;\n","import classNames              from 'classnames';\nimport PropTypes               from 'prop-types';\nimport React                   from 'react';\nimport { CSSTransition }       from 'react-transition-group';\nimport Button                  from 'deriv-components/lib/button';\nimport ContractLink            from 'Modules/Contract/Containers/contract-link.jsx';\nimport Shortcode               from 'Modules/Reports/Helpers/shortcode';\nimport { isCryptocurrency }    from '_common/base/currency_base';\nimport { localize }            from 'App/i18n';\nimport Icon                    from 'Assets/icon.jsx';\nimport Money                   from 'App/Components/Elements/money.jsx';\nimport { UnderlyingIcon }      from 'App/Components/Elements/underlying-icon.jsx';\nimport { PositionsCardLoader } from 'App/Components/Elements/ContentLoader';\nimport ContractTypeCell        from './contract-type-cell.jsx';\nimport ProgressSlider          from './ProgressSlider';\nimport ResultOverlay           from './result-overlay.jsx';\n\nconst PositionsDrawerCard = ({\n    active_position,\n    className,\n    contract_info,\n    currency,\n    current_tick,\n    indicative,\n    id,\n    is_dark_theme,\n    is_loading,\n    is_sell_requested,\n    is_unsupported,\n    is_valid_to_sell,\n    profit_loss,\n    onClickSell,\n    onClickRemove,\n    result,\n    sell_price,\n    status,\n    toggleUnsupportedContractModal,\n    type,\n}) => {\n    const loader_el = (\n        <div className='positions-drawer-card__content-loader'>\n            <PositionsCardLoader\n                is_dark_theme={is_dark_theme}\n                speed={2}\n            />\n        </div>\n    );\n    const fallback_result = (profit_loss < 0) ? 'lost' : 'won';\n    const contract_el = (\n        <React.Fragment>\n            <div className={classNames(\n                'positions-drawer-card__grid',\n                'positions-drawer-card__grid-underlying-trade'\n            )}\n            >\n                <div className='positions-drawer-card__underlying-name'>\n                    <UnderlyingIcon market={contract_info.underlying} />\n                    <span className='positions-drawer-card__symbol'>\n                        {contract_info.display_name}\n                    </span>\n                </div>\n                <div className='positions-drawer-card__type'>\n                    <ContractTypeCell\n                        type={type}\n                        is_high_low={Shortcode.isHighLow({ shortcode: contract_info.shortcode })}\n                    />\n                </div>\n            </div>\n            {(result || !!(contract_info.is_sold)) ?\n                <div className='progress-slider--completed' />\n                :\n                <ProgressSlider\n                    is_loading={is_loading}\n                    start_time={contract_info.date_start}\n                    expiry_time={contract_info.date_expiry}\n                    current_tick={current_tick}\n                    ticks_count={contract_info.tick_count}\n                />\n            }\n            <div className={classNames(\n                'positions-drawer-card__grid',\n                'positions-drawer-card__grid-profit-payout'\n            )}\n            >\n                <div className={classNames(\n                    'positions-drawer-card__profit-loss',\n                    'positions-drawer-card__profit-loss-label',\n                )}\n                >\n                    {result ? localize('Profit/Loss:') : localize('Potential profit/loss:')}\n                </div>\n                <div className={classNames(\n                    'positions-drawer-card__indicative',\n                    'positions-drawer-card__indicative-label',\n                )}\n                >\n                    {!result ? localize('Indicative price:') : localize('Payout:')}\n                </div>\n                <div className={classNames(\n                    'positions-drawer-card__profit-loss', {\n                        'positions-drawer-card__profit-loss--is-crypto': isCryptocurrency(currency),\n                        'positions-drawer-card__profit-loss--negative' : (profit_loss < 0),\n                        'positions-drawer-card__profit-loss--positive' : (profit_loss > 0),\n                    })}\n                >\n                    <Money amount={Math.abs(profit_loss)} currency={currency} />\n                    <div className={classNames(\n                        'positions-drawer-card__indicative--movement', {\n                            'positions-drawer-card__indicative--movement-complete': !!result,\n                        },\n                    )}\n                    >\n                        <Icon\n                            icon='IconPriceMove'\n                            type={(status !== 'complete') ? status : null}\n                        />\n                    </div>\n                </div>\n                <div className='positions-drawer-card__indicative'>\n                    <Money amount={sell_price || indicative} currency={currency} />\n                    <div className={classNames(\n                        'positions-drawer-card__indicative--movement', {\n                            'positions-drawer-card__indicative--movement-complete': !!result,\n                        },\n                    )}\n                    >\n                        <Icon\n                            icon='IconPriceMove'\n                            type={(status !== 'complete') ? status : null}\n                        />\n                    </div>\n                </div>\n            </div>\n            <div className={classNames(\n                'positions-drawer-card__grid',\n                'positions-drawer-card__grid-price-payout',\n            )}\n            >\n                <div className='positions-drawer-card__purchase-price'>\n                    <span className='positions-drawer-card__purchase-label'>\n                        {localize('Purchase price:')}\n                    </span>\n                    <span className='positions-drawer-card__purchase-value'>\n                        <Money amount={contract_info.buy_price} currency={currency} />\n                    </span>\n                </div>\n                <div className='positions-drawer-card__payout-price'>\n                    <span className='positions-drawer-card__payout-label'>\n                        {localize('Potential payout:')}\n                    </span>\n                    <span className='positions-drawer-card__payout-value'>\n                        {contract_info.payout ?\n                            <Money amount={contract_info.payout} currency={currency} />\n                            :\n                            <strong>-</strong>\n                        }\n                    </span>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n\n    return (\n        <div\n            id={`dt_drawer_card_${id}`}\n            className={classNames(\n                'positions-drawer-card__wrapper', {\n                    'positions-drawer-card__wrapper--active': (parseInt(active_position) === id),\n                },\n                className)}\n        >\n            <ResultOverlay\n                contract_id={id}\n                is_unsupported={is_unsupported}\n                is_visible={!!(contract_info.is_sold)}\n                has_same_contract_mounted={id === parseInt(active_position)}\n                onClickRemove={onClickRemove}\n                onClick={() => toggleUnsupportedContractModal(true)}\n                result={(result || fallback_result)}\n            />\n            {is_unsupported ?\n                <div\n                    className={classNames(\n                        'positions-drawer-card', {\n                            'positions-drawer-card--active': (parseInt(active_position) === id),\n                            'positions-drawer-card--green' : (profit_loss > 0) && !result,\n                            'positions-drawer-card--red'   : (profit_loss < 0) && !result,\n                        }\n                    )}\n                    onClick={() => toggleUnsupportedContractModal(true)}\n                >\n                    {contract_info.underlying ? contract_el : loader_el}\n                </div>\n                :\n                <ContractLink\n                    className={classNames(\n                        'positions-drawer-card', {\n                            'positions-drawer-card--active': (parseInt(active_position) === id),\n                            'positions-drawer-card--green' : (profit_loss > 0) && !result,\n                            'positions-drawer-card--red'   : (profit_loss < 0) && !result,\n                        }\n                    )}\n                    contract_id={id}\n                >\n                    {contract_info.underlying ? contract_el : loader_el}\n                </ContractLink>\n            }\n            <CSSTransition\n                in={!!(is_valid_to_sell)}\n                timeout={250}\n                classNames={{\n                    enter    : 'positions-drawer-card__sell-button--enter',\n                    enterDone: 'positions-drawer-card__sell-button--enter-done',\n                    exit     : 'positions-drawer-card__sell-button--exit',\n                }}\n                unmountOnExit\n            >\n                <div className='positions-drawer-card__sell-button'>\n                    <Button\n                        id={`dt_drawer_card_${id}_button`}\n                        className={classNames(\n                            'btn--primary',\n                            'btn--primary--green',\n                            'btn--sell', {\n                                'btn--loading': is_sell_requested,\n                            })}\n                        is_disabled={!is_valid_to_sell || is_sell_requested}\n                        text={localize('Sell contract')}\n                        onClick={() => onClickSell(id)}\n                    />\n                </div>\n            </CSSTransition>\n        </div>\n    );\n};\n\nPositionsDrawerCard.propTypes = {\n    active_position: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className                     : PropTypes.string,\n    contract_info                 : PropTypes.object,\n    currency                      : PropTypes.string,\n    current_tick                  : PropTypes.number,\n    duration                      : PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    duration_unit                 : PropTypes.string,\n    exit_spot                     : PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    id                            : PropTypes.number,\n    indicative                    : PropTypes.number,\n    is_dark_theme                 : PropTypes.bool,\n    is_loading                    : PropTypes.bool,\n    is_sell_requested             : PropTypes.bool,\n    is_unsupported                : PropTypes.bool,\n    is_valid_to_sell              : PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n    onClickRemove                 : PropTypes.func,\n    onClickSell                   : PropTypes.func,\n    profit_loss                   : PropTypes.number,\n    result                        : PropTypes.string,\n    sell_time                     : PropTypes.number,\n    status                        : PropTypes.string,\n    toggleUnsupportedContractModal: PropTypes.func,\n    type                          : PropTypes.string,\n};\n\nexport default PositionsDrawerCard;\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { NavLink }                    from 'react-router-dom';\nimport { TransitionGroup,\n    CSSTransition }                   from 'react-transition-group';\nimport { Scrollbars }                 from 'tt-react-custom-scrollbars';\nimport { localize }                   from 'App/i18n';\nimport Icon                           from 'Assets/icon.jsx';\nimport routes                         from 'Constants/routes';\nimport EmptyPortfolioMessage          from 'Modules/Reports/Components/empty-portfolio-message.jsx';\nimport { connect }                    from 'Stores/connect';\nimport PositionsDrawerCard            from './positions-drawer-card.jsx';\n\nclass PositionsDrawer extends React.Component {\n    componentDidMount()    {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const {\n            all_positions,\n            active_contract_id,\n            error,\n            currency,\n            is_contract_mode,\n            is_dark_theme,\n            is_empty,\n            is_positions_drawer_on,\n            onClickSell,\n            onClickRemove,\n            openContract,\n            toggleDrawer,\n            toggleUnsupportedContractModal,\n        } = this.props;\n\n        // Show only 5 most recent open contracts\n        const body_content = (\n            <React.Fragment>\n                <TransitionGroup component='div'>\n                    {all_positions.slice(0, 5).map((portfolio_position) => (\n                        <CSSTransition\n                            appear\n                            key={portfolio_position.id}\n                            in={true}\n                            timeout={150}\n                            classNames={{\n                                appear   : 'positions-drawer-card__wrapper--enter',\n                                enter    : 'positions-drawer-card__wrapper--enter',\n                                enterDone: 'positions-drawer-card__wrapper--enter-done',\n                                exit     : 'positions-drawer-card__wrapper--exit',\n                            }}\n                            unmountOnExit\n                        >\n                            <PositionsDrawerCard\n                                active_position={active_contract_id}\n                                is_dark_theme={is_dark_theme}\n                                onClickSell={onClickSell}\n                                onClickRemove={onClickRemove}\n                                openContract={openContract}\n                                key={portfolio_position.id}\n                                currency={currency}\n                                toggleUnsupportedContractModal={toggleUnsupportedContractModal}\n                                {...portfolio_position}\n                            />\n                        </CSSTransition>\n                    ))}\n                </TransitionGroup>\n            </React.Fragment>\n        );\n\n        return (\n            <div\n                id='dt_positions_drawer'\n                className={classNames(\n                    'positions-drawer', {\n                        'positions-drawer--open'         : is_positions_drawer_on,\n                        'positions-drawer--contract-mode': is_contract_mode,\n                    })}\n            >\n                <div className='positions-drawer__header'>\n                    <span className='positions-drawer__title'>{localize('Recent Positions')}</span>\n                    <div\n                        id='dt_positions_drawer_close_icon'\n                        className='positions-drawer__icon-close'\n                        onClick={toggleDrawer}\n                    >\n                        <Icon icon='IconMinimize' />\n                    </div>\n                </div>\n                <div className='positions-drawer__body'>\n                    <Scrollbars\n                        style={{ width: '100%', height: '100%' }}\n                        autoHide\n                    >\n                        {(is_empty || error) ? <EmptyPortfolioMessage error={error} />  : body_content}\n                    </Scrollbars>\n                </div>\n                <div className='positions-drawer__footer'>\n                    <NavLink id='dt_positions_drawer_report_button' className='btn btn--link btn--alternate' to={routes.reports}>\n                        <span className='btn__text'>\n                            {localize('Go to Reports')}\n                        </span>\n                    </NavLink>\n                </div>\n            </div>\n        );\n    }\n}\n\nPositionsDrawer.propTypes = {\n    active_contract_id    : PropTypes.number,\n    all_positions         : MobxPropTypes.arrayOrObservableArray,\n    children              : PropTypes.any,\n    currency              : PropTypes.string,\n    error                 : PropTypes.string,\n    is_contract_mode      : PropTypes.bool,\n    is_dark_theme         : PropTypes.bool,\n    is_empty              : PropTypes.bool,\n    is_loading            : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    onClickRemove         : PropTypes.func,\n    onClickSell           : PropTypes.func,\n    onMount               : PropTypes.func,\n    onUnmount             : PropTypes.func,\n    openContract          : PropTypes.func,\n    toggleDrawer          : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, client, ui }) => ({\n        currency                      : client.currency,\n        active_contract_id            : modules.contract_trade.contract_id,\n        all_positions                 : modules.portfolio.all_positions,\n        error                         : modules.portfolio.error,\n        is_contract_mode              : modules.smart_chart.is_contract_mode,\n        is_empty                      : modules.portfolio.is_empty,\n        is_loading                    : modules.portfolio.is_loading,\n        onClickSell                   : modules.portfolio.onClickSell,\n        onClickRemove                 : modules.portfolio.removePositionById,\n        openContract                  : modules.contract_trade.onMount,\n        onMount                       : modules.portfolio.onMount,\n        onUnmount                     : modules.portfolio.onUnmount,\n        is_dark_theme                 : ui.is_dark_mode_on,\n        is_positions_drawer_on        : ui.is_positions_drawer_on,\n        toggleDrawer                  : ui.togglePositionsDrawer,\n        toggleUnsupportedContractModal: ui.toggleUnsupportedContractModal,\n    })\n)(PositionsDrawer);\n","import React        from 'react';\nimport Button       from 'deriv-components/lib/button';\nimport { localize } from 'App/i18n';\nimport Localize     from './localize.jsx';\n\nconst toggleFade = ({ node, opacity, direction, color }) => {\n    const sub_or_add = direction === -1 && opacity > 0.1 ? -1 : 1;\n    let reduction = 0.05;\n    if (opacity < 0.3 && opacity > 0.1) {\n        reduction = 0.01;\n    }\n    const new_opacity = parseFloat(Number(opacity + (sub_or_add * reduction)).toFixed(2));\n\n    node.style.backgroundColor = color.replace(`${opacity})`, `${Number(new_opacity).toFixed(2)})`);\n\n    const stopId = requestAnimationFrame(toggleFade.bind(this,\n        {\n            node,\n            opacity  : new_opacity,\n            direction: sub_or_add,\n            color    : node.style.backgroundColor,\n        },\n    ));\n    if (new_opacity >= 1) {\n        cancelAnimationFrame(stopId);\n        // Set the initial value to follow CSS\n        node.querySelectorAll('div')\n            .forEach(element => {\n                element.style.backgroundColor = '';\n            });\n        node.style.backgroundColor = '';\n    }\n};\n\nconst startAnimation = (node) => {\n    const children_background_color = getComputedStyle(node.firstElementChild).getPropertyValue('background-color');\n    const converted_rgba = children_background_color.startsWith('rgba') ?\n        children_background_color :\n        `rgba(${children_background_color\n            .replace('rgb(', '')\n            .replace(')', '')\n            .split(', ')\n            .join(',')},1)`;\n\n    // Set initial value for individual rows\n    node.querySelectorAll('div')\n        .forEach(element => {\n            element.style.backgroundColor = 'transparent';\n        });\n    node.style.backgroundColor = converted_rgba; // compensate for removal background of individual rows\n\n    const direction            = -1; // lower the opacity\n    requestAnimationFrame(toggleFade.bind(this,\n        {\n            node,\n            opacity: 1,\n            direction,\n            color  : converted_rgba,\n        },\n    ));\n};\n\n/**\n * Handle animation for dropdown, this is imperative, with DOM manipulation.\n */\nconst onClick = () => {\n    const dropdown = document.querySelector('.cq-menu-dropdown');\n    if (dropdown.classList.contains('open')) return;\n    document.querySelector('.cq-symbol-select-btn').click();\n    const left_panel = document.querySelector('.cq-filter-panel');\n    left_panel.querySelector('.ic-volidx').parentNode.click();\n\n    const node = document\n        .querySelector('.category-volidx')\n        .querySelector('.category-content');\n    setTimeout(startAnimation.bind(this, node), 600);\n};\n\nconst MarketIsClosedOverlay = () => (\n    <div className='market-is-closed-overlay'>\n        <p><Localize i18n_default_text='Market is closed.' /></p>\n        <p><Localize i18n_default_text='Try Volatility Indices which simulate real-world market volatility and are open 24/7.' /></p>\n        <Button\n            className='market-is-closed-overlay__button'\n            classNameSpan='market-is-closed-overlay__button--span'\n            onClick={onClick}\n            text={localize('Try Volatility Indices')}\n        />\n    </div>\n);\n\nexport default MarketIsClosedOverlay;\n","import { toJS }    from 'mobx';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nclass Test extends React.Component {\n    state         = { is_visible: false };\n    setVisibility = this.stateVisibility.bind(this);\n    styles        = {\n        container: {\n            fontSize  : '10px',\n            lineHeight: '15px',\n            position  : 'absolute',\n            zIndex    : 1,\n            background: 'rgba(0, 0, 0, 0.8)',\n            color     : '#ccc',\n            padding   : '10px',\n            marginTop : '-10px',\n            display   : 'none',\n            overflowY : 'auto',\n            height    : '100%',\n        },\n        prop_name: {\n            color: 'yellowgreen',\n        },\n    };\n\n    componentDidMount = () => {\n        document.addEventListener('keyup', this.setVisibility, false);\n    };\n\n    componentWillUnmount = () => {\n        document.removeEventListener('keyup', this.setVisibility);\n    };\n\n    stateVisibility(e) {\n        if (e.ctrlKey && e.keyCode === 83) { // Ctrl + S\n            this.setState({ is_visible: !this.state.is_visible });\n        }\n    }\n\n    render() {\n        return (\n            <code id='state_info' style={Object.assign({}, this.styles.container, { display: this.state.is_visible ? 'block' : 'none' })}>\n                {this.props.entries.sort().map(([k, v]) => k !== 'root_store' && typeof v !== 'function' && <div key={k}><span style={this.styles.prop_name}>{k}:</span> {v && typeof v === 'object' ? JSON.stringify(toJS(v), null, 1) : v}</div>)}\n            </code>\n        );\n    }\n}\n\nTest.propTypes = {\n    entries: PropTypes.array,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        entries: Object.entries(modules.trade),\n    })\n)(Test);\n","import classNames            from 'classnames';\nimport PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { TradeParamsLoader } from 'App/Components/Elements/ContentLoader';\nimport Fieldset              from 'App/Components/Form/fieldset.jsx';\nimport ContractType          from '../../Containers/contract-type.jsx';\nimport Purchase              from '../../Containers/purchase.jsx';\nimport TradeParams           from '../../Containers/trade-params.jsx';\n\nconst ScreenLarge = ({ is_contract_visible, is_dark_theme, is_market_closed, is_trade_enabled }) => (\n    <div className={classNames('sidebar__items', {\n        'sidebar__items--is-disabled'  : is_contract_visible,\n        'sidebar__items--market-closed': is_market_closed,\n    })}\n    >\n        {!is_trade_enabled && !is_contract_visible ?\n            <TradeParamsLoader\n                is_dark_theme={is_dark_theme}\n                speed={2}\n            />\n            :\n            <React.Fragment>\n                <Fieldset className='trade-container__fieldset trade-types'>\n                    <ContractType />\n                </Fieldset>\n                <TradeParams />\n                <div className='purchase-container'>\n                    <Purchase />\n                </div>\n            </React.Fragment>\n        }\n    </div>\n);\n\nScreenLarge.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_dark_theme      : PropTypes.bool,\n    is_market_closed   : PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default ScreenLarge;\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport Lazy        from 'App/Containers/Lazy';\nimport ScreenLarge from './screen-large.jsx';\n\nconst FormLayout = ({\n    is_contract_visible,\n    is_dark_theme,\n    is_market_closed,\n    is_mobile,\n    is_trade_enabled,\n}) => (\n    is_mobile ?\n        <Lazy\n            ctor={() => import(/* webpackChunkName: \"screen-small\" */'./screen-small.jsx')}\n            should_load={is_mobile}\n            is_trade_enabled={is_trade_enabled}\n        />\n        :\n        <ScreenLarge\n            is_contract_visible={is_contract_visible}\n            is_dark_theme={is_dark_theme}\n            is_trade_enabled={is_trade_enabled}\n            is_market_closed={is_market_closed}\n        />\n);\n\nFormLayout.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_dark_theme      : PropTypes.bool,\n    is_market_closed   : PropTypes.bool,\n    is_mobile          : PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default FormLayout;\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport ChartLoader           from 'App/Components/Elements/chart-loader.jsx';\nimport { connect }           from 'Stores/connect';\nimport PositionsDrawer       from 'App/Components/Elements/PositionsDrawer';\nimport MarketIsClosedOverlay from 'App/Components/Elements/market-is-closed-overlay.jsx';\nimport Lazy                  from 'App/Containers/Lazy';\nimport Test                  from './test.jsx';\nimport FormLayout            from '../Components/Form/form-layout.jsx';\nimport { isDigitTradeType }  from '../Helpers/digits';\n\nconst SmartChart = React.lazy(() => import(/* webpackChunkName: \"smart_chart\" */'../../SmartChart'));\n\nclass Trade extends React.Component {\n    componentDidMount() {\n        this.props.showPositions();\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.hidePositions();\n        if (this.props.is_contract_mode) {\n            this.props.onCloseContract();\n        }\n        this.props.onUnmount();\n    }\n\n    render() {\n        const form_wrapper_class           = this.props.is_mobile ? 'mobile-wrapper' : 'sidebar__container desktop-only';\n        const should_show_bottom_widgets   = this.props.is_digit_contract && this.props.is_contract_mode;\n        const should_show_last_digit_stats = isDigitTradeType(this.props.contract_type) && !this.props.is_contract_mode;\n        const is_chart_visible             = (this.props.is_chart_loading || !this.props.is_chart_ready);\n\n        return (\n            <div id='trade_container' className='trade-container'>\n                <PositionsDrawer />\n                <div className='chart-container'>\n                    <Lazy\n                        ctor={() => import(/* webpackChunkName: \"notification-messages\" */'App/Containers/notification-messages.jsx')}\n                        has_progress={false}\n                        should_load={true}\n                    />\n                    {\n                        <React.Suspense\n                            fallback={\n                                <ChartLoader\n                                    is_dark={this.props.is_dark_theme}\n                                    is_visible={!this.props.symbol}\n                                />\n                            }\n                        >\n                            <ChartLoader is_dark={this.props.is_dark_theme} is_visible={is_chart_visible} />\n                            <SmartChart\n                                chart_id={this.props.chart_id}\n                                chart_type={this.props.chart_type}\n                                Digits={\n                                    <Lazy\n                                        ctor={() => import(/* webpackChunkName: \"digits\", webpackPrefetch: true */'Modules/Contract/Components/Digits')}\n                                        should_load={this.props.is_digit_contract}\n                                        is_trade_page\n                                        contract_info={this.props.contract_info}\n                                        digits_info={this.props.digits_info}\n                                        display_status={this.props.display_status}\n                                        is_digit_contract={this.props.is_digit_contract}\n                                        is_ended={this.props.is_ended}\n                                    />\n                                }\n                                InfoBox={\n                                    <Lazy\n                                        ctor={() => import(/* webpackChunkName: \"info-box\", webpackPrefetch: true */'Modules/Contract/Components/InfoBox')}\n                                        should_load={true}\n                                        has_progress={false}\n                                        is_trade_page\n                                        contract_info={this.props.contract_info}\n                                        error_message={this.props.error_message}\n                                        is_contract_mode={this.props.is_contract_mode}\n                                        removeError={this.props.removeError}\n                                        onClose={this.props.onCloseContract}\n                                    />\n                                }\n                                end_epoch={this.props.end_epoch}\n                                granularity={this.props.granularity}\n                                is_trade_page\n                                is_static_chart={this.props.is_static_chart}\n                                onSymbolChange={this.props.onSymbolChange}\n                                scroll_to_epoch={this.props.scroll_to_epoch}\n                                start_epoch={this.props.start_epoch}\n                                should_show_bottom_widgets={should_show_bottom_widgets}\n                                should_show_last_digit_stats={should_show_last_digit_stats}\n                                symbol={this.props.symbol}\n                            />\n                        </React.Suspense>\n                    }\n                    {/* Remove Test component for debugging below for production release */}\n                    <Test />\n                </div>\n                <div\n                    className={form_wrapper_class}\n                    onClick={this.props.is_contract_mode ? () => {\n                        this.props.onCloseContract();\n                    } : null}\n                    style={{ cursor: this.props.is_contract_mode ? 'pointer' : 'initial' }}\n                >\n                    { this.props.is_market_closed && <MarketIsClosedOverlay />}\n                    <FormLayout\n\n                        is_dark_theme={this.props.is_dark_theme}\n                        is_contract_visible={this.props.is_contract_mode}\n                        is_market_closed={this.props.is_market_closed}\n                        is_mobile={this.props.is_mobile}\n                        is_trade_enabled={this.props.is_trade_enabled}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nTrade.propTypes = {\n    chart_id         : PropTypes.string,\n    chart_type       : PropTypes.string,\n    contract_info    : PropTypes.object,\n    contract_type    : PropTypes.string,\n    digits_info      : PropTypes.object,\n    display_status   : PropTypes.string,\n    end_epoch        : PropTypes.number,\n    granularity      : PropTypes.number,\n    hidePositions    : PropTypes.func,\n    is_chart_loading : PropTypes.bool,\n    is_chart_ready   : PropTypes.bool,\n    is_contract_mode : PropTypes.bool,\n    is_dark_theme    : PropTypes.bool,\n    is_digit_contract: PropTypes.bool,\n    is_ended         : PropTypes.bool,\n    is_market_closed : PropTypes.bool,\n    is_mobile        : PropTypes.bool,\n    is_static_chart  : PropTypes.bool,\n    is_trade_enabled : PropTypes.bool,\n    onCloseContract  : PropTypes.func,\n    onMount          : PropTypes.func,\n    onSymbolChange   : PropTypes.func,\n    onUnmount        : PropTypes.func,\n    purchase_info    : PropTypes.object,\n    scroll_to_epoch  : PropTypes.number,\n    showPositions    : PropTypes.func,\n    start_epoch      : PropTypes.number,\n    symbol           : PropTypes.string,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        contract_info                      : modules.contract_trade.contract_info,\n        digits_info                        : modules.contract_trade.digits_info,\n        display_status                     : modules.contract_trade.display_status,\n        error_message                      : modules.contract_trade.error_message,\n        is_ended                           : modules.contract_trade.is_ended,\n        is_digit_contract                  : modules.contract_trade.is_digit_contract,\n        onCloseContract                    : modules.contract_trade.onCloseContract,\n        removeError                        : modules.contract_trade.removeErrorMessage,\n        chart_id                           : modules.smart_chart.chart_id,\n        chart_type                         : modules.smart_chart.chart_type,\n        scroll_to_epoch                    : modules.smart_chart.scroll_to_left_epoch,\n        granularity                        : modules.smart_chart.granularity,\n        end_epoch                          : modules.smart_chart.end_epoch,\n        start_epoch                        : modules.smart_chart.start_epoch,\n        is_chart_loading                   : modules.smart_chart.is_chart_loading,\n        is_chart_ready                     : modules.smart_chart.is_chart_ready,\n        is_contract_mode                   : modules.smart_chart.is_contract_mode,\n        is_static_chart                    : modules.smart_chart.is_static_chart,\n        contract_type                      : modules.trade.contract_type,\n        is_market_closed                   : modules.trade.is_market_closed,\n        is_trade_enabled                   : modules.trade.is_trade_enabled,\n        onMount                            : modules.trade.onMount,\n        onSymbolChange                     : modules.trade.onChange,\n        onUnmount                          : modules.trade.onUnmount,\n        purchase_info                      : modules.trade.purchase_info,\n        symbol                             : modules.trade.symbol,\n        hidePositions                      : ui.hidePositionsFooterToggle,\n        showPositions                      : ui.showPositionsFooterToggle,\n        has_only_forward_starting_contracts: ui.has_only_forward_starting_contracts,\n        is_dark_theme                      : ui.is_dark_mode_on,\n        is_mobile                          : ui.is_mobile,\n        setHasOnlyForwardingContracts      : ui.setHasOnlyForwardingContracts,\n    })\n)(Trade);\n","import { lazy }                       from 'react';\nimport { Redirect as RouterRedirect } from 'react-router-dom';\nimport { Redirect }                   from 'App/Containers/Redirect';\nimport { localize }                   from 'App/i18n';\nimport { routes }                     from 'Constants';\n\nimport Trade from 'Modules/Trading';\n\nconst ContractDetails = lazy(() => import(/* webpackChunkName: \"contract\" */  'Modules/Contract'));\n\n// Reports Routes\nconst Reports       = lazy(() => import(/* webpackChunkName: \"reports\" */        'Modules/Reports'));\nconst OpenPositions = lazy(() => import(/* webpackChunkName: \"open_positions\" */ 'Modules/Reports/Containers/open-positions.jsx'));\nconst ProfitTable   = lazy(() => import(/* webpackChunkName: \"profit_table\" */   'Modules/Reports/Containers/profit-table.jsx'));\nconst Statement     = lazy(() => import(/* webpackChunkName: \"statement\" */      'Modules/Reports/Containers/statement.jsx'));\n\n// Error Routes\nconst Page404 = lazy(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404'));\n\nconst initRoutesConfig = () => ([\n    { path: routes.contract,  component: ContractDetails, title: localize('Contract Details'),  is_authenticated: true },\n    { path: routes.index,     component: RouterRedirect,  title: '',                            to: routes.trade },\n    {\n        path            : routes.reports,\n        component       : Reports,\n        is_authenticated: true,\n        title           : localize('Reports'),\n        routes          : [\n            { path: routes.positions, component: OpenPositions, title: localize('Open Positions'), icon_component: 'IconOpenPositions', default: true },\n            { path: routes.profit,    component: ProfitTable,   title: localize('Profit Table'),   icon_component: 'IconProfitTable' },\n            { path: routes.statement, component: Statement,     title: localize('Statement'),      icon_component: 'IconStatement' },\n        ],\n    },\n    { path: routes.trade,     component: Trade,           title: localize('Trade'),    exact: true },\n    { path: routes.error404,  component: Page404,         title: localize('Error 404') },\n    { path: routes.redirect,  component: Redirect,        title: localize('Redirect') },\n]);\n\nlet routesConfig;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default  = { component: Page404, title: localize('Error 404') };\n\nconst getRoutesConfig = () => {\n    if (!routesConfig) {\n        routesConfig = initRoutesConfig();\n    }\n    routesConfig.push(route_default);\n    return routesConfig;\n};\n\nexport default getRoutesConfig;\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { NavLink }     from 'react-router-dom';\nimport {\n    findRouteByPath,\n    normalizePath }    from './helpers';\nimport getRoutesConfig from '../../Constants/routes-config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ active_class, to, children, ...props }) => {\n    const path  = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig());\n\n    if (!route) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return (\n        to ?\n            <NavLink to={path} activeClassName={active_class || 'active'} exact={route.exact} {...props}>\n                {children}\n            </NavLink>\n            :\n            <a {...props}>\n                {children}\n            </a>\n    );\n};\n\nBinaryLink.propTypes = {\n    active_class: PropTypes.string,\n    children    : PropTypes.object,\n    to          : PropTypes.string,\n};\n\nexport default BinaryLink;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { urlFor }   from '_common/url';\nimport PageError    from 'Modules/PageError';\nimport Localize     from './localize.jsx';\n\nconst LoginPrompt = ({\n    onLogin,\n    onSignup,\n    page_title,\n}) => (\n    <PageError\n        header={\n            <Localize\n                i18n_default_text='{{page_title}} page is only<0 />available for existing clients.'\n                values={{ page_title: page_title || 'This' }}\n                components={[ <br key={0} /> ]}\n            />\n        }\n        messages={[\n            <Localize\n                key={0}\n                i18n_default_text='If you have an active account, please <0>Log in</0> for full access. Otherwise, please <1>Sign up</1> to start trading.'\n                components={[\n                    <a key={0} className='link' onClick={onLogin} />,\n                    <a key={1} className='link' onClick={onSignup} />,\n                ]}\n            />,\n        ]}\n    />\n);\n\nLoginPrompt.propTypes = {\n    onLogin   : PropTypes.func,\n    onSignup  : PropTypes.func,\n    page_title: PropTypes.string,\n};\n\n// TODO - Remove this default setting once sign-up has been integrated to app 2\nLoginPrompt.defaultProps = {\n    onSignup: () => { window.open(urlFor('new-account', undefined, undefined, true)); },\n};\n\nexport default LoginPrompt;\n\n","import React               from 'react';\nimport {\n    Redirect,\n    Route }                from 'react-router-dom';\nimport { redirectToLogin } from '_common/base/login';\nimport BinarySocket        from '_common/base/socket_base';\nimport Language            from '_common/language';\nimport routes              from 'Constants/routes';\nimport { connect }         from 'Stores/connect';\nimport LoginPrompt         from '../Elements/login-prompt.jsx';\nimport { default_title }   from '../../Constants/app-config';\n\nconst RouteWithSubRoutes = route => {\n    const renderFactory = props => {\n        let result = null;\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else {\n            result = (\n                (route.is_authenticated && !route.is_logged_in) ?\n                    <LoginPrompt onLogin={redirectToLogin} page_title={route.title} />\n                    :\n                    <route.component {...props} routes={route.routes} />\n            );\n        }\n\n        Language.setCookie();\n        const title = route.title ? `${route.title} | ` : '';\n        document.title = `${ title }${ default_title }`;\n        BinarySocket.wait('website_status').then(() => {\n            route.pushDataLayer({ event: 'page_load' });\n        });\n        return result;\n    };\n\n    return <Route\n        exact={route.exact}\n        path={route.path}\n        render={renderFactory}\n    />;\n};\n\nexport { RouteWithSubRoutes as RouteWithSubRoutesRender }; // For tests\n\nexport default connect(({ gtm }) => ({\n    pushDataLayer: gtm.pushDataLayer,\n}))(RouteWithSubRoutes);\n","import React              from 'react';\nimport { Switch }         from 'react-router-dom';\nimport getRoutesConfig    from 'App/Constants/routes-config';\nimport RouteWithSubRoutes from './route-with-sub-routes.jsx';\n\nconst BinaryRoutes = (props) => (\n    <React.Suspense fallback={<div />}>\n        <Switch>\n            {\n                getRoutesConfig().map((route, idx) => (\n                    <RouteWithSubRoutes key={idx} {...route} {...props} />\n                ))\n            }\n        </Switch>\n    </React.Suspense>\n\n);\n\nexport default BinaryRoutes;\n","import ContentLoader from 'react-content-loader';\nimport React         from 'react';\nimport PropTypes     from 'prop-types';\n\nconst PositionsCardLoader = ({ is_dark_theme, speed }) => (\n    <ContentLoader\n        height={173}\n        width={218}\n        speed={speed}\n        primaryColor={is_dark_theme ? 'rgba(127, 131, 151, 0.16)' : '#f4f4f6'}\n        secondaryColor={is_dark_theme ? '#303342' : '#eaeaec'}\n    >\n        <rect x='43'  y='19'  rx='0' ry='0' width='56'  height='8' />\n        <rect x='147' y='19'  rx='0' ry='0' width='56'  height='8' />\n        <rect x='12'  y='50'  rx='0' ry='0' width='44'  height='8' />\n        <rect x='13'  y='68'  rx='0' ry='0' width='192' height='8' />\n        <rect x='5'   y='89'  rx='0' ry='0' width='208' height='1' />\n        <rect x='12'  y='104' rx='0' ry='0' width='44'  height='8' />\n        <rect x='12'  y='9'   rx='0' ry='0' width='24'  height='24' />\n        <rect x='116' y='11'  rx='0' ry='0' width='24'  height='24' />\n        <rect x='12'  y='118' rx='0' ry='0' width='88'  height='8' />\n        <rect x='116' y='104' rx='0' ry='0' width='44'  height='8' />\n        <rect x='116' y='118' rx='0' ry='0' width='88'  height='8' />\n        <rect x='12'  y='139' rx='0' ry='0' width='44'  height='8' />\n        <rect x='12'  y='153' rx='0' ry='0' width='88'  height='8' />\n        <rect x='116' y='139' rx='0' ry='0' width='44'  height='8' />\n        <rect x='116' y='153' rx='0' ry='0' width='88'  height='8' />\n    </ContentLoader>\n);\n\nPositionsCardLoader.propTypes = {\n    is_dark_theme: PropTypes.bool,\n    speed        : PropTypes.number,\n};\n\nexport { PositionsCardLoader };\n","import ContentLoader from 'react-content-loader';\nimport React         from 'react';\nimport PropTypes     from 'prop-types';\n\nconst TradeParamsLoader = ({ is_dark_theme, speed }) => (\n    <ContentLoader\n        height={548}\n        width={240}\n        speed={speed}\n        primaryColor={is_dark_theme ? '#191c31' : '#f4f4f6'}\n        secondaryColor={is_dark_theme ? '#202641' : '#eaeaec'}\n    >\n        <rect x='0' y='0' rx='4' ry='4' width='240' height='76' />\n        <rect x='0' y='84' rx='4' ry='4' width='240' height='132' />\n        <rect x='0' y='224' rx='4' ry='4' width='240' height='120' />\n        <rect x='0' y='352' rx='4' ry='4' width='240' height='194' />\n    </ContentLoader>\n);\n\nTradeParamsLoader.propTypes = {\n    is_dark_theme: PropTypes.bool,\n    speed        : PropTypes.number,\n};\n\nexport { TradeParamsLoader };\n","export * from './positions-card.jsx';\nexport * from './trade-params.jsx';\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ButtonLink   from 'App/Components/Routes/button-link.jsx';\nimport Localize     from 'App/Components/Elements/localize.jsx';\n\nconst PageError = ({\n    buttonOnClick,\n    error_code,\n    messages,\n    header,\n    redirect_label,\n    redirect_url,\n}) => (\n    <div className='page-error__container'>\n        <div className='page-error__box'>\n            <h3 className='page-error__header'>\n                {header}\n            </h3>\n            <div className='page-error__message-wrapper'>\n                <span className='page-error__message'>\n                    { messages.map((message, index) => (\n                        message.has_html ?\n                            <p key={index} dangerouslySetInnerHTML={{ __html: message.message }} />\n                            :\n                            <p key={index}>{ message }</p>\n                    ))}\n                    { error_code &&\n                    <React.Fragment>\n                        <br />\n                        <p className='page-error__code'><Localize i18n_default_text={'Error Code: {{error_code}}'} values={{ error_code }} /></p>\n                    </React.Fragment>\n                    }\n                </span>\n            </div>\n            { redirect_label &&\n            <ButtonLink\n                className='page-error__btn btn--primary btn--primary--orange'\n                to={redirect_url}\n                onClick={buttonOnClick}\n            >\n                <span className='page-error__btn-text btn__text'>\n                    {redirect_label}\n                </span>\n            </ButtonLink>\n            }\n        </div>\n    </div>\n);\n\nPageError.propTypes = {\n    buttonOnClick : PropTypes.func,\n    error_code    : PropTypes.number,\n    header        : PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    messages      : PropTypes.array,\n    redirect_label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    redirect_url  : PropTypes.string,\n};\n\nexport default PageError;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst UILoader = ({ className, classNameBlock }) => {\n    const block_class   = classNames(classNameBlock, 'block-ui');\n    const loading_class = classNames('block-ui__loading', className);\n    return (\n        <div className={block_class}>\n            <div className={loading_class}>\n                <div className='block-ui__loading-spinner'>\n                    <svg className='block-ui__loading-spinner-circular' viewBox='25 25 50 50'>\n                        <circle className='block-ui__loading-spinner-path' cx='50' cy='50' r='20' fill='none' strokeWidth='4' strokeMiterlimit='10' />\n                    </svg>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nUILoader.propTypes = {\n    className     : PropTypes.string,\n    classNameBlock: PropTypes.string,\n};\n\nexport default UILoader;\n","const digitTypesMap = [ 'even_odd', 'match_diff', 'over_under' ];\n\nexport const isDigitTradeType = (contract_type) => digitTypesMap.includes(contract_type);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconDeriv = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='149' height='16' viewBox='0 0 149 16'>\n        <g fill='none' fillRule='nonzero'>\n            <path fill='#21CE99' d='M3.673.002V.02L9.78 7.945.004 15.868v.017h9.872a6.197 6.197 0 0 0 6.03-4.785l.817-3.533a6.177 6.177 0 0 0-1.191-5.229A6.204 6.204 0 0 0 10.695.002H3.673z' />\n            <path fill='#11825C' d='M9.774 7.96l-4.295 7.925H0z' />\n            <path className='color3-fill' d='M23.757.002h6.156c4.966 0 7.797 3.413 7.014 7.84v.045c-.784 4.44-4.825 7.893-9.79 7.893h-6.164L23.757.002zm3.929 12.64c2.845 0 5.103-1.92 5.596-4.71v-.045c.492-2.793-1.068-4.753-3.925-4.753h-2.685l-1.675 9.508h2.689zM41.637.002h11.92l-.545 3.096h-8.466l-.566 3.2h5.464l-.545 3.084h-5.465l-.585 3.316h8.578l-.545 3.084h-12.03zM64.996 10.138c2.137-.743 3.798-2.347 4.25-4.888v-.045c.262-1.493 0-2.726-.717-3.605C67.674.563 66.214 0 64.207 0H56.98l-2.779 15.77h3.476l2.234-12.638h3.453c1.693 0 2.597.766 2.334 2.253v.044c-.235 1.33-1.364 2.232-3.057 2.232h-2.619l3.782 8.106h4.062l-2.871-5.63zM73.694.002h3.476l-2.779 15.77h-3.476zM79.992.002h3.848l2.167 11.106L92.102.002h3.748l-9.193 15.883H83.57zM124.236 9.875c-.12-.004-.239.014-.352.051-.101.032-.197.076-.287.133a.775.775 0 0 0-.213.194l-.052.053v-.365h-.874v3.294h.874v-1.837a.722.722 0 0 1 .182-.52.584.584 0 0 1 .457-.181.522.522 0 0 1 .445.18c.112.15.167.335.156.521v1.863h.874v-2.097a1.298 1.298 0 0 0-.314-.924 1.156 1.156 0 0 0-.896-.365zM127.435 9.9a2.493 2.493 0 0 0-.678.08c-.187.053-.37.118-.55.194l-.05.028.234.701.064-.025c.144-.051.274-.105.428-.143.15-.038.303-.055.457-.051a.814.814 0 0 1 .535.155.497.497 0 0 1 .17.427 2.53 2.53 0 0 0-.3-.064 2.48 2.48 0 0 0-1.018.026 1.093 1.093 0 0 0-.428.213.945.945 0 0 0-.288.35 1.165 1.165 0 0 0-.103.482v-.002c-.001.158.034.314.103.456.066.125.155.236.263.327.11.093.239.16.378.194.148.044.301.066.455.066a1.38 1.38 0 0 0 .642-.143c.111-.06.217-.132.314-.213v.286h.855v-1.94a1.38 1.38 0 0 0-.365-1.03 1.524 1.524 0 0 0-1.118-.373zm-.144 2.723a.722.722 0 0 1-.39-.105.326.326 0 0 1-.144-.285v-.013a.343.343 0 0 1 .156-.299.893.893 0 0 1 .496-.117c.127 0 .254.012.378.038.105.026.195.039.274.064v.132a.445.445 0 0 1-.051.233.549.549 0 0 1-.159.183 1.07 1.07 0 0 1-.248.13 1.285 1.285 0 0 1-.312.039zM133.36 12.154l-.855-2.213h-.928l1.345 3.217a.602.602 0 0 1-.156.233.362.362 0 0 1-.214.066 1.013 1.013 0 0 1-.194-.026l-.197-.078-.064-.039-.301.664.053.025c.112.06.23.108.35.145.14.04.284.057.428.051.124.004.248-.013.366-.05.109-.04.21-.098.299-.171.096-.083.18-.18.248-.286.08-.138.151-.28.214-.427l1.282-3.332h-.9l-.776 2.22zM139.038 12.169a1.43 1.43 0 0 1-.353.273.876.876 0 0 1-1.235-.47 1.092 1.092 0 0 1-.066-.365v-.012c0-.242.083-.476.235-.664a.951.951 0 0 1 .26-.196.739.739 0 0 1 .34-.079.882.882 0 0 1 .428.105c.128.071.242.164.34.273l.053.053.548-.587-.039-.05a1.765 1.765 0 0 0-.536-.406 1.741 1.741 0 0 0-.77-.156c-.233 0-.464.049-.678.143a2.055 2.055 0 0 0-.55.365 1.55 1.55 0 0 0-.352.548 1.9 1.9 0 0 0-.13.663v.024c-.003.228.041.454.13.663.087.201.206.387.353.549.159.154.345.278.55.364.213.091.444.136.677.13.276.011.55-.047.797-.168.207-.115.392-.265.548-.444l.038-.05-.534-.524-.054.018zM142.888 10.383a1.71 1.71 0 0 0-.562-.365 1.741 1.741 0 0 0-.705-.13c-.468 0-.918.182-1.253.508a1.785 1.785 0 0 0-.366.548c-.089.21-.133.436-.13.663v.024c-.003.228.041.454.13.663.086.204.21.39.366.549a1.713 1.713 0 0 0 1.24.495c.242-.002.481-.05.705-.143.21-.083.4-.207.56-.365a1.69 1.69 0 0 0 .366-.548c.09-.21.134-.436.13-.664v-.013a1.612 1.612 0 0 0-.13-.663 1.35 1.35 0 0 0-.35-.56zm-1.255 2.163a.777.777 0 0 1-.35-.079 1.056 1.056 0 0 1-.289-.213.87.87 0 0 1-.182-.299 1.148 1.148 0 0 1-.066-.365v-.012c.002-.242.085-.477.235-.666.081-.078.173-.144.274-.194a.784.784 0 0 1 .366-.08c.126 0 .25.027.365.08.11.05.208.123.289.213a.766.766 0 0 1 .181.299c.042.117.064.24.067.365v.012a1.148 1.148 0 0 1-.067.365.87.87 0 0 1-.181.299.806.806 0 0 1-.276.196.797.797 0 0 1-.366.08zM148.487 10.214a1.13 1.13 0 0 0-.855-.339c-.23-.008-.456.05-.652.169-.153.09-.29.205-.406.339a1.046 1.046 0 0 0-.338-.34 1.193 1.193 0 0 0-.614-.168.906.906 0 0 0-.34.051.882.882 0 0 0-.273.133c-.078.052-.15.113-.214.181a.177.177 0 0 1-.053.051v-.35h-.888v3.294h.875v-1.837a.773.773 0 0 1 .17-.533.511.511 0 0 1 .428-.181.5.5 0 0 1 .428.168c.112.15.168.334.156.52v1.863h.874v-1.837a.729.729 0 0 1 .17-.533.571.571 0 0 1 .427-.181.514.514 0 0 1 .427.168c.116.153.171.343.156.534v1.862h.855v-2.084a1.396 1.396 0 0 0-.333-.95zM121.118 9.954h1v3.296h-1zM122.03 9.171a.48.48 0 0 0-.48-.482.489.489 0 0 0-.484.482.48.48 0 0 0 .483.482.473.473 0 0 0 .481-.482zM136.1 12.832a.482.482 0 1 0-.963 0 .482.482 0 0 0 .964 0zM120.4 11.23a1.229 1.229 0 0 0-.287-.235 1.183 1.183 0 0 0-.214-.104l-.051-.026.038-.026.118-.078a.97.97 0 0 0 .357-.5c.038-.122.056-.25.051-.377V9.87a1.053 1.053 0 0 0-.312-.768c-.274-.273-.667-.405-1.201-.405h-2.048v4.546h2.099c.233.002.466-.024.693-.077.19-.045.372-.124.534-.235.148-.106.268-.244.353-.405.082-.17.122-.357.117-.546v-.013a1.34 1.34 0 0 0-.064-.416.753.753 0 0 0-.184-.322zm-2.675-.691V9.485h1.082a.916.916 0 0 1 .55.143c.116.09.184.23.18.377v.013a.448.448 0 0 1-.213.427c-.179.101-.382.15-.588.143h-1.017v-.04l.006-.01zm2.06 1.354a.46.46 0 0 1-.213.427c-.184.101-.391.15-.6.143h-1.253v-1.12h1.186c.231-.014.462.035.667.143a.446.446 0 0 1 .214.427v-.02zM131.272 9.888a1.07 1.07 0 0 0-.744.213c-.124.1-.23.218-.314.352v-.495h-.875v3.294h.875V11.99a1.586 1.586 0 0 1 .079-.52.98.98 0 0 1 .213-.365.93.93 0 0 1 .719-.299h.102v-.9l-.055-.017zM109.189 12.503a.885.885 0 0 0 .428.628l-.09-.184s.17-.482-.338-.444z' />\n            <path className='color3-fill' d='M113.888 7.893a4.667 4.667 0 0 0-6.59 0 4.644 4.644 0 0 0 0 6.577 4.667 4.667 0 0 0 6.59 0 4.657 4.657 0 0 0 0-6.577zm-.483 6.11c-.054.051-.105.103-.156.143-1.123.911-1.984.455-1.997.455-.588-.118-.877-.118-1.045-.214-.039-.028-.17-.104-.214-.079a.392.392 0 0 1-.456-.025l-.04-.04a.332.332 0 0 1-.064-.442c.038-.039-.039-.169-.039-.169s-.214-.326-.365-.523a1.58 1.58 0 0 1-.197-.64 2.45 2.45 0 0 1-.248-.352c-.038-.05-.092-.104-.13-.155a.6.6 0 0 1-.08-.092v-.026a.854.854 0 0 1 .261-.326c.054-.039.276-.169.276-.169a.456.456 0 0 1 .338-.196c.223-.013.446.023.654.105l.143.04c.235.077.443.169.614.233.11.052.223.096.34.132.286.077.808-.158.912-.262a.68.68 0 0 0 .261-.35.234.234 0 0 0-.066-.145.924.924 0 0 1-.103-.118l-.027-.025c-.496-.52-.404-.854-.404-.854a.69.69 0 0 0-.261-.546l-.026-.025-.013-.013c.249.071.502.128.757.168.112.023.227.027.34.013.26-.013.455-.025.468-.092a5.115 5.115 0 0 1-.678-.194c-.248-.091-.286-.104-.457-.17a3.853 3.853 0 0 1-.428-.169c.888.235 1.174.326 1.578.326.101.004.203-.005.301-.027.052-.013.236-.051.261-.118a1.555 1.555 0 0 1-.496-.076c-1.03-.34-1.122-.508-1.697-.73a4.783 4.783 0 0 0-.874-.273 2.011 2.011 0 0 0-.757 0c-.783-.184-.966-.17-1.202-.117a3.984 3.984 0 0 1 5.443 1.12l.013.025c.435.647.667 1.41.667 2.189a3.761 3.761 0 0 1-1.107 2.803zm-2.61-4.495c.241.1.427.3.508.549-.496.117-.391-.39-.391-.39l-.118-.159zM101.882.06h.319v15.77h-.319zM107.78 2.32c.233 0 .417-.058.552-.175a.568.568 0 0 0 .203-.45v-.01c0-.207-.068-.362-.205-.468-.137-.105-.32-.157-.55-.157h-.715v1.26h.715zM106.45.5h1.38c.203 0 .387.027.552.083.166.055.305.134.42.237.116.103.204.227.265.37.062.143.093.303.093.48v.01a1.075 1.075 0 0 1-.41.89c-.127.1-.275.176-.445.227-.17.052-.352.078-.545.078h-.695V4h-.615V.5zm5.02 2.995a1.154 1.154 0 0 0 .85-.363c.103-.111.184-.242.243-.392.058-.15.087-.31.087-.48v-.01c0-.17-.03-.33-.088-.482a1.185 1.185 0 0 0-.623-.663 1.146 1.146 0 0 0-.479-.1 1.154 1.154 0 0 0-.85.363 1.225 1.225 0 0 0-.242.392c-.059.15-.088.31-.088.48v.01c0 .17.03.33.088.482a1.185 1.185 0 0 0 .622.663c.147.067.307.1.48.1zm-.01.565c-.27 0-.517-.047-.74-.142a1.758 1.758 0 0 1-.95-.96 1.812 1.812 0 0 1-.135-.698v-.01c0-.247.045-.48.135-.698.09-.218.217-.41.38-.575a1.829 1.829 0 0 1 1.32-.537c.27 0 .517.047.74.143a1.758 1.758 0 0 1 .95.96c.09.218.135.45.135.697v.01c0 .247-.045.48-.135.697-.09.219-.217.41-.38.575a1.829 1.829 0 0 1-1.32.538zM113.77.5h.665l.835 2.595.86-2.605h.52l.86 2.605.835-2.595h.645l-1.22 3.525h-.53l-.86-2.515-.86 2.515h-.53L113.77.5zm5.85 0h2.595v.55h-1.98v.91h1.755v.55h-1.755v.94h2.005V4h-2.62V.5zm4.865 1.735c.22 0 .395-.052.525-.157a.52.52 0 0 0 .195-.428v-.01c0-.19-.063-.334-.19-.432-.127-.099-.305-.148-.535-.148h-.895v1.175h.9zM122.97.5h1.56c.22 0 .415.03.585.093.17.061.312.147.425.257.093.097.165.208.215.335.05.127.075.267.075.42v.01c0 .143-.02.272-.063.387a1.013 1.013 0 0 1-.434.53c-.102.062-.215.11-.338.143L125.94 4h-.725l-.86-1.22h-.77V4h-.615V.5zm3.615 0h2.595v.55h-1.98v.91h1.755v.55H127.2v.94h2.005V4h-2.62V.5zm4.655 2.94c.183 0 .35-.03.5-.087.15-.059.277-.14.382-.246.106-.105.187-.23.245-.375.059-.145.088-.302.088-.472v-.01c0-.17-.03-.328-.088-.475a1.103 1.103 0 0 0-.244-.377 1.123 1.123 0 0 0-.383-.248c-.15-.06-.317-.09-.5-.09h-.69v2.38h.69zM129.935.5h1.305c.273 0 .524.044.752.132.229.089.425.211.59.368.166.157.293.34.383.552.09.212.135.441.135.688v.01c0 .247-.045.477-.135.69a1.63 1.63 0 0 1-.382.555 1.81 1.81 0 0 1-.59.37c-.229.09-.48.135-.753.135h-1.305V.5zm7.035 2.955c.21 0 .375-.04.495-.12.12-.08.18-.2.18-.36v-.01c0-.15-.06-.266-.178-.347-.118-.082-.299-.123-.542-.123h-.975v.96h1.02zm-.18-1.48c.2 0 .36-.04.48-.118.12-.078.18-.197.18-.357v-.01c0-.14-.052-.25-.157-.327-.106-.079-.258-.118-.458-.118h-.885v.93h.84zM135.345.5h1.57c.403 0 .708.103.915.31.157.157.235.35.235.58v.01a.816.816 0 0 1-.153.498.778.778 0 0 1-.16.162 1.364 1.364 0 0 1-.187.12c.103.037.197.08.282.127a.909.909 0 0 1 .22.173.7.7 0 0 1 .143.235c.033.09.05.195.05.315v.01c0 .157-.03.295-.093.415a.824.824 0 0 1-.262.3c-.113.08-.25.14-.41.183-.16.041-.337.062-.53.062h-1.62V.5zm4.64 2.12L138.595.5h.725l.98 1.55.99-1.55h.705l-1.39 2.105V4h-.62V2.62zm2.465.695h.665V4h-.665v-.685zm0-1.955h.665v.685h-.665V1.36z' />\n        </g>\n    </svg>\n);\n\nIconDeriv.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default IconDeriv;\n","import React     from 'react';\nimport PropTypes from 'prop-types';\n\nconst Loading = ({ id, is_slow_loading, status, theme }) => (\n    <div className='initial-loader'>\n        <div id={id} className={`initial-loader__barspinner barspinner barspinner-${ theme || 'light'}`}>\n            { Array.from(new Array(5)).map((x, inx) => (\n                <div key={inx} className={`initial-loader__barspinner--rect barspinner__rect barspinner__rect--${inx + 1} rect${inx + 1}`} />\n            ))}\n        </div>\n        { is_slow_loading && status.map((text, inx) => (\n            <h3 className='initial-loader__text' key={inx}>{text}</h3>\n        ))\n        }\n    </div>\n);\n\nLoading.propTypes = {\n    id: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    is_slow_loading: PropTypes.bool,\n    status         : PropTypes.array,\n    theme          : PropTypes.string,\n};\nexport default Loading;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport Loading   from '../../../templates/app/components/loading.jsx';\n\nconst ChartLoader = ({ is_dark, is_visible }) => (\n    is_visible &&\n    <div className='chart-container__loader'>\n        <Loading theme={is_dark ? 'dark' : 'light'} />\n    </div>\n);\n\nChartLoader.propTypes = {\n    is_dark   : PropTypes.bool,\n    is_visible: PropTypes.bool,\n};\n\nexport default ChartLoader;\n","const Shortcode = (() => {\n    const extractInfoFromShortcode = (shortcode) => {\n        const info_from_shortcode = {\n            category  : '',\n            underlying: '',\n            barrier_1 : '',\n        };\n\n        const pattern = new RegExp('^([A-Z]+)_((OTC_[A-Z0-9]+)|R_[\\\\d]{2,3}|[A-Z]+)'); // Used to get market name from shortcode\n        const extracted = pattern.exec(shortcode);\n        if (extracted !== null) {\n            info_from_shortcode.category   = extracted[1].toLowerCase();\n            info_from_shortcode.underlying = extracted[2];\n\n            if (/^(CALL|PUT)$/i.test(info_from_shortcode.category)) {\n                info_from_shortcode.barrier_1 = shortcode.split('_').slice(-2)[0];\n            }\n        }\n\n        return info_from_shortcode;\n    };\n\n    const isHighLow = ({ shortcode = '', shortcode_info = '' }) => {\n        const info_from_shortcode = shortcode ? extractInfoFromShortcode(shortcode) : shortcode_info;\n        return (info_from_shortcode && info_from_shortcode.barrier_1) ? !/^S0P$/.test(info_from_shortcode.barrier_1) : false;\n    };\n\n    return {\n        extractInfoFromShortcode,\n        isHighLow,\n    };\n})();\n\nmodule.exports = Shortcode;\n","export const website_domain = 'Deriv.app';\nexport const website_name   = 'Deriv';\nexport const default_title  = website_name;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport Icon              from 'Assets/icon.jsx';\n\nclass Tooltip extends React.PureComponent {\n    state = {\n        show_tooltip_balloon_icon: false,\n    }\n\n    onMouseEnter = () => {\n        this.setState({ show_tooltip_balloon_icon: true });\n    }\n\n    onMouseLeave = () => {\n        this.setState({ show_tooltip_balloon_icon: false });\n    }\n\n    render() {\n        const {\n            alignment,\n            children,\n            className,\n            classNameIcon,\n            has_error,\n            icon, // only question or info accepted\n            message,\n        } = this.props;\n\n        const icon_class = classNames(classNameIcon, icon);\n        return (\n            <span\n                className={classNames(className, 'tooltip', { 'tooltip--error': has_error })}\n                data-tooltip={message || undefined}\n                data-tooltip-pos={alignment}\n            >\n                {icon === 'info' &&\n                    <React.Fragment>\n                        <Icon\n                            icon='IconInfoOutline'\n                            className={icon_class}\n                            onMouseEnter={this.onMouseEnter}\n                            onMouseLeave={this.onMouseLeave}\n                        />\n                        <Icon\n                            icon='IconInfoBlue'\n                            className={classNames(`${classNameIcon}-balloon-icon`, 'tooltip__balloon-icon', {\n                                'tooltip__balloon-icon--show': this.state.show_tooltip_balloon_icon,\n                            })}\n                        />\n                    </React.Fragment>\n                }\n                {icon === 'question' && <Icon icon='IconQuestion' className={icon_class} />}\n                {icon === 'dot'      && <Icon icon='IconRedDot' className={icon_class} />}\n                {children}\n            </span>\n        );\n    }\n}\n\nTooltip.propTypes = {\n    alignment    : PropTypes.string,\n    children     : PropTypes.node,\n    className    : PropTypes.string,\n    classNameIcon: PropTypes.string,\n    has_error    : PropTypes.bool,\n    icon         : PropTypes.string,\n    message      : PropTypes.string,\n};\n\nexport default Tooltip;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport Button    from 'deriv-components/lib/button';\nimport Icon      from 'Assets/icon.jsx';\n\nconst IncrementButtons = ({\n    decrementValue,\n    id,\n    incrementValue,\n    max_is_disabled,\n    min_is_disabled,\n}) => (\n    <React.Fragment>\n        <Button\n            id={`${id}_add`}\n            className={'input-wrapper__button input-wrapper__button--increment'}\n            is_disabled={max_is_disabled}\n            onClick={incrementValue}\n            tabIndex='-1'\n        >\n            <Icon icon='IconPlus' className={'input-wrapper__icon input-wrapper__icon--plus' } is_disabled={max_is_disabled} />\n        </Button>\n        <Button\n            id={`${id}_sub`}\n            className={'input-wrapper__button input-wrapper__button--decrement'}\n            is_disabled={min_is_disabled}\n            onClick={decrementValue}\n            tabIndex='-1'\n        >\n            <Icon icon='IconMinus' className={'input-wrapper__icon input-wrapper__icon--minus'} is_disabled={min_is_disabled} />\n        </Button>\n    </React.Fragment>\n);\n\nIncrementButtons.propTypes = {\n    decrementValue : PropTypes.func,\n    id             : PropTypes.string,\n    incrementValue : PropTypes.func,\n    max_is_disabled: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n    min_is_disabled: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n};\n\nexport default IncrementButtons;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst Input = ({\n    changeValue,\n    checked,\n    className,\n    classNameInlinePrefix,\n    data_value,\n    data_tip,\n    display_value,\n    fractional_digits,\n    id,\n    inline_prefix,\n    is_autocomplete_disabled,\n    is_disabled,\n    is_hj_whitelisted,\n    is_incrementable,\n    is_read_only,\n    max_length,\n    name,\n    onClick,\n    onKeyPressed,\n    placeholder,\n    required,\n    type,\n}) => {\n    const onChange = (e) => {\n        /**\n         * fix for Safari\n         * we have to keep track of the current cursor position, update the value in store,\n         * then reset the cursor position to the current cursor position\n         */\n        // TODO: find better ways to target browsers\n        if (navigator.userAgent.indexOf('Safari') !== -1 && type !== 'checkbox') {\n            const cursor = e.target.selectionStart;\n            changeValue(e, (evt) => {\n                evt.target.selectionEnd = cursor; // reset the cursor position in callback\n            });\n        } else {\n            changeValue(e);\n        }\n    };\n\n    return (\n        <React.Fragment>\n            {!!inline_prefix &&\n            <div className={classNameInlinePrefix}>\n                <span className={classNames(classNameInlinePrefix ? `${classNameInlinePrefix}--symbol` : '', 'symbols', `symbols--${inline_prefix.toLowerCase()}`)} />\n            </div>\n            }\n            <input\n                autoComplete={is_autocomplete_disabled ? 'off' : undefined}\n                checked={checked}\n                className={classNames(className)}\n                data-for={`error_tooltip_${name}`}\n                data-hj-whitelist={is_hj_whitelisted}\n                data-tip={data_tip}\n                data-value={data_value}\n                disabled={is_disabled}\n                id={id}\n                maxLength={fractional_digits ? max_length + fractional_digits + 1 : max_length}\n                name={name}\n                onChange={onChange}\n                onClick={onClick}\n                onKeyDown={is_incrementable ? onKeyPressed : undefined}\n                placeholder={placeholder || undefined}\n                readOnly={is_read_only}\n                required={required || undefined}\n                type={type === 'number' ? 'text' : type}\n                value={display_value || ''}\n            />\n        </React.Fragment>\n    );\n};\n\nInput.propTypes = {\n    changeValue: PropTypes.func,\n    checked    : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className            : PropTypes.string,\n    classNameInlinePrefix: PropTypes.string,\n    data_tip             : PropTypes.string,\n    data_value           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    display_value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    fractional_digits       : PropTypes.number,\n    id                      : PropTypes.string,\n    inline_prefix           : PropTypes.string,\n    is_autocomplete_disabled: PropTypes.bool,\n    is_disabled             : PropTypes.string,\n    is_hj_whitelisted       : PropTypes.bool,\n    is_incrementable        : PropTypes.bool,\n    is_read_only            : PropTypes.bool,\n    max_length              : PropTypes.number,\n    name                    : PropTypes.string,\n    onClick                 : PropTypes.func,\n    onKeyPressed            : PropTypes.func,\n    placeholder             : PropTypes.string,\n    required                : PropTypes.bool,\n    type                    : PropTypes.string,\n    value                   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Input;\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport { isCryptocurrency }      from '_common/base/currency_base';\nimport Tooltip                   from 'App/Components/Elements/tooltip.jsx';\nimport IncrementButtons          from './increment-buttons.jsx';\nimport Input                     from './input.jsx';\n\nclass InputField extends React.Component {\n    render () {\n        const {\n            checked,\n            className,\n            classNameInlinePrefix,\n            classNameInput,\n            classNamePrefix,\n            currency,\n            data_tip,\n            data_value,\n            error_messages,\n            fractional_digits,\n            helper,\n            id,\n            inline_prefix,\n            is_autocomplete_disabled,\n            is_disabled,\n            is_float,\n            is_hj_whitelisted = false,\n            is_incrementable,\n            is_negative_disabled,\n            is_read_only = false,\n            is_signed = false,\n            is_unit_at_right = false,\n            label,\n            max_length,\n            max_value,\n            min_value,\n            name,\n            onChange,\n            onClick,\n            placeholder,\n            prefix,\n            required,\n            type,\n            unit,\n            value,\n        } = this.props;\n        const Icon = this.props.icon;\n        const has_error       = error_messages && !!error_messages.length;\n        let has_valid_length  = true;\n        const max_is_disabled = max_value && +value >= +max_value;\n        const min_is_disabled = min_value && +value <= +min_value;\n\n        const changeValue = (e, callback) => {\n            if (unit) {\n                e.target.value = e.target.value.replace(unit, '').trim();\n            }\n\n            if (e.target.value === value && type !== 'checkbox') {\n                return;\n            }\n\n            if (type === 'number' || type === 'tel') {\n                const is_empty = !e.target.value || e.target.value === '' || e.target.value === '  ';\n                const signed_regex = is_signed ? '^([+-.0-9])' : '^';\n\n                const is_number = new RegExp(`${signed_regex}(\\\\d*)?${is_float ? '(\\\\.\\\\d+)?' : ''}$`)\n                    .test(e.target.value);\n\n                const is_not_completed_number = is_float && new RegExp(`${signed_regex}(\\\\.|\\\\d+\\\\.)?$`)\n                    .test(e.target.value);\n                // This regex check whether there is any zero at the end of fractional part or not.\n                const has_zero_at_end = new RegExp(`${signed_regex}(\\\\d+)?\\\\.(\\\\d+)?[0]+$`)\n                    .test(e.target.value);\n\n                const is_scientific_notation = /e/.test(`${+e.target.value}`);\n\n                if (max_length && fractional_digits) {\n                    has_valid_length = new RegExp(`${signed_regex}(\\\\d{0,${max_length}})(\\\\.\\\\d{0,${fractional_digits}})?$`)\n                        .test(e.target.value);\n                }\n\n                if (((is_number) || is_empty) && has_valid_length) {\n                    e.target.value = is_empty || is_signed || has_zero_at_end || is_scientific_notation || type === 'tel'\n                        ? e.target.value\n                        : +e.target.value;\n                } else if (!is_not_completed_number) {\n                    e.target.value = value;\n                    return;\n                }\n            }\n\n            onChange(e);\n            if (callback) {\n                callback(e);\n            }\n        };\n\n        const getDecimals = (val) => {\n            const array_value = typeof val === 'string' ? val.split('.') : val.toString().split('.');\n            return array_value && array_value.length > 1 ? array_value[1].length : 0;\n        };\n\n        const incrementValue = () => {\n            if (max_is_disabled) return;\n            let increment_value;\n\n            const decimal_places = value ? getDecimals(value) : 0;\n            const is_crypto      = !!currency && isCryptocurrency(currency);\n\n            if (is_crypto || (!currency && is_float)) {\n                const new_value = parseFloat(+value) + parseFloat(1 * 10 ** (0 - decimal_places));\n                increment_value = parseFloat(new_value).toFixed(decimal_places);\n            } else {\n                increment_value = parseFloat((+value) + 1).toFixed(decimal_places);\n            }\n            onChange({ target: { value: increment_value, name } });\n        };\n\n        const calculateDecrementedValue = () => {\n            let decrement_value;\n\n            const decimal_places = value ? getDecimals(value) : 0;\n            const is_crypto      = !!currency && isCryptocurrency(currency);\n\n            if (is_crypto || (!currency && is_float)) {\n                const new_value = parseFloat(+value) - parseFloat(1 * 10 ** (0 - decimal_places));\n                decrement_value = parseFloat(new_value).toFixed(decimal_places);\n            } else {\n                decrement_value = parseFloat((+value) - 1).toFixed(decimal_places);\n            }\n            return decrement_value;\n        };\n\n        const decrementValue = () => {\n            if (!value || min_is_disabled) return;\n            const decrement_value = calculateDecrementedValue();\n            if (is_negative_disabled && decrement_value < 0) return;\n            onChange({ target: { value: decrement_value, name } });\n        };\n\n        const onKeyPressed = (e) => {\n            if (e.keyCode === 38) incrementValue(); // up-arrow pressed\n            if (e.keyCode === 40) decrementValue(); // down-arrow pressed\n        };\n\n        let display_value = value;\n\n        if (unit) {\n            display_value = is_unit_at_right ? `${value} ${unit}` : `${unit} ${value}`;\n        }\n\n        const is_increment_input = is_incrementable && (type === 'number' || type === 'tel');\n\n        const input =\n            <Input\n                changeValue={changeValue}\n                checked={checked}\n                className={classNames(is_increment_input ? 'input-wrapper__input' : '', inline_prefix ? 'input--has-inline-prefix' : '', 'input', { 'input--error': has_error }, classNameInput)}\n                classNameInlinePrefix={classNameInlinePrefix}\n                data_tip={data_tip}\n                data_value={data_value}\n                display_value={display_value}\n                fractional_digits={fractional_digits}\n                has_error={has_error}\n                id={id}\n                inline_prefix={inline_prefix}\n                is_autocomplete_disabled={is_autocomplete_disabled}\n                is_disabled={is_disabled}\n                is_hj_whitelisted={is_hj_whitelisted}\n                is_incrementable={is_increment_input}\n                is_read_only={is_read_only}\n                max_length={max_length}\n                name={name}\n                onClick={onClick}\n                onKeyPressed={onKeyPressed}\n                placeholder={placeholder}\n                required={required}\n                type={type}\n            />;\n\n        const increment_buttons =\n            <IncrementButtons\n                id={id}\n                max_is_disabled={max_is_disabled}\n                incrementValue={incrementValue}\n                min_is_disabled={min_is_disabled || (is_negative_disabled && calculateDecrementedValue() < 0)}\n                decrementValue={decrementValue}\n            />;\n\n        const input_tooltip =\n            <Tooltip\n                className={classNames('', { 'tooltip--with-label': label })}\n                alignment='left'\n                message={has_error ? error_messages[0] : null}\n                has_error={has_error}\n            >\n                {!!label &&\n                <label htmlFor={name} className='input-field__label'>{label}</label>\n                }\n                {!!helper &&\n                <span className='input-field__helper'>{helper}</span>\n                }\n                {is_increment_input ?\n                    <div className='input-wrapper'>\n                        {increment_buttons}\n                        {input}\n                    </div>\n                    :\n                    input\n                }\n            </Tooltip>;\n\n        return (\n            <React.Fragment>\n                {!!prefix &&\n                <div className={classNamePrefix}>\n                    <span className={classNames(`${classNamePrefix}--symbol`, 'symbols', `symbols--${prefix.toLowerCase()}`)} />\n                </div>\n                }\n                <div\n                    className={classNames('input-field', className)}\n                >\n                    {this.props.icon &&\n                    <Icon onClick={onClick} />\n                    }\n                    {input_tooltip}\n                </div>\n            </React.Fragment>\n        );\n\n    }\n}\n\n// ToDo: Refactor input_field\n// supports more than two different types of 'value' as a prop.\n// Quick Solution - Pass two different props to input field.\nInputField.propTypes = {\n    checked: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className            : PropTypes.string,\n    classNameInlinePrefix: PropTypes.string,\n    classNameInput       : PropTypes.string,\n    classNamePrefix      : PropTypes.string,\n    currency             : PropTypes.string,\n    error_messages       : MobxPropTypes.arrayOrObservableArray,\n    fractional_digits    : PropTypes.number,\n    helper               : PropTypes.string,\n    icon                 : PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.node,\n    ]),\n    id                      : PropTypes.string,\n    inline_prefix           : PropTypes.string,\n    is_autocomplete_disabled: PropTypes.bool,\n    is_disabled             : PropTypes.string,\n    is_float                : PropTypes.bool,\n    is_hj_whitelisted       : PropTypes.bool,\n    is_incrementable        : PropTypes.bool,\n    is_negative_disabled    : PropTypes.bool,\n    is_read_only            : PropTypes.bool,\n    is_signed               : PropTypes.bool,\n    is_unit_at_right        : PropTypes.bool,\n    label                   : PropTypes.string,\n    max_length              : PropTypes.number,\n    name                    : PropTypes.string,\n    onChange                : PropTypes.func,\n    onClick                 : PropTypes.func,\n    placeholder             : PropTypes.string,\n    prefix                  : PropTypes.string,\n    required                : PropTypes.bool,\n    type                    : PropTypes.string,\n    unit                    : PropTypes.string,\n    value                   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(InputField);\n","import classNames                      from 'classnames';\nimport PropTypes                       from 'prop-types';\nimport React                           from 'react';\nimport { VerticalTabContentContainer } from './vertical-tab-content-container.jsx';\nimport { VerticalTabHeaders }          from './vertical-tab-headers.jsx';\n\nclass VerticalTab extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        if (props.is_routed) {\n            const applicable_routes = props.list.filter(item => (\n                item.path === props.current_path || item.default\n            ));\n            const selected = applicable_routes.length > 1\n                ? applicable_routes[applicable_routes.length - 1]\n                : applicable_routes[0];\n\n            this.state = {\n                selected,\n            };\n        } else {\n            this.state = {\n                selected: props.list[props.selected_index || 0],\n            };\n        }\n    }\n\n    changeSelected = (e) => {\n        this.setState({\n            selected: e,\n        });\n    };\n\n    render() {\n        return (\n            <div\n                className={classNames('vertical-tab', {\n                    'vertical-tab--full-screen': this.props.is_full_width,\n                })}\n            >\n                <VerticalTabHeaders\n                    items={this.props.list}\n                    onChange={this.changeSelected}\n                    selected={this.state.selected}\n                    is_routed={this.props.is_routed}\n                    header_title={this.props.header_title}\n                />\n                <VerticalTabContentContainer\n                    action_bar={this.props.action_bar}\n                    action_bar_classname={this.props.action_bar_classname}\n                    id={this.props.id}\n                    items={this.props.list}\n                    selected={this.state.selected}\n                    is_routed={this.props.is_routed}\n                />\n            </div>\n        );\n    }\n}\n\nVerticalTab.propTypes = {\n    action_bar: PropTypes.arrayOf(\n        PropTypes.shape({\n            component: PropTypes.func,\n            icon     : PropTypes.string,\n            onClick  : PropTypes.func,\n            title    : PropTypes.string,\n        })\n    ),\n    action_bar_classname: PropTypes.string,\n    current_path        : PropTypes.string,\n    header_title        : PropTypes.string,\n    id                  : PropTypes.string,\n    is_full_width       : PropTypes.bool,\n    is_routed           : PropTypes.bool,\n    list                : PropTypes.arrayOf(\n        PropTypes.shape({\n            default: PropTypes.bool,\n            icon   : PropTypes.string,\n            label  : PropTypes.string,\n            path   : PropTypes.string,\n            value  : PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n        })\n    ).isRequired,\n    selected_index: PropTypes.number,\n};\n\nexport default VerticalTab;\n","import classNames from 'classnames';\nimport React      from 'react';\n\nconst UnderlyingIcon = ({ market }) => (\n    <div\n        className={classNames(\n            'icons-underlying',\n            `icons-underlying__ic-${market ? market.toUpperCase() : 'unknown'}`\n        )}\n    />\n);\n\nexport { UnderlyingIcon };\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Localize     from 'App/Components/Elements/localize.jsx';\n\nconst ProgressTicks = ({\n    current_tick,\n    ticks_count,\n}) => {\n    const arr_ticks   = [...Array(ticks_count).keys()];\n    return (\n        <div className='progress-slider__ticks'>\n            <span className='progress-slider__ticks-caption'>\n                <Localize i18n_default_text='Tick {{current_tick}}' values={{ current_tick: current_tick.toString() }} />\n            </span>\n            <div className='progress-slider__ticks-wrapper'>\n                {arr_ticks.map(idx =>\n                    <div\n                        key={idx}\n                        className={classNames('progress-slider__ticks-step', {\n                            'progress-slider__ticks-step--marked': (idx + 1) <= parseInt(current_tick),\n                        })}\n                    />\n                )}\n            </div>\n        </div>\n    );\n};\n\nProgressTicks.propTypes = {\n    current_tick: PropTypes.number,\n    ticks_count : PropTypes.number,\n};\n\nexport default ProgressTicks;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport {\n    formatDuration,\n    getDiffDuration } from 'Utils/Date';\n\nconst RemainingTime = ({\n    end_time = null,\n    start_time,\n}) => {\n    if (!+end_time || start_time.unix() > +end_time) {\n        return '';\n    }\n\n    const remaining_time = formatDuration(getDiffDuration(start_time.unix(), end_time));\n\n    return (\n        <div className='remaining-time'>{remaining_time}</div>\n    );\n};\n\nRemainingTime.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        start_time: common.server_time,\n    })\n)(RemainingTime);\n","import classNames            from 'classnames';\nimport PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { connect }           from 'Stores/connect';\nimport ProgressTicks         from './positions-progress-ticks.jsx';\nimport { getTimePercentage } from '../helpers';\nimport RemainingTime         from '../../../../Containers/remaining-time.jsx';\n\nconst ProgressSlider = ({\n    className,\n    current_tick,\n    is_loading,\n    start_time,\n    expiry_time,\n    server_time,\n    ticks_count,\n}) => {\n    const percentage = getTimePercentage(server_time, start_time, expiry_time);\n    return (\n        <div className={classNames('progress-slider', className)}>\n            {(ticks_count) ?\n                <ProgressTicks\n                    current_tick={current_tick}\n                    ticks_count={ticks_count}\n                />\n                :\n                <React.Fragment>\n                    <span className='positions-drawer-card__remaining-time'>\n                        <RemainingTime end_time={expiry_time} />\n                    </span>\n                    {(is_loading || (percentage < 1)) ?\n                        <div className='progress-slider__infinite-loader'>\n                            <div className='progress-slider__infinite-loader--indeterminate' />\n                        </div>\n                        :\n                        /* Calculate line width based on percentage of time left */\n                        <div className='progress-slider__track'>\n                            <div\n                                className={classNames('progress-slider__line', {\n                                    'progress-slider__line--green' : (percentage >= 50),\n                                    'progress-slider__line--orange': (percentage < 50 && percentage >= 20),\n                                    'progress-slider__line--red'   : (percentage < 20),\n                                })}\n                                style={{ width: `${percentage}%` }}\n                            />\n                        </div>\n                    }\n                </React.Fragment>\n            }\n        </div>\n    );\n};\n// Keypress events do not trigger on Safari due to the way it handles input type='range' elements, using focus on the input element also doesn't work for Safari.\n\nProgressSlider.propTypes = {\n    className   : PropTypes.string,\n    current_tick: PropTypes.number,\n    expiry_time : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    is_loading : PropTypes.bool,\n    server_time: PropTypes.object,\n    start_time : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    ticks_count: PropTypes.number,\n};\n\nexport default connect(({ common }) => ({\n    server_time: common.server_time,\n}))(ProgressSlider);\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { Trans }        from 'react-i18next';\n\nconst Localize = ({ i18n_default_text, values, components }) => (\n    <Trans defaults={i18n_default_text} values={values} components={components} />\n);\n\nLocalize.propTypes = {\n    components       : PropTypes.arrayOf(PropTypes.node),\n    i18n_default_text: PropTypes.string,\n    values           : PropTypes.object,\n};\n\nexport default Localize;\n","import moment            from 'moment';\nimport { isEmptyObject } from '_common/utility';\nimport ServerTime        from '_common/base/server_time';\n\nexport const getChartConfig = (\n    contract_info,\n    is_digit_contract,\n    is_from_purchase,\n) => {\n    if (isEmptyObject(contract_info)) return null;\n    const start       = contract_info.date_start;\n    const end         = getEndTime(contract_info);\n    const granularity = getChartGranularity(start, end || null);\n    const chart_type  = getChartType(start, end || null);\n\n    return {\n        chart_type                : contract_info.tick_count ? 'mountain' : chart_type,\n        granularity               : contract_info.tick_count ? 0 : granularity,\n        end_epoch                 : end,\n        start_epoch               : !is_from_purchase ? start : null,\n        scroll_to_epoch           : contract_info.purchase_time,\n        should_show_bottom_widgets: is_digit_contract,\n    };\n};\n\nconst hour_to_granularity_map = [\n    [1      , 0],\n    [2      , 120],\n    [6      , 600],\n    [24     , 900],\n    [5 * 24 , 3600],\n    [30 * 24, 14400],\n];\n\nconst getExpiryTime = (time) => time || ServerTime.get().unix();\n\nexport const getChartType = (start_time, expiry_time) => {\n    const duration = moment.duration(moment.unix(getExpiryTime(expiry_time)).diff(moment.unix(start_time))).asHours();\n    // use line chart if duration is equal or less than 1 hour\n    return (duration <= 1) ? 'mountain' : 'candle';\n};\n\nexport const getChartGranularity = (start_time, expiry_time) =>\n    calculateGranularity(getExpiryTime(expiry_time) - start_time);\n\nexport const calculateGranularity = (duration) =>\n    (hour_to_granularity_map.find(m => duration <= m[0] * 3600) || [null, 86400])[1];\n\nexport const getDisplayStatus = (contract_info) => {\n    let status = 'purchased';\n    if (isEnded(contract_info)) {\n        status = contract_info.profit >= 0 ? 'won' : 'lost';\n    }\n    return status;\n};\n\nexport const getFinalPrice = (contract_info) => (\n    +(contract_info.sell_price || contract_info.bid_price)\n);\n\nexport const getIndicativePrice = (contract_info) => (\n    getFinalPrice(contract_info) && isEnded(contract_info) ?\n        getFinalPrice(contract_info) :\n        (+contract_info.bid_price || null)\n);\n\nexport const getLastTickFromTickStream = (tick_stream = []) => (\n    tick_stream[tick_stream.length - 1] || {}\n);\n\nexport const isEnded = (contract_info) => !!(\n    (contract_info.status && contract_info.status !== 'open') ||\n    contract_info.is_expired        ||\n    contract_info.is_settleable\n);\n\nexport const isSoldBeforeStart = (contract_info) => (\n    contract_info.sell_time && +contract_info.sell_time < +contract_info.date_start\n);\n\nexport const isStarted = (contract_info) => (\n    !contract_info.is_forward_starting || contract_info.current_spot_time > contract_info.date_start\n);\n\nexport const isUserSold = (contract_info) => (\n    contract_info.status === 'sold'\n);\n\nexport const isValidToSell = (contract_info) => (\n    !isEnded(contract_info) && !isUserSold(contract_info) && +contract_info.is_valid_to_sell === 1\n);\n\nexport const getEndTime = (contract_info) => {\n    const {\n        exit_tick_time,\n        date_expiry,\n        is_expired,\n        is_path_dependent,\n        sell_time,\n        status,\n        tick_count: is_tick_contract,\n    } = contract_info;\n\n    const is_finished = is_expired && (status !== 'open');\n\n    if (!is_finished && !isUserSold(contract_info)) return undefined;\n\n    if (isUserSold(contract_info)) {\n        return (sell_time > date_expiry) ?\n            date_expiry : sell_time;\n    } else if (!is_tick_contract && (sell_time > date_expiry)) {\n        return date_expiry;\n    }\n\n    return (date_expiry > exit_tick_time && !(+is_path_dependent)) ? date_expiry : exit_tick_time;\n};\n","const Cookies          = require('js-cookie');\nconst getPropertyValue = require('./utility').getPropertyValue;\nconst isEmptyObject    = require('./utility').isEmptyObject;\nconst isProduction     = require('../config').isProduction;\n\nconst getObject = function (key) {\n    return JSON.parse(this.getItem(key) || '{}');\n};\n\nconst setObject = function (key, value) {\n    if (value && value instanceof Object) {\n        try {\n            this.setItem(key, JSON.stringify(value));\n        } catch (e) { /* do nothing */ }\n    }\n};\n\nif (typeof Storage !== 'undefined') {\n    Storage.prototype.getObject = getObject;\n    Storage.prototype.setObject = setObject;\n}\n\nconst isStorageSupported = (storage) => {\n    if (typeof storage === 'undefined') {\n        return false;\n    }\n\n    const test_key = 'test';\n    try {\n        storage.setItem(test_key, '1');\n        storage.removeItem(test_key);\n        return true;\n    } catch (e) {\n        return false;\n    }\n};\n\nconst Store = function (storage) {\n    this.storage           = storage;\n    this.storage.getObject = getObject;\n    this.storage.setObject = setObject;\n};\n\nStore.prototype = {\n    get(key) {\n        return this.storage.getItem(key) || undefined;\n    },\n    set(key, value) {\n        if (typeof value !== 'undefined') {\n            this.storage.setItem(key, value);\n        }\n    },\n    getObject(key) {\n        return typeof this.storage.getObject === 'function' // Prevent runtime error in IE\n            ? this.storage.getObject(key)\n            : JSON.parse(this.storage.getItem(key) || '{}');\n    },\n    setObject(key, value) {\n        if (typeof this.storage.setObject === 'function') { // Prevent runtime error in IE\n            this.storage.setObject(key, value);\n        } else {\n            this.storage.setItem(key, JSON.stringify(value));\n        }\n    },\n    remove(key) { this.storage.removeItem(key); },\n    clear()     { this.storage.clear(); },\n};\n\nconst InScriptStore = function (object) {\n    this.store = typeof object !== 'undefined' ? object : {};\n};\n\nInScriptStore.prototype = {\n    get(key) {\n        return getPropertyValue(this.store, key);\n    },\n    set(k, value, obj = this.store) {\n        let key = k;\n        if (!Array.isArray(key)) key = [key];\n        if (key.length > 1) {\n            if (!(key[0] in obj) || isEmptyObject(obj[key[0]])) obj[key[0]] = {};\n            this.set(key.slice(1), value, obj[key[0]]);\n        } else {\n            obj[key[0]] = value;\n        }\n    },\n    getObject(key) {\n        return JSON.parse(this.get(key) || '{}');\n    },\n    setObject(key, value) {\n        this.set(key, JSON.stringify(value));\n    },\n    remove(...keys) {\n        keys.forEach((key) => { delete this.store[key]; });\n    },\n    clear()   { this.store = {}; },\n    has(key)  { return this.get(key) !== undefined; },\n    keys()    { return Object.keys(this.store); },\n    call(key) { if (typeof this.get(key) === 'function') this.get(key)(); },\n};\n\nconst State     = new InScriptStore();\nState.prototype = InScriptStore.prototype;\n/**\n * Shorthand function to get values from response object of State\n *\n * @param {String} pathname\n *     e.g. getResponse('authorize.currency') == get(['response', 'authorize', 'authorize', 'currency'])\n */\nState.prototype.getResponse = function (pathname) {\n    let path = pathname;\n    if (typeof path === 'string') {\n        const keys = path.split('.');\n        path = ['response', keys[0]].concat(keys);\n    }\n    return this.get(path);\n};\nState.set('response', {});\n\nconst CookieStorage = function (cookie_name, cookie_domain) {\n    const hostname = window.location.hostname;\n\n    this.initialized = false;\n    this.cookie_name = cookie_name;\n    this.domain      = cookie_domain || (isProduction() ? `.${hostname.split('.').slice(-2).join('.')}` : hostname);\n    this.path        = '/';\n    this.expires     = new Date('Thu, 1 Jan 2037 12:00:00 GMT');\n    this.value       = {};\n};\n\nCookieStorage.prototype = {\n    read() {\n        const cookie_value = Cookies.get(this.cookie_name);\n        try {\n            this.value = cookie_value ? JSON.parse(cookie_value) : {};\n        } catch (e) {\n            this.value = {};\n        }\n        this.initialized = true;\n    },\n    write(val, expireDate, isSecure) {\n        if (!this.initialized) this.read();\n        this.value = val;\n        if (expireDate) this.expires = expireDate;\n        Cookies.set(this.cookie_name, this.value, {\n            expires: this.expires,\n            path   : this.path,\n            domain : this.domain,\n            secure : !!isSecure,\n        });\n    },\n    get(key) {\n        if (!this.initialized) this.read();\n        return this.value[key];\n    },\n    set(key, val) {\n        if (!this.initialized) this.read();\n        this.value[key] = val;\n        Cookies.set(this.cookie_name, this.value, {\n            expires: new Date(this.expires),\n            path   : this.path,\n            domain : this.domain,\n        });\n    },\n    remove() {\n        Cookies.remove(this.cookie_name, {\n            path  : this.path,\n            domain: this.domain,\n        });\n    },\n};\n\nconst removeCookies = (...cookie_names) => {\n    const domains = [\n        `.${document.domain.split('.').slice(-2).join('.')}`,\n        `.${document.domain}`,\n    ];\n\n    let parent_path = window.location.pathname.split('/', 2)[1];\n    if (parent_path !== '') {\n        parent_path = `/${parent_path}`;\n    }\n\n    cookie_names.forEach((c) => {\n        Cookies.remove(c, { path: '/', domain: domains[0] });\n        Cookies.remove(c, { path: '/', domain: domains[1] });\n        Cookies.remove(c);\n        if (new RegExp(c).test(document.cookie) && parent_path) {\n            Cookies.remove(c, { path: parent_path, domain: domains[0] });\n            Cookies.remove(c, { path: parent_path, domain: domains[1] });\n            Cookies.remove(c, { path: parent_path });\n        }\n    });\n};\n\nlet SessionStore,\n    LocalStore;\n\nif (isStorageSupported(window.localStorage)) {\n    LocalStore = new Store(window.localStorage);\n}\nif (isStorageSupported(window.sessionStorage)) {\n    SessionStore = new Store(window.sessionStorage);\n}\n\nif (!LocalStore) {\n    LocalStore = new InScriptStore();\n}\nif (!SessionStore) {\n    SessionStore = new InScriptStore();\n}\n\nmodule.exports = {\n    isStorageSupported,\n    CookieStorage,\n    removeCookies,\n    State,\n    SessionStore,\n    LocalStore,\n};\n","export const buildBarriersConfig = (contract, barriers = { count: contract.barriers }) => {\n    if (!contract.barriers) {\n        return undefined;\n    }\n\n    const obj_barrier = {};\n\n    ['barrier', 'low_barrier', 'high_barrier'].forEach((field) => {\n        if (field in contract) obj_barrier[field] = contract[field];\n    });\n\n    return Object.assign(barriers || {}, {\n        [contract.expiry_type]: obj_barrier,\n    });\n};\n","import ServerTime               from '_common/base/server_time';\nimport { localize }             from 'App/i18n';\nimport {\n    cloneObject,\n    getPropertyValue }          from '_common/utility';\nimport { WS }                   from 'Services';\nimport {\n    isTimeValid,\n    minDate,\n    toMoment }                  from 'Utils/Date';\nimport { buildBarriersConfig }  from './barrier';\nimport {\n    buildDurationConfig,\n    hasIntradayDurationUnit }   from './duration';\nimport {\n    buildForwardStartingConfig,\n    isSessionAvailable }        from './start-date';\nimport {\n    getContractCategoriesConfig,\n    getContractTypesConfig,\n    getLocalizedBasis }         from '../Constants/contract';\n\nconst ContractType = (() => {\n    let available_contract_types = {};\n    let available_categories     = {};\n    let contract_types;\n    const trading_times          = {};\n    let has_only_forward_starting_contracts = false;\n\n    const buildContractTypesConfig = (symbol) => WS.contractsFor(symbol).then(r => {\n        const has_contracts = getPropertyValue(r, ['contracts_for']);\n        has_only_forward_starting_contracts = has_contracts && !r.contracts_for.available.find((contract) => contract.start_type !== 'forward');\n        if (!has_contracts || has_only_forward_starting_contracts) return;\n        const contract_categories = getContractCategoriesConfig();\n        contract_types = getContractTypesConfig();\n\n        available_contract_types = {};\n        available_categories = cloneObject(contract_categories); // To preserve the order (will clean the extra items later in this function)\n\n        r.contracts_for.available.forEach((contract) => {\n            const type = Object.keys(contract_types).find(key => (\n                contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                (typeof contract_types[key].barrier_count === 'undefined' || +contract_types[key].barrier_count === contract.barriers) // To distinguish betweeen Rise/Fall & Higher/Lower\n            ));\n\n            if (!type) return; // ignore unsupported contract types\n\n            /*\n            add to this config if a value you are looking for does not exist yet\n            accordingly create a function to retrieve the value\n            config: {\n                has_spot: 1,\n                durations: {\n                    min_max: {\n                        spot: {\n                            tick    : { min: 5,     max: 10 },    // value in ticks, as cannot convert to seconds\n                            intraday: { min: 18000, max: 86400 }, // all values converted to seconds\n                            daily   : { min: 86400, max: 432000 },\n                        },\n                        forward: {\n                            intraday: { min: 18000, max: 86400 },\n                        },\n                    },\n                    units_display: {\n                        spot: [\n                            { text: 'ticks',   value: 't' },\n                            { text: 'seconds', value: 's' },\n                            { text: 'minutes', value: 'm' },\n                            { text: 'hours',   value: 'h' },\n                            { text: 'days',    value: 'd' },\n                        ],\n                        forward: [\n                            { text: 'days',    value: 'd' },\n                        ],\n                    },\n                },\n                forward_starting_dates: [\n                    { text: 'Mon - 19 Mar, 2018', value: 1517356800, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Tue - 20 Mar, 2018', value: 1517443200, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Wed - 21 Mar, 2018', value: 1517529600, sessions: [{ open: obj_moment, close: obj_moment }] },\n                ],\n                trade_types: {\n                    'CALL': 'Higher',\n                    'PUT' : 'Lower',\n                },\n                barriers: {\n                    count   : 2,\n                    tick    : { high_barrier: '+1.12', low_barrier : '-1.12' },\n                    intraday: { high_barrier: '+2.12', low_barrier : '-2.12' },\n                    daily   : { high_barrier: 1111,    low_barrier : 1093 },\n                },\n            }\n            */\n\n            if (!available_contract_types[type]) {\n                // extend contract_categories to include what is needed to create the contract list\n                const sub_cats = available_categories[Object.keys(available_categories)\n                    .find(key => available_categories[key].indexOf(type) !== -1)];\n\n                if (!sub_cats) return;\n\n                sub_cats[sub_cats.indexOf(type)] = { value: type, text: contract_types[type].title };\n\n                // populate available contract types\n                available_contract_types[type] = cloneObject(contract_types[type]);\n            }\n            const config = available_contract_types[type].config || {};\n\n            // set config values\n            config.has_spot               = config.has_spot || contract.start_type === 'spot';\n            config.durations              = buildDurationConfig(contract, config.durations);\n            config.trade_types            = buildTradeTypesConfig(contract, config.trade_types);\n            config.barriers               = buildBarriersConfig(contract, config.barriers);\n            config.forward_starting_dates = buildForwardStartingConfig(contract, config.forward_starting_dates);\n\n            available_contract_types[type].config = config;\n        });\n\n        // cleanup categories\n        Object.keys(available_categories).forEach((key) => {\n            available_categories[key] = available_categories[key].filter(item => typeof item === 'object');\n            if (available_categories[key].length === 0) {\n                delete available_categories[key];\n            }\n        });\n    });\n\n    const buildTradeTypesConfig = (contract, trade_types = {}) => {\n        trade_types[contract.contract_type] = contract.contract_display;\n        return trade_types;\n    };\n\n    const getArrayDefaultValue = (arr_new_values, value) => (\n        arr_new_values.indexOf(value) !== -1 ? value : arr_new_values[0]\n    );\n\n    const getContractValues = (store) => {\n        const { contract_expiry_type, contract_type, basis, duration_unit, start_date } = store;\n        const form_components   = getComponents(contract_type);\n        const obj_basis         = getBasis(contract_type, basis);\n        const obj_trade_types   = getTradeTypes(contract_type);\n        const obj_start_dates   = getStartDates(contract_type, start_date);\n        const obj_start_type    = getStartType(obj_start_dates.start_date);\n        const obj_barrier       = getBarriers(contract_type, contract_expiry_type);\n        const obj_duration_unit = getDurationUnit(duration_unit, contract_type, obj_start_type.contract_start_type);\n\n        const obj_duration_units_list    = getDurationUnitsList(contract_type, obj_start_type.contract_start_type);\n        const obj_duration_units_min_max = getDurationMinMax(contract_type, obj_start_type.contract_start_type);\n\n        return {\n            ...form_components,\n            ...obj_basis,\n            ...obj_trade_types,\n            ...obj_start_dates,\n            ...obj_start_type,\n            ...obj_barrier,\n            ...obj_duration_unit,\n            ...obj_duration_units_list,\n            ...obj_duration_units_min_max,\n        };\n    };\n\n    const getContractType = (list, contract_type) => {\n        const arr_list = Object.keys(list || {})\n            .reduce((k, l) => ([...k, ...list[l].map(ct => ct.value)]), []);\n        return {\n            contract_type: getArrayDefaultValue(arr_list, contract_type),\n        };\n    };\n\n    const getComponents = (c_type) => ({ form_components: ['duration', 'amount', ...contract_types[c_type].components] });\n\n    const getDurationUnitsList = (contract_type, contract_start_type) => ({\n        duration_units_list: getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [],\n    });\n\n    const getDurationUnit = (duration_unit, contract_type, contract_start_type) => {\n        const duration_units = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [];\n        const arr_units = [];\n        duration_units.forEach(obj => {\n            arr_units.push(obj.value);\n        });\n\n        return {\n            duration_unit: getArrayDefaultValue(arr_units, duration_unit),\n        };\n    };\n\n    const getDurationMinMax = (contract_type, contract_start_type, contract_expiry_type) => {\n        let duration_min_max = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'min_max', contract_start_type]) || {};\n\n        if (contract_expiry_type) {\n            duration_min_max = duration_min_max[contract_expiry_type] || {};\n        }\n\n        return { duration_min_max };\n    };\n\n    const getFullContractTypes = () => available_contract_types;\n\n    const getStartType = (start_date) => ({\n        // Number(0) refers to 'now'\n        contract_start_type: start_date === Number(0) ? 'spot' : 'forward',\n    });\n\n    const getStartDates = (contract_type, current_start_date) => {\n        const config           = getPropertyValue(available_contract_types, [contract_type, 'config']);\n        const start_dates_list = [];\n\n        if (config.has_spot) {\n            // Number(0) refers to 'now'\n            start_dates_list.push({ text: localize('Now'), value: Number(0) });\n        }\n        if (config.forward_starting_dates) {\n            start_dates_list.push(...config.forward_starting_dates);\n        }\n\n        const start_date = start_dates_list.find(item => item.value === current_start_date) ?\n            current_start_date : start_dates_list[0].value;\n\n        return { start_date, start_dates_list };\n    };\n\n    const getSessions = (contract_type, start_date) => {\n        const config   = getPropertyValue(available_contract_types, [contract_type, 'config']) || {};\n        const sessions =\n                  ((config.forward_starting_dates || []).find(option => option.value === start_date) || {}).sessions;\n        return { sessions };\n    };\n\n    const hours   = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const getValidTime = (sessions, compare_moment, start_moment) => {\n        if (sessions && !isSessionAvailable(sessions, compare_moment)) {\n            // first see if changing the minute brings it to the right session\n            compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            // if not, also change the hour\n            if (!isSessionAvailable(sessions, compare_moment)) {\n                compare_moment.minute(0);\n                compare_moment.hour(hours.find(h => isSessionAvailable(sessions, compare_moment.hour(h), start_moment, true)) || compare_moment.format('HH'));\n                compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            }\n        }\n        return compare_moment.format('HH:mm');\n    };\n\n    const buildMoment = (date, time) => {\n        const [ hour, minute ] = isTimeValid(time) ? time.split(':') : [0, 0];\n        return toMoment(date || ServerTime.get()).hour(hour).minute(minute);\n    };\n\n    const getStartTime = (sessions, start_date, start_time) => ({\n        start_time: start_date ? getValidTime(sessions, buildMoment(start_date, start_time)) : null,\n    });\n\n    const getTradingTimes = async (date, underlying = null) => {\n        if (!date) {\n            return [];\n        }\n\n        if (!(date in trading_times)) {\n            const trading_times_response = await WS.getTradingTimes(date);\n\n            if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n                for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                    const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                    if (submarkets) {\n                        for (let j = 0; j < submarkets.length; j++) {\n                            const symbols = submarkets[j].symbols;\n                            if (symbols) {\n                                for (let k = 0; k < symbols.length; k++) {\n                                    const symbol = symbols[k];\n                                    if (!trading_times[trading_times_response.echo_req.trading_times]) {\n                                        trading_times[trading_times_response.echo_req.trading_times] = {};\n                                    }\n                                    trading_times[trading_times_response.echo_req.trading_times][symbol.symbol] = {\n                                        'open' : symbol.times.open,\n                                        'close': symbol.times.close,\n                                    };\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return underlying ? trading_times[date][underlying] : trading_times[date];\n    };\n\n    const getExpiryType = (duration_units_list, expiry_type) => {\n        if (duration_units_list && duration_units_list.length === 1 && duration_units_list[0].value === 't') {\n            return { expiry_type: 'duration' };\n        }\n\n        return { expiry_type };\n    };\n\n    const getExpiryDate = (duration_units_list, expiry_date, expiry_type, start_date) => {\n        let proper_expiry_date = null;\n\n        if (expiry_type === 'endtime') {\n            const moment_start  = toMoment(start_date);\n            const moment_expiry = toMoment(expiry_date);\n\n            if (!hasIntradayDurationUnit(duration_units_list)) {\n                const is_invalid = moment_expiry.isSameOrBefore(moment_start, 'day');\n                proper_expiry_date = (is_invalid ? moment_start.clone().add(1, 'day') : moment_expiry).format('YYYY-MM-DD');\n            } else {\n                // forward starting contracts should only show today and tomorrow as expiry date\n                const is_invalid =\n                    moment_expiry.isBefore(moment_start, 'day') || (start_date && moment_expiry.isAfter(moment_start.clone().add(1, 'day')));\n                proper_expiry_date = (is_invalid ? moment_start : moment_expiry).format('YYYY-MM-DD');\n            }\n        }\n\n        return { expiry_date: proper_expiry_date };\n    };\n\n    // It has to follow the correct order of checks:\n    // first check if end time is within available sessions\n    // then confirm that end time is at least 5 minute after start time\n    const getExpiryTime = (\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    ) => {\n        let end_time = null;\n\n        if (expiry_type === 'endtime') {\n            let market_close_time = '23:59:59';\n\n            if (market_close_times && market_close_times.length && market_close_times[0] !== '--') {\n                // Some of underlyings (e.g. Australian Index) have two close time during a day so we always select the further one as the end time of the contract.\n                market_close_time = market_close_times.slice(-1)[0];\n            }\n\n            // For contracts with a duration of more that 24 hours must set the expiry_time to the market's close time on the expiry date.\n            if (!start_date && ServerTime.get().isBefore(buildMoment(expiry_date), 'day')) {\n                end_time = market_close_time;\n            } else {\n                const start_moment = start_date ? buildMoment(start_date, start_time) : ServerTime.get();\n                const end_moment   = buildMoment(expiry_date, expiry_time);\n\n                end_time = end_moment.format('HH:mm');\n                // When the contract is forwarding, and the duration is endtime, users can purchase the contract within 24 hours.\n                const expiry_sessions = [{\n                    open : start_moment.clone().add(5, 'minute'), // expiry time should be at least 5 minute after start_time\n                    close: minDate(start_moment.clone().add(24, 'hour'), buildMoment(expiry_date, market_close_time)),\n                }];\n\n                if (!isSessionAvailable(expiry_sessions, end_moment)) {\n                    end_time = getValidTime(expiry_sessions, end_moment.clone(), start_moment.clone());\n                }\n                if (end_moment.isSameOrBefore(start_moment) || end_moment.diff(start_moment, 'minute') < 5) {\n                    const is_end_of_day     = start_moment.get('hours') === 23 && start_moment.get('minute') >= 55;\n                    const is_end_of_session = sessions && !isSessionAvailable(sessions, start_moment.clone().add(5, 'minutes'));\n                    end_time = start_moment.clone().add((is_end_of_day || is_end_of_session) ? 0 : 5, 'minutes');\n                    // Set the end_time to be multiple of 5 to be equal as the SELECTED_TIME that shown to the client.\n                    end_time = setMinuteMultipleByFive(end_time).format('HH:mm');\n                }\n                // Set the expiry_time to 5 minute less than start_time for forwading contracts when the expiry_time is null and the expiry_date is tomorrow.\n                if (end_time === '00:00' && start_moment.isBefore(end_moment, 'day')) {\n                    end_time = start_moment.clone().subtract(5, 'minute').format('HH:mm');\n                }\n            }\n        }\n        return { expiry_time: end_time };\n    };\n\n    const setMinuteMultipleByFive = (moment_obj) => (\n        moment_obj.minute((Math.ceil(moment_obj.minute() / 5) * 5))\n    );\n\n    const getTradeTypes = (contract_type) => ({\n        trade_types: getPropertyValue(available_contract_types, [contract_type, 'config', 'trade_types']),\n    });\n\n    const getBarriers = (contract_type, expiry_type) => {\n        const barriers       = getPropertyValue(available_contract_types, [contract_type, 'config', 'barriers']) || {};\n        const barrier_values = barriers[expiry_type] || {};\n        const barrier_1      = barrier_values.barrier || barrier_values.high_barrier || '';\n        const barrier_2      = barrier_values.low_barrier || '';\n        return {\n            barrier_count: barriers.count || 0,\n            barrier_1    : barrier_1.toString(),\n            barrier_2    : barrier_2.toString(),\n        };\n    };\n\n    const getBasis = (contract_type, basis) => {\n        const arr_basis  = getPropertyValue(available_contract_types, [contract_type, 'basis']) || {};\n        const localized_basis = getLocalizedBasis();\n        const basis_list = arr_basis.reduce((cur, bas) => (\n            [...cur, { text: localized_basis[bas], value: bas }]\n        ), []);\n\n        return {\n            basis_list,\n            basis: getArrayDefaultValue(arr_basis, basis),\n        };\n    };\n\n    return {\n        buildContractTypesConfig,\n        getBarriers,\n        getContractType,\n        getContractValues,\n        getDurationMinMax,\n        getDurationUnit,\n        getDurationUnitsList,\n        getFullContractTypes,\n        getExpiryDate,\n        getExpiryTime,\n        getExpiryType,\n        getSessions,\n        getStartTime,\n        getStartType,\n        getTradingTimes,\n        getContractCategories: () => ({\n            contract_types_list: available_categories,\n            has_only_forward_starting_contracts,\n        }),\n    };\n})();\n\nexport default ContractType;\n","import React                      from 'react';\nimport PropTypes                  from 'prop-types';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport Icon                       from 'Assets/icon.jsx';\n\nconst ContractTypeCell = ({ type, is_high_low }) => (\n    <div className='contract-type'>\n        <div className='contract-type__type-wrapper'>\n            <Icon\n                icon='IconTradeType'\n                type={(is_high_low) ? `${type.toLowerCase()}_barrier` : type.toLowerCase()}\n                className='category-type'\n            />\n        </div>\n        <span className='contract-type__type-label'>\n            {getContractTypeDisplay(type, is_high_low) || ''}\n        </span>\n    </div>\n);\n\nContractTypeCell.propTypes = {\n    type: PropTypes.string,\n};\n\nexport default ContractTypeCell;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Icon         from 'Assets/icon.jsx';\nimport { localize } from 'App/i18n';\n\nconst FooterIcon = (use_icon) => use_icon || 'IconCalendarToday';\n\nconst CalendarFooter = ({\n    footer,\n    has_today_btn,\n    has_range_selection,\n    duration_date,\n    is_minimum,\n    onClick,\n    use_icon,\n}) => (\n    <React.Fragment>\n        { (has_today_btn || footer || has_range_selection) &&\n            <div className='calendar__footer'>\n                { footer && <span className='calendar__text'>{footer}</span>}\n                { has_range_selection && <span className='calendar__text'>{ `${!is_minimum ? localize('Duration: ') : ''}${duration_date}` }</span> }\n                { has_today_btn &&\n                    <Icon\n                        icon={FooterIcon(use_icon)}\n                        className='calendar__icon'\n                        onClick={onClick}\n                    />\n                }\n            </div>\n        }\n    </React.Fragment>\n);\n\nCalendarFooter.propTypes = {\n    duration_date      : PropTypes.string,\n    footer             : PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    has_today_btn      : PropTypes.bool,\n    is_minimum         : PropTypes.bool,\n    onClick            : PropTypes.func,\n    use_icon           : PropTypes.string,\n};\n\nexport default CalendarFooter;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst Highlight = ({ left, width }) => {\n    const border_radius_size = '4px';\n    const left_offset        = (left < 110) ? 0 : left;\n    const width_offset       = (width < 110) ? 111 : width;\n    const highlight_style = {\n        width                    : width_offset,\n        left                     : 0,\n        transform                : `translate3d(${left_offset}px, 0, 0)`,\n        'borderTopLeftRadius'    : (left_offset === 0) ? border_radius_size : 0,\n        'borderTopRightRadius'   : (left_offset === 0) ? 0 : border_radius_size ,\n        'borderBottomLeftRadius' : (left_offset === 0) ? border_radius_size  : 0,\n        'borderBottomRightRadius': (left_offset === 0) ? 0 : border_radius_size ,\n    };\n\n    return (\n        <span style={highlight_style} className='button-menu--highlight' />\n    );\n};\n\nHighlight.propTypes = {\n    left : PropTypes.number,\n    width: PropTypes.number,\n};\n\nexport { Highlight };\n","import classnames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { Highlight } from './button-highlight.jsx';\n\nclass HighlightWrapper extends React.PureComponent {\n    state = {\n        left : 0,\n        width: 0,\n    }\n\n    componentDidMount() {\n        const active_button_el = [...this.node.getElementsByClassName('button-menu__button--active')][0];\n        if (!this.node) return;\n        this.updateHighlightPosition(active_button_el);\n    }\n\n    componentDidUpdate() {\n        const active_button_el = [...this.node.getElementsByClassName('button-menu__button--active')][0];\n        if (active_button_el) {\n            this.updateHighlightPosition(active_button_el);\n        } else if (this.state.left !== 0 || this.state.width !== 0) {\n            this.resetHighlight(); // clear highlight when active element doesn't exist\n        }\n    }\n\n    componentWillUnMount() {\n        this.resetHighlight();\n    }\n\n    onClick = (e, buttonClick) => {\n        if (!e.target) return;\n        this.updateHighlightPosition(e.target.closest('button'));\n        if (typeof buttonClick  === 'function') {\n            buttonClick();\n        }\n    };\n\n    resetHighlight = () => {\n        this.setState({\n            left : 0,\n            width: 0,\n        });\n    };\n\n    updateHighlightPosition = (el) => {\n        if (!el) return;\n        const { offsetLeft: left, offsetWidth: width } = el;\n        if (this.state.width !== width) {\n            this.setState({ width });\n        }\n        if (this.state.left !== left) {\n            this.setState({ left });\n        }\n    };\n\n    render() {\n        const { className, ...other_props } = this.props;\n        const props = {\n            className: classnames('button-menu__wrapper', className),\n            ...other_props,\n        };\n\n        return (\n            <div ref={(node) => this.node = node} {...props}>\n                {\n                    React.Children.map(this.props.children, child => (\n                        React.cloneElement(child, {\n                            onClick: (e) => this.onClick(e, child.props.onClick),\n                        })\n                    ))\n                }\n                <Highlight left={this.state.left} width={this.state.width} />\n            </div>\n        );\n    }\n}\n\nHighlightWrapper.propTypes = {\n    children : PropTypes.array,\n    className: PropTypes.string,\n    timeout  : PropTypes.number,\n};\n\nexport default HighlightWrapper;\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport Button           from 'deriv-components/lib/button';\nimport HighlightWrapper from './button-highlight-wrapper.jsx';\n\nconst ButtonToggleMenu = ({\n    buttons_arr,\n    id,\n    is_animated,\n    name,\n    onChange,\n    value,\n}) => {\n    const changeValue = (selected_value) => {\n        if (value === selected_value) return;\n        onChange({ target: { value: selected_value, name } });\n    };\n    const menu = buttons_arr.map((val, idx) => {\n        const className = classNames('button-menu__button', {\n            'button-menu__button--active': val.value === value,\n        });\n        return (\n            <Button\n                id={`dt_${val.value}_toggle_item`}\n                key={idx}\n                text={`${val.text.charAt(0).toUpperCase()}${val.text.slice(1)}`}\n                onClick={() => changeValue(val.value)}\n                className={className}\n            />\n        );\n    });\n    return (\n        <div id={id} className='button-menu'>\n            {is_animated ?\n                <HighlightWrapper>\n                    {menu}\n                </HighlightWrapper>\n                :\n                <React.Fragment>\n                    {menu}\n                </React.Fragment>\n            }\n        </div>\n    );\n};\n\nButtonToggleMenu.propTypes = {\n    buttons_arr: PropTypes.array,\n    id         : PropTypes.string,\n    is_animated: PropTypes.bool,\n    name       : PropTypes.string,\n    onChange   : PropTypes.func,\n    value      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default ButtonToggleMenu;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { Popover }         from 'App/Components/Elements/Popover';\nimport { getCurrencyName } from '_common/base/currency_base';\n\nconst Items = ({\n    index,\n    handleSelect,\n    has_symbol,\n    items,\n    name,\n    value,\n}) =>  items.map((item, idx) => {\n    const symbol_type_class_name = item.text ? `symbols--${(item.text).toLowerCase()}` : '';\n    return (\n        <div\n            id={`dt_duration_${item.value}_item`}\n            className={classNames(\n                'list__item',\n                { 'list__item--highlighted': idx === index },\n                { 'list__item--selected': value === item.value },\n                { 'list__item--disabled': item.disabled }\n            )}\n            name={name}\n            value={item.value}\n            onClick={item.disabled ? null : handleSelect.bind(null, item)}\n            key={idx}\n        >\n            {!!has_symbol && item.has_tooltip &&\n                <Popover\n                    alignment='left'\n                    message={getCurrencyName(item.value)}\n                >\n                    <span\n                        className={classNames(\n                            'symbols',\n                            'list__item-symbol',\n                            symbol_type_class_name\n                        )}\n                    />\n                </Popover>\n            }\n\n            {!!has_symbol && !item.has_tooltip &&\n                <span\n                    className={classNames(\n                        'symbols',\n                        'list__item-text',\n                        symbol_type_class_name,\n                    )}\n                />\n            }\n\n            {!has_symbol &&\n                <span className='list__item-text'>{item.text}</span>\n            }\n        </div>\n    );\n});\n\nItems.propTypes = {\n    handleSelect: PropTypes.func,\n    has_symbol  : PropTypes.bool,\n    name        : PropTypes.string,\n    value       : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Items;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst NativeSelect = ({\n    name,\n    list,\n    value,\n    onChange,\n}) => (\n    <div className='native-select native-select__wrapper'>\n        <select className='select native-select__select' name={name} value={value} onChange={onChange}>\n            {Array.isArray(list) ?\n                list.map((item, idx) => (\n                    <option key={idx} value={item.value}>{item.text}</option>\n                ))\n                :\n                Object.keys(list).map(key => (\n                    <React.Fragment key={key}>\n                        <optgroup label={key}>\n                            {list[key].map((item, idx) => (\n                                <option key={idx} value={item.value}>{item.text}</option>\n                            ))}\n                        </optgroup>\n                    </React.Fragment>\n                ))}\n        </select>\n    </div>\n);\n\nNativeSelect.propTypes = {\n    list: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.array,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default NativeSelect;\n","import { isArrayLike } from 'mobx';\n\nexport const getDisplayText = (list, value) => {\n    const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n    let text = '';\n    if (isArrayLike(list)) {\n        text = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            text = findInArray(list[key]);\n            return text;\n        });\n    }\n    return text;\n};\n\nexport const getItemFromValue = (list, value) => {\n    const findInArray = (arr_list) => arr_list.findIndex(item => item.value === value);\n    let item = {};\n    if (isArrayLike(list)) {\n        item = { number: findInArray(list), length: list.length };\n    } else {\n        Object.keys(list).some(key => {\n            item = { number: findInArray(list[key]), length: list[key].length };\n            return item;\n        });\n    }\n    return item;\n};\n\nexport const getValueFromIndex = (list, index) => {\n    const findInArray = (arr_list) => arr_list[index];\n    let result;\n    if (isArrayLike(list)) {\n        result = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            result = findInArray(list[key]);\n            return result.value;\n        });\n    }\n    return result.value;\n};\n\nexport const getPrevIndex = (index, length) => {\n    const prev_index = (index - 1) < 0 ? (length - 1) : index - 1;\n    return prev_index;\n};\n\nexport const getNextIndex = (index, length) => {\n    const next_index = (index + 1) === length ? 0 : index + 1;\n    return next_index;\n};\n","import classNames        from 'classnames';\nimport { isArrayLike }   from 'mobx';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Scrollbars }    from 'tt-react-custom-scrollbars';\nimport Icon              from 'Assets/icon.jsx';\nimport Items             from './items.jsx';\nimport NativeSelect      from './native-select.jsx';\nimport {\n    getDisplayText,\n    getItemFromValue,\n    getValueFromIndex,\n    getPrevIndex,\n    getNextIndex }       from './helpers';\n\nclass Dropdown extends React.PureComponent {\n    list_ref = React.createRef();\n    state = {\n        curr_index     : getItemFromValue(this.props.list, this.props.value).number,\n        is_list_visible: false,\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    }\n\n    setWrapperRef = (node) => this.wrapper_ref = node;\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_list_visible) {\n            this.setState({ is_list_visible: false });\n        }\n    }\n\n    handleVisibility = () => {\n        this.setState((state) =>({  is_list_visible: !state.is_list_visible }));\n    }\n\n    onKeyPressed = (event) => {\n        if (this.is_single_option) return;\n        if (event.keyCode === 9) { // Tab is pressed\n            if (this.state.is_list_visible) {\n                this.handleVisibility();\n            }\n            return;\n        }\n        event.preventDefault();\n        const index = getItemFromValue(this.props.list, this.props.value);\n        const value = getValueFromIndex(this.props.list, this.state.curr_index);\n        const handleToggle = () => {\n            if (this.state.is_list_visible && this.props.value !== value) {\n                this.props.onChange({ target: { name: this.props.name, value } });\n            }\n            this.handleVisibility();\n        };\n        switch (event.keyCode) {\n            case 13: // Enter is pressed\n            case 32: // Space is pressed\n                handleToggle();\n                break;\n            case 38: // Up Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const prev_index = getPrevIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: prev_index });\n                }\n                break;\n            case 40: // Down Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const next_index = getNextIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: next_index });\n                } else if (!this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            case 37: // Left arrow is pressed\n                if (!this.state.is_list_visible && this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            case 39: // Right Arrow is pressed\n                if (this.state.is_list_visible && this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            default:\n        }\n\n        // For char presses, we do a search for the item:\n        if (event.key.length === 1) {\n            const char = event.key.toLowerCase();\n            const firstChars = this.props.list.map(x => x.text[0].toLowerCase());\n            let idx;\n            // Tapping the same character again jumps to the next match:\n            if (this.state.curr_index) {\n                idx = firstChars.indexOf(char, this.state.curr_index + 1);\n            }\n            if (idx === undefined || idx === -1) {\n                idx = firstChars.indexOf(char);\n            }\n            if (idx >= 0) {\n                this.setState({ curr_index: idx });\n            }\n        }\n    }\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <NativeSelect\n                    name={this.props.name}\n                    value={this.props.value}\n                    list={this.props.list}\n                    onChange={this.props.onChange}\n                />\n            );\n        }\n\n        // we are calculating the offset for the dropdown list based on it's width here\n        const left_alignment_style = {\n            transform: `translate3d(calc(-${this.state.list_width}px - 12px), 0, 0px)`,\n        };\n\n        // upon render via css transition group, we use this as a callback to set the width of the dropdown list in the state\n        const setListWidth = () => this.setState({ list_width: this.list_ref.current.offsetWidth });\n\n        const is_single_option = isArrayLike(this.props.list) ?\n            !!(this.props.list.length < 2)\n            :\n            !!(Object.keys(this.props.list).length < 2);\n\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={classNames('dropdown-container', this.props.className, {\n                    'dropdown--left'    : this.props.is_alignment_left,\n                    'dropdown--show'    : this.state.is_list_visible,\n                    'dropdown--disabled': is_single_option,\n                })}\n            >\n                <div\n                    id={`dt_${this.props.id}_dropdown_display`}\n                    className={classNames('dropdown__display', this.props.classNameDisplay, {\n                        'dropdown__display--clicked'   : this.state.is_list_visible,\n                        'dropdown__display--has-symbol': this.props.has_symbol,\n                    })}\n                    tabIndex={is_single_option ? '-1' : '0'}\n                    onClick={this.handleVisibility}\n                    onKeyDown={this.onKeyPressed}\n                >\n                    {this.props.has_symbol &&\n                    <span name={this.props.name} value={this.props.value} className={`symbols dropdown__display-symbol symbols--${(this.props.value || '').toLowerCase()}`} />\n                    }\n                    {!this.props.has_symbol &&\n                    <span name={this.props.name} value={this.props.value} className='dropdown__display-text'>\n                        {getDisplayText(this.props.list, this.props.value)}\n                    </span>\n                    }\n                </div>\n                {\n                    !is_single_option && <Icon\n                        icon='IconArrow'\n                        className={classNames('dropdown__select-arrow', {\n                            'dropdown__select-arrow--left': this.props.is_alignment_left,\n                        })}\n                    />\n                }\n                <CSSTransition\n                    in={this.state.is_list_visible}\n                    timeout={100}\n                    classNames={{\n                        enter    : `dropdown__list--enter ${this.props.is_alignment_left ? 'dropdown__list--left--enter' : ''}`,\n                        enterDone: `dropdown__list--enter-done ${this.props.is_alignment_left ? 'dropdown__list--left--enter-done' : ''}`,\n                        exit     : `dropdown__list--exit ${this.props.is_alignment_left ? 'dropdown__list--left--exit' : ''}`,\n                    }}\n                    onEntered={setListWidth}\n                    unmountOnExit\n                >\n                    <div className={classNames('dropdown__list', {\n                        'dropdown__list--left': this.props.is_alignment_left,\n                    })}\n                    >\n                        <div\n                            id={`dt_${this.props.id}_dropdown_list`}\n                            className={classNames('list', {\n                                'list--left': this.props.is_alignment_left,\n                            })}\n                            ref={this.list_ref}\n                            style={this.props.is_alignment_left ? left_alignment_style : undefined}\n                        >\n                            <Scrollbars\n                                autoHeight\n                                autoHide\n                                autoHeightMax={200}\n                                renderTrackHorizontal={props => <div {...props} className='track-horizontal' style={{ display: 'none' }} />}\n                                renderThumbHorizontal={props => <div {...props} className='thumb-horizontal' style={{ display: 'none' }} />}\n                            >\n                                {isArrayLike(this.props.list) ?\n                                    <Items\n                                        index={this.state.curr_index}\n                                        handleSelect={this.handleSelect}\n                                        has_symbol={this.props.has_symbol}\n                                        items={this.props.list}\n                                        name={this.props.name}\n                                        value={this.props.value}\n                                    /> :\n                                    Object.keys(this.props.list).map(key => (\n                                        <React.Fragment key={key}>\n                                            <div className='list__label'>{key}</div>\n                                            <Items\n                                                index={this.state.curr_index}\n                                                handleSelect={this.handleSelect}\n                                                has_symbol={this.props.has_symbol}\n                                                items={this.props.list[key]}\n                                                name={this.props.name}\n                                                value={this.props.value}\n                                            />\n                                        </React.Fragment>\n                                    ))\n                                }\n                            </Scrollbars>\n                        </div>\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nDropdown.propTypes = {\n    className        : PropTypes.string,\n    classNameDisplay : PropTypes.string,\n    has_symbol       : PropTypes.bool,\n    id               : PropTypes.string,\n    is_alignment_left: PropTypes.bool,\n    is_nativepicker  : PropTypes.bool,\n    list             : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Dropdown;\n","import { getPropertyValue } from '_common/utility';\nimport ContractType         from './contract-type';\n\nexport const hasCallPutEqual = (contract_type_list) => {\n    if (!contract_type_list) return false;\n\n    return getPropertyValue(contract_type_list, 'Up/Down')\n        .some(contract => contract.value === 'rise_fall_equal');\n};\n\nexport const hasDurationForCallPutEqual = (contract_type_list, duration_unit, contract_start_type) => {\n    if (!contract_type_list || !duration_unit || !contract_start_type) return false;\n\n    const contract_list = Object.keys(contract_type_list || {})\n        .reduce((key, list) => ([...key, ...contract_type_list[list].map(contract => contract.value)]), []);\n\n    const contract_duration_list = contract_list\n        .map(list => ({ [list]: getPropertyValue(ContractType.getFullContractTypes(), [list, 'config', 'durations', 'units_display', contract_start_type]) }));\n\n    // Check whether rise fall equal is exists and has the current store duration unit\n    return hasCallPutEqual(contract_type_list) ? contract_duration_list\n        .filter(contract => contract.rise_fall_equal)[0].rise_fall_equal\n        .some(duration => duration.value === duration_unit) : false;\n};\n\nexport const isRiseFallEqual = (contract_type) => /^(rise_fall|rise_fall_equal)$/.test(contract_type);\n","import React                    from 'react';\nimport PropTypes                from 'prop-types';\nimport { localize }             from 'App/i18n';\nimport { Popover }              from 'App/Components/Elements/Popover';\nimport InputField               from 'App/Components/Form/InputField';\nimport {\n    hasCallPutEqual,\n    hasDurationForCallPutEqual,\n    isRiseFallEqual }           from 'Stores/Modules/Trading/Helpers/allow-equals';\n\nconst AllowEquals = ({\n    contract_start_type,\n    contract_type,\n    contract_types_list,\n    duration_unit,\n    expiry_type,\n    onChange,\n    value,\n}) => {\n    const has_callputequal_duration = hasDurationForCallPutEqual(contract_types_list,\n        duration_unit, contract_start_type);\n    const has_callputequal          = hasCallPutEqual(contract_types_list);\n\n    const has_allow_equals = isRiseFallEqual(contract_type) &&\n            ((has_callputequal_duration || expiry_type === 'endtime') && has_callputequal);\n\n    const changeValue = (e) => {\n        const { name, checked } = e.target;\n        onChange({ target: { name, value: Number(checked) } });\n    };\n\n    return (\n        has_allow_equals &&\n            <div className='allow-equals'>\n                <InputField\n                    className='allow-equals__input-field'\n                    classNameInput='allow-equals__input trade-container__input'\n                    checked={value}\n                    id='dt_allow_equals_input'\n                    name='is_equal'\n                    onChange={changeValue}\n                    type='checkbox'\n                    value={value}\n                />\n                <label className='allow-equals__label' htmlFor='allow_equals'>{localize('Allow equals')}</label>\n                <Popover\n                    alignment='left'\n                    classNameTarget='allow-equals__tooltip'\n                    icon='info'\n                    id='dt_allow_equals_info'\n                    message={localize('Win payout if exit spot is also equal to entry spot.')}\n                    margin={113}\n                />\n            </div>\n    );\n};\n\nAllowEquals.propTypes = {\n    contract_start_type: PropTypes.string,\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    duration_unit      : PropTypes.string,\n    expiry_type        : PropTypes.string,\n    onChange           : PropTypes.func,\n    value              : PropTypes.number,\n};\n\nexport default AllowEquals;\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport {\n    addComma,\n    getDecimalPlaces }                from '_common/base/currency_base';\nimport ButtonToggleMenu               from 'App/Components/Form/ButtonToggleMenu';\nimport Dropdown                       from 'App/Components/Form/DropDown';\nimport Fieldset                       from 'App/Components/Form/fieldset.jsx';\nimport InputField                     from 'App/Components/Form/InputField';\nimport { connect }                    from 'Stores/connect';\nimport AllowEquals                    from './allow-equals.jsx';\n\nconst Amount = ({\n    amount,\n    basis,\n    basis_list,\n    contract_start_type,\n    contract_type,\n    contract_types_list,\n    currencies_list,\n    currency,\n    duration_unit,\n    expiry_type,\n    is_equal,\n    is_minimized,\n    is_nativepicker,\n    is_single_currency,\n    onChange,\n    validation_errors,\n}) => {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized fieldset-minimized__amount'>\n                <span className='fieldset-minimized__basis'>{(basis_list.find(o => o.value === basis) || {}).text}</span>\n                &nbsp;\n                <i><span className={classNames('fieldset-minimized__currency', 'symbols', { [`symbols--${(currency || '').toLowerCase()}`]: currency })} /></i>\n                {addComma(amount, 2)}\n            </div>\n        );\n    }\n\n    const input =\n        <InputField\n            className='trade-container__amount'\n            classNameInlinePrefix='trade-container__currency'\n            classNameInput='trade-container__input'\n            currency={currency}\n            error_messages={validation_errors.amount}\n            fractional_digits={getDecimalPlaces(currency)}\n            id='dt_amount_input'\n            inline_prefix={is_single_currency ? currency : null}\n            is_autocomplete_disabled\n            is_float\n            is_hj_whitelisted\n            is_incrementable\n            is_nativepicker={is_nativepicker}\n            is_negative_disabled\n            max_length={10}\n            name='amount'\n            onChange={onChange}\n            type='tel'\n            value={amount}\n        />;\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            <ButtonToggleMenu\n                id='dt_amount_toggle'\n                buttons_arr={basis_list}\n                className='dropdown--no-margin'\n                is_animated={true}\n                name='basis'\n                onChange={onChange}\n                value={basis}\n            />\n            {!is_single_currency ?\n                <div className='trade-container__currency-options'>\n                    <Dropdown\n                        id='amount'\n                        className={classNames({ 'trade-container__currency-options-dropdown': !is_single_currency })}\n                        classNameDisplay='trade-container__currency-options--display'\n                        has_symbol\n                        is_alignment_left\n                        is_nativepicker={false}\n                        list={currencies_list}\n                        name='currency'\n                        value={currency}\n                        onChange={onChange}\n                    />\n                    {input}\n                </div>\n                :\n                input\n            }\n            <AllowEquals\n                contract_start_type={contract_start_type}\n                contract_type={contract_type}\n                contract_types_list={contract_types_list}\n                duration_unit={duration_unit}\n                expiry_type={expiry_type}\n                onChange={onChange}\n                value={parseInt(is_equal)}\n            />\n        </Fieldset>\n    );\n};\n\nAmount.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    basis              : PropTypes.string,\n    basis_list         : MobxPropTypes.arrayOrObservableArray,\n    contract_start_type: PropTypes.string,\n    contract_type      : PropTypes.string,\n    contract_types_list: MobxPropTypes.observableObject,\n    currencies_list    : MobxPropTypes.observableObject,\n    currency           : PropTypes.string,\n    duration_unit      : PropTypes.string,\n    expiry_type        : PropTypes.string,\n    is_equal           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    is_minimized      : PropTypes.bool,\n    is_nativepicker   : PropTypes.bool,\n    is_single_currency: PropTypes.bool,\n    onChange          : PropTypes.func,\n    validation_errors : PropTypes.object,\n};\n\nexport default connect(({ modules, client }) => ({\n    amount             : modules.trade.amount,\n    basis              : modules.trade.basis,\n    basis_list         : modules.trade.basis_list,\n    contract_start_type: modules.trade.contract_start_type,\n    contract_type      : modules.trade.contract_type,\n    contract_types_list: modules.trade.contract_types_list,\n    currencies_list    : client.currencies_list,\n    currency           : modules.trade.currency,\n    duration_unit      : modules.trade.duration_unit,\n    expiry_type        : modules.trade.expiry_type,\n    is_equal           : modules.trade.is_equal,\n    is_single_currency : client.is_single_currency,\n    onChange           : modules.trade.onChange,\n    validation_errors  : modules.trade.validation_errors,\n}))(Amount);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Icon         from 'Assets/icon.jsx';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\nimport InputField   from 'App/Components/Form/InputField';\nimport { connect }  from 'Stores/connect';\nimport { localize } from 'App/i18n';\n\nconst Barrier = ({\n    barrier_1,\n    barrier_2,\n    barrier_count,\n    is_minimized,\n    onChange,\n    validation_errors,\n}) =>  {\n    const barrier_title = barrier_count === 1 ? localize('Barrier') : localize('Barriers');\n\n    if (is_minimized) {\n        return barrier_count !== 2 ? (\n            <div className='fieldset-minimized fieldset-minimized__barrier1'>\n                {barrier_1}\n            </div>\n        ) : (\n            <React.Fragment>\n                <div className='fieldset-minimized fieldset-minimized__barrier1'>\n                    {barrier_1}\n                </div>\n                <div className='fieldset-minimized fieldset-minimized__barrier2'>\n                    {barrier_2}\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    const input_class = barrier_count === 2 ? 'multiple' : 'single';\n    return (\n        <Fieldset\n            className='trade-container__fieldset trade-container__barriers'\n            header={barrier_title}\n            is_center\n        >\n            <div>\n                <InputField\n                    id='dt_barrier_1_input'\n                    type='number'\n                    name='barrier_1'\n                    value={barrier_1}\n                    className={`trade-container__barriers-${input_class}`}\n                    classNameInput={classNames('trade-container__input', 'trade-container__barriers-input', `trade-container__barriers-${input_class}-input`)}\n                    onChange={onChange}\n                    error_messages={validation_errors.barrier_1 || []}\n                    is_float\n                    is_signed\n                />\n\n                {barrier_count === 2 &&\n                    <React.Fragment>\n                        <InputField\n                            id='dt_barrier_2_input'\n                            type='number'\n                            name='barrier_2'\n                            value={barrier_2}\n                            className='multiple'\n                            classNameInput='trade-container__input'\n                            onChange={onChange}\n                            error_messages={validation_errors.barrier_2}\n                            is_float\n                            is_signed\n                        />\n                        <Icon icon='IconBarrierUp'   className='trade-container__barriers--up' />\n                        <Icon icon='IconBarrierDown' className='trade-container__barriers--down' />\n                    </React.Fragment>\n                }\n            </div>\n        </Fieldset>\n    );\n};\n\nBarrier.propTypes = {\n    barrier_1        : PropTypes.string,\n    barrier_2        : PropTypes.string,\n    barrier_count    : PropTypes.number,\n    is_minimized     : PropTypes.bool,\n    onChange         : PropTypes.func,\n    validation_errors: PropTypes.object,\n};\n\nexport default connect(({ modules }) => (\n    {\n        barrier_1        : modules.trade.barrier_1,\n        barrier_2        : modules.trade.barrier_2,\n        barrier_count    : modules.trade.barrier_count,\n        onChange         : modules.trade.onChange,\n        validation_errors: modules.trade.validation_errors,\n    }\n))(Barrier);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst TickSteps = ({\n    hover_value,\n    max_value,\n    min_value,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    value,\n}) => {\n    const arr_ticks = [...Array((max_value - min_value) + 1).keys()];\n\n    const isActive = (idx) => (idx + min_value) === value;\n    const isMarked = (idx) => (idx + min_value) < value;\n    const isMarkedOnHover = (idx) => (isMarked(idx)) ? false : (idx + min_value) <= hover_value;\n\n    return (\n        <React.Fragment>\n            {arr_ticks.map(idx =>\n                <span\n                    key={idx}\n                    className={classNames('range-slider__ticks-step', {\n                        'range-slider__ticks-step--active'      : isActive(idx),\n                        'range-slider__ticks-step--marked'      : isMarked(idx),\n                        'range-slider__ticks-step--marked-hover': isMarkedOnHover(idx),\n                    })}\n                    onClick={() => onClick(idx + min_value)}\n                    onMouseEnter={() => onMouseEnter(idx + min_value)}\n                    onMouseLeave={onMouseLeave}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nTickSteps.propTypes = {\n    hover_value : PropTypes.number,\n    max_value   : PropTypes.number,\n    min_value   : PropTypes.number,\n    onClick     : PropTypes.func,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    value       : PropTypes.number,\n};\n\nexport default TickSteps;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from 'App/i18n';\nimport TickSteps    from './tick-steps.jsx';\n\nclass RangeSlider extends React.PureComponent {\n    state = {\n        hover_value: 0,\n    }\n\n    handleChange = (e) => {\n        // e.target.value returns string, we need to convert them to number\n        const value = +e.target.value;\n        if (value !== this.props.value) {\n            this.resetOnHover();\n            this.props.onChange({ target: { name: this.props.name, value } });\n        }\n    };\n\n    handleClick = (index) => {\n        if (index !== this.props.value) {\n            this.resetOnHover();\n            this.props.onChange({ target: { name: this.props.name, value: index } });\n        }\n    };\n\n    onMouseEnter = (index) => {\n        if (index) {\n            this.setState({ hover_value: index });\n            this.rangeSliderTrack.style.width = this.getRangeSliderTrackWidth(index, true);\n        }\n    };\n\n    onMouseLeave = (e) => {\n        const { offsetX, offsetY } = e.nativeEvent;\n        if (offsetY <= -3 || offsetY >= 3 || offsetX < -3 || offsetX > 3) {\n            this.resetOnHover();\n        }\n    };\n\n    getRangeSliderTrackWidth = (value, is_hover) => {\n        const width = (value - this.props.min_value) * (10 / (this.props.max_value - this.props.min_value));\n        return `${(width * 2) + (is_hover ? 0.8 : 1.4)}em`;\n    };\n\n    resetOnHover = () => {\n        if (this.state.hover_value) {\n            this.setState({ hover_value: 0 });\n            this.rangeSliderTrack.style.width = 0;\n        }\n    };\n\n    render() {\n        const {\n            className,\n            max_value,\n            min_value,\n            name,\n            value,\n        } = this.props;\n\n        const display_value = this.state.hover_value || value;\n        return (\n            <div className={classNames('range-slider', className, { 'range-slider__error': ((value < min_value) || (value > max_value)) })}>\n                <label className='range-slider__label' htmlFor='range'>\n                    <input\n                        className='input trade-container__input range-slider__track'\n                        id='dt_duration_range_input'\n                        max={max_value}\n                        max_value={max_value}\n                        min={min_value}\n                        min_value={min_value}\n                        name={name}\n                        onChange={this.handleChange}\n                        tabIndex='0'\n                        type='range'\n                        steps={max_value - min_value}\n                        value={value}\n                    />\n                    {/* this element to be placed before <TickSteps /> to prevent overlapping colors */}\n                    <span\n                        ref={node => this.rangeSliderTrack = node}\n                        className='range-slider__line range-slider__line--fill'\n                        onMouseLeave={this.onMouseLeave}\n                    />\n                    <div className='range-slider__ticks'>\n                        <TickSteps\n                            hover_value={this.state.hover_value}\n                            max_value={max_value}\n                            min_value={min_value}\n                            onClick={this.handleClick}\n                            onMouseLeave={this.onMouseLeave}\n                            onMouseEnter={this.onMouseEnter}\n                            value={value}\n                        />\n                    </div>\n                    {/* Calculate line width based on active value and size of range thumb */}\n                    <div\n                        className='range-slider__line'\n                        style={{ width: `${this.getRangeSliderTrackWidth(value)}` }}\n                    />\n                </label>\n                <div className='range-slider__caption'>\n                    {\n                        !!display_value &&\n                        <span id='dt_range_slider_label' className='range-slider__caption-title'>\n                            {display_value === 1 && localize('{{display_value}} Tick', { display_value })}\n                            {display_value > 1 && localize('{{display_value}} Ticks', { display_value })}\n                        </span>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n// Keypress events do not trigger on Safari due to the way it handles input type='range' elements, using focus on the input element also doesn't work for Safari.\n\nRangeSlider.propTypes = {\n    className: PropTypes.string,\n    max_value: PropTypes.number,\n    min_value: PropTypes.number,\n    name     : PropTypes.string,\n    onChange : PropTypes.func,\n    value    : PropTypes.number,\n};\n\nexport default RangeSlider;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React, { Fragment } from 'react';\nimport Icon                from 'Assets/icon.jsx';\n\nconst DurationToggle = ({\n    name,\n    onChange,\n    value,\n}) => {\n    const toggle = () => {\n        onChange({ target: { value: !value, name } });\n    };\n    const icon_className = classNames(\n        'advanced-simple-toggle__icon',\n        'select-arrow',\n        { 'advanced-simple-toggle__icon--active': value },\n    );\n    return (\n        <Fragment>\n            <button id={value ? 'dt_advanced_toggle' : 'dt_simple_toggle'} className='advanced-simple-toggle' onClick={toggle}>\n                <Icon icon='IconArrow' className={icon_className} classNamePath={'advanced-simple-toggle__icon-path'} />\n            </button>\n        </Fragment>);\n};\n\nDurationToggle.propTypes = {\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.bool,\n};\n\nexport default DurationToggle;\n","\nimport { WS }               from 'Services';\nimport { getPropertyValue } from '_common/utility';\n\nconst trading_events = {};\nexport const getTradingEvents = async (date, underlying = null) => {\n    if (!date) {\n        return [];\n    }\n\n    if (!(date in trading_events)) {\n        const trading_times_response = await WS.getTradingTimes(date);\n\n        if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n            for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                if (submarkets) {\n                    for (let j = 0; j < submarkets.length; j++) {\n                        const symbols = submarkets[j].symbols;\n                        if (symbols) {\n                            for (let k = 0; k < symbols.length; k++) {\n                                const symbol = symbols[k];\n                                if (!trading_events[trading_times_response.echo_req.trading_times]) {\n                                    trading_events[trading_times_response.echo_req.trading_times] = {};\n                                }\n                                trading_events[trading_times_response.echo_req.trading_times][symbol.symbol] =\n                                    symbol.events;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return trading_events[date][underlying];\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    getStartOfMonth,\n    toMoment }        from 'Utils/Date';\nimport { localize }   from 'App/i18n';\nimport CalendarBody   from './calendar-body.jsx';\nimport CalendarFooter from './calendar-footer.jsx';\nimport CalendarHeader from './calendar-header.jsx';\n\nclass Calendar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        const { date_format, start_date, value } = props;\n        const current_date = toMoment(value || start_date).format(date_format);\n        this.state = {\n            calendar_date: current_date, // calendar date reference\n            selected_date: value,        // selected date\n            calendar_view: 'date',\n            hovered_date : '',\n            duration_date: '',\n        };\n    }\n\n    switchView = (view) => {\n        this.setState({ calendar_view: view });\n    };\n\n    navigateTo = (new_date) => {\n        this.setState({\n            calendar_date: toMoment(new_date).format(this.props.date_format),\n        }, () => {\n            if (this.props.onChangeCalendarMonth) {\n                const start_of_month = getStartOfMonth(new_date);\n                this.props.onChangeCalendarMonth(start_of_month);\n            }\n        });\n    };\n\n    onMouseOver = (event) => {\n        const target = event.currentTarget;\n\n        if (!target.classList.contains('calendar__cell--disabled') && !target.classList.contains('calendar__cell--hover')) {\n            target.className += ' calendar__cell--hover';\n            this.setState({\n                hovered_date : target.getAttribute('data-date'),\n                duration_date: target.getAttribute('data-duration'),\n            });\n        }\n    };\n\n    onMouseLeave = (event) => {\n        const target = event.currentTarget;\n\n        if (target.classList.contains('calendar__cell--hover')) {\n            target.classList.remove('calendar__cell--hover');\n\n            this.setState({\n                hovered_date : null,\n                duration_date: null,\n            });\n        }\n    };\n\n    updateSelectedDate = (e) => {\n        const { date_format, max_date, min_date, onSelect } = this.props;\n\n        const moment_date = toMoment(e.target.dataset.date).startOf('day');\n        const is_before   = moment_date.isBefore(toMoment(min_date));\n        const is_after    = moment_date.isAfter(toMoment(max_date));\n\n        if (is_before || is_after) {\n            return;\n        }\n\n        const formatted_date = moment_date.format(date_format);\n        this.setState({\n            calendar_date: formatted_date,\n            selected_date: formatted_date,\n        });\n\n        if (onSelect) {\n            onSelect(formatted_date);\n        }\n    };\n\n    updateSelected = (e, type) => {\n        if (e) e.stopPropagation();\n\n        if (type === 'day') {\n            this.updateSelectedDate(e);\n            return;\n        }\n\n        const view_map = {\n            month : 'date',\n            year  : 'month',\n            decade: 'year',\n        };\n        const date = toMoment(this.state.calendar_date)[type === 'decade' ? 'year' : type](e.target.dataset[type].split('-')[0]).format(this.props.date_format);\n\n        if (this.isPeriodDisabled(date, type)) return;\n\n        this.setState({\n            calendar_date: date,\n            calendar_view: view_map[type],\n        }, () => {\n            if (this.props.onChangeCalendarMonth) {\n                const start_of_month = getStartOfMonth(date);\n                this.props.onChangeCalendarMonth(start_of_month);\n            }\n        });\n    };\n\n    resetCalendar = () => {\n        const { date_format, start_date } = this.props;\n\n        const default_date = toMoment(start_date).format(date_format);\n        this.setState({\n            calendar_date: default_date,\n            selected_date: '',\n            calendar_view: 'date',\n        });\n    };\n\n    setToday = () => {\n        const { date_format, onSelect } = this.props;\n\n        const now = toMoment().format(date_format);\n        this.setState({\n            calendar_date: now,\n            selected_date: now,\n            calendar_view: 'date',\n        });\n\n        if (onSelect) {\n            onSelect(now, true);\n        }\n    };\n\n    isPeriodDisabled = (date, unit) => {\n        const { max_date, min_date } = this.props;\n\n        const start_of_period = toMoment(date).clone().startOf(unit);\n        const end_of_period   = toMoment(date).clone().endOf(unit);\n        return end_of_period.isBefore(toMoment(min_date))\n            || start_of_period.isAfter(toMoment(max_date));\n    };\n\n    render() {\n        const { date_format, duration_date, footer, has_today_btn, has_range_selection,\n            holidays, start_date, weekends } = this.props;\n        const { calendar_date, calendar_view, selected_date  } = this.state;\n        let default_message, is_minimum;\n\n        if (duration_date) {\n            default_message = `${duration_date} ${duration_date === 1 ? localize('Day') : localize('Days')}`;\n            is_minimum = false;\n        } else {\n            default_message = localize('Minimum duration is 1 day');\n            is_minimum = true;\n        }\n        \n        return (\n            <div className='calendar' data-value={selected_date}>\n                <CalendarHeader\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    navigateTo={this.navigateTo}\n                    switchView={this.switchView}\n                />\n                <CalendarBody\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    date_format={date_format}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    start_date={start_date}\n                    selected_date={selected_date}\n                    updateSelected={this.updateSelected}\n                    holidays={holidays}\n                    has_range_selection={has_range_selection}\n                    hovered_date={this.state.hovered_date}\n                    weekends={weekends}\n                    onMouseOver={this.onMouseOver}\n                    onMouseLeave={this.onMouseLeave}\n                />\n                <CalendarFooter\n                    footer={footer}\n                    duration_date={this.state.duration_date || default_message}\n                    is_minimum={is_minimum}\n                    has_today_btn={has_today_btn}\n                    has_range_selection={has_range_selection}\n                    onClick={this.setToday}\n                />\n            </div>\n        );\n    }\n}\n\nCalendar.defaultProps = {\n    date_format: 'YYYY-MM-DD',\n    min_date   : toMoment(0).format('YYYY-MM-DD'),               // by default, min_date is set to Unix Epoch (January 1st 1970)\n    max_date   : toMoment().add(120, 'y').format('YYYY-MM-DD'), // by default, max_date is set to 120 years after today\n};\n\nCalendar.propTypes = {\n    date_format  : PropTypes.string,\n    duration_date: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    footer             : PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    has_today_btn      : PropTypes.bool,\n    holidays           : PropTypes.arrayOf(\n        PropTypes.shape({\n            dates  : PropTypes.array,\n            descrip: PropTypes.string,\n        }),\n    ),\n    max_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onChangeCalendarMonth: PropTypes.func,\n    onSelect             : PropTypes.func,\n    start_date           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    value   : PropTypes.string,\n    weekends: PropTypes.arrayOf(PropTypes.number),\n};\n\nexport default Calendar;\n","import classNames           from 'classnames';\nimport { observer }         from 'mobx-react';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { CSSTransition }    from 'react-transition-group';\nimport Icon                 from 'Assets/icon.jsx';\nimport InputField           from 'App/Components/Form/InputField';\nimport {\n    addDays,\n    daysFromTodayTo,\n    formatDate,\n    getStartOfMonth,\n    isDateValid,\n    toMoment }              from 'Utils/Date';\nimport { localize }         from 'App/i18n';\nimport { getTradingEvents } from './helpers';\nimport Calendar             from '../../Elements/Calendar';\n\nclass DatePicker extends React.Component {\n    state = {\n        date_value           : '',\n        holidays             : [],\n        is_datepicker_visible: false,\n        is_clear_btn_visible : false,\n        value                : this.props.value,\n        weekends             : [],\n    };\n\n    is_mounted = false;\n\n    componentDidMount() {\n        this.is_mounted = true;\n\n        document.addEventListener('click', this.onClickOutside, true);\n        const { mode, value } = this.props;\n        const initial_value = mode === 'duration' ? formatDate(addDays(toMoment(), value || 1), 'DD MMM YYYY') : formatDate(value, 'DD MMM YYYY');\n\n        this.updateDatePickerValue(initial_value);\n\n        if (this.props.disable_trading_events) {\n            this.onChangeCalendarMonth(getStartOfMonth(this.state.value));\n        }\n    }\n\n    componentWillUnmount() {\n        this.is_mounted = false;\n        document.removeEventListener('click', this.onClickOutside, true);\n    }\n\n    handleVisibility = () => {\n        this.setState(state => ({ is_datepicker_visible: !state.is_datepicker_visible }));\n    };\n\n    onClickOutside = (e) => {\n        if (/purchase_/ig.test(e.target.id)) {\n            return;\n        }\n        if (!this.mainNode.contains(e.target) && this.state.is_datepicker_visible) {\n            this.setState({ is_datepicker_visible: false });\n            if (!!this.state.value && this.props.mode !== 'duration') {\n                this.updateDatePickerValue(formatDate(this.state.value, 'DD MMM YYYY'));\n            }\n        }\n    };\n\n    onMouseEnter = () => {\n        if (this.state.value && (('is_clearable' in this.props) || this.props.is_clearable)) {\n            this.setState({ is_clear_btn_visible: true });\n        }\n    };\n\n    onMouseLeave = () => {\n        this.setState({ is_clear_btn_visible: false });\n    };\n\n    onSelectCalendar = (selected_date, is_datepicker_visible = true) => {\n        let value = selected_date;\n        if (!isDateValid(value)) { value = ''; }\n\n        if (this.props.mode === 'duration') {\n            this.updateDatePickerValue(value);\n        } else {\n            this.updateDatePickerValue(formatDate(value, 'DD MMM YYYY'));\n        }\n        this.setState({ is_datepicker_visible });\n    };\n\n    onChangeInput = (e) => {\n        const value = e.target.value;\n        const formatted_value = formatDate(addDays(toMoment(), value), 'DD MMM YYYY');\n        this.updateDatePickerValue(formatted_value);\n        this.props.onChange(e);\n    };\n\n    clearDatePickerInput = () => {\n        this.setState({ value: null }, this.updateStore);\n        if (this.calendar) {\n            this.calendar.resetCalendar();\n        }\n    };\n\n    // TODO: handle cases where user inputs date before min_date and date after max_date\n    updateDatePickerValue = (value) => {\n        const { date_format, mode, start_date } = this.props;\n        this.setState({ value }, this.updateStore);\n\n        if (mode === 'duration') {\n            const new_value      = daysFromTodayTo(value);\n            const new_date_value = formatDate(value, 'DD MMM YYYY');\n            this.setState({ value: new_value, date_value: new_date_value }, this.updateStore);\n        }\n\n        // update Calendar\n        const new_date = (mode === 'duration') ? formatDate(value, 'DD MMM YYYY') : value;\n        if (this.calendar && (isDateValid(new_date) || !new_date)) {\n            if (!new_date) {\n                const current_date = formatDate(start_date, date_format);\n                this.calendar.setState({\n                    calendar_date: current_date,\n                    selected_date: current_date,\n                });\n            } else {\n                this.calendar.setState({\n                    calendar_date: formatDate(new_date),\n                    selected_date: formatDate(new_date),\n                });\n            }\n        }\n    };\n\n    // update MobX store\n    updateStore = () => {\n        const { name, onChange } = this.props;\n        if (onChange) {\n            onChange({ target: { name, value: this.state.value } });\n        }\n    };\n\n    async onChangeCalendarMonth(calendar_date) {\n        const trading_events = await getTradingEvents(calendar_date, this.props.underlying);\n        const holidays = [];\n        let weekends   = [];\n        trading_events.forEach(events => {\n            const dates = events.dates.split(', '); // convert dates str into array\n            const idx = dates.indexOf('Fridays');\n            if (idx !== -1) {\n                weekends = [6, 0]; // Sat, Sun\n            }\n            holidays.push({\n                dates,\n                descrip: events.descrip,\n            });\n        });\n\n        if (this.is_mounted) {\n            this.setState({\n                holidays,\n                weekends,\n            });\n        }\n    }\n\n    renderInputField = () => {\n        const { is_read_only, mode, name, label, error_messages } = this.props;\n        let { placeholder } = this.props;\n        let value, type, onChange;\n\n        switch (mode) {\n            case 'duration':\n                onChange = this.onChangeInput;\n                type = 'text';\n                value = this.state.value;\n                break;\n            default:\n                placeholder = placeholder || localize('Select a date');\n                type = 'text';\n                value = formatDate(this.props.value, 'DD MMM YYYY');\n        }\n\n        return (\n            <InputField\n                className='datepicker__input-field'\n                classNameInput='datepicker__input trade-container__input'\n                data-tip={false}\n                data-value={this.state.value}\n                error_messages={error_messages}\n                id={`dt_${name}_input`}\n                is_autocomplete_disabled={true}\n                is_hj_whitelisted\n                label={label}\n                is_read_only={is_read_only}\n                name={name}\n                onChange={onChange}\n                onClick={this.handleVisibility}\n                placeholder={placeholder}\n                type={type}\n                value={value}\n            />\n        );\n    };\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <div ref={node => { this.mainNode = node; }} className='datepicker'>\n                    <input\n                        id={this.props.name}\n                        name={this.props.name}\n                        className='input trade-container__input datepicker__input'\n                        type='date'\n                        value={this.state.value}\n                        min={this.props.min_date}\n                        max={this.props.max_date}\n                        onChange={(e) => {\n                            // fix for ios issue: clear button doesn't work\n                            // https://github.com/facebook/react/issues/8938\n                            const target = e.nativeEvent.target;\n                            function iosClearDefault() { target.defaultValue = ''; }\n                            window.setTimeout(iosClearDefault, 0);\n\n                            this.onSelectCalendar(e.target.value);\n                        }}\n                    />\n                    <label className='datepicker__native-overlay' htmlFor={this.props.name}>\n                        {this.state.value || this.props.placeholder}\n                        <Icon icon='IconArrow' className='datepicker__arrowhead' />\n                    </label>\n                </div>\n            );\n        }\n\n        return (\n            <div\n                id={this.props.id}\n                ref={node => { this.mainNode = node; }}\n                className='datepicker'\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}\n            >\n                { this.renderInputField() }\n                <Icon\n                    icon='IconCalendar'\n                    className={classNames('datepicker__icon datepicker__icon--calendar', {\n                        'datepicker__icon--is-hidden' : this.state.is_clear_btn_visible,\n                        'datepicker__icon--with-label': this.props.label,\n                    })}\n                    onClick={this.handleVisibility}\n                />\n                {this.props.is_clearable &&\n                    <Icon\n                        icon='IconClear'\n                        className={classNames('datepicker__icon datepicker__icon--clear', {\n                            'datepicker__icon--is-hidden': !this.state.is_clear_btn_visible,\n                        })}\n                        onClick={this.state.is_clear_btn_visible ? this.clearDatePickerInput : undefined}\n                    />\n                }\n                <CSSTransition\n                    in={this.state.is_datepicker_visible}\n                    timeout={100}\n                    classNames={{\n                        enter    : `datepicker__picker--enter datepicker__picker--${this.props.alignment}-enter`,\n                        enterDone: `datepicker__picker--enter-done datepicker__picker--${this.props.alignment}-enter-done`,\n                        exit     : `datepicker__picker--exit datepicker__picker--${this.props.alignment}-exit`,\n                    }}\n                    unmountOnExit\n                >\n                    <div\n                        className={classNames('datepicker__picker', {\n                            'datepicker__picker--left': this.props.alignment === 'left',\n                        })}\n                    >\n                        <Calendar\n                            ref={node => { this.calendar = node; }}\n                            onSelect={this.onSelectCalendar}\n                            onChangeCalendarMonth={this.props.disable_trading_events ?\n                                this.onChangeCalendarMonth.bind(this) : undefined}\n                            holidays={this.state.holidays}\n                            weekends={this.state.weekends}\n                            duration_date={this.state.value}\n                            date_format={this.props.date_format}\n                            has_today_btn={this.props.has_today_btn}\n                            has_range_selection={this.props.has_range_selection}\n                            footer={this.props.footer}\n                            max_date={this.props.max_date}\n                            min_date={this.props.min_date}\n                            start_date={this.props.start_date}\n                            value={this.props.mode === 'duration' ? this.state.date_value : this.props.value}\n                        />\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nDatePicker.defaultProps = {\n    date_format: Calendar.defaultProps.date_format,\n    mode       : 'date',\n};\n\nDatePicker.propTypes = {\n    ...Calendar.propTypes,\n    error_messages: PropTypes.array,\n    label         : PropTypes.string,\n};\n\nexport default observer(DatePicker);\n","import PropTypes                      from 'prop-types';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport React                          from 'react';\nimport DatePicker                     from 'App/Components/Form/DatePicker';\nimport { connect }                    from 'Stores/connect';\nimport { hasIntradayDurationUnit }    from 'Stores/Modules/Trading/Helpers/duration';\nimport {\n    isTimeValid,\n    setTime,\n    toMoment }                        from 'Utils/Date';\n\nconst TradingDatePicker = ({\n    duration_d,\n    duration_min_max,\n    duration_units_list,\n    expiry_date,\n    expiry_type,\n    is_24_hours_contract,\n    mode,\n    name,\n    onChange,\n    server_time,\n    start_time,\n    start_date,\n    symbol,\n    validation_errors,\n}) => {\n    let max_date_duration,\n        min_date_expiry,\n        has_today_btn,\n        is_read_only;\n    const has_intraday_unit = hasIntradayDurationUnit(duration_units_list);\n    const min_duration = has_intraday_unit ? toMoment(server_time).clone() : toMoment(server_time).clone().add(duration_min_max.daily.min, 'second');\n    const moment_contract_start_date_time =\n        setTime(toMoment(min_duration), (isTimeValid(start_time) ? start_time : server_time.format('HH:mm:ss')));\n\n    const max_daily_duration   = duration_min_max.daily ? duration_min_max.daily.max : 365 * 24 * 3600;\n    const is_duration_contract = expiry_type === 'duration';\n\n    if (is_24_hours_contract) {\n        min_date_expiry   = moment_contract_start_date_time.clone().startOf('day');\n        max_date_duration = moment_contract_start_date_time.clone().add(\n            start_date ? 24 * 3600 : (max_daily_duration), 'second');\n    } else {\n        min_date_expiry   = moment_contract_start_date_time.clone().startOf('day');\n        max_date_duration = moment_contract_start_date_time.clone().add(max_daily_duration, 'second');\n    }\n    if (is_duration_contract) {\n        if (has_intraday_unit) {\n            min_date_expiry.add(1, 'day');\n        }\n        has_today_btn = false;\n        is_read_only = false;\n    } else {\n        has_today_btn = true;\n        is_read_only = true;\n    }\n\n    const error_messages = is_duration_contract ? validation_errors.duration : validation_errors.expiry_date;\n    const date_value = is_duration_contract ? (duration_d || '').toString() : expiry_date;\n\n    return (\n        <DatePicker\n            alignment='left'\n            disable_year_selector\n            disable_trading_events\n            error_messages={error_messages || []}\n            has_today_btn={has_today_btn}\n            has_range_selection={mode === 'duration'}\n            is_nativepicker={false}\n            is_read_only={is_read_only}\n            label={duration_units_list.length === 1 ? duration_units_list[0].text : null}\n            mode={mode}\n            name={name}\n            onChange={onChange}\n            min_date={min_date_expiry}\n            max_date={max_date_duration}\n            start_date={start_date}\n            underlying={symbol}\n            value={date_value}\n        />\n    );\n};\n\nTradingDatePicker.propTypes = {\n    duration: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    duration_min_max   : PropTypes.object,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_type         : PropTypes.string,\n    is_24_hours_contract: PropTypes.bool,\n    mode                : PropTypes.string,\n    name                : PropTypes.string,\n    onChange            : PropTypes.func,\n    server_time         : PropTypes.object,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    symbol           : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, common, ui }) => ({\n        duration_min_max   : modules.trade.duration_min_max,\n        duration_units_list: modules.trade.duration_units_list,\n        expiry_date        : modules.trade.expiry_date,\n        expiry_type        : modules.trade.expiry_type,\n        onChange           : modules.trade.onChange,\n        server_time        : common.server_time,\n        start_date         : modules.trade.start_date,\n        start_time         : modules.trade.start_time,\n        symbol             : modules.trade.symbol,\n        validation_errors  : modules.trade.validation_errors,\n        duration_d         : ui.duration_d,\n    })\n)(TradingDatePicker);\n","import PropTypes    from 'prop-types';\nimport classNames   from 'classnames';\nimport React        from 'react';\nimport { localize } from 'App/i18n';\nimport { toMoment } from 'Utils/Date';\n\nconst Dialog = ({\n    preClass,\n    selected_time,\n    end_time,\n    start_time,\n    onChange,\n    className,\n}) => {\n    const start_time_moment     = start_time\n        ? toMoment(start_time)\n        : toMoment();\n    const end_time_moment       = end_time\n        ? toMoment(end_time)\n        : toMoment().hour('23').minute('59').seconds('59').milliseconds('999');\n    const to_compare_moment     = toMoment();\n    const [ hour, minute ]      = selected_time.split(':');\n    const hours    = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes  = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const selectOption = (type, current_value, prev_value, is_enabled = true) => {\n        if (is_enabled && prev_value) {\n            const [ prev_hour, prev_minute ] = prev_value.split(':');\n            if ((type === 'h' && current_value !== prev_hour) || (type === 'm' && current_value !== prev_minute)) {\n                onChange(`${type === 'h' ? current_value : prev_hour}:${type === 'm' ? current_value : prev_minute}`);\n            }\n        }\n    };\n\n    return (\n        <div className={classNames(`${preClass}__dialog`, `${className}`)}>\n            <div className={`${preClass}__selector`}>\n                <div className={`${preClass}__selector--hours`}>\n                    <div className={classNames(`${preClass}__selector-list-title`, 'center-text')}><strong>{localize('Hour')}</strong></div>\n                    <div>\n                        {hours.map((h, key) => {\n                            to_compare_moment.hour(h);\n                            const start_time_reset_minute = start_time_moment.clone().minute(0);\n                            const is_hour_enabled = to_compare_moment.isBetween(\n                                start_time_reset_minute,\n                                end_time_moment);\n                            const is_minute_enabled = to_compare_moment.isBetween(\n                                start_time_moment,\n                                end_time_moment,\n                                'minute');\n                            // The minute number after which the last block/interval of `Minutes` selection will be disabled\n                            const last_interval_of_hour = 52;\n                            const is_enabled = to_compare_moment.minutes() > last_interval_of_hour\n                                ? is_hour_enabled && is_minute_enabled\n                                : is_hour_enabled;\n                            return (\n                                <div\n                                    className={classNames(`${preClass}__selector-list-item`,\n                                        { [`${preClass}__selector-list-item--selected`]: (hour === h) },\n                                        { [`${preClass}__selector-list-item--disabled`]: !is_enabled })}\n                                    key={key}\n                                    onClick={() => { selectOption('h', h, selected_time, is_enabled); }}\n                                >\n                                    {h}\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n                <div className={`${preClass}__selector--minutes`}>\n                    <div className={classNames(`${preClass}__selector-list-title`, 'center-text')}><strong>{localize('Minute')}</strong></div>\n                    <div>\n                        {minutes.map((mm, key) => {\n                            to_compare_moment.hour(hour).minute(mm);\n                            const is_enabled = to_compare_moment.isBetween(start_time_moment, end_time_moment, 'minute');\n                            return (\n                                <div\n                                    className={classNames(`${preClass}__selector-list-item`,\n                                        { [`${preClass}__selector-list-item--selected`]: (minute === mm) },\n                                        { [`${preClass}__selector-list-item--disabled`]: !is_enabled })}\n                                    key={key}\n                                    onClick={() => { selectOption('m', mm, selected_time, is_enabled); }}\n                                >\n                                    {mm}\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDialog.propTypes = {\n    className: PropTypes.string,\n    end_time : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    onChange     : PropTypes.func,\n    preClass     : PropTypes.string,\n    selected_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    start_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n};\n\nexport default Dialog;\n","import classNames        from 'classnames';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport Icon              from 'Assets/icon.jsx';\nimport Dialog            from './dialog.jsx';\nimport InputField        from '../InputField';\n\nclass TimePicker extends React.Component {\n    state = { is_open: false };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    toggleDropDown = () => {\n        this.setState((state) => ({ is_open: !state.is_open }));\n    };\n\n    handleChange = (arg) => {\n        // To handle nativepicker;\n        const value = typeof arg === 'object' ? arg.target.selected_time : arg;\n\n        if (value !== this.props.selected_time) {\n            this.props.onChange({ target: { name: this.props.name, value } });\n        }\n    };\n\n    saveRef = (node) => {\n        if (!node) return;\n        if (node.nodeName === 'INPUT') {\n            this.target_element = node;\n            return;\n        }\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)) {\n            if (this.state.is_open) {\n                this.setState({ is_open: false });\n            }\n        }\n    };\n\n    render() {\n        const prefix_class = 'time-picker';\n        const {\n            selected_time,\n            name,\n            is_nativepicker,\n            placeholder,\n            end_time,\n            start_time,\n            validation_errors,\n        } = this.props;\n        return (\n            <div\n                ref={this.saveRef}\n                className={classNames(prefix_class,\n                    { [`${prefix_class}--padding`]: this.props.padding })}\n            >\n                {\n                    is_nativepicker\n                        ? <input\n                            type='time'\n                            id={`dt_${name}_input`}\n                            value={selected_time}\n                            onChange={this.handleChange}\n                            name={name}\n                            min={start_time}\n                            max={end_time}\n                        />\n                        : (\n                            <React.Fragment>\n                                <InputField\n                                    error_messages={validation_errors}\n                                    type='text'\n                                    is_hj_whitelisted\n                                    is_read_only\n                                    id={`dt_${name}_input`}\n                                    className={classNames(`${prefix_class}-input`)}\n                                    value={`${selected_time} GMT`}\n                                    onClick={this.toggleDropDown}\n                                    name={name}\n                                    placeholder={placeholder}\n                                />\n                                <Icon icon='IconClock' className={`${prefix_class}__icon`} />\n                                <CSSTransition\n                                    in={ this.state.is_open }\n                                    classNames={{\n                                        enter    : 'time-picker__dialog--enter',\n                                        enterDone: 'time-picker__dialog--enter-done',\n                                        exit     : 'time-picker__dialog--exit',\n                                    }}\n                                    timeout={100}\n                                    unmountOnExit\n                                >\n                                    <Dialog\n                                        end_time={end_time}\n                                        start_time={start_time}\n                                        className={'from-left'}\n                                        onChange={this.handleChange}\n                                        preClass={prefix_class}\n                                        selected_time={selected_time}\n                                    />\n                                </CSSTransition>\n                            </React.Fragment>\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nTimePicker.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    is_clearable   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    padding        : PropTypes.string,\n    placeholder    : PropTypes.string,\n    selected_time  : PropTypes.string,\n    start_time     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n};\n\nexport default observer(TimePicker);\n","const getClosestTime = (\n    time,\n    interval,\n) => time.minute((Math.ceil(time.minute() / interval) * interval));\n\nexport const getSelectedTime = (\n    server_time,\n    selected_time,\n    market_open_time,\n) => {\n    if (selected_time.isAfter(market_open_time)) {\n        return getClosestTime(selected_time, 5).format('HH:mm');\n    }\n    if (market_open_time.isAfter(server_time)) {\n        return getClosestTime(market_open_time, 5).format('HH:mm');\n    }\n\n    return getClosestTime(server_time, 5).format('HH:mm');\n};\n\nexport const getBoundaries = (\n    server_time,\n    market_open_time,\n    market_close_time,\n) => {\n    const boundaries = {\n        start: server_time.isBefore(market_open_time)\n            ? market_open_time\n            : server_time,\n        end: market_close_time,\n    };\n\n    boundaries.start = getClosestTime(boundaries.start, 5);\n    return boundaries;\n};\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport {\n    setTime,\n    toMoment }     from 'Utils/Date';\nimport TimePicker  from 'App/Components/Form/TimePicker';\nimport {\n    getSelectedTime,\n    getBoundaries } from 'Stores/Modules/Trading/Helpers/end-time';\n\nconst TradingTimePicker = ({\n    expiry_date,\n    expiry_time,\n    market_close_times,\n    market_open_times,\n    onChange,\n    server_time,\n}) => {\n    const moment_expiry_date = toMoment(expiry_date);\n    const market_open_datetime = setTime(moment_expiry_date.clone(), market_open_times.slice(-1)[0]);\n    const market_close_datetime = setTime(moment_expiry_date.clone(), market_close_times.slice(-1)[0]);\n    const expiry_datetime = setTime(moment_expiry_date.clone(), expiry_time);\n    const server_datetime = toMoment(server_time);\n\n    const boundaries = getBoundaries(\n        server_datetime.clone(),\n        market_open_datetime.clone(),\n        market_close_datetime);\n    const selected_time = getSelectedTime(\n        server_datetime.clone(),\n        expiry_datetime,\n        market_open_datetime);\n    return (\n        <TimePicker\n            end_time={boundaries.end}\n            onChange={onChange}\n            name='expiry_time'\n            placeholder='12:00'\n            start_time={boundaries.start}\n            selected_time={selected_time}\n        />\n    );\n};\n\nTradingTimePicker.propTypes = {\n    expiry_date: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time       : PropTypes.string,\n    market_close_times: PropTypes.array,\n    name              : PropTypes.string,\n    onChange          : PropTypes.func,\n    server_time       : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, common }) => ({\n        duration_units_list: modules.trade.duration_units_list,\n        expiry_time        : modules.trade.expiry_time,\n        expiry_date        : modules.trade.expiry_date,\n        market_close_times : modules.trade.market_close_times,\n        market_open_times  : modules.trade.market_open_times,\n        onChange           : modules.trade.onChange,\n        server_time        : common.server_time,\n    })\n)(TradingTimePicker);\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport Dropdown                       from 'App/Components/Form/DropDown';\nimport ButtonToggleMenu               from 'App/Components/Form/ButtonToggleMenu';\nimport InputField                     from 'App/Components/Form/InputField';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { connect }                    from 'Stores/connect';\nimport { hasIntradayDurationUnit }    from 'Stores/Modules/Trading/Helpers/duration';\nimport { toMoment }                   from 'Utils/Date';\nimport TradingDatePicker              from '../../DatePicker';\nimport TradingTimePicker              from '../../TimePicker';\n\nconst AdvancedDuration = ({\n    advanced_duration_unit,\n    advanced_expiry_type,\n    duration_units_list,\n    duration_t,\n    changeDurationUnit,\n    getDurationFromUnit,\n    expiry_date,\n    expiry_list,\n    expiry_type,\n    number_input_props,\n    onChange,\n    onChangeUiStore,\n    server_time,\n    shared_input_props,\n    start_date,\n    validation_errors,\n}) => {\n    let is_24_hours_contract = false;\n\n    if (expiry_type === 'endtime') {\n        const has_intraday_duration_unit = hasIntradayDurationUnit(duration_units_list);\n        is_24_hours_contract = (!!start_date || toMoment(expiry_date || server_time).isSame(toMoment(server_time), 'day')) && has_intraday_duration_unit;\n    }\n\n    const endtime_container_class = classNames('endtime-container', {\n        'has-time': is_24_hours_contract,\n    });\n\n    const changeExpiry = ({ target }) => {\n        const { name, value } = target;\n\n        onChange({ target: { name: 'expiry_type', value } });\n        onChangeUiStore({ name, value });\n    };\n\n    return (\n        <Fragment>\n            { expiry_list.length > 1 &&\n                <ButtonToggleMenu\n                    id='dt_advanced_duration_toggle'\n                    buttons_arr={expiry_list}\n                    name='advanced_expiry_type'\n                    is_animated={true}\n                    onChange={changeExpiry}\n                    value={advanced_expiry_type}\n                />\n            }\n            { expiry_type === 'duration' ?\n                <Fragment>\n                    <div className='duration-container'>\n                        { duration_units_list.length > 1 &&\n                            <Dropdown\n                                id='duration'\n                                is_alignment_left\n                                is_nativepicker={false}\n                                list={duration_units_list}\n                                name='advanced_duration_unit'\n                                onChange={changeDurationUnit}\n                                value={advanced_duration_unit}\n                            />\n                        }\n                        { advanced_duration_unit === 't' &&\n                            <RangeSlider\n                                name='duration'\n                                ticks={10}\n                                value={duration_t}\n                                {...shared_input_props}\n                            />\n                        }\n                        { advanced_duration_unit === 'd' &&\n                            <TradingDatePicker\n                                mode='duration'\n                                name='duration'\n                                is_24_hours_contract={is_24_hours_contract}\n                            />\n                        }\n                        { (advanced_duration_unit !== 't' && advanced_duration_unit !== 'd') &&\n                            <InputField\n                                id='dt_advanced_duration_input'\n                                classNameInput='trade-container__input'\n                                error_messages={validation_errors.duration}\n                                label={duration_units_list.length === 1 ? duration_units_list[0].text : null}\n                                name='duration'\n                                value={getDurationFromUnit(advanced_duration_unit)}\n                                {...number_input_props}\n                                {...shared_input_props}\n                            />\n                        }\n                    </div>\n                </Fragment> :\n                <Fragment>\n                    <div className={endtime_container_class}>\n                        <TradingDatePicker\n                            name='expiry_date'\n                            is_24_hours_contract={is_24_hours_contract}\n                        />\n                        {is_24_hours_contract &&\n                            <TradingTimePicker />\n                            // validation_errors={validation_errors.end_time} TODO: add validation_errors for end time\n                        }\n                    </div>\n                </Fragment>\n            }\n        </Fragment>\n    );\n};\n\nAdvancedDuration.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    changeDurationUnit    : PropTypes.func,\n    duration_t            : PropTypes.number,\n    duration_units_list   : MobxPropTypes.arrayOrObservableArray,\n    expiry_date           : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_list        : PropTypes.array,\n    expiry_type        : PropTypes.string,\n    getDurationFromUnit: PropTypes.func,\n    number_input_props : PropTypes.object,\n    onChange           : PropTypes.func,\n    onChangeUiStore    : PropTypes.func,\n    server_time        : PropTypes.object,\n    shared_input_props : PropTypes.object,\n    start_date         : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    validation_errors: PropTypes.object,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        validation_errors: modules.trade.validation_errors,\n    })\n)(AdvancedDuration);\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport ButtonToggleMenu               from 'App/Components/Form/ButtonToggleMenu';\nimport InputField                     from 'App/Components/Form/InputField';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { connect }                    from 'Stores/connect';\nimport TradingDatePicker              from '../../DatePicker';\n\nconst SimpleDuration = ({\n    changeDurationUnit,\n    duration_t,\n    duration_units_list,\n    getDurationFromUnit,\n    number_input_props,\n    shared_input_props,\n    simple_duration_unit,\n    validation_errors,\n}) => {\n    const filterMinutesAndTicks = (arr) => {\n        const filtered_arr = arr.filter(du => du.value === 't' || du.value === 'm');\n        if (filtered_arr.length <= 1) return [];\n\n        return filtered_arr;\n    };\n    const has_label = !duration_units_list.some(du => du.value === 't');\n\n    return (\n        <Fragment>\n            { duration_units_list.length > 1 &&\n                <ButtonToggleMenu\n                    id='dt_simple_duration_toggle'\n                    buttons_arr={filterMinutesAndTicks(duration_units_list)}\n                    is_animated={true}\n                    name='simple_duration_unit'\n                    onChange={changeDurationUnit}\n                    value={simple_duration_unit}\n                />\n            }\n            { simple_duration_unit === 't' &&\n                <RangeSlider\n                    name='duration'\n                    value={duration_t}\n                    ticks={10}\n                    {...shared_input_props}\n                />\n            }\n            { simple_duration_unit === 'd' &&\n                <TradingDatePicker\n                    alignment='left'\n                    mode='duration'\n                    name='duration'\n                />\n            }\n            { (simple_duration_unit !== 't' && simple_duration_unit !== 'd') &&\n                <InputField\n                    id='dt_simple_duration_input'\n                    classNameInput='trade-container__input'\n                    error_messages={validation_errors.duration}\n                    name='duration'\n                    label={has_label ? duration_units_list[0].text : null}\n                    value={getDurationFromUnit(simple_duration_unit)}\n                    {...number_input_props}\n                    {...shared_input_props}\n                />\n            }\n        </Fragment>\n    );\n};\n\nSimpleDuration.propTypes = {\n    changeDurationUnit  : PropTypes.func,\n    duration_t          : PropTypes.number,\n    duration_units_list : MobxPropTypes.arrayOrObservableArray,\n    getDurationFromUnit : PropTypes.func,\n    number_input_props  : PropTypes.object,\n    shared_input_props  : PropTypes.object,\n    simple_duration_unit: PropTypes.string,\n    validation_errors   : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        validation_errors: modules.trade.validation_errors,\n    })\n)(SimpleDuration);\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport { localize }                   from 'App/i18n';\nimport Fieldset                       from 'App/Components/Form/fieldset.jsx';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { toMoment }                   from 'Utils/Date';\nimport DurationToggle                 from './duration-toggle.jsx';\nimport AdvancedDuration               from './advanced-duration.jsx';\nimport SimpleDuration                 from './simple-duration.jsx';\n\nconst Duration = ({\n    advanced_duration_unit,\n    advanced_expiry_type,\n    duration,\n    duration_unit,\n    duration_units_list,\n    duration_t,\n    expiry_date,\n    expiry_time,\n    expiry_type,\n    getDurationFromUnit,\n    hasDurationUnit,\n    is_advanced_duration,\n    is_minimized,\n    min_value,\n    max_value,\n    onChange,\n    onChangeUiStore,\n    onChangeMultiple,\n    simple_duration_unit,\n    server_time,\n    start_date,\n    market_open_times,\n}) => {\n    const expiry_list = [\n        { text: localize('Duration'), value: 'duration' },\n    ];\n\n    const has_end_time = expiry_list.find(expiry => expiry.value === 'endtime');\n    if (duration_units_list.length === 1 && duration_unit === 't') {\n        if (has_end_time) {\n            expiry_list.pop(); // remove end time for contracts with only tick duration\n        }\n    } else if (!has_end_time) {\n        expiry_list.push({ text: localize('End time'), value: 'endtime' });\n    }\n\n    if (is_minimized) {\n        const moment_expiry = toMoment(expiry_date);\n        const duration_unit_text = (duration_units_list.find(o => o.value === duration_unit) || {}).text;\n        return (\n            <div className='fieldset-minimized fieldset-minimized__duration'>\n                {expiry_type === 'duration'\n                    ? `${duration} ${duration_unit_text}`\n                    : `${moment_expiry.format('ddd - DD MMM, YYYY')}\\n${expiry_time}`\n                }\n            </div>\n        );\n    }\n\n    const changeDurationUnit = ({ target }) => {\n        const { name, value } = target;\n        const duration_value  = getDurationFromUnit(value);\n\n        onChangeUiStore({ name, value });\n        onChangeMultiple({\n            duration_unit: value,\n            duration     : duration_value,\n        });\n    };\n\n    const changeDurationValue = ({ target }) => {\n        const { name, value } = target;\n        const duration_name   = `duration_${is_advanced_duration ? advanced_duration_unit : simple_duration_unit}`;\n\n        // e.target.value returns string, we need to convert them to number\n        onChangeUiStore({ name: duration_name, value: +value });\n        onChange({ target: { name, value: +value } });\n    };\n\n    const onToggleDurationType = ({ target }) => {\n        const { name, value } = target;\n        onChangeUiStore({ name, value });\n\n        // replace selected duration unit and duration if the contract doesn't have that duration unit\n        let current_duration_unit = value ? advanced_duration_unit : simple_duration_unit;\n        if (!hasDurationUnit(current_duration_unit)) {\n            current_duration_unit = duration_units_list[0].value;\n            onChangeUiStore({ name: `${value ? 'advanced' : 'simple'}_duration_unit`, value: current_duration_unit });\n        }\n\n        const duration_value         = getDurationFromUnit(current_duration_unit);\n        const new_trade_store_values = {\n            duration_unit: current_duration_unit,\n            duration     : duration_value,\n        };\n\n        // simple only has expiry type of duration\n        if (!value && expiry_type !== 'duration') {\n            new_trade_store_values.expiry_type = 'duration';\n        }\n\n        if (value && expiry_type !== advanced_expiry_type) {\n            new_trade_store_values.expiry_type = advanced_expiry_type;\n        }\n\n        onChangeMultiple({ ...new_trade_store_values });\n    };\n\n    const props = {\n        shared_input: {\n            is_hj_whitelisted: true,\n            onChange         : changeDurationValue,\n            max_value,\n            min_value,\n        },\n        number_input: {\n            type            : 'number',\n            is_incrementable: true,\n        },\n    };\n\n    // e.g. digit contracts only has range slider - does not have toggle between advanced / simple\n    const has_toggle = expiry_list.length > 1 || duration_units_list.length > 1;\n\n    return (\n        <Fieldset className={classNames('trade-container__fieldset', {\n            'trade-container__fieldset--advanced': is_advanced_duration,\n        })}\n        >\n            { !has_toggle &&\n                <RangeSlider\n                    name='duration'\n                    value={duration_t}\n                    {...props.shared_input}\n                />\n            }\n            { has_toggle &&\n                <Fragment>\n                    { is_advanced_duration &&\n                        <AdvancedDuration\n                            advanced_expiry_type={advanced_expiry_type}\n                            advanced_duration_unit={advanced_duration_unit}\n                            changeDurationUnit={changeDurationUnit}\n                            duration_t={duration_t}\n                            duration_units_list={duration_units_list}\n                            expiry_date={expiry_date}\n                            expiry_list={expiry_list}\n                            expiry_type={expiry_type}\n                            getDurationFromUnit={getDurationFromUnit}\n                            market_open_times={market_open_times}\n                            number_input_props={props.number_input}\n                            onChange={onChange}\n                            onChangeUiStore={onChangeUiStore}\n                            server_time={server_time}\n                            shared_input_props={props.shared_input}\n                            start_date={start_date}\n                        /> }\n                    { !is_advanced_duration &&\n                        <SimpleDuration\n                            getDurationFromUnit={getDurationFromUnit}\n                            changeDurationUnit={changeDurationUnit}\n                            duration_t={duration_t}\n                            duration_units_list={duration_units_list}\n                            number_input_props={props.number_input}\n                            shared_input_props={props.shared_input}\n                            simple_duration_unit={simple_duration_unit}\n                        /> }\n                    <DurationToggle\n                        name={'is_advanced_duration'}\n                        onChange={onToggleDurationType}\n                        value={is_advanced_duration}\n                    />\n                </Fragment>\n            }\n        </Fieldset>\n    );\n};\n\nDuration.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    duration              : PropTypes.number,\n    duration_t            : PropTypes.number,\n    duration_unit         : PropTypes.string,\n    duration_units_list   : MobxPropTypes.arrayOrObservableArray,\n    expiry_date           : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time         : PropTypes.string,\n    expiry_type         : PropTypes.string,\n    getDurationFromUnit : PropTypes.func,\n    hasDurationUnit     : PropTypes.func,\n    is_advanced_duration: PropTypes.bool,\n    is_minimized        : PropTypes.bool,\n    market_open_times   : PropTypes.array,\n    max_value           : PropTypes.number,\n    min_value           : PropTypes.number,\n    onChange            : PropTypes.func,\n    onChangeUiStore     : PropTypes.func,\n    server_time         : PropTypes.object,\n    simple_duration_unit: PropTypes.string,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    validation_errors: PropTypes.object,\n};\n\nexport default Duration;\n","import PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport { connect }                    from 'Stores/connect';\nimport { convertDurationLimit }       from 'Stores/Modules/Trading/Helpers/duration';\nimport Duration                       from './duration.jsx';\n\nclass DurationWrapper extends React.Component {\n    hasDurationUnit = (duration_unit) => {\n        let duration_list = [...this.props.duration_units_list];\n\n        if (this.props.duration_units_list.length > 1 && !this.props.is_advanced_duration) {\n            duration_list = duration_list.filter(du => du.value === 'm' || du.value === 't');\n        }\n        return duration_list.some(du => du.value === duration_unit);\n    };\n\n    setDurationUnit() {\n        const new_duration_unit  = this.props.duration_units_list[0].value;\n        const new_duration_value = this.props.getDurationFromUnit(new_duration_unit);\n\n        this.props.onChangeUiStore({ name: `${this.props.is_advanced_duration ? 'advanced' : 'simple'}_duration_unit`, value: new_duration_unit });\n        this.props.onChangeMultiple({\n            duration_unit: new_duration_unit,\n            duration     : +new_duration_value,\n        });\n    }\n\n    advancedHasWrongExpiry = () => (this.props.is_advanced_duration\n        && this.props.expiry_type !== this.props.advanced_expiry_type);\n\n    handleEndTime = () => {\n        const symbol_has_endtime = this.props.duration_units_list.length > 1  || this.props.is_advanced_duration;\n\n        if (symbol_has_endtime) {\n            // simple duration does not have endtime\n            if (!this.props.is_advanced_duration) this.props.onChangeUiStore({ name: 'is_advanced_duration', value: true });\n\n            this.props.onChangeUiStore({ name: 'advanced_expiry_type', value: 'endtime' });\n        } else {\n            // If query string contains endtime but contract type does not e.g. digits (only ticks contracts)\n            this.props.onChange({ target: { name: 'expiry_type', value: 'duration' } });\n        }\n    };\n\n    getDurationMinMaxValues = (duration_min_max, contract_expiry_type, duration_unit) => {\n        const max_value = convertDurationLimit(+duration_min_max[contract_expiry_type].max, duration_unit);\n        const min_value = convertDurationLimit(+duration_min_max[contract_expiry_type].min, duration_unit);\n\n        return [min_value, max_value];\n    };\n\n    componentDidMount() {\n        const {\n            advanced_duration_unit,\n            advanced_expiry_type,\n            contract_expiry_type,\n            duration,\n            duration_min_max,\n            duration_unit,\n            expiry_type,\n            getDurationFromUnit,\n            is_advanced_duration,\n            onChange,\n            onChangeUiStore,\n            simple_duration_unit,\n        } = this.props;\n\n        const current_unit = is_advanced_duration ? advanced_duration_unit : simple_duration_unit;\n        const current_duration = getDurationFromUnit(current_unit);\n        const [min_value, max_value] =\n            this.getDurationMinMaxValues(duration_min_max, contract_expiry_type, duration_unit);\n\n        if (duration_unit !== current_unit) {\n            onChangeUiStore({ name: `${is_advanced_duration ? 'advanced' : 'simple'}_duration_unit`, value: duration_unit });\n        }\n\n        if (+duration !== +current_duration) {\n            onChangeUiStore({ name: `duration_${duration_unit}`, value: duration });\n        }\n\n        if (expiry_type === 'endtime') this.handleEndTime();\n\n        if (this.advancedHasWrongExpiry()) {\n            onChange({ target: { name: 'expiry_type', value: advanced_expiry_type } });\n        }\n\n        if (current_duration < min_value) {\n            onChangeUiStore({ name: `duration_${duration_unit}`, value: min_value });\n            onChange({ target: { name: 'duration', value: min_value } });\n        } else if (current_duration > max_value) {\n            onChangeUiStore({ name: `duration_${duration_unit}`, value: max_value });\n            onChange({ target: { name: 'duration', value: max_value } });\n        }\n    }\n\n    // intercept changes to contract duration and check that trade_store and ui_store are aligned.\n    componentWillReact() {\n        const {\n            advanced_expiry_type,\n            duration,\n            duration_unit,\n            expiry_type,\n            getDurationFromUnit,\n            is_advanced_duration,\n            onChange,\n            onChangeUiStore,\n        } = this.props;\n\n        const current_duration            = getDurationFromUnit(duration_unit);\n        const simple_is_not_type_duration = (!is_advanced_duration && expiry_type !== 'duration');\n\n        // simple only has expiry type duration\n        if (simple_is_not_type_duration) {\n            onChange({ target: { name: 'expiry_type', value: 'duration' } });\n        }\n\n        if (this.advancedHasWrongExpiry()) {\n            onChange({ target: { name: 'expiry_type', value: advanced_expiry_type } });\n        }\n\n        if (duration !== current_duration) {\n            onChangeUiStore({ name: `duration_${duration_unit}`, value: duration });\n        }\n    }\n\n    render() {\n        const {\n            advanced_duration_unit,\n            contract_expiry_type,\n            duration_min_max,\n            duration_unit,\n            duration_units_list,\n            is_advanced_duration,\n            simple_duration_unit,\n        } = this.props;\n\n        const current_duration_unit           = (is_advanced_duration ? advanced_duration_unit : simple_duration_unit);\n        const has_missing_duration_unit       = !this.hasDurationUnit(current_duration_unit);\n        const simple_is_missing_duration_unit =\n            (!is_advanced_duration && simple_duration_unit === 'd' && duration_units_list.length === 4);\n        const [min_value, max_value]          =\n            this.getDurationMinMaxValues(duration_min_max, contract_expiry_type, duration_unit);\n\n        if (has_missing_duration_unit || simple_is_missing_duration_unit) {\n            this.setDurationUnit();\n        }\n\n        return (\n            <Duration\n                hasDurationUnit={this.hasDurationUnit}\n                max_value={max_value}\n                min_value={min_value}\n                {...this.props}\n            />\n        );\n    }\n}\n\nDurationWrapper.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    contract_expiry_type  : PropTypes.string,\n    duration              : PropTypes.number,\n    duration_d            : PropTypes.number,\n    duration_h            : PropTypes.number,\n    duration_m            : PropTypes.number,\n    duration_min_max      : PropTypes.object,\n    duration_s            : PropTypes.number,\n    duration_t            : PropTypes.number,\n    duration_unit         : PropTypes.string,\n    duration_units_list   : MobxPropTypes.arrayOrObservableArray,\n    expiry_date           : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time         : PropTypes.string,\n    expiry_type         : PropTypes.string,\n    getDurationFromUnit : PropTypes.func,\n    is_advanced_duration: PropTypes.bool,\n    is_minimized        : PropTypes.bool,\n    market_open_times   : PropTypes.array,\n    onChange            : PropTypes.func,\n    onChangeMultiple    : PropTypes.func,\n    onChangeUiStore     : PropTypes.func,\n    sessions            : MobxPropTypes.arrayOrObservableArray,\n    simple_duration_unit: PropTypes.string,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time: PropTypes.string,\n    symbol    : PropTypes.string,\n};\n\nexport default connect(({ modules, ui }) => ({\n    advanced_duration_unit: ui.advanced_duration_unit,\n    advanced_expiry_type  : ui.advanced_expiry_type,\n    contract_expiry_type  : modules.trade.contract_expiry_type,\n    duration              : modules.trade.duration,\n    duration_unit         : modules.trade.duration_unit,\n    duration_units_list   : modules.trade.duration_units_list,\n    duration_min_max      : modules.trade.duration_min_max,\n    duration_t            : ui.duration_t,\n    expiry_date           : modules.trade.expiry_date,\n    expiry_time           : modules.trade.expiry_time,\n    expiry_type           : modules.trade.expiry_type,\n    getDurationFromUnit   : ui.getDurationFromUnit,\n    is_advanced_duration  : ui.is_advanced_duration,\n    onChange              : modules.trade.onChange,\n    onChangeUiStore       : ui.onChangeUiStore,\n    onChangeMultiple      : modules.trade.onChangeMultiple,\n    simple_duration_unit  : ui.simple_duration_unit,\n    start_date            : modules.trade.start_date,\n    market_open_times     : modules.trade.market_open_times,\n}))(DurationWrapper);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\n// arr_arr_numbers is an array of arrays where each nested array indicates one row\n// for example [[1, 2, 3]] will be a single row of these three numbers\n// but [[1, 2, 3], [4, 5, 6]] will be two rows:\n// first row with the first three numbers and second row with the last three numbers\nconst NumberSelector = ({\n    arr_arr_numbers,\n    name,\n    onChange,\n    selected_number,\n}) => {\n    const handleSelect = (item) => {\n        if (+item.target.getAttribute('data-value') !== selected_number) {\n            onChange({ target: { name, value: +item.target.getAttribute('data-value') } });\n        }\n    };\n\n    return (\n        <div className='number-selector'>\n            {arr_arr_numbers.map((arr_numbers, idx) =>\n                <div className='number-selector__row' key={idx}>\n                    {arr_numbers.map(i =>\n                        <span\n                            key={i}\n                            className={classNames('number-selector__selection', { 'number-selector__selection--selected': selected_number === i })}\n                            data-value={i}\n                            onClick={handleSelect}\n                        >\n                            {i}\n                        </span>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nNumberSelector.propTypes = {\n    arr_arr_numbers: PropTypes.arrayOf(PropTypes.array),\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    selected_number: PropTypes.number,\n};\n\nexport default NumberSelector;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from 'App/i18n';\nimport NumberSelector from 'App/Components/Form/number-selector.jsx';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\nimport { connect }    from 'Stores/connect';\n\nconst LastDigit = ({\n    is_minimized,\n    last_digit,\n    onChange,\n}) =>  {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized'>\n                {`${localize('Last Digit')}: ${last_digit}`}\n            </div>\n        );\n    }\n    const arr_five = [...Array(5).keys()];\n    return (\n        <Fieldset\n            className='trade-container__fieldset'\n            header={localize('Last Digit Prediction')}\n            is_center\n        >\n            <NumberSelector\n                arr_arr_numbers={[arr_five, arr_five.map(i => i + 5)]}\n                name='last_digit'\n                onChange={onChange}\n                selected_number={+last_digit}\n            />\n        </Fieldset>\n    );\n};\n\nLastDigit.propTypes = {\n    is_minimized: PropTypes.bool,\n    last_digit  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    onChange: PropTypes.func,\n};\n\nexport default connect(({ modules }) => ({\n    last_digit: modules.trade.last_digit,\n    onChange  : modules.trade.onChange,\n}))(LastDigit);\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport Amount                         from 'Modules/Trading/Components/Form/TradeParams/amount.jsx';\nimport Barrier                        from 'Modules/Trading/Components/Form/TradeParams/barrier.jsx';\nimport Duration                       from 'Modules/Trading/Components/Form/TradeParams/Duration';\nimport LastDigit                      from 'Modules/Trading/Components/Form/TradeParams/last-digit.jsx';\nimport { connect }                    from 'Stores/connect';\n\nclass TradeParams extends React.Component {\n    isVisible(component_key) {\n        return this.props.form_components.includes(component_key);\n    }\n\n    render () {\n        const { is_minimized } = this.props;\n        return (\n            <React.Fragment>\n                {\n                    this.isVisible('duration') &&\n                    <Duration key={'duration'} is_minimized={is_minimized} />\n                }\n                {\n                    this.isVisible('barrier') &&\n                    <Barrier key={'barrier'} is_minimized={is_minimized} />\n                }\n                {\n                    this.isVisible('last_digit') &&\n                    <LastDigit key={'last_digit'} is_minimized={is_minimized} />\n                }\n                {\n                    this.isVisible('amount') &&\n                    <Amount key={'amount'} is_minimized={is_minimized} />\n                }\n            </React.Fragment>\n        );\n    }\n}\nTradeParams.propTypes = {\n    form_components: MobxPropTypes.arrayOrObservableArray,\n    is_minimized   : PropTypes.bool,\n};\n\nexport default connect(({ modules }) => ({\n    form_components: modules.trade.form_components,\n}))(TradeParams);\n","import PropTypes from 'prop-types';\n\nexport const CommonPropTypes = {\n    calendar_date: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    isPeriodDisabled: PropTypes.func,\n    selected_date   : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    updateSelected: PropTypes.func,\n};\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { padLeft }         from '_common/string_util';\nimport { localize }        from 'App/i18n';\nimport { Popover }         from 'App/Components/Elements/Popover';\nimport {\n    getDaysOfTheWeek,\n    week_headers_abbr }    from 'Constants/date-time';\nimport {\n    addDays,\n    addMonths,\n    daysFromTodayTo,\n    epochToMoment,\n    subDays,\n    subMonths,\n    toMoment }             from 'Utils/Date';\nimport { CommonPropTypes } from './types';\n\nconst getDays = ({\n    calendar_date,\n    date_format,\n    has_range_selection,\n    hide_others,\n    holidays,\n    hovered_date,\n    isPeriodDisabled,\n    start_date,\n    selected_date,\n    updateSelected,\n    weekends,\n    onMouseOver,\n    onMouseLeave,\n}) => {\n    // adjust Calendar week by 1 day so that Calendar week starts on Monday\n    // change to zero to set Calendar week to start on Sunday\n    const day_offset = 1;\n\n    const dates = [];\n    const days  = [];\n    const moment_today       = toMoment().startOf('day');\n    const moment_cur_date    = toMoment(calendar_date);\n    const num_of_days        = moment_cur_date.daysInMonth() + 1;\n    const moment_month_start = moment_cur_date.clone().startOf('month');\n    const moment_month_end   = moment_cur_date.clone().endOf('month');\n    const moment_selected    = typeof selected_date === 'number' ? epochToMoment(selected_date).startOf('day') : toMoment(selected_date).startOf('day');\n\n    // populate previous months' dates\n    const end_of_prev_month = subMonths(moment_cur_date, 1).endOf('month').day();\n    for (let i = end_of_prev_month; i > 0; i--) {\n        dates.push(subDays(moment_month_start, i).format(date_format));\n    }\n    // populate current months' dates\n    for (let idx = 1; idx < num_of_days; idx += 1) {\n        dates.push(moment_cur_date.clone().format(date_format.replace('DD', padLeft(idx, 2, '0'))));\n    }\n    // populate next months' dates\n    const start_of_next_month = addMonths(moment_cur_date, 1).startOf('month').day();\n    if (start_of_next_month - day_offset > 0 || dates.length <= 28) {\n        // if start_of_next_month doesn't falls on Monday, append rest of the week\n        for (let i = 1; i <= 7 - start_of_next_month + day_offset; i++) {\n            dates.push(addDays(moment_month_end, i, 'day').format(date_format));\n        }\n    } else if (!start_of_next_month) {\n        // if start_of_next_month falls on Sunday, append 1 day\n        dates.push(addDays(moment_month_end, 1).format(date_format));\n    }\n\n    const moment_start_date = toMoment(start_date).startOf('day');\n\n    dates.map((date) => {\n        const moment_date    = toMoment(date).startOf('day');\n        const moment_hovered = toMoment(hovered_date).startOf('day');\n        const is_active      = selected_date && moment_date.isSame(moment_selected);\n        const is_today       = moment_date.isSame(moment_today, 'day');\n\n        const events          = holidays.filter(event =>\n            // filter by date or day of the week\n            event.dates.find(d => d === date || getDaysOfTheWeek(d) === toMoment(date).day()));\n        const has_events           = !!events.length;\n        const is_closes_early      = events.map(event => !!event.descrip.match(/Closes early|Opens late/))[0];\n        const message              = events.map(event => event.descrip)[0] || '';\n        const duration_from_today  = daysFromTodayTo(date);\n        const is_between           = moment_date.isBetween(moment_today, moment_selected);\n        const is_between_hover     = moment_date.isBetween(moment_today, moment_hovered);\n        const is_before_min_or_after_max_date = isPeriodDisabled(moment_date, 'day');\n        const is_disabled =\n            // check if date is before min_date or after_max_date\n            is_before_min_or_after_max_date\n            // for forward starting accounts, only show same day as start date and the day after\n            || ((start_date && (moment_date.isBefore(moment_start_date))))\n            // check if weekends are disabled\n            || weekends.some(day => toMoment(date).day() === day)\n            // check if date falls on holidays, and doesn't close early or opens late\n            || has_events && !is_closes_early;\n\n        // show 'disabled' style for dates that is not in the same calendar month, it should still be clickable\n        const is_other_month = moment_date.month() !== moment_cur_date.month();\n\n        days.push(\n            <span\n                key={date}\n                className={classNames('calendar__cell', {\n                    'calendar__cell--active'         : is_active,\n                    'calendar__cell--today'          : is_today,\n                    'calendar__cell--active-duration': is_active && has_range_selection && !is_today,\n                    'calendar__cell--today-duration' : is_today && has_range_selection,\n                    'calendar__cell--disabled'       : is_disabled,\n                    'calendar__cell--is-hidden'      : is_other_month && hide_others,\n                    'calendar__cell--other'          : is_other_month,\n                    'calendar__cell--between-hover'  : is_between_hover && has_range_selection,\n                    'calendar__cell--between'        : is_between && has_range_selection,\n                })}\n                onClick={is_disabled ? undefined : (e) => updateSelected(e, 'day')}\n                data-date={date}\n                data-duration={`${duration_from_today} ${ duration_from_today === 1 ? localize('Day') : localize('Days') }`}\n                onMouseOver={onMouseOver}\n                onMouseLeave={onMouseLeave}\n            >\n                {((has_events || is_closes_early) && !is_other_month && !is_before_min_or_after_max_date) &&\n                    <Popover\n                        alignment='top'\n                        classNameTarget='calendar__cell-tooltip'\n                        classNameTargetIcon='calendar__cell-tooltip-icon'\n                        icon='dot'\n                        message={message}\n                    />\n                }\n                {moment_date.date()}\n            </span>\n        );\n    });\n\n    return days;\n};\n\nexport const CalendarDays = (props) => {\n    const days = getDays(props).map(day => day);\n\n    return (\n        <div className='calendar__body calendar__body--date'>\n            { Object.keys(week_headers_abbr)\n                .map((item, idx) => (\n                    <span key={idx} className='calendar__text calendar__text--bold'>{week_headers_abbr[item]}</span>\n                ))\n            }\n            { days }\n        </div>\n    );\n};\n\nCalendarDays.defaultProps = {\n    holidays: [],\n    weekends: [],\n};\n\nCalendarDays.propTypes = {\n    ...CommonPropTypes,\n    date_format        : PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    holidays           : PropTypes.arrayOf(\n        PropTypes.shape({\n            dates  : PropTypes.array,\n            descrip: PropTypes.string,\n        }),\n    ),\n    hovered_date: PropTypes.string,\n    onMouseLeave: PropTypes.func,\n    onMouseOver : PropTypes.func,\n    start_date  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    weekends: PropTypes.arrayOf(PropTypes.number),\n};\n","import classNames        from 'classnames';\nimport React             from 'react';\nimport { month_headers } from 'Constants/date-time';\nimport { toMoment }      from 'Utils/Date';\nimport { CommonPropTypes }   from './types';\n\nexport const CalendarMonths = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_date          = toMoment(calendar_date);\n    const moment_selected_date = toMoment(selected_date);\n\n    return (\n        <div className='calendar__body calendar__body--month'>\n            { Object.keys(month_headers).map((month, idx) => {\n                const is_active   = month === moment_selected_date.clone().format('MMM') && moment_selected_date.isSame(moment_date, 'year');\n                const is_disabled = isPeriodDisabled(moment_date.clone().month(month), 'month');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'month')}\n                        data-month={month}\n                    >\n                        {month_headers[month]}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarMonths.propTypes = { ...CommonPropTypes };\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport { toMoment }    from 'Utils/Date';\nimport { CommonPropTypes } from './types';\nimport { getDecade }   from '../helper';\n\nexport const CalendarYears = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const [start_of_decade, end_of_decade] = getDecade(moment_date).split('-');\n\n    const years = [];\n    for (let year = +start_of_decade - 1; year <= +end_of_decade + 1; year++) {\n        years.push(year);\n    }\n    return (\n        <div className='calendar__body calendar__body--year'>\n            { years.map((year, idx) => {\n                const is_other_decade = idx === 0 || idx === 11;\n                const is_disabled     = isPeriodDisabled(moment_date.clone().year(year), 'year');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : year === moment_selected.year(),\n                            'calendar__cell--other'   : is_other_decade,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'year')}\n                        data-year={year}\n                    >\n                        {year}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarYears.propTypes = { ...CommonPropTypes };\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport { toMoment }    from 'Utils/Date';\nimport { CommonPropTypes } from './types';\nimport {\n    getCentury,\n    getDecade }        from '../helper';\n\nexport const CalendarDecades = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const start_year      = getCentury(moment_date).split('-')[0];\n\n    const decades = [];\n    let min_year = +start_year - 10;\n    for (let i = 0; i < 12; i++) {\n        const decade = getDecade(toMoment().year(min_year));\n        decades.push(decade);\n        min_year = +decade.split('-')[1] + 1;\n    }\n    return (\n        <div className='calendar__body calendar__body--decade'>\n            { decades.map((decade, idx) => {\n                const [start_of_decade, end_of_decade] = decade.split('-');\n                const is_active    = +start_of_decade === moment_selected.year();\n                const is_disabled  = isPeriodDisabled(moment_date.clone().year(start_of_decade), 'year') &&\n                    isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year');\n                const is_other_century = idx === 0 || idx === 11;\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                            'calendar__cell--other'   : is_other_century,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'decade')}\n                        data-decade={decade}\n                    >\n                        {decade}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarDecades.propTypes = { ...CommonPropTypes };\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    CalendarDays,\n    CalendarMonths,\n    CalendarYears,\n    CalendarDecades } from './panels';\n\nconst CalendarBody = (props) => {\n    const calendar_body = {\n        date  : <CalendarDays    {...props} />,\n        month : <CalendarMonths  {...props} />,\n        year  : <CalendarYears   {...props} />,\n        decade: <CalendarDecades {...props} />,\n    };\n\n    return (\n        <React.Fragment>\n            { calendar_body[props.calendar_view] }\n        </React.Fragment>\n    );\n};\n\nCalendarBody.propTypes = {\n    calendar_view: PropTypes.string,\n};\n\nexport default CalendarBody;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full-screen-dialog.jsx';\n\nconst ContractTypeDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n}) => (\n    is_mobile ?\n        <React.Fragment>\n            <span className='contract-type-widget__select-arrow' />\n            <FullScreenDialog\n                title='Select Trading Type'\n                visible={open}\n                onClose={onClose}\n            >\n                {children}\n            </FullScreenDialog>\n        </React.Fragment>\n        :\n        <CSSTransition\n            in={open}\n            timeout={100}\n            classNames={{\n                enter    : 'contracts-type-dialog--enter',\n                enterDone: 'contracts-type-dialog--enterDone',\n                exit     : 'contracts-type-dialog--exit',\n            }}\n            unmountOnExit\n        >\n            <div className='contracts-type-dialog'>\n                <div className='contracts-type-dialog__list-wrapper'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nContractTypeDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n};\n\nexport default ContractTypeDialog;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport classNames                     from 'classnames';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport Icon                           from 'Assets/icon.jsx';\n\nconst ContractTypeItem = ({\n    contracts,\n    name,\n    value,\n    is_equal,\n    handleInfoClick,\n    handleSelect,\n}) => (\n    contracts.map((contract, idx) => (\n        <div\n            id={`dt_contract_${contract.value}_item`}\n            key={idx}\n            className={classNames('contract-type-item', {\n                'contract-type-item--selected' : value === contract.value,\n                'contract-type-item--invisible': (contract.value === 'rise_fall' && is_equal) || (contract.value === 'rise_fall_equal' && !is_equal),\n            })}\n            name={name}\n            value={contract.value}\n            onClick={(e) => handleSelect(contract, e)}\n        >\n            <Icon icon='IconTradeCategory' category={contract.value} className='contract-type-item__icon-wrapper' />\n            <span className='contract-type-item__title'>\n                {contract.text}\n            </span>\n            <div id='info-icon' className='contract-type-item__icon' onClick={() => handleInfoClick(contract)}>\n                <Icon icon='IconInfoOutline' />\n            </div>\n        </div>\n    ))\n);\n\nContractTypeItem.propTypes = {\n    contracts      : MobxPropTypes.arrayOrObservableArray,\n    handleInfoClick: PropTypes.func,\n    handleSelect   : PropTypes.func,\n    is_equal       : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    name : PropTypes.string,\n    value: PropTypes.string,\n};\n\nexport default ContractTypeItem;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport ContractTypeItem               from './contract-type-item.jsx';\n\nconst ContractTypeList = ({\n    handleInfoClick,\n    handleSelect,\n    is_equal,\n    list,\n    name,\n    value,\n}) =>\n    (\n        Object.keys(list).map(key => (\n            // TODO: Remove this line after other contracts are ready to be served\n            !['In/Out', 'Asians'].includes(key) &&\n            <React.Fragment key={key}>\n                <div className='contract-type-list'>\n                    <div className='contract-type-list__label'><span>{key}</span></div>\n                    <div className='contract-type-list__contracts-wrapper'>\n                        <ContractTypeItem\n                            contracts={list[key]}\n                            name={name}\n                            value={value}\n                            handleSelect={handleSelect}\n                            handleInfoClick={handleInfoClick}\n                            is_equal={is_equal}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        ))\n    );\n\nContractTypeList.propTypes = {\n    handleInfoClick: PropTypes.func,\n    handleSelect   : PropTypes.func,\n    is_equal       : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    list : MobxPropTypes.objectOrObservableObject,\n    name : PropTypes.string,\n    value: PropTypes.string,\n};\n\nexport default ContractTypeList;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full-screen-dialog.jsx';\n\nconst TradeTypeInfoDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n    title,\n}) => (\n    is_mobile ?\n        <FullScreenDialog\n            visible={open}\n            onClose={onClose}\n            title={title}\n            wrapperClassName='trade-type-info-modal'\n        >\n            {children}\n        </FullScreenDialog>\n        :\n        <CSSTransition\n            classNames={{\n                enter    : 'trade-type-info-dialog--enter',\n                enterDone: 'trade-type-info-dialog--enterDone',\n                exit     : 'trade-type-info-dialog--exit',\n            }}\n            in={open}\n            timeout={100}\n            unmountOnExit\n        >\n            <div className='trade-type-info-dialog'>\n                <div className='trade-type-info-dialog__info-wrapper'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nTradeTypeInfoDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n    title    : PropTypes.string,\n};\n\nexport default TradeTypeInfoDialog;\n","import classNames         from 'classnames';\nimport PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { Scrollbars }     from 'tt-react-custom-scrollbars';\nimport Button             from 'deriv-components/lib/button';\nimport Icon               from 'Assets/icon.jsx';\nimport { localize }       from 'App/i18n';\n\nconst TradeTypeInfoItem = ({\n    handleNavigationClick,\n    handleNextClick,\n    handlePrevClick,\n    is_dark_theme,\n    is_mobile,\n    item,\n    item_index,\n    itemList,\n    onBackButtonClick,\n    onSubmitButtonClick,\n}) => (\n    <div id={`dt_contract_info_${item.value}`}>\n        {!is_mobile &&\n        <div className='trade-type-info-dialog__header'>\n            <span id='dt_contract_info_back_nav' onClick={() => onBackButtonClick()}>\n                <Icon icon='IconBack' />\n            </span>\n            <span className='title'>{item.text}</span>\n        </div>\n        }\n        <div className='trade-type-info-dialog__body'>\n            <div\n                className='trade-type-info-dialog__card-wrapper'\n                // total calculated below is from 258px and 16px horizontal margin set in trade-info-dialog css\n                style={{ 'transform': `translate3d(-${(274 * item_index)}px, 0, 0)`  }}\n            >\n                {\n                    itemList.map((type, idx) => (\n                        <div className='trade-type-info-dialog__card' key={idx}>\n                            <div className='trade-type-info-dialog__gif'>\n                                <Icon\n                                    icon='TradeCategoriesGIF'\n                                    category={type.value}\n                                    className='trade-type-info-dialog__gif-image'\n                                    is_dark_theme={is_dark_theme}\n                                />\n                            </div>\n                            <div className='trade-type-info-dialog__content'>\n                                <Scrollbars\n                                    autoHide\n                                    style={{ height: '100%' }}\n                                >\n                                    <Icon icon='TradeCategories' category={type.value} />\n                                </Scrollbars>\n                            </div>\n                            <div>\n                                <Button\n                                    id={`dt_contract_info_${item.value}_button`}\n                                    className='btn--primary--orange trade-type-info-dialog__choose-button'\n                                    onClick={() => onSubmitButtonClick(type)}\n                                    text={localize('Choose')}\n                                />\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n        <div className='trade-type-info-navigation'>\n            <div id='dt_contract_info_left_nav' className='trade-type-info-navigation__icon' onClick={() => handlePrevClick(itemList)} >\n                <Icon icon='IconChevronLeft' />\n            </div>\n            <div className='trade-type-info-navigation__list'>\n                <i\n                    className={classNames(\n                        'trade-type-info-navigation__circle-button',\n                        'trade-type-info-navigation__circle-button--active')}\n                    style={{ 'transform': `translate3d(${16 * item_index}px, 0, 0)` }}\n                />\n                {\n                    itemList.map((contract, idx) => (\n                        <React.Fragment key={idx}>\n                            <div\n                                id={`dt_contract_info_${contract.value}_circle`}\n                                className='trade-type-info-navigation__circle-button'\n                                onClick={() => handleNavigationClick(contract)}\n                            />\n                        </React.Fragment>\n                    ))\n                }\n            </div>\n            <div id='dt_contract_info_right_nav' className='trade-type-info-navigation__icon' onClick={() => handleNextClick(itemList)} >\n                <Icon icon='IconChevronRight' />\n            </div>\n        </div>\n    </div>\n);\n\nTradeTypeInfoItem.propTypes = {\n    handleNavigationClick: PropTypes.func,\n    handleNextClick      : PropTypes.func,\n    handlePrevClick      : PropTypes.func,\n    is_dark_theme        : PropTypes.bool,\n    is_mobile            : PropTypes.bool,\n    item                 : PropTypes.object,\n    item_index           : PropTypes.number,\n    itemList             : PropTypes.array,\n    onBackButtonClick    : PropTypes.func,\n    onSubmitButtonClick  : PropTypes.func,\n};\n\nexport default TradeTypeInfoItem;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport Icon                from 'Assets/icon.jsx';\nimport ContractTypeDialog  from './contract-type-dialog.jsx';\nimport ContractTypeList    from './contract-type-list.jsx';\nimport TradeTypeInfoDialog from '../TradeTypeInfo/trade-type-info-dialog.jsx';\nimport TradeTypeInfoItem   from '../TradeTypeInfo/trade-type-info-item.jsx';\n\nclass ContractTypeWidget extends React.PureComponent {\n    state = {\n        is_dialog_open     : false,\n        is_info_dialog_open: false,\n        item               : {},\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item, e) => {\n        if (item.value !== this.props.value && e.target.id !== 'info-icon') {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    };\n\n    onSubmitButtonClick = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleInfoVisibility();\n    };\n\n    handleInfoClick = (item) => {\n        this.setState({ item });\n        this.handleInfoVisibility();\n        this.handleVisibility();\n    };\n\n    handleNavigationClick = (item) => {\n        this.setState({ item });\n    };\n\n    handleNextClick = (itemList) => {\n        const navigationLength = itemList.length;\n        const item = this.state.item;\n        const currentIndex = itemList.findIndex((list_item) => list_item.value === item.value);\n        const nextIndex = currentIndex + 1;\n        if (nextIndex < navigationLength) {\n            this.handleNavigationClick(itemList[nextIndex]);\n        } else {\n            this.handleNavigationClick(itemList[0]);\n        }\n    };\n\n    handlePrevClick = (itemList) => {\n        const navigationLength = itemList.length;\n        const item = this.state.item;\n        const currentIndex = itemList.findIndex((list_item) => list_item.value === item.value);\n        const prevIndex = currentIndex - 1;\n        if (prevIndex > -1) {\n            this.handleNavigationClick(itemList[prevIndex]);\n        } else {\n            this.handleNavigationClick(itemList[navigationLength - 1]);\n        }\n    };\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_dialog_open) {\n            this.setState({ is_dialog_open: false });\n        } else if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_info_dialog_open) {\n            this.setState({\n                is_dialog_open     : false,\n                is_info_dialog_open: false,\n            });\n        }\n    };\n\n    handleInfoVisibility = () => {\n        this.setState((state) => ({\n            is_info_dialog_open: !state.is_info_dialog_open,\n        }));\n    };\n\n    handleVisibility = () => {\n        this.setState({ is_dialog_open: !this.state.is_dialog_open });\n    };\n\n    onWidgetClick = () => {\n        this.setState((state) => ({ is_dialog_open: !state.is_dialog_open, is_info_dialog_open: false }));\n    };\n\n    onBackButtonClick = () => {\n        this.setState((state) => ({ is_dialog_open: !state.is_dialog_open, is_info_dialog_open: false }));\n    };\n\n    getDisplayText = () => {\n        const { list, value } = this.props;\n        const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n        let text = '';\n        if (list) {\n            Object.keys(list).some(key => {\n                text = findInArray(list[key]);\n                return text;\n            });\n        }\n        return text;\n    };\n\n    getItemIndex = (curr_item, itemList) => itemList.findIndex((list_item) => list_item.value === curr_item.value);\n\n    getItemList = () => {\n        const itemList = [];\n        const list = this.props.list;\n        /* eslint-disable */\n        Object.keys(list).map(key => {\n            !['In/Out', 'Asians'].includes(key) && list[key].map(contract => {\n                (contract.value !== 'rise_fall_equal') && itemList.push(contract);\n            });\n        });\n        /* eslint-disable */\n        return itemList;\n    };\n\n    render() {\n        const { is_dark_theme, is_equal, is_mobile, list, name, value } = this.props;\n        const { is_dialog_open, is_info_dialog_open, item }             = this.state;\n        const item_index = this.getItemIndex(item, this.getItemList());\n        return (\n            <div\n                id='dt_contract_dropdown'\n                className='contract-type-widget dropdown--left'\n                ref={this.setWrapperRef}\n                tabIndex='0'\n            >\n                <div\n                    className={classNames('contract-type-widget__display', {\n                        'contract-type-widget__display--clicked': (is_dialog_open || is_info_dialog_open),\n                    })}\n                    onClick={this.onWidgetClick}\n                >\n                    <Icon\n                        icon='IconTradeCategory'\n                        category={value}\n                        className='contract-type-widget__icon-wrapper'\n                    />\n                    <span name={name} value={value}>\n                        {this.getDisplayText()}\n                    </span>\n                    <Icon\n                        icon='IconArrow'\n                        className={classNames(\n                          'contract-type-widget__select-arrow',\n                          'contract-type-widget__select-arrow--left')}\n                    />\n                </div>\n\n                <ContractTypeDialog\n                    is_mobile={is_mobile}\n                    onClose={this.handleVisibility}\n                    open={is_dialog_open}\n                >\n                    <ContractTypeList\n                        handleInfoClick={this.handleInfoClick}\n                        handleSelect={this.handleSelect}\n                        is_equal={is_equal}\n                        list={list}\n                        name={name}\n                        value={value}\n                    />\n                </ContractTypeDialog>\n                <TradeTypeInfoDialog\n                    is_mobile={is_mobile}\n                    onClose={this.handleInfoClick}\n                    open={is_info_dialog_open}\n                    title={item.text}\n                >\n                    <TradeTypeInfoItem\n                        handleNavigationClick={this.handleNavigationClick}\n                        handleNextClick={this.handleNextClick}\n                        handlePrevClick={this.handlePrevClick}\n                        is_dark_theme={is_dark_theme}\n                        is_mobile={is_mobile}\n                        item={item}\n                        item_index={item_index < 0 ? undefined : item_index}\n                        itemList={this.getItemList()}\n                        onBackButtonClick={this.onBackButtonClick}\n                        onSubmitButtonClick={this.onSubmitButtonClick}\n                    />\n                </TradeTypeInfoDialog>\n            </div>\n        );\n    }\n}\n\nContractTypeWidget.propTypes = {\n    is_dark_theme: PropTypes.bool,\n    is_equal           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    is_mobile: PropTypes.bool,\n    list     : PropTypes.object,\n    name     : PropTypes.string,\n    onChange : PropTypes.func,\n    value    : PropTypes.string,\n};\n\nexport default ContractTypeWidget;\n","import PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { connect }        from 'Stores/connect';\nimport ContractTypeWidget from '../Components/Form/ContractType/contract-type-widget.jsx';\n\nconst Contract = ({\n    contract_type,\n    contract_types_list,\n    is_dark_theme,\n    is_equal,\n    is_mobile,\n    onChange,\n}) => (\n    <ContractTypeWidget\n        is_dark_theme={is_dark_theme}\n        is_equal={is_equal}\n        is_mobile={is_mobile}\n        list={contract_types_list}\n        name='contract_type'\n        onChange={onChange}\n        value={contract_type}\n    />\n);\n\nContract.propTypes = {\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    is_equal           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    is_mobile: PropTypes.bool,\n    onChange : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        contract_type      : modules.trade.contract_type,\n        contract_types_list: modules.trade.contract_types_list,\n        is_equal           : modules.trade.is_equal,\n        onChange           : modules.trade.onChange,\n        is_dark_theme      : ui.is_dark_mode_on,\n        is_mobile          : ui.is_mobile,\n    })\n)(Contract);\n","import classNames            from 'classnames';\nimport PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { getLocalizedBasis } from 'Stores/Modules/Trading/Constants/contract';\nimport { localize }          from 'App/i18n';\nimport Money                 from 'App/Components/Elements/money.jsx';\nimport { Popover }           from 'App/Components/Elements/Popover';\nimport Icon                  from 'Assets/icon.jsx';\n\nconst ContractInfo = ({\n    basis,\n    currency,\n    has_increased,\n    is_loading,\n    should_fade,\n    is_visible,\n    proposal_info,\n    type,\n}) => {\n    const localized_basis = getLocalizedBasis();\n    const stakeOrPayout = () => {\n        switch (basis) {\n            case 'stake':\n                return localized_basis.payout;\n            case 'payout':\n                return localized_basis.stake;\n            default:\n                return basis;\n        }\n    };\n\n    const has_error_or_not_loaded = proposal_info.has_error || !proposal_info.id;\n    return (\n        <div className='trade-container__price'>\n            <div\n                id={`dt_purchase_${type.toLowerCase()}_price`}\n                className={classNames(\n                    'trade-container__price-info',\n                    {\n                        'trade-container__price-info--disabled': has_error_or_not_loaded,\n                        'trade-container__price-info--slide'   : is_loading && !should_fade,\n                        'trade-container__price-info--fade'    : is_loading && should_fade,\n                    })}\n            >\n                <div className='trade-container__price-info-basis'>\n                    {has_error_or_not_loaded\n                        ? stakeOrPayout()\n                        : localize('{{value}}', { value: proposal_info.obj_contract_basis.text })\n                    }\n                </div>\n                <div className='trade-container__price-info-value'>\n                    {!has_error_or_not_loaded &&\n                    <Money amount={proposal_info.obj_contract_basis.value} className='trade-container__price-info-currency' currency={currency} />\n                    }\n                </div>\n                {is_visible &&\n                <div className='trade-container__price-info-movement'>\n                    {(!has_error_or_not_loaded && has_increased !== null) &&\n                        <Icon icon='IconPriceMove' type={has_increased ? 'profit' : 'loss'} />\n                    }\n                </div>\n                }\n            </div>\n            <Popover\n                alignment='left'\n                icon='info'\n                id={`dt_purchase_${type.toLowerCase()}_info`}\n                margin={210}\n                message={has_error_or_not_loaded ? '' : proposal_info.message }\n            />\n        </div>\n    );\n};\nContractInfo.propTypes = {\n    basis        : PropTypes.string,\n    currency     : PropTypes.string,\n    has_increased: PropTypes.bool,\n    is_loading   : PropTypes.bool,\n    is_visible   : PropTypes.bool,\n    proposal_info: PropTypes.object,\n    type         : PropTypes.string,\n};\n\nexport default ContractInfo;\n","import classNames                 from 'classnames';\nimport PropTypes                  from 'prop-types';\nimport React                      from 'react';\nimport Button                     from 'deriv-components/lib/button';\nimport { localize }               from 'App/i18n';\nimport Icon                       from 'Assets/icon.jsx';\nimport { getContractTypeDisplay } from 'Constants/contract';\n\nconst PurchaseButton = ({\n    buy_info,\n    index,\n    info,\n    is_contract_mode,\n    is_disabled,\n    is_high_low,\n    is_loading,\n    is_proposal_empty,\n    purchased_states_arr,\n    setPurchaseState,\n    should_fade,\n    onClickPurchase,\n    type,\n}) => {\n    const getIconType = () => {\n        if (!should_fade && is_loading) return '';\n        return (is_high_low) ? `${type.toLowerCase()}_barrier` : type.toLowerCase();\n    };\n    const is_button_disabled = ((is_contract_mode || is_disabled) && !is_loading) || is_proposal_empty;\n\n    return (\n        <Button\n            is_disabled={is_contract_mode || is_disabled}\n            id={`dt_purchase_${type.toLowerCase()}_button`}\n            className={classNames(\n                'btn-purchase',\n                {\n                    'btn-purchase--disabled'       : is_button_disabled || !!(buy_info.error),\n                    'btn-purchase--animated--slide': is_loading && !should_fade,\n                    'btn-purchase--animated--fade' : is_loading && should_fade,\n                    'btn-purchase--swoosh'         : !!(purchased_states_arr[index]),\n                })}\n            onClick={() => {\n                setPurchaseState(index);\n                onClickPurchase(info.id, info.stake, type);\n            }}\n        >\n            <React.Fragment>\n                <div className='btn-purchase__info btn-purchase__info--left'>\n                    <div className='btn-purchase__type-wrapper'>\n                        <div className='btn-purchase__icon_wrapper'>\n                            <Icon\n                                icon='IconTradeType'\n                                className='btn-purchase__icon'\n                                type={getIconType()}\n                            />\n                        </div>\n                        <div className='btn-purchase__text_wrapper'>\n                            <span className='btn-purchase__text'>\n                                {(!should_fade && is_loading) ? '' : localize('{{value}}', { value: getContractTypeDisplay(type, is_high_low) })}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                <div className='btn-purchase__effect-detail' />\n                <div className='btn-purchase__effect-detail--arrow' />\n                <div className='btn-purchase__info btn-purchase__info--right'>\n                    <div className='btn-purchase__text_wrapper'>\n                        <span className='btn-purchase__text'>{!(is_loading || is_disabled) ? info.returns : ''}</span>\n                    </div>\n                </div>\n            </React.Fragment>\n        </Button>\n    );\n};\n\nPurchaseButton.propTypes = {\n    buy_info            : PropTypes.object,\n    currency            : PropTypes.string,\n    index               : PropTypes.number,\n    info                : PropTypes.object,\n    is_contract_mode    : PropTypes.bool,\n    is_disabled         : PropTypes.bool,\n    is_high_low         : PropTypes.bool,\n    is_loading          : PropTypes.bool,\n    is_proposal_empty   : PropTypes.bool,\n    onClickPurchase     : PropTypes.func,\n    purchased_states_arr: PropTypes.array,\n    setPurchaseState    : PropTypes.func,\n    type                : PropTypes.string,\n};\n\nexport default PurchaseButton;\n","import classNames     from 'classnames';\nimport React          from 'react';\nimport PropTypes      from 'prop-types';\n// import { localize }   from 'App/i18n';\n// import { PopConfirm } from 'App/Components/Elements/PopConfirm';\nimport { Popover }    from 'App/Components/Elements/Popover';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\nimport ContractInfo   from 'Modules/Trading/Components/Form/Purchase/contract-info.jsx';\n// import PurchaseLock   from 'Modules/Trading/Components/Form/Purchase/PurchaseLock';\nimport PurchaseButton from 'Modules/Trading/Components/Elements/purchase-button.jsx';\n\nclass PurchaseFieldset extends React.PureComponent {\n    state = { should_fade: false };\n\n    componentDidMount() {\n        this.setState({ should_fade: true });\n    }\n\n    render() {\n        const {\n            basis,\n            buy_info,\n            currency,\n            // index,\n            info,\n            index,\n            is_contract_mode,\n            is_disabled,\n            is_high_low,\n            is_loading,\n            is_proposal_empty,\n            is_proposal_error,\n            purchased_states_arr,\n            // is_purchase_confirm_on,\n            // is_purchase_locked,\n            onClickPurchase,\n            onHoverPurchase,\n            // togglePurchaseLock,\n            setPurchaseState,\n            type,\n        } = this.props;\n\n        const purchase_button = (\n            <PurchaseButton\n                buy_info={buy_info}\n                currency={currency}\n                info={info}\n                index={index}\n                is_contract_mode={is_contract_mode}\n                is_disabled={is_disabled}\n                is_high_low={is_high_low}\n                is_loading={is_loading}\n                is_proposal_empty={is_proposal_empty}\n                purchased_states_arr={purchased_states_arr}\n                onClickPurchase={onClickPurchase}\n                setPurchaseState={setPurchaseState}\n                should_fade={this.state.should_fade}\n                type={type}\n            />\n        );\n\n        return (\n            <Fieldset\n                className='trade-container__fieldset purchase-container__option'\n            >\n                {/* {(is_purchase_locked && index === 0) && */}\n                {/* <PurchaseLock onClick={togglePurchaseLock} /> */}\n                {/* } */}\n                <React.Fragment>\n                    <ContractInfo\n                        basis={basis}\n                        currency={currency}\n                        proposal_info={info}\n                        has_increased={info.has_increased}\n                        is_loading={is_loading}\n                        should_fade={this.state.should_fade}\n                        is_visible={!is_contract_mode}\n                        type={type}\n                    />\n                    <div\n                        className={classNames(\n                            'btn-purchase__shadow-wrapper', {\n                                'btn-purchase__shadow-wrapper--disabled': (is_proposal_error || is_disabled),\n                            },\n                        )}\n                        onMouseEnter={() => {\n                            if (!is_disabled) {\n                                onHoverPurchase(true, type);\n                            }\n                        }}\n                        onMouseLeave={() => {\n                            if (!is_disabled) {\n                                onHoverPurchase(false);\n                            }\n                        }}\n                    >\n                        <div className='btn-purchase__box-shadow' />\n                        {(is_proposal_error) ?\n                            <Popover\n                                alignment='left'\n                                classNameBubble='purchase-container__popover-bubble'\n                                message={info.message}\n                            >\n                                { purchase_button }\n                            </Popover>\n                            :\n                            purchase_button\n                        }\n                        {\n                            // is_purchase_confirm_on ?\n                            //     <PopConfirm\n                            //         alignment='left'\n                            //         cancel_text={localize('Cancel')}\n                            //         confirm_text={localize('Purchase')}\n                            //         message={localize('Are you sure you want to purchase this contract?')}\n                            //     >\n                            //         {purchase_button}\n                            //     </PopConfirm>\n                            //     :\n                            //     purchase_button\n                        }\n                    </div>\n                </React.Fragment>\n            </Fieldset>\n        );\n    }\n}\n\nPurchaseFieldset.propTypes = {\n    basis               : PropTypes.string,\n    buy_info            : PropTypes.object,\n    currency            : PropTypes.string,\n    index               : PropTypes.number,\n    info                : PropTypes.object,\n    is_contract_mode    : PropTypes.bool,\n    is_disabled         : PropTypes.bool,\n    is_high_low         : PropTypes.bool,\n    is_loading          : PropTypes.bool,\n    is_proposal_empty   : PropTypes.bool,\n    is_proposal_error   : PropTypes.bool,\n    onClickPurchase     : PropTypes.func,\n    // is_purchase_confirm_on: PropTypes.bool,\n    // is_purchase_locked    : PropTypes.bool,\n    onHoverPurchase     : PropTypes.func,\n    purchased_states_arr: PropTypes.array,\n    // togglePurchaseLock    : PropTypes.func,\n    setPurchaseState    : PropTypes.func,\n    type                : PropTypes.string,\n};\n\nexport default PurchaseFieldset;\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport { isEmptyObject }           from '_common/utility';\nimport PurchaseFieldset            from 'Modules/Trading/Components/Elements/purchase-fieldset.jsx';\nimport { getContractTypePosition } from 'Constants/contract';\nimport { connect }                 from 'Stores/connect';\n\nconst Purchase = ({\n    basis,\n    contract_type,\n    currency,\n    is_contract_mode,\n    is_client_allowed_to_visit,\n    // is_purchase_confirm_on,\n    purchased_states_arr,\n    // is_purchase_locked,\n    is_trade_enabled,\n    onClickPurchase,\n    onHoverPurchase,\n    // togglePurchaseLock,\n    purchase_info,\n    proposal_info,\n    setPurchaseState,\n    trade_types,\n    validation_errors,\n}) => {\n    const is_high_low = /high_low/.test(contract_type.toLowerCase());\n    const isLoading = info => {\n        const has_validation_error = Object.values(validation_errors).some(e => e.length);\n        return !has_validation_error && !info.has_error && !info.id;\n    };\n    const is_proposal_empty = isEmptyObject(proposal_info);\n\n    const components = [];\n    Object.keys(trade_types).map((type, index) => {\n        const getSortedIndex = () => {\n            if (getContractTypePosition(type) === 'top') return 0;\n            if (getContractTypePosition(type) === 'bottom') return 1;\n            return index;\n        };\n        const info              = proposal_info[type] || {};\n        const is_disabled       = is_contract_mode\n            || !is_trade_enabled || !info.id || !is_client_allowed_to_visit;\n        const is_proposal_error = info.has_error && !info.has_error_details;\n        const purchase_fieldset = (\n            <PurchaseFieldset\n                basis={basis}\n                buy_info={purchase_info}\n                currency={currency}\n                info={info}\n                key={index}\n                index={getSortedIndex()}\n                is_contract_mode={is_contract_mode}\n                is_disabled={is_disabled}\n                is_high_low={is_high_low}\n                is_loading={isLoading(info)}\n                // is_purchase_confirm_on={is_purchase_confirm_on}\n                is_proposal_empty={is_proposal_empty}\n                is_proposal_error={is_proposal_error}\n                purchased_states_arr={purchased_states_arr}\n                // is_purchase_locked={is_purchase_locked}\n                // togglePurchaseLock={togglePurchaseLock}\n                onHoverPurchase={onHoverPurchase}\n                onClickPurchase={onClickPurchase}\n                setPurchaseState={setPurchaseState}\n                type={type}\n            />\n        );\n\n        switch (getContractTypePosition(type)) {\n            case 'top':\n                components.unshift(purchase_fieldset);\n                break;\n            case 'bottom':\n                components.push(purchase_fieldset);\n                break;\n            default:\n                components.push(purchase_fieldset);\n                break;\n        }\n    });\n\n    return components;\n};\n\nPurchase.propTypes = {\n    basis                     : PropTypes.string,\n    currency                  : PropTypes.string,\n    is_client_allowed_to_visit: PropTypes.bool,\n    is_contract_mode          : PropTypes.bool,\n    // is_purchase_confirm_on    : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    is_trade_enabled          : PropTypes.bool,\n    onClickPurchase           : PropTypes.func,\n    onHoverPurchase           : PropTypes.func,\n    proposal_info             : PropTypes.object,\n    purchase_info             : PropTypes.object,\n    purchased_states_arr      : PropTypes.array,\n    setPurchaseState          : PropTypes.func,\n    // togglePurchaseLock        : PropTypes.func,\n    trade_types               : PropTypes.object,\n    validation_errors         : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, modules, ui }) => ({\n        currency                  : client.currency,\n        is_client_allowed_to_visit: client.is_client_allowed_to_visit,\n        is_contract_mode          : modules.smart_chart.is_contract_mode,\n        basis                     : modules.trade.basis,\n        contract_type             : modules.trade.contract_type,\n        is_trade_enabled          : modules.trade.is_trade_enabled,\n        onClickPurchase           : modules.trade.onPurchase,\n        onHoverPurchase           : modules.trade.onHoverPurchase,\n        proposal_info             : modules.trade.proposal_info,\n        purchase_info             : modules.trade.purchase_info,\n        trade_types               : modules.trade.trade_types,\n        validation_errors         : modules.trade.validation_errors,\n        purchased_states_arr      : ui.purchase_states,\n        setPurchaseState          : ui.setPurchaseState,\n        // is_purchase_confirm_on    : ui.is_purchase_confirm_on,\n        // is_purchase_locked        : ui.is_purchase_lock_on,\n        // togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(Purchase);\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CloseButton = ({ onClick, className }) => (\n    <button\n        className={className}\n        type='button'\n        onClick={onClick}\n    />\n);\n\nCloseButton.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func.isRequired,\n};\n\nexport default CloseButton;\n","export const default_delay = 3000;\n\nexport const max_display_notifications = 3;\n\nexport const types = {\n    danger       : 'notification--danger',\n    info         : 'notification--info',\n    success      : 'notification--success',\n    warning      : 'notification--warning',\n    contract_sold: 'notification--info',\n};\n\nexport const sortNotifications = (() => {\n    const notification_order = {\n        contract_sold: 1,\n        danger       : 2,\n        warning      : 3,\n        info         : 4,\n        success      : 5,\n    };\n\n    return (a, b) => notification_order[a.type] - notification_order[b.type];\n})();\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport classNames  from 'classnames';\nimport Icon        from 'Assets/icon.jsx';\nimport CloseButton from './close-button.jsx';\nimport {\n    default_delay,\n    types }        from './constants';\n\nconst Notification = ({\n    data,\n    removeNotification,\n}) => {\n    const destroy = (is_closed_by_user) => {\n        removeNotification(data);\n\n        if (data.closeOnClick) {\n            data.closeOnClick(data, is_closed_by_user);\n        }\n    };\n\n    const onClick = () => destroy(true);\n\n    if (data.is_auto_close) {\n        setTimeout(destroy, data.delay || default_delay);\n    }\n\n    return (\n        <div className={\n            classNames('notification', types[data.type], {\n                'notification--small': (data.size === 'small'),\n            })}\n        >\n            <div className='notification__icon'>\n                { data.type === 'danger'  && <Icon icon='IconDanger' className='notification__icon-type' /> }\n                { (data.type === 'info' || data.type === 'contract_sold')\n                    && <Icon icon='IconInformation' className='notification__icon-type' /> }\n                { data.type === 'success' && <Icon icon='IconSuccess' className='notification__icon-type' /> }\n                { data.type === 'warning' && <Icon icon='IconWarning' className='notification__icon-type' /> }\n            </div>\n            <div className='notification__text-container'>\n                <h4 className='notification__header'>{data.header}</h4>\n                <p className='notification__text-body'> {data.message}</p>\n            </div>\n            { data.should_hide_close_btn ? undefined : <CloseButton onClick={onClick} className='notification__close-button' />}\n        </div>\n    );\n};\n\nNotification.propTypes = {\n    data: PropTypes.shape({\n        closeOnClick         : PropTypes.func,\n        delay                : PropTypes.number,\n        header               : PropTypes.string,\n        is_auto_close        : PropTypes.bool,\n        message              : PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n        should_hide_close_btn: PropTypes.bool,\n        size                 : PropTypes.oneOf(['small']),\n        type                 : PropTypes.oneOf(['warning', 'info', 'success', 'danger', 'contract_sold']).isRequired,\n    }),\n    removeNotification: PropTypes.func,\n};\n\nexport default Notification;\n","import { get, getAll, urlFor } from '_common/language';\n\nexport const currentLanguage = get();\n\nexport const getAllowedLanguages = () => {\n    const exclude_languages = [\n        'ACH',\n    ];\n    // TODO Change language_list to const when design is ready.\n    let language_list = Object.keys(getAll())\n        .filter(key => !(exclude_languages.includes(key)))\n        .reduce((obj, key) => {\n            obj[key] = getAll()[key];\n            return obj;\n        }, {});\n\n    // TODO Remove this one line below when design is ready.\n    language_list = { EN: 'English' };\n    return language_list;\n};\n\nexport const getURL = lang => urlFor(lang);\n","export * from './language';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CalendarButton = ({\n    children,\n    className,\n    is_hidden,\n    label,\n    onClick,\n}) => (\n    <React.Fragment>\n        { !is_hidden &&\n            <div\n                className={className}\n                onClick={onClick}\n            >\n                {label}\n                {children}\n            </div>\n        }\n    </React.Fragment>\n);\n\nCalendarButton.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    className: PropTypes.string,\n    is_hidden: PropTypes.bool,\n    label    : PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport default CalendarButton;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport Icon              from 'Assets/icon.jsx';\nimport { month_headers } from 'Constants/date-time';\nimport {\n    addMonths,\n    addYears,\n    subMonths,\n    subYears,\n    toMoment }           from 'Utils/Date';\nimport CalendarButton    from './calendar-button.jsx';\nimport {\n    getCentury,\n    getDecade }          from './helper';\n\nconst CalendarHeader = ({\n    calendar_date,\n    calendar_view,\n    disable_month_selector,\n    disable_year_selector,\n    hide_disabled_periods,\n    isPeriodDisabled,\n    navigateTo,\n    switchView,\n}) => {\n    const is_date_view   = calendar_view === 'date';\n    const is_month_view  = calendar_view === 'month';\n    const is_year_view   = calendar_view === 'year';\n    const is_decade_view = calendar_view === 'decade';\n    const moment_date    = toMoment(calendar_date);\n\n    let num_of_years = 1;\n    if (is_year_view)   num_of_years = 10;\n    if (is_decade_view) num_of_years = 100;\n\n    const century = getCentury(moment_date.clone());\n    const decade  = getDecade(moment_date.clone());\n    const end_of_decade = (is_year_view ? decade : century).split('-')[1];\n\n    const is_prev_month_disabled  = isPeriodDisabled(subMonths(moment_date, 1), 'month');\n    const is_prev_year_disabled   = isPeriodDisabled(subYears(moment_date, num_of_years), 'month');\n    const is_next_month_disabled  = isPeriodDisabled(addMonths(moment_date, 1), 'month');\n    const is_next_year_disabled   = isPeriodDisabled(addYears(moment_date, num_of_years), 'month');\n    const is_select_year_disabled = isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year') || disable_year_selector;\n    const should_hide_next_month  = is_next_month_disabled && hide_disabled_periods;\n    const should_hide_prev_month  = is_prev_month_disabled && hide_disabled_periods;\n    const should_hide_prev_year   = is_prev_year_disabled && hide_disabled_periods;\n    const should_hide_next_year   = is_next_year_disabled && hide_disabled_periods;\n\n    const onClickPrevYear = !(is_prev_year_disabled || should_hide_prev_year) ?\n        () => navigateTo(subYears(calendar_date, num_of_years)) :\n        undefined;\n\n    const onClickNextYear = !(is_next_year_disabled || should_hide_next_year) ?\n        () => navigateTo(addYears(calendar_date, num_of_years)) :\n        undefined;\n\n    const onClickPrevMonth = !(is_prev_month_disabled || should_hide_prev_month) ?\n        () => navigateTo(subMonths(calendar_date, 1)) :\n        undefined;\n\n    const onClickNextMonth = !(is_next_month_disabled || should_hide_next_month) ?\n        () => navigateTo(addMonths(calendar_date, 1)) :\n        undefined;\n\n    return (\n        <div className='calendar__header'>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-year', {\n                    'calendar__nav--disabled' : is_prev_year_disabled,\n                    'calendar__nav--is-hidden': should_hide_prev_year,\n                })}\n                onClick={onClickPrevYear}\n            >\n                <Icon icon='IconChevronDoubleLeft' className='calendar__icon' />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-month', {\n                    'calendar__nav--disabled' : is_prev_month_disabled,\n                    'calendar__nav--is-hidden': should_hide_prev_month,\n                })}\n                is_hidden={!is_date_view}\n                onClick={onClickPrevMonth}\n            >\n                <Icon icon='IconChevronLeft' className='calendar__icon' />\n            </CalendarButton>\n\n            <React.Fragment>\n                { is_date_view &&\n                    <CalendarButton\n                        className='calendar__btn calendar__btn--select'\n                        is_hidden={!is_date_view}\n                        label={month_headers[moment_date.format('MMM')]}\n                        onClick={() => disable_month_selector ? undefined : switchView('month')}\n                    />\n                }\n                { (is_date_view || is_month_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        label={moment_date.format('YYYY')}\n                        onClick={() => is_select_year_disabled ? undefined : switchView('year')}\n                    />\n                }\n                { (is_year_view || is_decade_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        onClick={is_select_year_disabled ? undefined : () => switchView('decade')}\n                    >\n                        { is_year_view   && `${decade}`  }\n                        { is_decade_view && `${century}` }\n                    </CalendarButton>\n                }\n            </React.Fragment>\n\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-month', {\n                    'calendar__nav--disabled' : is_next_month_disabled,\n                    'calendar__nav--is-hidden': should_hide_next_month,\n                })}\n                is_hidden={!is_date_view}\n                onClick={onClickNextMonth}\n            >\n                <Icon icon='IconChevronRight' className='calendar__icon' />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-year', {\n                    'calendar__nav--disabled' : is_next_year_disabled,\n                    'calendar__nav--is-hidden': should_hide_next_year,\n                })}\n                onClick={onClickNextYear}\n            >\n                <Icon icon='IconChevronDoubleRight' className='calendar__icon' />\n            </CalendarButton>\n        </div>\n    );\n};\n\nCalendarHeader.propTypes = {\n    calendar_date: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.object,\n        PropTypes.number,\n    ]),\n    calendar_view         : PropTypes.string,\n    disable_month_selector: PropTypes.bool,\n    disable_year_selector : PropTypes.bool,\n    hide_disabled_periods : PropTypes.bool,\n    isPeriodDisabled      : PropTypes.func,\n    navigateTo            : PropTypes.func,\n    switchView            : PropTypes.func,\n};\n\nexport default CalendarHeader;\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport PageError     from 'Modules/PageError';\nimport { routes }    from 'Constants/index';\nimport Localize      from '../localize.jsx';\n\nconst ErrorComponent = ({\n    header,\n    message,\n    redirect_label,\n    redirectOnClick,\n    should_show_refresh = true,\n}) => {\n    const refresh_message = should_show_refresh ? <Localize i18n_default_text='Please refresh this page to continue.' /> : '';\n\n    return (\n        <PageError\n            header={header || <Localize i18n_default_text='Oops, something went wrong.' />}\n            messages={\n                message\n                    ? [\n                        message,\n                        refresh_message,\n                    ]\n                    : [\n                        <Localize key={0} i18n_default_text='Sorry, an error occured while processing your request.' />,\n                        refresh_message,\n                    ]}\n            redirect_url={routes.trade}\n            redirect_label={redirect_label || <Localize i18n_default_text='Refresh' />}\n            buttonOnClick={redirectOnClick || (() => location.reload())}\n        />\n    );\n};\n\nErrorComponent.propTypes = {\n    message: PropTypes.oneOfType([\n        PropTypes.node,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    type: PropTypes.string,\n};\n\nexport default ErrorComponent;\n","import moment       from 'moment';\nimport { localize } from 'App/i18n';\n\nexport const addCommaToNumber = (num, decimal_places) => {\n    if (!num || isNaN(num)) {\n        return num;\n    }\n    const n = String(decimal_places ? (+num).toFixed(decimal_places) : num);\n    const p = n.indexOf('.');\n    return n.replace(\n        /\\d(?=(?:\\d{3})+(?:\\.|$))/g,\n        (m, i) => p <= 0 || i < p ? `${m},` : m\n    );\n};\n\nexport const getTimePercentage = (server_time, start_time, expiry_time) => {\n    const duration_from_purchase = moment.duration(moment.unix(expiry_time).diff(moment.unix(start_time)));\n    const duration_from_now = moment.duration(moment.unix(expiry_time).diff(server_time));\n    let percentage = (duration_from_now.asMilliseconds() / duration_from_purchase.asMilliseconds()) * 100;\n\n    if (percentage < 0.5) {\n        percentage = 0;\n    } else if (percentage > 100) {\n        percentage = 100;\n    }\n\n    return Math.round(percentage);\n};\n\nexport const getBarrierLabel = (contract_info) => {\n    if (isDigitType(contract_info.contract_type)) {\n        return localize('Target');\n    }\n    return localize('Barrier');\n};\n\nexport const getBarrierValue = (contract_info) => {\n    if (isDigitType(contract_info.contract_type)) {\n        return digitTypeMap(contract_info)[contract_info.contract_type];\n    }\n    return addCommaToNumber(contract_info.barrier);\n};\n\nexport const isDigitType = (contract_type) => (/digit/.test(contract_type.toLowerCase()));\n\nconst digitTypeMap = (contract_info) => ({\n    DIGITDIFF : localize('Not {{barrier}}', { barrier: contract_info.barrier }),\n    DIGITEVEN : localize('Even'),\n    DIGITMATCH: localize('Equals {{barrier}}', { barrier: contract_info.barrier }),\n    DIGITODD  : localize('Odd'),\n    DIGITOVER : localize('Over {{barrier}}', { barrier: contract_info.barrier }),\n    DIGITUNDER: localize('Under {{barrier}}', { barrier: contract_info.barrier }),\n});\n","export * from './positions-helper';\n","const BinarySocket = require('./socket_base');\nconst localize     = require('../../App/i18n').localize;\n\n/*\n * Monitors the network status and initialises the WebSocket connection\n * 1. online : check the WS status (init/send: blink after timeout, open/message: online)\n * 2. offline: it is offline\n */\nconst NetworkMonitorBase = (() => {\n    const StatusConfig = (() => {\n        let status_config;\n\n        const initStatusConfig = () => ({\n            online  : { class: 'online',  tooltip: localize('Online') },\n            offline : { class: 'offline', tooltip: localize('Offline') },\n            blinking: { class: 'blinker', tooltip: localize('Connecting to server') },\n        });\n\n        return {\n            get: (status) => {\n                if (!status_config) {\n                    status_config = initStatusConfig();\n                }\n                return status_config[status];\n            },\n        };\n    })();\n\n    const pendings = {};\n    const pending_keys = {\n        ws_init   : 'ws_init',\n        ws_request: 'ws_request',\n    };\n    const pending_timeouts = {\n        [pending_keys.ws_init]   : 5000,\n        [pending_keys.ws_request]: 10000,\n    };\n\n    let ws_config,\n        network_status,\n        updateUI;\n\n    const init = (socket_general_functions, fncUpdateUI) => {\n        updateUI  = fncUpdateUI;\n        ws_config = Object.assign({ wsEvent, isOnline }, socket_general_functions);\n\n        if ('onLine' in navigator) {\n            window.addEventListener('online',  setStatus);\n            window.addEventListener('offline', setStatus);\n        } else { // if not supported, default to online and fallback to WS checks\n            navigator.onLine = true;\n        }\n\n        if (isOnline()) {\n            BinarySocket.init(ws_config);\n        }\n\n        setStatus(isOnline() ? 'online' : 'offline');\n    };\n\n    const isOnline = () => navigator.onLine;\n\n    const wsReconnect = () => {\n        if (isOnline() && BinarySocket.hasReadyState(2, 3)) { // CLOSING or CLOSED\n            BinarySocket.init(ws_config);\n        } else {\n            BinarySocket.send({ ping: 1 }); // trigger a request to get stable status sooner\n        }\n    };\n\n    const setStatus = (status) => {\n        if (!isOnline()) {\n            network_status = 'offline';\n        } else if (pending_keys[status] || network_status === 'offline') {\n            network_status = 'blinking';\n            wsReconnect();\n        } else {\n            network_status = 'online';\n        }\n\n        if (typeof updateUI === 'function') {\n            updateUI(StatusConfig.get(network_status), isOnline());\n        }\n    };\n\n    const ws_events_map = {\n        init   : () => setPending(pending_keys.ws_init),\n        open   : () => clearPendings(pending_keys.ws_init),\n        send   : () => setPending(pending_keys.ws_request),\n        message: () => clearPendings(),\n        close  : () => setPending(pending_keys.ws_init),\n    };\n\n    const wsEvent = (event) => {\n        if (typeof ws_events_map[event] === 'function') {\n            ws_events_map[event]();\n        }\n    };\n\n    const setPending = (key) => {\n        if (!pendings[key]) {\n            pendings[key] = setTimeout(() => {\n                pendings[key] = undefined;\n                setStatus(key);\n            }, pending_timeouts[key]);\n        }\n    };\n\n    const clearPendings = (key) => {\n        const clear = (k) => {\n            clearTimeout(pendings[k]);\n            pendings[k] = undefined;\n            if (k === pending_keys.ws_request) {\n                setStatus('online');\n            }\n        };\n\n        if (key) {\n            clear(key);\n        } else {\n            Object.keys(pendings).forEach(clear);\n        }\n    };\n\n    return {\n        init,\n        wsEvent,\n    };\n})();\n\nmodule.exports = NetworkMonitorBase;\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"react\")):\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.button=t(require(\"react\")):(e[\"deriv-component\"]=e[\"deriv-component\"]||{},e[\"deriv-component\"].button=t(e.React))}(window,function(e){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=7)}([function(e,t,n){e.exports=n(3)()},function(t,n){t.exports=e},function(e,t,n){var r;\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n!function(){\"use strict\";var n={}.hasOwnProperty;function o(){for(var e=[],t=0;t<arguments.length;t++){var r=arguments[t];if(r){var a=typeof r;if(\"string\"===a||\"number\"===a)e.push(r);else if(Array.isArray(r)&&r.length){var i=o.apply(null,r);i&&e.push(i)}else if(\"object\"===a)for(var c in r)n.call(r,c)&&r[c]&&e.push(c)}}return e.join(\" \")}e.exports?(o.default=o,e.exports=o):void 0===(r=function(){return o}.apply(t,[]))||(e.exports=r)}()},function(e,t,n){\"use strict\";var r=n(4);function o(){}function a(){}a.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,a,i){if(i!==r){var c=new Error(\"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types\");throw c.name=\"Invariant Violation\",c}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:a,resetWarningCache:o};return n.PropTypes=n,n}},function(e,t,n){\"use strict\";e.exports=\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\"},function(e,t,n){},,function(e,t,n){\"use strict\";n.r(t);var r=n(2),o=n.n(r),a=n(0),i=n.n(a),c=n(1),s=n.n(c),u=(n(5),function(e){var t=e.children,n=e.className,r=void 0===n?\"\":n,a=e.classNameSpan,i=e.has_effect,c=e.id,u=e.is_disabled,f=e.onClick,p=e.tabIndex,l=e.text,d=e.wrapperClassName,y=o()(\"btn\",{effect:i},r),b=s.a.createElement(\"button\",{id:c,className:y,onClick:f||void 0,disabled:u,tabIndex:p||\"0\"},l&&s.a.createElement(\"span\",{className:o()(\"btn__text\",a)},l),t),m=s.a.createElement(\"div\",{className:d},b);return d?m:b});u.propTypes={children:i.a.node,className:i.a.string,classNameSpan:i.a.string,has_effect:i.a.bool,id:i.a.string,is_disabled:i.a.oneOfType([i.a.number,i.a.bool]),onClick:i.a.func,text:i.a.string,wrapperClassName:i.a.string};var f=u;t.default=f}]).default});\n//# sourceMappingURL=button.js.map","export *      from './contract';\nexport routes from './routes';\nexport *      from './ui';\n","const moment           = require('moment');\nconst isCryptocurrency = require('./currency_base').isCryptocurrency;\nconst SocketCache      = require('./socket_cache');\nconst localize         = require('../../App/i18n').localize;\nconst LocalStore       = require('../storage').LocalStore;\nconst State            = require('../storage').State;\nconst getPropertyValue = require('../utility').getPropertyValue;\nconst isEmptyObject    = require('../utility').isEmptyObject;\n\nconst ClientBase = (() => {\n    const storage_key = 'client.accounts';\n    let client_object = {};\n    let current_loginid;\n\n    const init = () => {\n        current_loginid = LocalStore.get('active_loginid');\n        client_object   = getAllAccountsObject();\n    };\n\n    const isLoggedIn = () => (\n        !isEmptyObject(getAllAccountsObject()) &&\n        get('loginid') &&\n        get('token')\n    );\n\n    const isValidLoginid = () => {\n        if (!isLoggedIn()) return true;\n        const valid_login_ids = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG)[0-9]+$', 'i');\n        return getAllLoginids().every(loginid => valid_login_ids.test(loginid));\n    };\n\n    /**\n     * Stores the client information in local variable and localStorage\n     *\n     * @param {String} key                 The property name to set\n     * @param {String|Number|Object} value The regarding value\n     * @param {String|null} loginid        The account to set the value for\n     */\n    const set = (key, value, loginid = current_loginid) => {\n        if (key === 'loginid' && value !== current_loginid) {\n            LocalStore.set('active_loginid', value);\n            current_loginid = value;\n        } else {\n            if (!(loginid in client_object)) {\n                client_object[loginid] = {};\n            }\n            client_object[loginid][key] = value;\n            LocalStore.setObject(storage_key, client_object);\n        }\n    };\n\n    /**\n     * Returns the client information\n     *\n     * @param {String|null} key     The property name to return the value from, if missing returns the account object\n     * @param {String|null} loginid The account to return the value from\n     */\n    const get = (key, loginid = current_loginid) => {\n        let value;\n        if (key === 'loginid') {\n            value = loginid || LocalStore.get('active_loginid');\n        } else {\n            const current_client = client_object[loginid] || getAllAccountsObject()[loginid] || client_object;\n\n            value = key ? current_client[key] : current_client;\n        }\n        if (!Array.isArray(value) && (+value === 1 || +value === 0 || value === 'true' || value === 'false')) {\n            value = JSON.parse(value || false);\n        }\n        return value;\n    };\n\n    const getAllAccountsObject = () => LocalStore.getObject(storage_key);\n\n    const getAllLoginids = () => Object.keys(getAllAccountsObject());\n\n    const getAccountType = (loginid = current_loginid) => {\n        let account_type;\n        if (/^VR/.test(loginid))          account_type = 'virtual';\n        else if (/^MF/.test(loginid))     account_type = 'financial';\n        else if (/^MLT|MX/.test(loginid)) account_type = 'gaming';\n        return account_type;\n    };\n\n    const isAccountOfType = (type, loginid = current_loginid, only_enabled = false) => {\n        const this_type   = getAccountType(loginid);\n        return ((\n            (type === 'virtual' && this_type === 'virtual') ||\n            (type === 'real'    && this_type !== 'virtual') ||\n            type === this_type) &&\n            (only_enabled ? !get('is_disabled', loginid) : true));\n    };\n\n    const getAccountOfType = (type, only_enabled) => {\n        const id = getAllLoginids().find(loginid => isAccountOfType(type, loginid, only_enabled));\n        return id ? Object.assign({ loginid: id }, get(null, id)) : {};\n    };\n\n    const hasAccountType = (type, only_enabled) => !isEmptyObject(getAccountOfType(type, only_enabled));\n\n    // only considers currency of real money accounts\n    // @param {String} type = crypto|fiat\n    const hasCurrencyType = (type) => {\n        const loginids = getAllLoginids();\n        if (type === 'crypto') {\n            // find if has crypto currency account\n            return loginids.find(loginid =>\n                !get('is_virtual', loginid) && isCryptocurrency(get('currency', loginid)));\n        }\n        // else find if have fiat currency account\n        return loginids.find(loginid =>\n            !get('is_virtual', loginid) && !isCryptocurrency(get('currency', loginid)));\n    };\n\n    const TypesMapConfig = (() => {\n        let types_map_config;\n\n        const initTypesMap = () => ({\n            default  : localize('Real'),\n            financial: localize('Investment'),\n            gaming   : localize('Gaming'),\n            virtual  : localize('Virtual'),\n        });\n\n        return {\n            get: () => {\n                if (!types_map_config) {\n                    types_map_config = initTypesMap();\n                }\n                return types_map_config;\n            },\n        };\n    })();\n\n    const getAccountTitle = loginid => {\n        const types_map = TypesMapConfig.get();\n        return (types_map[getAccountType(loginid)] || types_map.default);\n    };\n\n    const responseAuthorize = (response) => {\n        const authorize = response.authorize;\n        set('email',      authorize.email);\n        set('currency',   authorize.currency);\n        set('is_virtual', +authorize.is_virtual);\n        set('session_start', parseInt(moment().valueOf() / 1000));\n        set('landing_company_shortcode', authorize.landing_company_name);\n        updateAccountList(authorize.account_list);\n    };\n\n    const updateAccountList = (account_list) => {\n        account_list.forEach((account) => {\n            set('excluded_until', account.excluded_until || '', account.loginid);\n            Object.keys(account).forEach((param) => {\n                const param_to_set = param === 'country' ? 'residence' : param;\n                const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                if (param_to_set !== 'loginid') {\n                    set(param_to_set, value_to_set, account.loginid);\n                }\n            });\n        });\n    };\n\n    const shouldAcceptTnc = () => {\n        if (get('is_virtual')) return false;\n        const website_tnc_version = State.getResponse('website_status.terms_conditions_version');\n        const client_tnc_status   = State.getResponse('get_settings.client_tnc_status');\n        return typeof client_tnc_status !== 'undefined' && client_tnc_status !== website_tnc_version;\n    };\n\n    const clearAllAccounts = () => {\n        current_loginid = undefined;\n        client_object   = {};\n        LocalStore.setObject(storage_key, client_object);\n    };\n\n    const setNewAccount = (options) => {\n        if (!options.email || !options.loginid || !options.token) {\n            return false;\n        }\n\n        SocketCache.clear();\n        localStorage.setItem('GTM_new_account', '1');\n\n        set('token',      options.token,       options.loginid);\n        set('email',      options.email,       options.loginid);\n        set('is_virtual', +options.is_virtual, options.loginid);\n        set('loginid',    options.loginid);\n\n        return true;\n    };\n\n    const currentLandingCompany = () => {\n        const landing_company_response = State.getResponse('landing_company') || {};\n        const this_shortcode           = get('landing_company_shortcode');\n        const landing_company_prop     = Object.keys(landing_company_response).find((key) => (\n            this_shortcode === landing_company_response[key].shortcode\n        ));\n        return landing_company_response[landing_company_prop] || {};\n    };\n\n    const shouldCompleteTax = () => isAccountOfType('financial') &&\n        !/crs_tin_information/.test((State.getResponse('get_account_status') || {}).status);\n\n    // remove manager id or master distinction from group\n    // remove EUR or GBP distinction from group\n    const getMT5AccountType = group => (group ? group.replace('\\\\', '_').replace(/_(\\d+|master|EUR|GBP)/, '') : '');\n\n    const getBasicUpgradeInfo = () => {\n        const upgradeable_landing_companies = State.getResponse('authorize.upgradeable_landing_companies');\n\n        let can_open_multi = false;\n        let type,\n            can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            const current_landing_company = get('landing_company_shortcode');\n\n            can_open_multi = upgradeable_landing_companies.indexOf(current_landing_company) !== -1;\n\n            // only show upgrade message to landing companies other than current\n            const canUpgrade = (...landing_companies) => landing_companies.find(landing_company => (\n                landing_company !== current_landing_company &&\n                upgradeable_landing_companies.indexOf(landing_company) !== -1\n            ));\n\n            can_upgrade_to = canUpgrade('svg', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    };\n\n    const getLandingCompanyValue = (loginid, landing_company, key) => {\n        let landing_company_object;\n        if (loginid.financial || isAccountOfType('financial', loginid)) {\n            landing_company_object = getPropertyValue(landing_company, 'financial_company');\n        } else if (loginid.real || isAccountOfType('real', loginid)) {\n            landing_company_object = getPropertyValue(landing_company, 'gaming_company');\n\n            // handle accounts that don't have gaming company\n            if (!landing_company_object) {\n                landing_company_object = getPropertyValue(landing_company, 'financial_company');\n            }\n        } else {\n            const financial_company = (getPropertyValue(landing_company, 'financial_company') || {})[key] || [];\n            const gaming_company    = (getPropertyValue(landing_company, 'gaming_company') || {})[key] || [];\n            landing_company_object  = financial_company.concat(gaming_company);\n            return landing_company_object;\n        }\n        return (landing_company_object || {})[key];\n    };\n\n    const getRiskAssessment = () => {\n        const status       = State.getResponse('get_account_status.status');\n        const is_high_risk = /high/.test(State.getResponse('get_account_status.risk_classification'));\n\n        return (\n            isAccountOfType('financial') ?\n                /(financial_assessment|trading_experience)_not_complete/.test(status) :\n                (is_high_risk && /financial_assessment_not_complete/.test(status))\n        );\n    };\n\n    // API_V3: send a list of accounts the client can transfer to\n    const canTransferFunds = (account) => {\n        if (account) {\n            // this specific account can be used to transfer funds to\n            return canTransferFundsTo(account.loginid);\n        }\n        // at least one account can be used to transfer funds to\n        return Object.keys(client_object).some(loginid => canTransferFundsTo(loginid));\n    };\n\n    const canTransferFundsTo = (to_loginid) => {\n        if (to_loginid === current_loginid || get('is_virtual', to_loginid) || get('is_virtual') ||\n            get('is_disabled', to_loginid)) {\n            return false;\n        }\n        const from_currency = get('currency');\n        const to_currency   = get('currency', to_loginid);\n        if (!from_currency || !to_currency) {\n            return false;\n        }\n        // only transfer to other accounts that have the same currency as current account if one is maltainvest and one is malta\n        if (from_currency === to_currency) {\n            // these landing companies are allowed to transfer funds to each other if they have the same currency\n            const same_cur_allowed = {\n                maltainvest: 'malta',\n                malta      : 'maltainvest',\n            };\n            const from_landing_company = get('landing_company_shortcode');\n            const to_landing_company   = get('landing_company_shortcode', to_loginid);\n            // if same_cur_allowed[from_landing_company] is undefined and to_landing_company is also undefined, it will return true\n            // so we should compare '' === undefined instead\n            return (same_cur_allowed[from_landing_company] || '') === to_landing_company;\n        }\n        // or for other clients if current account is cryptocurrency it should only transfer to fiat currencies and vice versa\n        const is_from_crypto = isCryptocurrency(from_currency);\n        const is_to_crypto   = isCryptocurrency(to_currency);\n        return (is_from_crypto ? !is_to_crypto : is_to_crypto);\n    };\n\n    const hasSvgAccount = () => !!(getAllLoginids().find(loginid => /^CR/.test(loginid)));\n\n    const canChangeCurrency = (statement, mt5_login_list, is_current = true) => {\n        const currency             = get('currency');\n        const has_no_mt5           = mt5_login_list.length === 0;\n        const has_no_transaction   = (statement.count === 0 && statement.transactions.length === 0);\n        const has_account_criteria = has_no_transaction && has_no_mt5;\n\n        // Current API requirements for currently logged-in user successfully changing their account's currency:\n        // 1. User must not have made any transactions\n        // 2. User must not have any MT5 account\n        // 3. Not be a crypto account\n        // 4. Not be a virtual account\n        return is_current ? currency && !get('is_virtual') && has_account_criteria && !isCryptocurrency(currency) : has_account_criteria;\n    };\n\n    return {\n        init,\n        isLoggedIn,\n        isValidLoginid,\n        set,\n        get,\n        getAllLoginids,\n        getAccountType,\n        isAccountOfType,\n        getAccountOfType,\n        hasAccountType,\n        hasCurrencyType,\n        getAccountTitle,\n        responseAuthorize,\n        shouldAcceptTnc,\n        clearAllAccounts,\n        setNewAccount,\n        currentLandingCompany,\n        shouldCompleteTax,\n        getAllAccountsObject,\n        getMT5AccountType,\n        getBasicUpgradeInfo,\n        getLandingCompanyValue,\n        getRiskAssessment,\n        canTransferFunds,\n        hasSvgAccount,\n        canChangeCurrency,\n    };\n})();\n\nmodule.exports = ClientBase;\n","import { str as crc32 }     from 'crc-32';\nimport i18n                 from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport * as messages        from 'Translations/messages.json';\n\nconst i18n_config = {\n    resources: {\n        EN: {\n            translation: {\n                ...messages,\n            },\n        },\n    },\n    react: {\n        hashTransKey(defaultValue) {\n            return crc32(defaultValue);\n        },\n    },\n    lng: window.location.search ?\n        window.location.search.includes('lang=') ?\n            window.location.search\n                .substr(1).split('&')\n                .find(query => query.includes('lang='))\n                .split('=')[1]\n                .toUpperCase()\n            : undefined\n        : undefined,\n    fallbackLng: 'EN',\n};\n\ni18n\n    .use(initReactI18next) // passes i18n down to react-i18next\n    .init(i18n_config);\n\nexport const localize = (string, values) => i18n.t(crc32(string), { defaultValue: string, ...values });\n\nexport default i18n;\n","const urlForLanguage             = require('./language').urlFor;\nconst getLanguage                = require('./language').get;\nconst getCurrentProductionDomain = require('../config').getCurrentProductionDomain;\nrequire('url-polyfill');\n\nconst Url = (() => {\n    let location_url,\n        static_host;\n\n    const reset = () => {\n        location_url = window ? window.location : location_url;\n    };\n\n    const params = (href) => {\n        const arr_params = [];\n        const parsed     = ((href ? new URL(href) : location_url).search || '').substr(1).split('&');\n        let p_l          = parsed.length;\n        while (p_l--) {\n            const param = parsed[p_l].split('=');\n            arr_params.push(param);\n        }\n        return arr_params;\n    };\n\n    const paramsHash = (href) => {\n        const param_hash = {};\n        const arr_params = params(href);\n        let param        = arr_params.length;\n        while (param--) {\n            if (arr_params[param][0]) {\n                param_hash[arr_params[param][0]] = arr_params[param][1] || '';\n            }\n        }\n        return param_hash;\n    };\n\n    const normalizePath = path => (path ? path.replace(/(^\\/|\\/$|[^a-zA-Z0-9-_/])/g, '') : '');\n\n    const urlFor = (path, pars, language, should_change_to_legacy = false) => {\n        const lang = (language || getLanguage()).toLowerCase();\n        let domain = `https://${window.location.hostname}/`;\n        if (should_change_to_legacy) {\n            if (/localhost|binary\\.sx/.test(domain)) {\n                domain = `https://binary.com/${lang || 'en'}/`;\n            } else {\n                domain = domain.replace(/deriv\\.app/, `binary.com/${lang || 'en'}`);\n            }\n        }\n        const new_url = `${domain}${(normalizePath(path) || 'home')}.html${(pars ? `?${pars}` : '')}`;\n        // replace old lang with new lang\n        return urlForLanguage(lang, new_url);\n    };\n\n    const default_domain = 'binary.com';\n    const host_map = { // the exceptions regarding updating the URLs\n        'bot.binary.com'       : 'www.binary.bot',\n        'developers.binary.com': 'developers.binary.com', // same, shouldn't change\n        'academy.binary.com'   : 'academy.binary.com',\n        'tech.binary.com'      : 'tech.binary.com',\n        'blog.binary.com'      : 'blog.binary.com',\n    };\n\n    const urlForCurrentDomain = (href) => {\n        const current_domain = getCurrentProductionDomain();\n\n        if (!current_domain) {\n            return href; // don't change when domain is not supported\n        }\n\n        const url_object = new URL(href);\n        if (Object.keys(host_map).includes(url_object.hostname)) {\n            url_object.hostname = host_map[url_object.hostname];\n        } else if (url_object.hostname.indexOf(default_domain) !== -1) {\n            // to keep all non-Binary links unchanged, we use default domain for all Binary links in the codebase (javascript and templates)\n            url_object.hostname = url_object.hostname.replace(new RegExp(`\\\\.${default_domain}`, 'i'), `.${current_domain}`);\n        } else {\n            return href;\n        }\n\n        return url_object.href;\n    };\n\n    const urlForStatic = (path = '') => {\n        if (!static_host || static_host.length === 0) {\n            static_host = document.querySelector('script[src*=\"vendor.min.js\"]');\n            if (static_host) {\n                static_host = static_host.getAttribute('src');\n            }\n\n            if (static_host && static_host.length > 0) {\n                static_host = static_host.substr(0, static_host.indexOf('/js/') + 1);\n            } else {\n                static_host = Url.websiteUrl();\n            }\n        }\n\n        return static_host + path.replace(/(^\\/)/g, '');\n    };\n\n    const getUrlBase = (path = '') => {\n        const l = window.location;\n\n        if (!/^\\/br_/.test(l.pathname)) return path;\n\n        return `/${l.pathname.split('/')[1]}${/^\\//.test(path) ? path : `/${path}`}`;\n    };\n\n    return {\n        getUrlBase,\n        reset,\n        paramsHash,\n        urlFor,\n        urlForCurrentDomain,\n        urlForStatic,\n\n        param          : name => paramsHash()[name],\n        websiteUrl     : () => `${location.protocol}//${location.hostname}/`,\n        getHostMap     : () => host_map,\n        resetStaticHost: () => { static_host = undefined; },\n    };\n})();\n\nmodule.exports = Url;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport UILoader  from 'App/Components/Elements/ui-loader.jsx';\n\nclass Lazy extends React.PureComponent {\n    render() {\n        const {\n            should_load = true,\n            ctor,\n            has_progress,\n            ...component_props\n        } = this.props;\n\n        if (!should_load) {\n            return null;\n        }\n\n        const LazyLoadedComponent = React.lazy(ctor);\n\n        return (\n            <React.Suspense fallback={has_progress ? <UILoader /> : <div />}>\n                <LazyLoadedComponent {...component_props} />\n            </React.Suspense>\n        );\n    }\n}\n\n// Lazy Load the component by default.\nLazy.defaultProps = {\n    should_load : true,\n    has_progress: false,\n};\n\nLazy.propTypes = {\n    ctor        : PropTypes.func.isRequired,\n    has_progress: PropTypes.bool,\n    should_load : PropTypes.bool,\n};\n\nexport default Lazy;\n","const moment       = require('moment');\nconst BinarySocket = require('./socket_base');\nconst PromiseClass = require('../utility').PromiseClass;\n\nconst ServerTime = (() => {\n    let clock_started = false;\n    const pending = new PromiseClass();\n    let server_time,\n        performance_request_time,\n        get_time_interval,\n        update_time_interval,\n        onTimeUpdated;\n\n    const init = (fncTimeUpdated) => {\n        if (!clock_started) {\n            onTimeUpdated = fncTimeUpdated;\n            requestTime();\n            clearInterval(get_time_interval);\n            get_time_interval = setInterval(requestTime, 30000);\n            clock_started = true;\n        }\n    };\n\n    const requestTime = () => {\n        performance_request_time = performance.now();\n        BinarySocket.send({ time: 1 }).then(timeCounter);\n    };\n\n    const timeCounter = (response) => {\n        if (response.error) return;\n\n        if (!clock_started) {\n            init();\n            return;\n        }\n\n        clearInterval(update_time_interval);\n\n        const start_timestamp = response.time;\n        const performance_response_time = performance.now();\n        const time_taken = performance_response_time - performance_request_time;\n        const server_time_at_response = ((start_timestamp * 1000) + time_taken);\n\n        const updateTime = () => {\n            const time_since_response = performance.now() - performance_response_time;\n            server_time = moment(server_time_at_response + time_since_response).utc();\n\n            if (typeof onTimeUpdated === 'function') {\n                onTimeUpdated();\n            }\n        };\n        updateTime();\n        pending.resolve();\n        update_time_interval = setInterval(updateTime, 1000);\n    };\n\n    const get = () => server_time ? server_time.clone() : undefined;\n\n    return {\n        init,\n        get,\n        timePromise: pending.promise,\n    };\n})();\n\nmodule.exports = ServerTime;\n","import { localize } from 'App/i18n';\nimport { toMoment } from 'Utils/Date';\n\nconst getDurationMaps = () => ({\n    t: { display: localize('ticks'),   order: 1 },\n    s: { display: localize('seconds'), order: 2, to_second: 1 },\n    m: { display: localize('minutes'), order: 3, to_second: 60 },\n    h: { display: localize('hours'),   order: 4, to_second: 60 * 60 },\n    d: { display: localize('days'),    order: 5, to_second: 60 * 60 * 24 },\n});\n\nexport const buildDurationConfig = (contract, durations = { min_max: {}, units_display: {} }) => {\n    durations.min_max[contract.start_type]       = durations.min_max[contract.start_type] || {};\n    durations.units_display[contract.start_type] = durations.units_display[contract.start_type] || [];\n\n    const obj_min = getDurationFromString(contract.min_contract_duration);\n    const obj_max = getDurationFromString(contract.max_contract_duration);\n\n    durations.min_max[contract.start_type][contract.expiry_type] = {\n        min: convertDurationUnit(obj_min.duration, obj_min.unit, 's'),\n        max: convertDurationUnit(obj_max.duration, obj_max.unit, 's'),\n    };\n\n    const arr_units = [];\n    durations.units_display[contract.start_type].forEach(obj => {\n        arr_units.push(obj.value);\n    });\n\n    const duration_maps = getDurationMaps();\n\n    if (/^tick|daily$/.test(contract.expiry_type)) {\n        if (arr_units.indexOf(obj_min.unit) === -1) {\n            arr_units.push(obj_min.unit);\n        }\n    } else {\n        Object.keys(duration_maps).forEach(u => {\n            if (\n                u !== 'd' && // when the expiray_type is intraday, the supported units are seconds, minutes and hours.\n                arr_units.indexOf(u) === -1 &&\n                duration_maps[u].order >= duration_maps[obj_min.unit].order &&\n                duration_maps[u].order <= duration_maps[obj_max.unit].order) {\n                arr_units.push(u);\n            }\n        });\n    }\n\n    durations.units_display[contract.start_type] = arr_units\n        .sort((a, b) => (duration_maps[a].order > duration_maps[b].order ? 1 : -1))\n        .reduce((o, c) => (\n            [...o, { text: duration_maps[c].display, value: c }]\n        ), []);\n\n    return durations;\n};\n\nexport const convertDurationUnit = (value, from_unit, to_unit) => {\n    if (!value || !from_unit || !to_unit || isNaN(parseInt(value))) {\n        return null;\n    }\n\n    const duration_maps = getDurationMaps();\n\n    if (from_unit === to_unit || !('to_second' in duration_maps[from_unit])) {\n        return value;\n    }\n\n    return (value * duration_maps[from_unit].to_second) / duration_maps[to_unit].to_second;\n};\n\nconst getDurationFromString = (duration_string) => {\n    const duration = duration_string.toString().match(/[a-zA-Z]+|[0-9]+/g);\n    return {\n        duration: +duration[0], // converts string to numbers\n        unit    : duration[1],\n    };\n};\n\nexport const getExpiryType = (store) => {\n    const { duration_unit, expiry_date, expiry_type, duration_units_list } = store;\n    const server_time = store.root_store.common.server_time;\n\n    const duration_is_day       = expiry_type === 'duration' && duration_unit === 'd';\n    const expiry_is_after_today = expiry_type === 'endtime' && (toMoment(expiry_date).isAfter(toMoment(server_time), 'day') ||\n        !hasIntradayDurationUnit(duration_units_list));\n\n    let contract_expiry_type = 'daily';\n    if (!duration_is_day && !expiry_is_after_today) {\n        contract_expiry_type = duration_unit === 't' ? 'tick' : 'intraday';\n    }\n\n    return contract_expiry_type;\n};\n\nexport const convertDurationLimit = (value, unit) => {\n    if (!(value >= 0) || !unit || !Number.isInteger(value)) {\n        return null;\n    }\n\n    if (unit === 'm') {\n        const minute = value / 60;\n        return minute >= 1 ? Math.floor(minute) : 1;\n    } else if (unit === 'h') {\n        const hour = value / (60 * 60);\n        return hour >= 1 ? Math.floor(hour) : 1;\n    } else if (unit === 'd') {\n        const day = value / (60 * 60 * 24);\n        return day >= 1 ? Math.floor(day) : 1;\n    }\n\n    return value;\n};\n\nexport const hasIntradayDurationUnit = (duration_units_list) => (\n    duration_units_list.some(unit => ['m', 'h'].indexOf(unit.value) !== -1)\n);\n\n/**\n * On switching symbols, end_time value of volatility indices should be set to today\n *\n * @param {String} symbol\n * @param {String} expiry_type\n * @returns {*}\n */\nexport const resetEndTimeOnVolatilityIndices = (symbol, expiry_type) => (\n    (/^R_/.test(symbol) && expiry_type === 'endtime') ? toMoment(null).format('DD MMM YYYY') : null\n);\n","import moment       from 'moment';\nimport { localize } from 'App/i18n';\nimport ServerTime   from '_common/base/server_time';\n\n// Disables moment's fallback to native Date object\n// moment will return `Invalid Date` if date cannot be parsed\nmoment.createFromInputFallback = function (config) {\n    config._d = new Date(NaN); // eslint-disable-line no-underscore-dangle\n};\n\n/**\n * Convert epoch to moment object\n * @param  {Number} epoch\n * @return {moment} the moment object of provided epoch\n */\nexport const epochToMoment = epoch => moment.unix(epoch).utc();\n\n/**\n * Convert date string or epoch to moment object\n * @param  {Number} value   the date in epoch format\n * @param  {String} value   the date in string format\n * @return {moment} the moment object of 'now' or the provided date epoch or string\n */\nexport const toMoment = value => {\n    if (!value) return ServerTime.get() || moment().utc(); // returns 'now' moment object\n    if (value instanceof moment && value.isValid() && value.isUTC()) return value; // returns if already a moment object\n    if (typeof value === 'number') return epochToMoment(value); // returns epochToMoment() if not a date\n\n    if (/invalid/i.test(moment(value))) {\n        const today_moment = moment();\n        return value > today_moment.utc().daysInMonth() ? moment.utc(today_moment.add(value, 'd'), 'DD MMM YYYY') : moment.utc(value, 'DD MMM YYYY'); // returns target date\n    }\n    return moment.utc(value);\n};\n\n/**\n * Set specified time on moment object\n * @param  {moment} moment_obj  the moment to set the time on\n * @param  {String} time        24 hours format, may or may not include seconds\n * @return {moment} a new moment object of result\n */\nexport const setTime = (moment_obj, time) => {\n    const [hour, minute, second] = time ? time.split(':') : [0, 0, 0];\n    moment_obj.hour(hour).minute(minute || 0).second(second || 0);\n    return moment_obj;\n};\n\n/**\n * return the unix value of provided epoch and time\n * @param  {Number} epoch  the date to update with provided time\n * @param  {String} time   the time to set on the date\n * @return {Number} unix value of the result\n */\nexport const convertToUnix = (epoch, time) => setTime(toMoment(epoch), time).unix();\n\nexport const toGMTFormat = (time) => moment(time || undefined).utc().format('YYYY-MM-DD HH:mm:ss [GMT]');\n\nexport const formatDate = (date, date_format = 'YYYY-MM-DD') => toMoment(date).format(date_format);\n\n/**\n * return the number of days from today to date specified\n * @param  {String} date   the date to calculate number of days from today\n * @return {Number} an integer of the number of days\n */\nexport const daysFromTodayTo = (date) => {\n    const diff = toMoment(date).startOf('day').diff(toMoment().startOf('day'), 'days');\n    return (!date || diff < 0) ? '' : diff;\n};\n\n/**\n * return the number of months between two specified dates\n */\nexport const diffInMonths = (now, then) => then.diff(now, 'month');\n/**\n * return moment duration between two dates\n * @param  {Number} epoch start time\n * @param  {Number} epoch end time\n * @return {moment.duration} moment duration between start time and end time\n */\nexport const getDiffDuration = (start_time, end_time) =>\n    moment.duration(moment.unix(end_time).diff(moment.unix(start_time)));\n\n/**\n * return formatted duration `2 days 01:23:59`\n * @param  {moment.duration} moment duration object\n * @return {String} formatted display string\n */\nexport const formatDuration = (duration) => {\n    const d = Math.floor(duration.asDays()); // duration.days() does not include months/years\n    const h = duration.hours();\n    const m = duration.minutes();\n    const s = duration.seconds();\n    let formatted_str = moment(0).hour(h).minute(m).seconds(s).format('HH:mm:ss');\n    if (d > 0) {\n        formatted_str = `${d} ${d > 1 ? localize('days') : localize('day')} ${formatted_str}`;\n    }\n    return formatted_str;\n};\n\n/**\n * return true if the time_str is in \"HH:MM\" format, else return false\n * @param {String} time_str time\n */\nexport const isTimeValid = time_str => /^([0-9]|[0-1][0-9]|2[0-3]):([0-9]|[0-5][0-9])(:([0-9]|[0-5][0-9]))?$/.test(time_str);\n\n/**\n * return true if the time_str's hour is between 0 and 23, else return false\n * @param {String} time_str time\n */\nexport const isHourValid = time_str => isTimeValid(time_str) && /^([01][0-9]|2[0-3])$/.test(time_str.split(':')[0]);\n\n/**\n * return true if the time_str's minute is between 0 and 59, else return false\n * @param {String} time_str time\n */\nexport const isMinuteValid = time_str => isTimeValid(time_str) && /^[0-5][0-9]$/.test(time_str.split(':')[1]);\n\n/**\n * return true if the date is typeof string and a valid moment date, else return false\n * @param {String|moment} date date\n */\nexport const isDateValid = date => moment(date, 'DD MMM YYYY').isValid();\n\n/**\n * add the specified number of days to the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to add\n */\nexport const addDays = (date, num_of_days) => toMoment(date).clone().add(num_of_days, 'day');\n\n/**\n * add the specified number of months to the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to add\n */\nexport const addMonths = (date, num_of_months) => toMoment(date).clone().add(num_of_months, 'month');\n\n/**\n * add the specified number of years to the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to add\n */\nexport const addYears = (date, num_of_years) => toMoment(date).clone().add(num_of_years, 'year');\n\n/**\n * subtract the specified number of days from the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to subtract\n */\nexport const subDays = (date, num_of_days) => toMoment(date).clone().subtract(num_of_days, 'day');\n\n/**\n * subtract the specified number of months from the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to subtract\n */\nexport const subMonths = (date, num_of_months) => toMoment(date).clone().subtract(num_of_months, 'month');\n\n/**\n * subtract the specified number of years from the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to subtract\n */\nexport const subYears = (date, num_of_years) => toMoment(date).clone().subtract(num_of_years, 'year');\n\n/**\n * returns the minimum moment between the two passing parameters\n * @param {moment|string|epoch} first datetime parameter\n * @param {moment|string|epoch} second datetime parameter\n */\nexport const minDate = (date_1, date_2) => moment.min(toMoment(date_1), toMoment(date_2));\n\n/**\n * returns a new date\n * @param {moment|string|epoch} date date\n */\nexport const getStartOfMonth = (date) => toMoment(date).clone().startOf('month').format('YYYY-MM-DD');\n\n/**\n * returns miliseconds into UTC formatted string\n * @param {Number} miliseconds miliseconds\n * @param {String} str_format formatting using moment e.g - YYYY-MM-DD HH:mm\n */\nexport const formatMiliseconds = (miliseconds, str_format) => moment.utc(miliseconds).format(str_format);\n","export * from './date-time';\n","const Cookies       = require('js-cookie');\nconst CookieStorage = require('./storage').CookieStorage;\n\nconst Language = (() => {\n    const all_languages = {\n        ACH  : 'Translations',\n        EN   : 'English',\n        DE   : 'Deutsch',\n        ES   : 'Español',\n        FR   : 'Français',\n        ID   : 'Indonesia',\n        IT   : 'Italiano',\n        PL   : 'Polish',\n        PT   : 'Português',\n        RU   : 'Русский',\n        TH   : 'Thai',\n        VI   : 'Tiếng Việt',\n        ZH_CN: '简体中文',\n        ZH_TW: '繁體中文',\n    };\n    const default_language = 'EN';\n\n    const setCookieLanguage = (lang) => {\n        if (!Cookies.get('language') || lang) {\n            const cookie = new CookieStorage('language');\n            cookie.write((lang || getLanguage()).toUpperCase());\n        }\n    };\n\n    let url_lang = null;\n\n    const lang_regex = new RegExp(`^(${Object.keys(all_languages).join('|')})$`, 'i');\n\n    const languageFromUrl = (custom_url) => {\n        if (url_lang && !custom_url) return url_lang;\n        const url_params = (custom_url || window.location.href).split('/').slice(3);\n        const language   = (url_params.find(lang => lang_regex.test(lang)) || '');\n        if (!custom_url) {\n            url_lang = language;\n        }\n        return language;\n    };\n\n    let current_lang = null;\n\n    const getLanguage = () => {\n        if (/ach/i.test(current_lang) || /ach/i.test(languageFromUrl())) {\n            const crowdin_lang_key = 'jipt_language_code_binary-static';\n            const crowdin_lang     = localStorage.getItem(crowdin_lang_key) || Cookies.get(crowdin_lang_key); // selected language for in-context translation\n            if (crowdin_lang) {\n                current_lang = crowdin_lang.toUpperCase().replace('-', '_').toUpperCase();\n                if (document.body) {\n                    document.body.classList.add(current_lang); // set the body class removed by crowdin code\n                }\n            }\n        }\n        current_lang = (current_lang || (languageFromUrl() || Cookies.get('language') || default_language).toUpperCase());\n        return current_lang;\n    };\n\n    const urlForLanguage = (lang, url = window.location.href) =>\n        url.replace(new RegExp(`/${getLanguage()}/`, 'i'), `/${(lang || default_language).trim().toLowerCase()}/`);\n\n    return {\n        getAll   : () => all_languages,\n        setCookie: setCookieLanguage,\n        get      : getLanguage,\n        urlFor   : urlForLanguage,\n        urlLang  : languageFromUrl,\n        reset    : () => { url_lang = null; current_lang = null; },\n    };\n})();\n\nmodule.exports = Language;\n","const routes = {\n    error404        : '/404',\n    account_password: '/settings/account_password',\n    apps            : '/settings/apps',\n    cashier_password: '/settings/cashier_password',\n    contract        : '/contract/:contract_id',\n    exclusion       : '/settings/exclusion',\n    financial       : '/settings/financial',\n    history         : '/settings/history',\n    index           : '/index',\n    limits          : '/settings/limits',\n    personal        : '/settings/personal',\n    positions       : '/reports/positions',\n    profit          : '/reports/profit',\n    reports         : '/reports',\n    root            : '/',\n    redirect        : '/redirect',\n    settings        : '/settings',\n    statement       : '/reports/statement',\n    token           : '/settings/token',\n    trade           : '/',\n};\n\nexport default routes;\n","if (window.NodeList && !NodeList.prototype.forEach) {\n    NodeList.prototype.forEach = function (callback, thisArg) {\n        thisArg = thisArg || window;\n        for (var i = 0; i < this.length; i++) {\n            callback.call(thisArg, this[i], i, this);\n        }\n    };\n}\n","if (!Element.prototype.closest) {\n    Element.prototype.closest = function(s) {\n        var el = this;\n        if (!document.documentElement.contains(el)) return null;\n        do {\n            if (el.matches(s)) return el;\n            el = el.parentElement || el.parentNode;\n        } while (el !== null && el.nodeType === 1); \n        return null;\n    };\n}\n","Element.prototype.hide = function() {\n    this.style.display = 'none';\n    return this;\n};\n\nElement.prototype.show = function() {\n    this.style.display = '';\n    return this;\n};\n\nif (!('remove' in Element.prototype)) {\n    Element.prototype.remove = function() {\n        if (this.parentNode) {\n            this.parentNode.removeChild(this);\n        }\n        return this;\n    };\n}\n\nElement.prototype.toggleClass = function(class_name, should_add) {\n    if (typeof should_add === 'undefined') { // toggle\n        should_add = !this.classList.contains(class_name);\n    }\n    this.classList[should_add ? 'add' : 'remove'](class_name);\n    return this;\n};\n\nElement.prototype.setVisibility = function(make_visible) {\n    this.toggleClass('invisible', !make_visible);\n    return this;\n};\n\n\nElement.prototype.html = function(content) {\n    if (typeof content === 'object') {\n        this.innerHTML = '';\n        this.appendChild(content);\n    } else {\n        this.innerHTML = content;\n    }\n    return this;\n};\n","import BinarySocket   from './socket_base';\nimport {\n    cloneObject,\n    getPropertyValue,\n    isDeepEqual,\n    isEmptyObject }   from '../utility';\n\n/**\n * A layer over BinarySocket to handle subscribing to streaming calls\n * in order to keep track of subscriptions, manage forget, prevent multiple subscription at the same time, ...\n *\n * structure of the the subscription object is:\n * {\n *     1: { msg_type: 'proposal', request: { ... }, stream_id: '...', subscribers: [ ... ] },\n *     2: ...\n * }\n * object keys: subscription_id that assigned to each subscription\n * msg_type   : msg_type of the request for faster filtering\n * request    : the request object, used to subscribe to the same stream when there is a new subscribe request with exactly the same values\n * stream_id  : id of the stream which stored from its response and used to forget the stream when needed\n * subscribers: an array of callbacks to dispatch the response to\n */\nconst SubscriptionManager = (() => {\n    const subscriptions    = {};\n    const forget_requested = {};\n\n    let subscription_id = 0;\n\n    /**\n     * To submit request for a new subscription\n     *\n     * @param {String}   msg_type             msg_type of the request\n     * @param {Object}   request_obj          the whole object of the request to be made\n     * @param {Function} fncCallback          callback function to pass the responses to\n     * @param {Boolean}  should_forget_first  when it's true: forgets the previous subscription, then subscribes after receiving the forget response (if any)\n     */\n    const subscribe = (msg_type, request_obj, fncCallback, should_forget_first = false) => {\n        if (should_forget_first) {\n            forget(msg_type, fncCallback).then(() => {\n                subscribe(msg_type, request_obj, fncCallback);\n            });\n            return;\n        }\n\n        let sub_id = Object.keys(subscriptions).find(id => isDeepEqual(request_obj, subscriptions[id].request));\n\n        if (!sub_id) {\n            sub_id = ++subscription_id;\n\n            subscriptions[sub_id] = {\n                msg_type,\n                request    : cloneObject(request_obj),\n                stream_id  : '',             // stream_id will be updated after receiving the response\n                subscribers: [fncCallback],\n            };\n\n            BinarySocket.send(request_obj, {\n                callback: (response) => dispatch(response, sub_id),\n            });\n        } else if (!hasCallbackFunction(sub_id, fncCallback)) {\n            // there is already an active subscription for the very same request which fncCallback is not subscribed to it yet\n            subscriptions[sub_id].subscribers.push(fncCallback);\n        }\n    };\n\n    /**\n     * Add subscription without subscribers from request\n     * E.g. open subscription to proposal_open_contract on buy request\n     * @param {String}   msg_type               msg_type of the subscription\n     * @param {Object}   send_request           the object of the request to be made\n     * @param {Object}   subscribe_request      the object of the subscription request\n     * @param {Array}    subscription_props     Array of prop strings to add to subscribe_request from initial request, e.g. contract_id\n     */\n    const addSubscriptionFromRequest = (msg_type, send_request, subscribe_request, subscription_props) =>\n        new Promise((resolve) => {\n            let sub_id;\n            let is_stream = false;\n\n            BinarySocket.send(send_request, {\n                callback: (response) => {\n                    if (response.error) {\n                        return resolve(response);\n                    }\n                    if (!is_stream) {\n                        is_stream = true;\n                        sub_id    = ++subscription_id;\n\n                        if (subscription_props && Array.isArray(subscription_props)) {\n                            subscription_props.forEach((prop) => {\n                                if (response[response.msg_type][prop]) {\n                                    subscribe_request[prop] = response[response.msg_type][prop];\n                                }\n                            });\n                        }\n\n                        subscriptions[sub_id] = {\n                            msg_type,\n                            request    : cloneObject(subscribe_request),\n                            stream_id  : '',             // stream_id will be updated after receiving the response\n                            subscribers: [],\n                        };\n                        return resolve(response);\n                    }\n                    return dispatch(response, sub_id);\n                },\n            });\n        });\n\n    // dispatches the response to subscribers of the specific subscription id (internal use only)\n    const dispatch = (response, sub_id) => {\n        const stream_id = getPropertyValue(response, [response.msg_type, 'id']) || getPropertyValue(response.subscription, ['id']);\n\n        if (!subscriptions[sub_id]) {\n            if (!forget_requested[stream_id]) {\n                forgetStream(stream_id);\n            }\n            return;\n        }\n\n        const sub_info = subscriptions[sub_id];\n        // set the stream_id\n        if (!sub_info.stream_id && stream_id) {\n            sub_info.stream_id = stream_id;\n        }\n\n        // callback subscribers\n        const subscribers = sub_info.subscribers;\n        if (subscribers.length) {\n            if (\n                // it is the first response\n                !sub_info.stream_id &&\n                    (\n                        // the first response returned error\n                        response.error\n                        || (\n                            // not a subscription (i.e. subscribed proposal_open_contract for an expired contract)\n                            // also to filter out streams with no stream id but later it will continue streaming (i.e. proposal_open_contract without contract id)\n                            !isEmptyObject(response[response.msg_type]) &&\n                            // check msg_type to filter out those calls which don't return stream `id` on first response (tick_history, ...)\n                            response.msg_type === sub_info.msg_type\n                        )\n                    )\n                ||\n                // remove when response isn't first and response has no stream_id\n                !stream_id && sub_info.stream_id\n            ) {\n                delete subscriptions[sub_id];\n            }\n            sub_info.subscribers.forEach((fnc) => {\n                fnc(response);\n            });\n        } else {\n            delete subscriptions[sub_id];\n            forgetStream(sub_info.stream_id);\n        }\n    };\n\n    /**\n     * To forget a subscription which submitted for a specific callback function\n     *\n     * @param  {String}   msg_type      msg_type to forget\n     * @param  {Function} fncCallback   the same function passed to subscribe()\n     *     (this is the way to distinguish between different subscribers of the same stream at the same time)\n     * @param  {Object}   match_values  optional, to only forget subscriptions having request that \"contains\" provided values\n     * @return {Promise}  the promise object of all possible forget requests\n     */\n    const forget = (msg_type, fncCallback, match_values) => {\n        if (typeof fncCallback !== 'function') {\n            throw new Error(`Missing callback function. To forget all subscriptions of msg_type: ${msg_type}, please call forgetAll().`);\n        }\n\n        const forgets_list = [];\n        Object.keys(subscriptions).forEach((id) => {\n            if (subscriptions[id].msg_type === msg_type) { // it's the msg_type we are looking for\n                if (!match_values || hasValues(subscriptions[id].request, match_values)) { // the value matches as well\n                    const stream_id = subscriptions[id].stream_id;\n                    if (stream_id && subscriptions[id].subscribers.length === 1) { // there is only one subscriber, so we can forget the call\n                        delete subscriptions[id];\n                        forgets_list.push(forgetStream(stream_id));\n                    } else if (hasCallbackFunction(id, fncCallback)) {\n                        // there are other subscribers, or for some reason there is no stream_id:\n                        // (i.e. returned an error, or forget() being called before the first response)\n                        subscriptions[id].subscribers.splice(subscriptions[id].subscribers.indexOf(fncCallback), 1);\n                    }\n                }\n            }\n        });\n        return Promise.all(forgets_list);\n    };\n\n    /**\n     * To forget all active subscriptions of a list of msg_types\n     *\n     * @param  {String}  msg_types  list of msg_types to forget\n     * @return {Promise} the promise object of all possible forget_all requests\n     */\n    const forgetAll = (...msg_types) => {\n        const types_to_forget = {};\n\n        msg_types.forEach((msg_type) => {\n            const sub_ids = Object.keys(subscriptions).filter(id => subscriptions[id].msg_type === msg_type);\n            if (sub_ids.length) {\n                sub_ids.forEach((id) => {\n                    delete subscriptions[id];\n                });\n                types_to_forget[msg_type] = true;\n            }\n        });\n\n        return Promise.resolve(\n            !isEmptyObject(types_to_forget) ?\n                BinarySocket.send({ forget_all: Object.keys(types_to_forget) }) :\n                {}\n        );\n    };\n\n    const forgetStream = (stream_id) => {\n        forget_requested[stream_id] = true; // to prevent forgetting multiple times\n        return Promise.resolve(\n            stream_id ?\n                BinarySocket.send({ forget: stream_id }).then(() => { delete forget_requested[stream_id]; }) :\n                {}\n        );\n    };\n\n    const hasCallbackFunction = (sub_id, fncCallback) =>\n        (subscriptions[sub_id] && subscriptions[sub_id].subscribers.indexOf(fncCallback) !== -1);\n\n    const hasValues = (request_obj, values_obj) => (\n        typeof request_obj === 'object' &&\n        typeof values_obj  === 'object' &&\n        Object.keys(values_obj).every(key => request_obj[key] === values_obj[key])\n    );\n\n    return {\n        addSubscriptionFromRequest,\n        subscribe,\n        forget,\n        forgetAll,\n        forgetStream,\n    };\n})();\n\nexport default SubscriptionManager;\n","/*\n Responses that should be ignored upon receiving errors.\n We still log them, but having an error inside of these\n will not break the queue and send them to trackjs.\n This will look for predefined `ignored_responses_in_trackjs` from GTM, if\n there is none, then it just does not filter out any response.\n*/\nconst ignored_responses_in_trackjs = window.ignored_responses_in_trackjs || [];\n\nclass ResponseQueue {\n    constructor() {\n        this.list = [];\n        this.size = 3;\n    }\n\n    add (response) {\n        this.list.unshift(response);\n    }\n\n    remove () {\n        this.list.pop();\n    }\n\n    push (response) {\n        if (this.list.length >= this.size) {\n            this.remove();\n        }\n        this.add(response);\n    }\n\n    fresh () {\n        this.list = [];\n    }\n}\n\nconst queue = new ResponseQueue();\n\n/**\n * Listen on method calls and inspect the response to see if error is thrown.\n * Handling the response status is NOT this function's responsibility\n */\nexport const ApiCallProxyHandler = {\n    get(target, prop_key, receiver) {\n        try {\n            const target_value = Reflect.get(target, prop_key, receiver);\n            if (typeof target_value === 'function') {\n                return function(...args) {\n                    const result = target_value.apply(this, args);\n                    if (result instanceof Promise) {\n                        return new Promise((resolve) => {\n                            let return_value;\n                            result.then(response => {\n                                if (response.error) {\n                                    queue.push(response);\n                                    if (window.TrackJS) window.TrackJS.console.log(queue.list);\n                                    queue.fresh();\n                                    if (\n                                        window.TrackJS &&\n                                        !ignored_responses_in_trackjs.some(item => item === response.error.code)\n                                    ) {\n                                        window.TrackJS.track(response.error.code);\n                                    }\n                                }\n                                queue.push(response);\n                                return_value = response;\n                            }).catch(error => {\n                                if (window.TrackJS) {\n                                    window.TrackJS.console.log(queue.list);\n                                    window.TrackJS.track(error.getMessage());\n                                }\n                            }).finally(() => {\n                                resolve(return_value);\n                            });\n                        });\n                    }\n                    return result;\n                }.bind(this);\n            }\n            return target_value;\n        } catch (error) {\n            throw new Error(error.getMessage());\n        }\n    },\n};\n\nexport const trackJSNetworkMonitor = (obj) => new Proxy(obj, ApiCallProxyHandler);\n","import BinarySocket              from '_common/base/socket_base';\nimport SubscriptionManager       from '_common/base/subscription_manager';\nimport { isEmptyObject }         from '_common/utility';\nimport { trackJSNetworkMonitor } from './trackjs';\n\nconst WS = (() => {\n    const activeSymbols = (options) =>\n        BinarySocket.send({ active_symbols: 'brief' }, { msg_type: 'active_symbols', ...(options && options) });\n\n    const buy = (proposal_id, price) =>\n        BinarySocket.send({ buy: proposal_id, price });\n\n    const cashier = (action, verification_code) =>\n        BinarySocket.send({ cashier: action, ...(verification_code && { verification_code }) });\n\n    const contractsFor = (symbol) =>\n        BinarySocket.send({ contracts_for: symbol });\n\n    const getAccountStatus = () =>\n        BinarySocket.send({ get_account_status: 1 });\n\n    const getSelfExclusion = () =>\n        BinarySocket.send({ get_self_exclusion: 1 });\n\n    const getSettings = () =>\n        BinarySocket.send({ get_settings: 1 });\n\n    const getTradingTimes = (date) =>\n        BinarySocket.send({ trading_times: date });\n\n    const landingCompany = (residence) =>\n        BinarySocket.send({ landing_company: residence });\n\n    const logout = () =>\n        BinarySocket.send({ logout: 1 });\n\n    const mt5LoginList = () =>\n        BinarySocket.send({ mt5_login_list: 1 });\n\n    const newAccountVirtual = (verification_code, client_password, residence) =>\n        BinarySocket.send({\n            new_account_virtual: 1,\n            verification_code,\n            client_password,\n            residence,\n        });\n\n    const oauthApps = () =>\n        BinarySocket.send({ oauth_apps: 1 });\n\n    const payoutCurrencies = () =>\n        BinarySocket.send({ payout_currencies: 1 });\n\n    const portfolio = () =>\n        BinarySocket.send({ portfolio: 1 });\n\n    const profitTable = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ profit_table: 1, description: 1, limit, offset, ...date_boundaries });\n\n    const proposalOpenContract = (contract_id) =>\n        BinarySocket.send({ proposal_open_contract: 1, contract_id });\n\n    const sell = (contract_id, price) =>\n        BinarySocket.send({ sell: contract_id, price });\n\n    const residenceList = () =>\n        BinarySocket.send({ residence_list: 1 });\n\n    const sellExpired = () =>\n        BinarySocket.send({ sell_expired: 1 });\n\n    const sendRequest = (request_object, force_request) =>\n        Promise.resolve(!isEmptyObject(request_object) ? BinarySocket.send(request_object, force_request) : {});\n\n    const statement = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ statement: 1, description: 1, limit, offset, ...date_boundaries });\n\n    const verifyEmail = (email, type) =>\n        BinarySocket.send({ verify_email: email, type });\n\n    // ----- Streaming calls -----\n    const forget = (msg_type, cb, match_values) =>\n        SubscriptionManager.forget(msg_type, cb, match_values);\n\n    const forgetAll = (...msg_types) =>\n        SubscriptionManager.forgetAll(...msg_types);\n\n    const forgetStream = (stream_id) =>\n        SubscriptionManager.forgetStream(stream_id);\n\n    const subscribeBalance = (cb, is_forced) =>\n        SubscriptionManager.subscribe('balance', { balance: 1, subscribe: 1 }, cb, is_forced);\n\n    const subscribeProposal = (req, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal', req, cb, should_forget_first);\n\n    const subscribeProposalOpenContract = (contract_id = null, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal_open_contract', { proposal_open_contract: 1, subscribe: 1, ...(contract_id && { contract_id }) }, cb, should_forget_first);\n\n    const subscribeProposalOpenContractOnBuy = (buy_request) =>\n        SubscriptionManager.addSubscriptionFromRequest(\n            'proposal_open_contract',\n            { ...buy_request, subscribe: 1 },\n            { proposal_open_contract: 1, subscribe: 1 },\n            ['contract_id'],\n        );\n\n    const subscribeTicks = (symbol, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks', { ticks: symbol, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeTicksHistory = (request_object, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks_history', request_object, cb, should_forget_first);\n\n    const subscribeTransaction = (cb, should_forget_first) =>\n        SubscriptionManager.subscribe('transaction', { transaction: 1, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeWebsiteStatus = (cb) =>\n        SubscriptionManager.subscribe('website_status', { website_status: 1, subscribe: 1 }, cb);\n\n    return {\n        activeSymbols,\n        buy,\n        cashier,\n        contractsFor,\n        getAccountStatus,\n        getSelfExclusion,\n        getSettings,\n        getTradingTimes,\n        landingCompany,\n        logout,\n        mt5LoginList,\n        newAccountVirtual,\n        oauthApps,\n        portfolio,\n        payoutCurrencies,\n        profitTable,\n        proposalOpenContract,\n        residenceList,\n        sell,\n        sellExpired,\n        sendRequest,\n        statement,\n        verifyEmail,\n\n        // streams\n        forget,\n        forgetAll,\n        forgetStream,\n        subscribeBalance,\n        subscribeProposal,\n        subscribeProposalOpenContract,\n        subscribeProposalOpenContractOnBuy,\n        subscribeTicks,\n        subscribeTicksHistory,\n        subscribeTransaction,\n        subscribeWebsiteStatus,\n    };\n})();\n\nexport default trackJSNetworkMonitor(WS);\n","if (!Element.prototype.matches) {\n    Element.prototype.matches =\n        Element.prototype.matchesSelector ||\n        Element.prototype.mozMatchesSelector ||\n        Element.prototype.msMatchesSelector ||\n        Element.prototype.oMatchesSelector ||\n        Element.prototype.webkitMatchesSelector ||\n        function(s) {\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n                i = matches.length;\n            while (--i >= 0 && matches.item(i) !== this) {}\n            return i > -1;\n        };\n}\n","const isMobile = () => /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n\nmodule.exports = {\n    isMobile,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport ErrorComponent from './index';\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch = (error, info) => {\n        if (window.TrackJS) window.TrackJS.console.log(this.props.root_store);\n\n        this.setState({\n            hasError: true,\n            error,\n            info,\n        });\n    };\n\n    render = () => this.state.hasError ? (\n        <ErrorComponent should_show_refresh={true} />\n    ) : this.props.children;\n}\n\nErrorBoundary.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default connect((store) => (\n    {\n        root_store: store,\n    }\n))(ErrorBoundary);\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { Scrollbars } from 'tt-react-custom-scrollbars';\nimport { connect }    from 'Stores/connect';\n// import InstallPWA     from './install-pwa.jsx';\n\nconst AppContents = ({\n    // addNotificationBar,\n    children,\n    is_app_disabled,\n    is_contract_mode,\n    is_logged_in,\n    is_positions_drawer_on,\n    is_route_modal_on,\n    // setPWAPromptEvent,\n}) => {\n    if (is_logged_in) {\n        // TODO: uncomment these after the issues with showing the prompt too often and in the app are fixed\n        // window.addEventListener('beforeinstallprompt', e => {\n        //     console.log('Going to show the installation prompt'); // eslint-disable-line no-console\n        //\n        //     e.preventDefault();\n        //\n        //     setPWAPromptEvent(e);\n        //     addNotificationBar({\n        //         content : <InstallPWA />,\n        //         autoShow: 10000, // show after 10 secs\n        //         msg_type: 'pwa',\n        //     });\n        // });\n    }\n\n    return (\n        <div\n            id='app_contents'\n            className={classNames('app-contents', {\n                'app-contents--show-positions-drawer': is_positions_drawer_on,\n                'app-contents--contract-mode'        : is_contract_mode,\n                'app-contents--is-disabled'          : is_app_disabled,\n                'app-contents--is-route-modal'       : is_route_modal_on,\n            })}\n        >\n            {/* Calculate height of user screen and offset height of header and footer */}\n            <Scrollbars\n                autoHide\n                style={{ height: 'calc(100vh - 83px)' }}\n            >\n                {children}\n            </Scrollbars>\n        </div>\n    );\n};\n\nAppContents.propTypes = {\n    addNotificationBar    : PropTypes.func,\n    children              : PropTypes.any,\n    is_app_disabled       : PropTypes.bool,\n    is_contract_mode      : PropTypes.bool,\n    is_logged_in          : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    is_route_modal_on     : PropTypes.bool,\n    pwa_prompt_event      : PropTypes.object,\n    setPWAPromptEvent     : PropTypes.func,\n};\n\nexport default withRouter(connect(\n    ({ client, modules, ui }) => ({\n        is_logged_in          : client.is_logged_in,\n        is_contract_mode      : modules.smart_chart.is_contract_mode,\n        // addNotificationBar    : ui.addNotificationBar,\n        is_app_disabled       : ui.is_app_disabled,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        is_route_modal_on     : ui.is_route_modal_on,\n        pwa_prompt_event      : ui.pwa_prompt_event,\n        // setPWAPromptEvent     : ui.setPWAPromptEvent,\n    })\n)(AppContents));\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { connect }     from 'Stores/connect';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst ServerTime = ({ server_time }) => {\n    const gmt_time = toGMTFormat(server_time);\n\n    return (\n        <div className='server-time'>{gmt_time}</div>\n    );\n};\n\nServerTime.propTypes = {\n    server_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        server_time: common.server_time,\n    })\n)(ServerTime);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from 'App/i18n';\nimport { connect }  from 'Stores/connect';\nimport { Popover }  from 'App/Components/Elements/Popover';\n\nconst NetworkStatus = ({ status }) => (\n    <div className='network-status__wrapper'>\n        <Popover\n            classNameBubble='network-status__tooltip'\n            alignment='top'\n            message={localize('Network status: {{status}}', { status: (status.tooltip || localize('Connecting to server')) })}\n        >\n            <div className={classNames(\n                'network-status__circle', {\n                    'network-status__circle--offline': (status.class === 'offline'),\n                    'network-status__circle--online' : (status.class === 'online'),\n                    'network-status__circle--blinker': (status.class === 'blinker'),\n                })}\n            />\n        </Popover>\n    </div>\n);\n\nNetworkStatus.propTypes = {\n    status: PropTypes.object,\n};\n\nexport { NetworkStatus };\n\nexport default connect(\n    ({ common }) => ({\n        status: common.network_status,\n    })\n)(NetworkStatus);\n","import classNames from 'classnames';\nimport React      from 'react';\nimport Icon       from 'Assets/icon.jsx';\n\nclass ToggleFullScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_full_screen: false,\n        };\n        this.fullscreen_map = {\n            event    : ['fullscreenchange',  'webkitfullscreenchange',  'mozfullscreenchange',  'MSFullscreenChange'],\n            element  : ['fullscreenElement', 'webkitFullscreenElement', 'mozFullScreenElement', 'msFullscreenElement'],\n            fnc_enter: ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'],\n            fnc_exit : ['exitFullscreen',    'webkitExitFullscreen',    'mozCancelFullScreen',  'msExitFullscreen'],\n        };\n\n    }\n\n    componentDidMount() {\n        this.fullscreen_map.event.forEach((event) => {\n            document.addEventListener(event, this.onFullScreen, false);\n        });\n    }\n\n    onFullScreen = () => {\n        const is_full_screen = this.fullscreen_map.element.some(el => document[el]);\n        this.setState({ is_full_screen });\n    };\n\n    toggleFullScreen = (e) => {\n        e.stopPropagation();\n\n        const to_exit   = this.state.is_full_screen;\n        const el        = to_exit ? document : document.documentElement;\n        const fncToCall = this.fullscreen_map[to_exit ? 'fnc_exit' : 'fnc_enter'].find(fnc => el[fnc]);\n\n        if (fncToCall) {\n            el[fncToCall]();\n        } else {\n            this.setState({ is_full_screen: false }); // fullscreen API is not enabled\n        }\n    };\n\n    render() {\n        const full_screen_icon_class = classNames('ic-fullscreen', 'footer__link', {\n            'ic-fullscreen--active': this.state.is_full_screen,\n        });\n        return (\n            <a\n                className={full_screen_icon_class}\n                onClick={this.toggleFullScreen}\n                id='dt_fullscreen_toggle'\n            >\n                <Icon icon='IconMaximize' className='footer__icon' />\n            </a>\n        );\n    }\n}\n\nexport { ToggleFullScreen };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Icon       from 'Assets/icon.jsx';\n\nconst TogglePositions = ({\n    positions_count,\n    is_positions_drawer_on,\n    togglePositionsDrawer,\n}) => {\n    const toggle_positions_class = classNames(\n        'ic-positions',\n        'footer__link', {\n            'ic-positions--active'   : is_positions_drawer_on,\n            'ic-positions--has-count': (positions_count > 0),\n        }\n    );\n    return (\n        <a\n            id='dt_positions_toggle'\n            className={toggle_positions_class}\n            onClick={togglePositionsDrawer}\n            data-count={positions_count}\n        >\n            <Icon icon='IconPositions' className='footer__icon ic-positions__icon' />\n        </a>\n    );\n};\n\nTogglePositions.propTypes = {\n    is_positions_drawer_on: PropTypes.bool,\n    positions_count       : PropTypes.number,\n    togglePositionsDrawer : PropTypes.func,\n};\n\nexport { TogglePositions };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport ReactDOM          from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport Icon              from 'Assets/icon.jsx';\nimport VerticalTab       from 'App/Components/Elements/VerticalTabs';\n\nclass ModalElement extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.el = document.createElement('div');\n        this.state = {\n            modal_root: document.getElementById('modal_root'),\n        };\n    }\n\n    componentDidMount = () => {\n        document.addEventListener('mousedown', this.handleClickOutside);\n        this.el.classList.add('modal');\n        this.state.modal_root.appendChild(this.el);\n    };\n\n    componentWillUnmount = () => {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n        this.state.modal_root.removeChild(this.el);\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.props.is_open) {\n            this.props.toggleModal();\n        }\n    };\n\n    render() {\n        return ReactDOM.createPortal(\n            <div ref={this.setWrapperRef} id={this.props.id} className={classNames('modal__container', this.props.className && `modal__${this.props.className}`)}>\n                <div className='modal-header'>\n                    <h3 className='modal-header__sidebar'>{this.props.title}</h3>\n                    <div className='modal-header__main'>\n                        { this.props.header &&\n                            <div className='modal-header__section'>\n                                {this.props.header}\n                            </div>\n                        }\n                        <div id='dt_modal_close_icon' className='modal-header__close' onClick={this.props.toggleModal}>\n                            <Icon icon='ModalIconClose' />\n                        </div>\n                    </div>\n                </div>\n                <VerticalTab\n                    alignment='center'\n                    classNameHeader='modal__tab-header'\n                    id='modal'\n                    list={this.props.modal_content}\n                    selected_index={this.props.selected_index}\n                />\n            </div>,\n            this.el\n        );\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n}\n\nModalElement.propTypes = {\n    className     : PropTypes.string,\n    header        : PropTypes.node,\n    id            : PropTypes.string,\n    is_open       : PropTypes.bool,\n    modal_content : PropTypes.array,\n    selected_index: PropTypes.number,\n    title         : PropTypes.string,\n    toggleModal   : PropTypes.func,\n};\n\nconst Modal = ({\n    className,\n    header,\n    id,\n    is_open,\n    modal_content,\n    selected_index,\n    title,\n    toggleModal,\n}) => (\n    <CSSTransition\n        appear\n        in={is_open}\n        timeout={250}\n        classNames={{\n            appear   : 'modal__container--enter',\n            enter    : 'modal__container--enter',\n            enterDone: 'modal__container--enter-done',\n            exit     : 'modal__container--exit',\n        }}\n        unmountOnExit\n    >\n        <ModalElement\n            className={className}\n            header={header}\n            id={id}\n            is_open={is_open}\n            modal_content={modal_content}\n            selected_index={selected_index}\n            title={title}\n            toggleModal={toggleModal}\n        />\n    </CSSTransition>\n);\n\nModal.propTypes = {\n    className     : PropTypes.string,\n    header        : PropTypes.node,\n    id            : PropTypes.string,\n    is_open       : PropTypes.bool,\n    modal_content : PropTypes.array,\n    selected_index: PropTypes.number,\n    title         : PropTypes.string,\n    toggleModal   : PropTypes.func,\n};\n\nexport {\n    Modal,\n    ModalElement,\n};\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { Modal }    from 'App/Components/Elements/modal.jsx';\nimport UILoader     from 'App/Components/Elements/ui-loader.jsx';\nimport Lazy         from 'App/Containers/Lazy';\nimport { localize } from 'App/i18n';\nimport Icon         from 'Assets/icon.jsx';\nimport 'Sass/app/modules/settings.scss';\n\nconst ThemeSetting = () => (\n    <Lazy\n        ctor={() => import(/* webpackChunkName: \"settings-theme\", webpackPrefetch: true */'App/Containers/SettingsModal/settings-theme.jsx')}\n        should_load={true}\n        has_progress={true}\n    />\n);\nconst LanguageSettingContainer = () => (\n    <Lazy\n        ctor={() => import(/* webpackChunkName: \"settings-language\", webpackPrefetch: true */'App/Containers/SettingsModal/settings-language.jsx')}\n        should_load={true}\n        has_progress={true}\n    />\n);\n\nconst ChartSettingContainer = () => (\n    <Lazy\n        ctor={() => import(/* webpackChunkName: \"settings-chart\", webpackPrefetch: true */'App/Containers/SettingsModal/settings-chart.jsx')}\n    />\n);\n\nChartSettingContainer.displayName    = 'ChartSettingContainer';\nLanguageSettingContainer.displayName = 'LanguageSettingContainer';\nThemeSetting.displayName             = 'ThemeSettingContainer';\n\nconst modal_content = [\n    {\n        icon : 'IconTheme',\n        label: localize('Themes'),\n        // eslint-disable-next-line react/display-name\n        value: ThemeSetting,\n    }, {\n        icon : 'IconLanguage',\n        label: localize('Language'),\n        value: LanguageSettingContainer,\n    }, {\n        icon : 'IconCharts',\n        label: localize('Charts'),\n        value: ChartSettingContainer,\n        // uncomment below lines to bring back purchase lock and purchase confirmation}\n        // }, {\n        //     icon : IconPurchase,\n        //     label: localize('Purchase'),\n        //     value: PurchaseSettings,\n    },\n];\n\nconst ToggleSettings = ({\n    enableApp,\n    is_settings_visible,\n    disableApp,\n    toggleSettings,\n}) => {\n    const toggle_settings_class = classNames('ic-settings', 'footer__link', {\n        'ic-settings--active': is_settings_visible,\n    });\n    return (\n        <React.Fragment>\n            <a\n                id='dt_settings_toggle'\n                onClick={toggleSettings}\n                className={toggle_settings_class}\n            >\n                <Icon icon='IconSettings' className='footer__icon ic-settings__icon' />\n            </a>\n            <React.Suspense fallback={<UILoader />}>\n                <Modal\n                    id='dt_settings_modal'\n                    modal_content={modal_content}\n                    enableApp={enableApp}\n                    is_open={is_settings_visible}\n                    disableApp={disableApp}\n                    title={localize('Platform settings')}\n                    toggleModal={toggleSettings}\n                />\n            </React.Suspense>\n        </React.Fragment>\n    );\n};\n\nToggleSettings.propTypes = {\n    disableApp         : PropTypes.func,\n    enableApp          : PropTypes.func,\n    is_settings_visible: PropTypes.bool,\n    toggleSettings     : PropTypes.func,\n};\n\nexport { ToggleSettings };\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport { withRouter }                 from 'react-router';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { connect }                    from 'Stores/connect';\nimport ServerTime                     from '../server-time.jsx';\nimport {\n    NetworkStatus,\n    ToggleFullScreen,\n    TogglePositions,\n    ToggleSettings }                  from '../../Components/Layout/Footer';\n\nconst Footer = ({\n    active_positions,\n    enableApp,\n    is_app_disabled,\n    is_logged_in,\n    is_positions_drawer_on,\n    is_route_modal_on,\n    is_settings_modal_on,\n    disableApp,\n    show_positions_toggle,\n    togglePositionsDrawer,\n    toggleSettingsModal,\n}) => (\n    <footer className={classNames('footer', {\n        'footer--is-disabled': (is_app_disabled || is_route_modal_on),\n    })}\n    >\n        <div className='footer__links footer__links--left'>\n            {\n                (is_logged_in && show_positions_toggle) &&\n                <TogglePositions\n                    is_positions_drawer_on={is_positions_drawer_on}\n                    togglePositionsDrawer={togglePositionsDrawer}\n                    positions_count={active_positions.length || 0}\n                />\n            }\n        </div>\n        <NetworkStatus />\n        <ServerTime />\n        <div className='footer__links'>\n            <ToggleSettings\n                is_settings_visible={is_settings_modal_on}\n                toggleSettings={toggleSettingsModal}\n                disableApp={disableApp}\n                enableApp={enableApp}\n            />\n            <ToggleFullScreen />\n        </div>\n    </footer>\n);\n\nFooter.propTypes = {\n    active_positions      : MobxPropTypes.arrayOrObservableArray,\n    is_app_disabled       : PropTypes.bool,\n    is_logged_in          : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    is_route_modal_on     : PropTypes.bool,\n    is_settings_modal_on  : PropTypes.bool,\n    location              : PropTypes.object,\n    show_positions_toggle : PropTypes.bool,\n    togglePositionsDrawer : PropTypes.func,\n    toggleSettingsModal   : PropTypes.func,\n};\n\nexport default withRouter(connect(\n    ({ client, modules, ui }) => ({\n        active_positions      : modules.portfolio.active_positions,\n        enableApp             : ui.enableApp,\n        is_app_disabled       : ui.is_app_disabled,\n        is_route_modal_on     : ui.is_route_modal_on,\n        is_logged_in          : client.is_logged_in,\n        is_loading            : ui.is_loading,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        is_settings_modal_on  : ui.is_settings_modal_on,\n        disableApp            : ui.disableApp,\n        show_positions_toggle : ui.show_positions_toggle,\n        togglePositionsDrawer : ui.togglePositionsDrawer,\n        toggleSettingsModal   : ui.toggleSettingsModal,\n    })\n)(Footer));\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { BinaryLink } from '../../Routes';\n\nconst MenuLinks = ({ is_logged_in, items }) => (\n    <React.Fragment>\n        {!!items.length &&\n        <div className='header__menu-links'>\n            {\n                items.map((item, idx) => (\n                    (item.login_only && (item.login_only !== is_logged_in)) ?\n                        null\n                        :\n                        <BinaryLink id={item.id} key={idx} to={item.link_to} className='header__menu-link' active_class='header__menu-link--active'>\n                            <React.Fragment>\n                                {item.text &&\n                                    <span title={item.text} className='header__menu-link-text'>{item.icon}{item.text}{item.logo}</span>\n                                }\n                                {item.image &&\n                                    <span className='header__menu-link-text'>{item.image}{item.logo}</span>\n                                }\n                            </React.Fragment>\n                        </BinaryLink>\n                ))\n            }\n        </div>\n        }\n    </React.Fragment>\n);\n\nMenuLinks.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        icon: PropTypes.shape({\n            className: PropTypes.string,\n        }),\n        is_logged_in: PropTypes.bool,\n        link_to     : PropTypes.string,\n        text        : PropTypes.string,\n    })),\n};\n\nexport { MenuLinks };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport Button              from 'deriv-components/lib/button';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from 'App/i18n';\n\nconst LoginButton = ({ className }) => (\n    <Button\n        id='dt_login_button'\n        className={classNames(className, 'btn--secondary btn--secondary--orange')}\n        has_effect\n        text={localize('Log in')}\n        onClick={redirectToLogin}\n    />\n);\n\nLoginButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { LoginButton };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { localize }        from 'App/i18n';\nimport { urlFor }          from '_common/url';\nimport Button              from 'deriv-components/lib/button';\n\nconst SignupButton = ({ className }) => (\n    <Button\n        id='dt_signup_button'\n        className={classNames(className, 'btn--primary btn--primary--orange')}\n        has_effect\n        text={localize('Sign up')}\n        onClick={() => { window.open(urlFor('new-account', undefined, undefined, true)); }}\n    />\n);\n\nSignupButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { SignupButton };\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Button       from 'deriv-components/lib/button';\nimport { localize } from 'App/i18n';\n\nconst UpgradeButton = ({ className, onClick }) => (\n    <Button\n        id='acc-balance-btn'\n        className={classNames(className, 'btn--primary btn--primary--orange')}\n        has_effect\n        text={localize('Upgrade')}\n        onClick={onClick}\n    />\n);\n\nUpgradeButton.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { UpgradeButton };\n","import * as PropTypes       from 'prop-types';\nimport React, { Component } from 'react';\nimport { formatMoney }      from '_common/base/currency_base';\nimport { urlFor }           from '_common/url';\nimport Button               from 'deriv-components/lib/button';\nimport Lazy                 from 'App/Containers/Lazy';\nimport { localize }         from 'App/i18n';\nimport { LoginButton }      from './login-button.jsx';\nimport { SignupButton }     from './signup-button.jsx';\n// import ToggleCashier        from './toggle-cashier.jsx';\nimport { UpgradeButton }    from './upgrade-button.jsx';\nimport 'Sass/app/_common/components/account-switcher.scss';\n\nconst AccountInfo = React.lazy(() => import(/* webpackChunkName: \"account-info\", webpackPreload: true */'App/Components/Layout/Header/account-info.jsx'));\n\nexport class AccountActions extends Component {\n    shouldComponentUpdate(nextProps) {\n        return (\n            nextProps.active_cashier_tab !== this.props.active_cashier_tab ||\n            nextProps.balance !== this.props.balance ||\n            nextProps.can_upgrade !== this.props.can_upgrade ||\n            nextProps.can_upgrade_to !== this.props.can_upgrade_to ||\n            nextProps.currency !== this.props.currency ||\n            nextProps.is_acc_switcher_on !== this.props.is_acc_switcher_on ||\n            nextProps.is_cashier_modal_on !== this.props.is_cashier_modal_on ||\n            nextProps.is_logged_in !== this.props.is_logged_in ||\n            nextProps.is_virtual !== this.props.is_virtual ||\n            nextProps.loginid !== this.props.loginid\n        );\n    }\n\n    render() {\n        const {\n            // active_cashier_tab,\n            balance,\n            can_upgrade,\n            can_upgrade_to,\n            currency,\n            // hideFullBlur,\n            is_acc_switcher_on,\n            // is_cashier_modal_on,\n            is_logged_in,\n            is_virtual,\n            loginid,\n            onClickUpgrade,\n            toggleAccountsDialog,\n            // toggleCashierModal,\n            // showFullBlur,\n        } = this.props;\n        if (is_logged_in) {\n            return (\n                <React.Fragment>\n                    <React.Suspense fallback={<div />}>\n                        <AccountInfo\n                            balance={formatMoney(currency, balance, true)}\n                            is_upgrade_enabled={can_upgrade}\n                            is_virtual={is_virtual}\n                            onClickUpgrade={onClickUpgrade}\n                            currency={currency}\n                            loginid={loginid}\n                            is_dialog_on={is_acc_switcher_on}\n                            toggleDialog={toggleAccountsDialog}\n                        />\n                    </React.Suspense>\n                    {!!(\n                        can_upgrade_to && is_virtual\n                    ) && <UpgradeButton\n                        className='acc-info__button'\n                        onClick={() => {\n                            window.open(urlFor('user/accounts', undefined, undefined, true));\n                        }}\n                    />}\n                    {/* {!is_virtual && */}\n                    {/* <ToggleCashier */}\n                    {/*    active_tab={active_cashier_tab} */}\n                    {/*    className='acc-info__button' */}\n                    {/*    toggleCashier={toggleCashierModal} */}\n                    {/*    is_cashier_visible={is_cashier_modal_on} */}\n                    {/*    showFullBlur={showFullBlur} */}\n                    {/*    hideFullBlur={hideFullBlur} */}\n                    {/* /> */}\n                    {/* } */}\n                    {!(\n                        is_virtual\n                    ) && // TODO: remove this when cashier pop up is ready\n                    <Button\n                        id='dt_deposit_button'\n                        className='btn--primary btn--primary--orange acc-info__button'\n                        has_effect\n                        text={localize('Deposit')}\n                        onClick={() => {\n                            window.open(urlFor('cashier', undefined, undefined, true),\n                                '_blank',\n                                'noopener',\n                                'noreferrer',\n                            );\n                        }}\n                    />}\n                </React.Fragment>\n            );\n        }\n        return (\n            <React.Fragment>\n                <LoginButton className='acc-info__button' />\n                <SignupButton className='acc-info__button' />\n            </React.Fragment>\n        );\n    }\n}\n\nAccountActions.propTypes = {\n    active_cashier_tab  : PropTypes.any,\n    balance             : PropTypes.any,\n    can_upgrade         : PropTypes.any,\n    can_upgrade_to      : PropTypes.any,\n    currency            : PropTypes.any,\n    hideFullBlur        : PropTypes.any,\n    is_acc_switcher_on  : PropTypes.any,\n    is_cashier_modal_on : PropTypes.any,\n    is_logged_in        : PropTypes.any,\n    is_virtual          : PropTypes.any,\n    loginid             : PropTypes.any,\n    onClickUpgrade      : PropTypes.any,\n    showFullBlur        : PropTypes.any,\n    toggleAccountsDialog: PropTypes.any,\n    toggleCashierModal  : PropTypes.any,\n};\n","import React        from 'react';\nimport { localize } from 'App/i18n';\nimport Icon         from 'Assets/icon.jsx';\nimport IconDeriv    from 'Assets/Header/NavBar/icon-deriv.jsx';\nimport { routes }   from 'Constants/index';\n\nconst header_links = [\n    {\n        id     : 'dt_deriv_logo',\n        logo   : <div className='header__logo'>{localize('BETA')}</div>,\n        image  : <IconDeriv className='header__icon' />,\n        link_to: routes.trade,\n    },\n    {\n        id        : 'dt_reports_tab',\n        icon      : <Icon icon='IconReports' className='header__icon' />,\n        text      : localize('Reports'),\n        link_to   : routes.reports,\n        login_only: true,\n    },\n];\n\nexport default header_links;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    AccountActions,\n    MenuLinks,\n}                     from 'App/Components/Layout/Header';\nimport header_links   from 'App/Constants/header-links';\nimport Lazy           from 'App/Containers/Lazy';\nimport { connect }    from 'Stores/connect';\n\nconst Header = ({\n    // active_cashier_tab,\n    balance,\n    can_upgrade,\n    can_upgrade_to,\n    currency,\n    enableApp,\n    is_acc_switcher_on,\n    // is_cashier_modal_on,\n    is_app_disabled,\n    is_logged_in,\n    is_mobile,\n    is_route_modal_on,\n    is_virtual,\n    loginid,\n    onClickUpgrade,\n    disableApp,\n    toggleAccountsDialog,\n    // toggleCashierModal,\n}) => (\n    <header className={classNames('header', {\n        'header--is-disabled': (is_app_disabled || is_route_modal_on),\n    })}\n    >\n        <div className='header__menu-items'>\n            <div className='header__menu-left'>\n                <Lazy\n                    has_progress={false}\n                    ctor={() => import(/* webpackChunkName: \"toggle-menu-drawer\", webpackPreload: true */'App/Components/Layout/Header/toggle-menu-drawer.jsx')}\n                    should_load={is_mobile}\n                />\n                <MenuLinks\n                    is_logged_in={is_logged_in}\n                    items={header_links}\n                />\n            </div>\n            <div className='header__menu-right'>\n                <div className='acc-info__container'>\n                    <AccountActions\n                        // active_cashier_tab={active_cashier_tab}\n                        balance={balance}\n                        can_upgrade_to={can_upgrade_to}\n                        currency={currency}\n                        can_upgrade={can_upgrade}\n                        disableApp={disableApp}\n                        enableApp={enableApp}\n                        is_acc_switcher_on={is_acc_switcher_on}\n                        // is_cashier_modal_on={is_cashier_modal_on}\n                        is_logged_in={is_logged_in}\n                        is_virtual={is_virtual}\n                        loginid={loginid}\n                        onClickUpgrade={onClickUpgrade}\n                        toggleAccountsDialog={toggleAccountsDialog}\n                        // toggleCashierModal={toggleCashierModal}\n                    />\n                </div>\n            </div>\n        </div>\n    </header>\n);\n\nHeader.propTypes = {\n    active_cashier_tab  : PropTypes.string,\n    balance             : PropTypes.string,\n    can_upgrade         : PropTypes.bool,\n    can_upgrade_to      : PropTypes.string,\n    currency            : PropTypes.string,\n    disableApp          : PropTypes.func,\n    enableApp           : PropTypes.func,\n    is_acc_switcher_on  : PropTypes.bool,\n    is_app_disabled     : PropTypes.bool,\n    is_cashier_modal_on : PropTypes.bool,\n    is_dark_mode        : PropTypes.bool,\n    is_logged_in        : PropTypes.bool,\n    is_mobile           : PropTypes.bool,\n    is_route_modal_on   : PropTypes.bool,\n    is_virtual          : PropTypes.bool,\n    loginid             : PropTypes.string,\n    onClickUpgrade      : PropTypes.func,\n    toggleAccountsDialog: PropTypes.func,\n    toggleCashierModal  : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, ui }) => ({\n        // active_cashier_tab  : ui.active_cashier_tab,\n        balance             : client.balance,\n        can_upgrade         : client.can_upgrade,\n        can_upgrade_to      : client.can_upgrade_to,\n        currency            : client.currency,\n        is_logged_in        : client.is_logged_in,\n        is_virtual          : client.is_virtual,\n        loginid             : client.loginid,\n        enableApp           : ui.enableApp,\n        is_acc_switcher_on  : ui.is_accounts_switcher_on,\n        // is_cashier_modal_on : ui.is_cashier_modal_on,\n        is_dark_mode        : ui.is_dark_mode_on,\n        is_app_disabled     : ui.is_app_disabled,\n        is_loading          : ui.is_loading,\n        is_route_modal_on   : ui.is_route_modal_on,\n        is_mobile           : ui.is_mobile,\n        disableApp          : ui.disableApp,\n        toggleAccountsDialog: ui.toggleAccountsDialog,\n        // toggleCashierModal  : ui.toggleCashierModal,\n    })\n)(Header);\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { withRouter }                 from 'react-router';\nimport BinaryRoutes                   from 'App/Components/Routes';\nimport Lazy                           from 'App/Containers/Lazy';\nimport { connect }                    from 'Stores/connect';\n\nconst Routes = (props) => {\n    if (props.has_error) {\n        return (\n            <Lazy\n                ctor={() => import(/* webpackChunkName: \"error-component\" */'App/Components/Elements/Errors')}\n                should_load={props.has_error}\n                has_progress={true}\n                {...props.error}\n            />\n        );\n    }\n\n    return <BinaryRoutes is_logged_in={props.is_logged_in} />;\n};\n\nRoutes.propTypes = {\n    error       : MobxPropTypes.objectOrObservableObject,\n    has_error   : PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <BinaryRoutes /> from being blocked\nexport default withRouter(connect(\n    ({ client, common }) => ({\n        is_logged_in: client.is_logged_in,\n        error       : common.error,\n        has_error   : common.has_error,\n    })\n)(Routes));\n","import { action }              from 'mobx';\nimport NetworkMonitorBase      from '_common/base/network_monitor_base'; // eslint-disable-line import/order\nimport { BinarySocketGeneral } from './index';\n\nlet common_store;\n\nconst NetworkMonitor = (() => {\n    const init = (store) => {\n        NetworkMonitorBase.init(BinarySocketGeneral.init(store), updateStore);\n        common_store = store.common;\n    };\n\n    const updateStore = action((status, is_online) => {\n        if (common_store) {\n            common_store.setNetworkStatus(status, is_online);\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default NetworkMonitor;\n","import { action }   from 'mobx';\nimport { localize } from 'App/i18n';\n\nlet common_store;\n\nconst OutdatedBrowser = (() => {\n    const init = (store) => {\n        common_store = store.common;\n\n        const src = '//browser-update.org/update.min.js';\n        if (document.querySelector(`script[src*=\"${src}\"]`)) return;\n        window.$buoop = {\n            vs       : { i: 11, f: -4, o: -4, s: 9, c: -4 },\n            api      : 4,\n            url      : 'https://whatbrowser.org/',\n            noclose  : true, // Do not show the 'ignore' button to close the notification\n            reminder : 0, // show all the time\n            onshow   : updateStore,\n            nomessage: true,\n            insecure : true,\n        };\n        if (document.body) {\n            const script = document.createElement('script');\n            script.setAttribute('src', src);\n            document.body.appendChild(script);\n        }\n    };\n\n    const updateStore = action('showError', () => {\n        if (common_store) { // TODO: i18n_issue\n            common_store.showError({\n                message: localize('Your web browser is out of date and may affect your trading experience. Please {{opening_tag}}update your browser{{closing_tag}}.', {\n                    opening_tag  : '<a href=\"http://outdatedbrowser.com\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"link\">',\n                    closing_tag  : '</a>',\n                    interpolation: { escapeValue: false },\n                }),\n                has_html: true,\n            });\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default OutdatedBrowser;\n","import React            from 'react';\nimport { formatDate }   from 'Utils/Date';\nimport { WS }           from 'Services';\nimport { getRiskAssessment,\n    isAccountOfType,\n    shouldAcceptTnc,\n    shouldCompleteTax } from '_common/base/client_base';\nimport { localize }     from 'App/i18n';\nimport {\n    LocalStore,\n    State }             from '_common/storage';\nimport { urlFor }       from '_common/url';\nimport Localize         from '../../App/Components/Elements/localize.jsx';\n\n// TODO: Update links to app_2 links when components are done.\n/* eslint-disable react/jsx-no-target-blank */\nconst client_notifications = {\n    currency: {\n        header : localize('Set Currency'),\n        message: (\n            <Localize\n                i18n_default_text='Please set the <0>currency</0> of your account to enable trading.'\n                components={[<a key={0} className='link link--white' target='_blank' href={urlFor('user/set-currency', undefined, undefined, true)} />]}\n            />\n        ),\n        type: 'danger',\n    },\n    self_exclusion: (excluded_until) => ({\n        header : localize('Self-exclusion Detected'),\n        message: (\n            <Localize\n                i18n_default_text='You have opted to be excluded from Binary.com until {{exclusion_end}}. Please <0>contact us</0> for assistance.'\n                values={{ exclusion_end: formatDate(excluded_until, 'DD/MM/YYYY'), interpolation: { escapeValue: false } }}\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('contact', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    }),\n    authenticate: {\n        header : localize('Account Authentication'),\n        message: (\n            <Localize\n                i18n_default_text='<0>Authenticate your account</0> now to take full advantage of all payment methods available.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/authenticate', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'info',\n    },\n    cashier_locked: {\n        header : localize('Cashier Disabled'),\n        message: localize('Deposits and withdrawals have been disabled on your account. Please check your email for more details.'),\n        type   : 'warning',\n    },\n    withdrawal_locked: {\n        header : localize('Withdrawal Disabled'),\n        message: localize('Withdrawals have been disabled on your account. Please check your email for more details.'),\n        type   : 'warning',\n    },\n    mt5_withdrawal_locked: {\n        header : localize('MT5 Withdrawal Disabled'),\n        message: localize('MT5 withdrawals have been disabled on your account. Please check your email for more details.'),\n        type   : 'warning',\n    },\n    document_needs_action: {\n        header : localize('Authentication Failed'),\n        message: (\n            <Localize\n                i18n_default_text='<0>Your Proof of Identity or Proof of Address</0> did not meet our requirements. Please check your email for further instructions.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/authenticate', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'warning',\n    },\n    unwelcome: {\n        header : localize('Trading and Deposits Disabled'),\n        message: (\n            <Localize\n                i18n_default_text='Trading and deposits have been disabled on your account. Kindly contact <0>customer support</0> for assistance.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('contact', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n    mf_retail: {\n        header : localize('Binary Options Trading Disabled'),\n        message: (\n            <Localize\n                i18n_default_text='Binary Options Trading has been disabled on your account. Kindly contact <0>customer support</0> for assistance.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('contact', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n    financial_limit: {\n        header : localize('Remove Deposit Limits'),\n        message: (\n            <Localize\n                i18n_default_text='Please set your <0>30-day turnover limit</0> to remove deposit limits.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/security/self_exclusionws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'warning',\n    },\n    risk: {\n        header : localize('Withdrawal and Trading Limits'),\n        message: (\n            <Localize\n                i18n_default_text='Please complete the <0>Financial Assessment form</0> to lift your withdrawal and trading limits.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/settings/assessmentws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'info',\n    },\n    tax: {\n        header : localize('Complete your personal details'),\n        message: (\n            <Localize\n                i18n_default_text='Please complete your <0>Personal Details</0> before you proceed.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/settings/detailsws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n    tnc: {\n        header : localize('Terms & Conditions Updated'),\n        message: (\n            <Localize\n                i18n_default_text='Please <0>accept the updated Terms and Conditions</0> to enable deposit and trading.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/tnc_approvalws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n    required_fields: {\n        header : localize('Complete your personal details'),\n        message: (\n            <Localize\n                i18n_default_text='Please complete your <0>Personal Details</0> before you proceed.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/settings/detailsws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n};\n\nconst hasMissingRequiredField = (response, client) => {\n    if (!response.get_settings) return false;\n\n    const { landing_company_shortcode } = client;\n    const is_svg = (landing_company_shortcode === 'svg' || landing_company_shortcode === 'costarica');\n\n    let required_fields;\n    if (is_svg) {\n        required_fields = getSVGRequiredFields();\n    } else {\n        required_fields = getRequiredFields();\n    }\n\n    const get_settings = response.get_settings;\n    return required_fields.some(field => !get_settings[field]);\n\n    function getSVGRequiredFields() {\n        const necessary_withdrawal_fields = State.getResponse('landing_company.financial_company.requirements.withdrawal');\n        const necessary_signup_fields     = State.getResponse('landing_company.financial_company.requirements.signup')\n            .map(field => (field === 'residence' ? 'country' : field));\n\n        return [...necessary_withdrawal_fields, ...necessary_signup_fields];\n    }\n\n    function getRequiredFields() {\n        if (!isAccountOfType('financial')) return [];\n        const { residence } = client;\n\n        const required_settings_fields = [\n            'account_opening_reason',\n            'address_line_1',\n            'address_city',\n            'phone',\n            'tax_identification_number',\n            'tax_residence'];\n        const address_postcode_is_required = (residence === 'gb' || landing_company_shortcode === 'iom');\n        if (address_postcode_is_required) required_settings_fields.push('address_postcode');\n\n        return [...required_settings_fields];\n    }\n};\n\nconst checkAccountStatus = (response, client, addNotification, loginid) => {\n    if (!response.get_account_status) return;\n    if (loginid !== LocalStore.get('active_loginid')) return;\n\n    const { prompt_client_to_authenticate, status } = response.get_account_status;\n\n    const {\n        document_under_review,\n        cashier_locked,\n        withdrawal_locked,\n        mt5_withdrawal_locked,\n        document_needs_action,\n        unwelcome,\n        ukrts_max_turnover_limit_not_set,\n        professional,\n    } = getStatusValidations(status);\n    const is_mf_retail = client.landing_company_shortcode === 'maltainvest' && !professional;\n\n    if (cashier_locked)        addNotification(client_notifications.cashier_locked);\n    if (withdrawal_locked)     addNotification(client_notifications.withdrawal_locked);\n    if (mt5_withdrawal_locked) addNotification(client_notifications.mt5_withdrawal_locked);\n    if (document_needs_action) addNotification(client_notifications.document_needs_action);\n    if (unwelcome)             addNotification(client_notifications.unwelcome);\n    if (is_mf_retail)          addNotification(client_notifications.mf_retail);\n    if (ukrts_max_turnover_limit_not_set) {\n        addNotification(client_notifications.financial_limit);\n    }\n    if (getRiskAssessment()) addNotification(client_notifications.risk);\n    if (shouldCompleteTax()) addNotification(client_notifications.tax);\n\n    if ((+prompt_client_to_authenticate) && !(document_under_review || document_needs_action)) {\n        addNotification(client_notifications.authenticate);\n    }\n\n    function getStatusValidations(status_arr) {\n        return status_arr.reduce((validations, account_status) => {\n            validations[account_status] = true;\n            return validations;\n        }, {});\n    }\n};\n\nexport const handleClientNotifications = (client, addNotification, loginid) => {\n    const { currency, excluded_until } = client;\n    if (!currency)         addNotification(client_notifications.currency);\n    if (excluded_until)    addNotification(client_notifications.self_exclusion(excluded_until));\n\n    WS.getAccountStatus().then((response) => checkAccountStatus(response, client, addNotification, loginid));\n\n    WS.sendRequest({ get_settings: 1 }, { forced: true }).then((response) => {\n        if (loginid !== LocalStore.get('active_loginid')) return;\n\n        if (shouldAcceptTnc()) addNotification(client_notifications.tnc);\n\n        if (hasMissingRequiredField(response, client)) {\n            addNotification(client_notifications.required_fields);\n        }\n    });\n};\n","import Client                    from '_common/base/client_base';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport { getElementById }        from '_common/common_functions';\nimport { localize }              from 'App/i18n';\nimport { compareBigUnsignedInt } from '_common/string_util';\nimport { cloneObject }           from '_common/utility';\n\n// ------------------------------\n// ----- Validation Methods -----\n// ------------------------------\nconst validRequired     = (value/* , options, field */) => {\n    if (value === undefined || value === null) {\n        return false;\n    }\n\n    const str = String(value).replace(/\\s/g, '');\n    return str.length > 0;\n};\nconst validEmail        = value => /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,63}$/.test(value);\nconst validPassword     = value => /(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]+/.test(value);\nconst validLetterSymbol = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><,|\\d]+/.test(value);\nconst validGeneral      = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><|]+/.test(value);\nconst validAddress      = value => !/[`~!$%^&*_=+[}{\\]\\\\\"?><|]+/.test(value);\nconst validPostCode     = value => /^[a-zA-Z\\d-\\s]*$/.test(value);\nconst validPhone        = value => /^\\+?[0-9\\s]*$/.test(value);\nconst validRegular      = (value, options) => options.regex.test(value);\nconst validEmailToken   = value => value.trim().length === 8;\nconst validTaxID        = value => /^[a-zA-Z0-9]*[\\w-]*$/.test(value);\nconst validBarrier      = value => /^[+-]?\\d+\\.?\\d*$/.test(value);\n\nconst validCompare  = (value, options) => value === getElementById(options.to.substr(1)).value;\nconst validNotEqual = (value, options) => value !== getElementById(options.to.substr(1)).value;\nconst validMin      = (value, options) => (options.min ? value.length >= options.min : true);\nconst validLength   = (value, options) => (\n    (options.min ? value.length >= options.min : true) &&\n    (options.max ? value.length <= options.max : true)\n);\n\nconst validNumber = (value, opts) => {\n    const options = cloneObject(opts);\n    let message = null;\n    if (options.allow_empty && value.length === 0) {\n        return true;\n    }\n\n    let is_ok = true;\n    if ('min' in options && typeof options.min === 'function') {\n        options.min = options.min();\n    }\n    if ('max' in options && typeof options.max === 'function') {\n        options.max = options.max();\n    }\n\n    if (!(options.type === 'float' ? /^\\d*(\\.\\d+)?$/ : /^\\d+$/).test(value) || isNaN(value)) {\n        is_ok   = false;\n        message = localize('Should be a valid number.');\n    } else if (options.type === 'float' && options.decimals &&\n        !(new RegExp(`^\\\\d+(\\\\.\\\\d{0,${options.decimals}})?$`).test(value))) {\n        is_ok   = false;\n        message = localize('Up to {{decimal_count}} decimal places are allowed.', { decimal_count: options.decimals });\n    } else if ('min' in options && 'max' in options && +options.min === +options.max && +value !== +options.min) {\n        is_ok   = false;\n        message = localize('Should be {{value}}', { value: addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined) });\n    } else if ('min' in options && 'max' in options && (+value < +options.min || isMoreThanMax(value, options))) {\n        is_ok   = false;\n        message = localize(\n            'Should be between {{min_value}} and {{max_value}}',\n            {\n                min_value: addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined),\n                max_value: addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined),\n            }\n        );\n    } else if ('min' in options && +value < +options.min) {\n        is_ok   = false;\n        message = localize('Should be more than {{min_value}}', { min_value: addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined) });\n    } else if ('max' in options && isMoreThanMax(value, options)) {\n        is_ok   = false;\n        message = localize('Should be less than {{max_value}}', { max_value: addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined) });\n    }\n\n    getPreBuildDVRs().number.message = message;\n    return is_ok;\n};\n\nconst isMoreThanMax = (value, options) =>\n    (options.type === 'float' ? +value > +options.max : compareBigUnsignedInt(value, options.max) === 1);\n\nconst initPreBuildDVRs = () => ({\n    address      : { func: validAddress,      message: localize('Only letters, numbers, space, and these special characters are allowed: {{permitted_characters}}', { permitted_characters: '- . \\' # ; : ( ) , @ /' }) },\n    barrier      : { func: validBarrier,      message: localize('Only numbers and these special characters are allowed: {{permitted_characters}}', { permitted_characters: '+ - .' }) },\n    compare      : { func: validCompare,      message: localize('The two passwords that you entered do not match.') },\n    email        : { func: validEmail,        message: localize('Invalid email address.') },\n    general      : { func: validGeneral,      message: localize('Only letters, numbers, space, hyphen, period, and apostrophe are allowed.') },\n    length       : { func: validLength,       message: localize('You should enter {{value}} characters.', { value: '{{value}}' }) },\n    letter_symbol: { func: validLetterSymbol, message: localize('Only letters, space, hyphen, period, and apostrophe are allowed.') },\n    min          : { func: validMin,          message: localize('Minimum of {{value}} characters required.', { value: '{{value}}' }) },\n    not_equal    : { func: validNotEqual,     message: localize('{{value_one}} and {{value_two}} cannot be the same.', { value_one: '{{value_one}}', value_two: '{{value_two}}' }) },\n    number       : { func: validNumber,       message: '' }, // TODO: i18n_issue\n    password     : { func: validPassword,     message: localize('Password should have lower and uppercase letters with numbers.') },\n    phone        : { func: validPhone,        message: localize('Only numbers and spaces are allowed.') },\n    postcode     : { func: validPostCode,     message: localize('Only letters, numbers, space, and hyphen are allowed.') },\n    regular      : { func: validRegular,      message: '' },\n    req          : { func: validRequired,     message: '' },\n    signup_token : { func: validEmailToken,   message: localize('The length of token should be 8.') },\n    tax_id       : { func: validTaxID,        message: localize('Should start with letter or number, and may contain hyphen and underscore.') },\n});\n\nlet pre_build_dvrs;\nexport const getPreBuildDVRs = () => {\n    if (!pre_build_dvrs) {\n        pre_build_dvrs = initPreBuildDVRs();\n    }\n    return pre_build_dvrs;\n};\n\nexport const getPasswordLengthConfig = type => ({ min: (/^mt$/.test(type) ? 8 : 6), max: 25 });\n","class Errors {\n    constructor() {\n        this.errors = {};\n    }\n\n    add(attribute, message) {\n        if (!this.has(attribute)) {\n            this.errors[attribute] = [];\n        }\n\n        if (this.errors[attribute].indexOf(message) === -1) {\n            this.errors[attribute].push(message);\n        }\n    }\n\n    all() {\n        return this.errors;\n    }\n\n    first(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute][0];\n        }\n        return null;\n    }\n\n    get(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute];\n        }\n\n        return [];\n    }\n\n    has(attribute) {\n        return Object.prototype.hasOwnProperty.call(this.errors, attribute);\n    }\n}\n\nexport default Errors;\n","import { template }        from '_common/utility';\nimport { getPreBuildDVRs } from './declarative-validation-rules';\nimport Error               from './errors';\n\nclass Validator {\n    constructor(input, rules, store = null) {\n        this.input  = input;\n        this.rules  = rules;\n        this.store  = store;\n        this.errors = new Error();\n\n        this.error_count = 0;\n    }\n\n    /**\n     * Add failure and error message for given rule\n     *\n     * @param {string} attribute\n     * @param {object} rule\n     */\n    addFailure(attribute, rule) {\n        let message = rule.options.message || getPreBuildDVRs()[rule.name].message;\n        if (rule.name === 'length') {\n            message = template(message, [rule.options.min === rule.options.max ? rule.options.min : `${rule.options.min}-${rule.options.max}`]);\n        } else if (rule.name === 'min') {\n            message = template(message, [rule.options.min]);\n        } else if (rule.name === 'not_equal') {\n            message = template(message, [rule.options.name1, rule.options.name2]);\n        }\n        this.errors.add(attribute, message);\n        this.error_count++;\n    }\n\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n    check() {\n        Object.keys(this.input).forEach(attribute => {\n            if (!Object.prototype.hasOwnProperty.call(this.rules, attribute)) {\n                return;\n            }\n\n            this.rules[attribute].forEach(rule => {\n                const ruleObject = Validator.getRuleObject(rule);\n\n                if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n                    return;\n                }\n\n                if (ruleObject.options.condition && !ruleObject.options.condition(this.store)) {\n                    return;\n                }\n\n                if (this.input[attribute] === '' && ruleObject.name !== 'req') {\n                    return;\n                }\n\n                const is_valid = ruleObject.validator(\n                    this.input[attribute],\n                    ruleObject.options,\n                    this.store,\n                    this.input\n                );\n\n                if (!is_valid) {\n                    this.addFailure(attribute, ruleObject);\n                }\n            });\n        });\n        return !this.error_count;\n    }\n\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n    isPassed() {\n        return this.check();\n    }\n\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n    static getRuleObject(rule) {\n        const is_rule_string = typeof rule === 'string';\n        const rule_object = {\n            name   : is_rule_string ? rule : rule[0],\n            options: is_rule_string ? {} : rule[1] || {},\n        };\n\n        rule_object.validator = rule_object.name === 'custom' ? rule[1].func : getPreBuildDVRs()[rule_object.name].func;\n\n        return rule_object;\n    }\n}\n\nexport default Validator;\n","import {\n    action,\n    intercept,\n    observable,\n    reaction,\n    toJS,\n    when }               from 'mobx';\nimport BinarySocket      from '_common/base/socket_base';\nimport { isEmptyObject } from '_common/utility';\nimport Validator         from 'Utils/Validator';\nimport { isProduction }  from '../config';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE  : Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    @observable\n    validation_errors = {};\n\n    @observable\n    validation_rules = {};\n\n    switchAccountDisposer = null;\n    switch_account_listener = null;\n\n    @observable partial_fetch_time = 0;\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     *     @property {String}   store_name - Explicit store name for browser application storage (to bypass minification)\n     */\n    constructor(options = {}) {\n        const {\n            root_store,\n            local_storage_properties,\n            session_storage_properties,\n            validation_rules,\n            store_name,\n        } = options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n\n        const has_local_or_session_storage = local_storage_properties && local_storage_properties.length\n            || session_storage_properties && session_storage_properties.length;\n\n        if (has_local_or_session_storage) {\n            if (!store_name) {\n                throw new Error('store_name is required for local/session storage');\n            }\n\n            Object.defineProperty(this, 'store_name', {\n                value     : store_name,\n                enumerable: false,\n                writable  : false,\n            });\n        }\n\n        this.root_store                 = root_store;\n        this.local_storage_properties   = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n        this.setValidationRules(validation_rules);\n\n        this.setupReactionForLocalStorage();\n        this.setupReactionForSessionStorage();\n        this.retrieveFromStorage();\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce(\n                (result, p) => Object.assign(result, { [p]: snapshot[p] }),\n                {},\n            );\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties), (key, value) => {\n            if (value !== null) return value;\n            return undefined;\n        });\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.store_name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.store_name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    @action\n    retrieveFromStorage() {\n        const local_storage_snapshot   = JSON.parse(localStorage.getItem(this.store_name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.store_name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach((k) => this[k] = snapshot[k]);\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param [{String}] messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    @action\n    setValidationErrorMessages(propertyName, messages) {\n        const is_different = () => !!this.validation_errors[propertyName]\n            .filter(x => !messages.includes(x))\n            .concat(messages.filter(x => !this.validation_errors[propertyName].includes(x)))\n            .length;\n        if (!this.validation_errors[propertyName] || is_different()) {\n            this.validation_errors[propertyName] = messages;\n        }\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    @action\n    setValidationRules(rules = {}) {\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    @action\n    addRule(property, rules) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    @action\n    validateProperty(property, value) {\n        const trigger          = this.validation_rules[property].trigger;\n        const inputs           = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: (this.validation_rules[property].rules || []) };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger]           = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(\n            inputs,\n            validation_rules,\n            this,\n        );\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    @action\n    validateAllProperties() {\n        const validation_rules  = Object.keys(this.validation_rules);\n        const validation_errors = Object.keys(this.validation_errors);\n\n        validation_rules.forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n\n        // Remove keys that are present in error, but not in rules:\n        validation_errors.forEach(error => {\n            if (!validation_rules.includes(error)) {\n                delete this.validation_errors[error];\n            }\n        });\n    }\n\n    @action.bound\n    onSwitchAccount(listener) {\n        this.switchAccountDisposer = when(\n            () => this.root_store.client.switch_broadcast,\n            async () => {\n                try {\n                    const result = this.switch_account_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.switchEndSignal();\n                            this.onSwitchAccount(this.switch_account_listener);\n                        });\n                    } else {\n                        throw new Error('Switching account listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            },\n        );\n        this.switch_account_listener = listener;\n    }\n\n    @action.bound\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n    }\n\n    @action.bound\n    assertHasValidCache(loginid, ...reactions) {\n        // account was changed when this was unmounted.\n        if (this.root_store.client.loginid !== loginid) {\n            reactions.forEach(act => act());\n            this.partial_fetch_time = false;\n        }\n    }\n\n    waitFor = async (...prerequisites) => {\n        await BinarySocket.wait(...prerequisites);\n    };\n}\n","import { isCryptocurrency } from '_common/base/currency_base';\nimport { localize }         from 'App/i18n';\n\nexport const buildCurrenciesList = (payout_currencies) => {\n    const fiat   = [];\n    const crypto = [];\n\n    payout_currencies.forEach((cur) => {\n        const isCrypto = isCryptocurrency(cur);\n        (isCrypto ? crypto : fiat).push({ text: cur, value: cur, has_tooltip: isCrypto });\n    });\n\n    return {\n        [localize('Fiat')]  : fiat,\n        [localize('Crypto')]: crypto,\n    };\n};\n\nexport const getDefaultCurrency = (currencies_list, currency = '') => {\n    const supported_currencies = Object.values(currencies_list).reduce((a, b) => [...a, ...b]);\n    const default_currency =\n              supported_currencies.find(c => c.value === currency) ? currency : supported_currencies[0].value;\n\n    return {\n        currency: default_currency,\n    };\n};\n","import {\n    action,\n    computed,\n    observable,\n    runInAction,\n    when,\n}                                    from 'mobx';\nimport moment                        from 'moment';\nimport {\n    requestLogout,\n    WS }                             from 'Services';\nimport { getAccountTitle }           from '_common/base/client_base';\nimport BinarySocket                  from '_common/base/socket_base';\nimport * as SocketCache              from '_common/base/socket_cache';\nimport { localize }                  from 'App/i18n';\nimport {\n    LocalStore,\n    State }                          from '_common/storage';\nimport BinarySocketGeneral           from 'Services/socket-general';\nimport { handleClientNotifications } from './Helpers/client-notifications';\nimport BaseStore                     from './base-store';\nimport { getClientAccountType }      from './Helpers/client';\nimport { buildCurrenciesList }       from './Modules/Trading/Helpers/currency';\nimport { setCurrencies }             from '../_common/base/currency_base';\n\nconst storage_key = 'client.accounts';\nexport default class ClientStore extends BaseStore {\n    @observable loginid;\n    @observable upgrade_info;\n    @observable accounts;\n    @observable email;\n    @observable switched                   = '';\n    @observable switch_broadcast           = false;\n    @observable currencies_list            = {};\n    @observable residence_list             = [];\n    @observable selected_currency          = '';\n    @observable is_populating_account_list = false;\n    @observable website_status             = {};\n    @observable verification_code          = '';\n\n    constructor(root_store) {\n        super({ root_store });\n    }\n\n    @computed\n    get balance() {\n        if (!this.accounts) return '';\n        return (this.accounts[this.loginid] && this.accounts[this.loginid].balance) ?\n            this.accounts[this.loginid].balance.toString() :\n            '';\n    }\n\n    /**\n     * Temporary property. should be removed once we are fully migrated from the old app.\n     *\n     * @returns {boolean}\n     */\n    @computed\n    get is_client_allowed_to_visit() {\n        return !!(\n            !this.is_logged_in || this.is_virtual || this.accounts[this.loginid].landing_company_shortcode === 'svg'\n        );\n    }\n\n    @computed\n    get account_list() {\n        return this.all_loginids.map(id => (\n            !this.isDisabled(id) &&\n            this.getToken(id) ?\n                this.getAccountInfo(id) :\n                undefined\n        )).filter(account => account);\n    }\n\n    @computed\n    get active_accounts() {\n        return this.accounts instanceof Object\n            ? Object.values(this.accounts).filter(account => !account.is_disabled)\n            : [];\n    }\n\n    @computed\n    get all_loginids() {\n        return this.accounts instanceof Object ? Object.keys(this.accounts) : [];\n    }\n\n    @computed\n    get account_title() {\n        return getAccountTitle(this.loginid);\n    }\n\n    @computed\n    get currency() {\n        if (this.selected_currency.length) {\n            return this.selected_currency;\n        } else if (this.is_logged_in) {\n            return this.accounts[this.loginid].currency;\n        }\n        return this.default_currency;\n\n    }\n\n    @computed\n    get default_currency() {\n        if (Object.keys(this.currencies_list).length > 0) {\n            const keys = Object.keys(this.currencies_list);\n            return Object.values(this.currencies_list[`${keys[0]}`])[0].text;\n        } return 'USD';\n    }\n\n    @computed\n    get is_valid_login() {\n        if (!this.is_logged_in) return true;\n        const valid_login_ids_regex = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG)[0-9]+$', 'i');\n        return this.all_loginids.every(id => valid_login_ids_regex.test(id));\n    }\n\n    @computed\n    get is_logged_in() {\n        return !!(\n            this.accounts instanceof Object &&\n            Object.keys(this.accounts).length > 0 &&\n            this.loginid &&\n            this.accounts[this.loginid].token\n        );\n    }\n\n    @computed\n    get is_virtual() {\n        return this.accounts && this.accounts[this.loginid] && !!this.accounts[this.loginid].is_virtual;\n    }\n\n    @computed\n    get can_upgrade() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade || this.upgrade_info.can_open_multi);\n    }\n\n    @computed\n    get can_upgrade_to() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade_to);\n    }\n\n    @computed\n    get virtual_account_loginid() {\n        return this.all_loginids\n            .find(loginid => !!this.accounts[loginid].is_virtual);\n    }\n\n    @computed\n    get is_single_currency() {\n        return Object.keys(this.currencies_list).map(type => Object.values(this.currencies_list[type]).length)\n            .reduce((acc, cur) => acc + cur, 0) === 1;\n    }\n\n    @computed\n    get account_type() {\n        return getClientAccountType(this.loginid);\n    }\n\n    /**\n     * Store Values relevant to the loginid to local storage.\n     *\n     * @param loginid\n     */\n    @action.bound\n    resetLocalStorageValues(loginid) {\n        this.accounts[loginid].accepted_bch = 0;\n        LocalStore.setObject(storage_key, this.accounts);\n        LocalStore.set('active_loginid', loginid);\n        this.loginid = loginid;\n    }\n\n    @action.bound\n    getBasicUpgradeInfo() {\n        const upgradeable_landing_companies = State.getResponse('authorize.upgradeable_landing_companies');\n        let can_open_multi                  = false;\n        let type,\n            can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            can_open_multi   = upgradeable_landing_companies.indexOf(\n                this.accounts[this.loginid].landing_company_shortcode) !== -1;\n            const canUpgrade = (...landing_companies) => landing_companies.find(landing_company => (\n                landing_company !== this.accounts[this.loginid].landing_company_shortcode &&\n                upgradeable_landing_companies.indexOf(landing_company) !== -1\n            ));\n            can_upgrade_to   = canUpgrade('svg', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    }\n\n    @action.bound\n    responsePayoutCurrencies(response) {\n        const list = response.payout_currencies || response;\n        this.currencies_list = buildCurrenciesList(list);\n        this.selectCurrency('');\n    }\n\n    @action.bound\n    responseAuthorize(response) {\n        this.accounts[this.loginid].email                     = response.authorize.email;\n        this.accounts[this.loginid].currency                  = response.authorize.currency;\n        this.accounts[this.loginid].is_virtual                = +response.authorize.is_virtual;\n        this.accounts[this.loginid].session_start             = parseInt(moment().utc().valueOf() / 1000);\n        this.accounts[this.loginid].landing_company_shortcode = response.authorize.landing_company_name;\n        this.updateAccountList(response.authorize.account_list);\n        this.upgrade_info = this.getBasicUpgradeInfo();\n        this.user_id      = response.authorize.user_id;\n    }\n\n    @action.bound\n    setWebsiteStatus(response) {\n        this.website_status = response.website_status;\n        setCurrencies(this.website_status);\n    }\n\n    @computed\n    get is_website_status_ready () {\n        return this.website_status &&\n        this.website_status.site_status === 'up';\n    }\n\n    @action.bound\n    updateAccountList(account_list) {\n        account_list.forEach((account) => {\n            if (this.accounts[account.loginid]) {\n                this.accounts[account.loginid].excluded_until = account.excluded_until || '';\n                Object.keys(account).forEach((param) => {\n                    const param_to_set = param === 'country' ? 'residence' : param;\n                    const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                    if (param_to_set !== 'loginid') {\n                        this.accounts[account.loginid][param_to_set] = value_to_set;\n                    }\n                });\n            }\n        });\n    }\n\n    /**\n     * Switch to the given loginid account.\n     *\n     * @param {string} loginid\n     */\n    @action.bound\n    async switchAccount(loginid) {\n        this.root_store.ui.removeAllNotifications();\n        this.setSwitched(loginid);\n        this.responsePayoutCurrencies(await WS.payoutCurrencies());\n    }\n\n    @action.bound\n    switchEndSignal() {\n        this.switch_broadcast = false;\n    }\n\n    /**\n     * We initially fetch things from local storage, and then do everything inside the store.\n     * This will probably be the only place we are fetching data from Client_base.\n     */\n    @action.bound\n    async init() {\n        const authorize_response = await this.setUserLogin();\n        this.setLoginId(LocalStore.get('active_loginid'));\n        this.setAccounts(LocalStore.getObject(storage_key));\n        this.setSwitched('');\n        const client = this.accounts[this.loginid];\n\n        // If there is an authorize_response, it means it was the first login\n        if (authorize_response) {\n            // If this fails, it means the landing company check failed\n            if (this.loginid === authorize_response.authorize.loginid) {\n                BinarySocketGeneral.authorizeAccount(authorize_response);\n            } else { // So it will send an authorize with the accepted token, to be handled by socket-general\n                await BinarySocket.send({ authorize: client.token }, { forced: true });\n            }\n        }\n\n        if (client && !client.is_virtual) {\n            BinarySocket.wait('landing_company', 'website_status').then(() => {\n                handleClientNotifications(client, this.root_store.ui.addNotification, this.loginid);\n            });\n        }\n\n        this.selectCurrency('');\n\n        this.responsePayoutCurrencies(await WS.payoutCurrencies());\n\n        this.registerReactions();\n    }\n\n    @action.bound\n    setLoginId(loginid) {\n        this.loginid = loginid;\n    }\n\n    @action.bound\n    setAccounts(accounts) {\n        this.accounts = accounts;\n    }\n\n    @action.bound\n    setSwitched(switched) {\n        this.switched = switched;\n    }\n\n    /**\n     * Check if account is disabled or not\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    isDisabled(loginid = this.loginid) {\n        return this.getAccount(loginid).is_disabled;\n    }\n\n    /**\n     * Get accounts token from given login id.\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    getToken(loginid = this.loginid) {\n        return this.getAccount(loginid).token;\n    }\n\n    /**\n     * Get account object from given login id\n     *\n     * @param loginid\n     * @returns {object}\n     */\n    getAccount(loginid = this.loginid) {\n        return this.accounts[loginid];\n    }\n\n    /**\n     * Get information required by account switcher\n     *\n     * @param loginid\n     * @returns {{loginid: *, is_virtual: (number|number|*), icon: string, title: *}}\n     */\n    getAccountInfo(loginid = this.loginid) {\n        const account      = this.getAccount(loginid);\n        const currency     = account.currency;\n        const is_virtual   = account.is_virtual;\n        const account_type = !is_virtual && currency ? currency : getAccountTitle(loginid);\n\n        return {\n            loginid,\n            is_virtual,\n            icon : account_type.toLowerCase(), // TODO: display the icon\n            title: account_type.toLowerCase() === 'virtual' ? localize('DEMO') : account_type,\n        };\n    }\n\n    @action.bound\n    broadcastAccountChange() {\n        this.switch_broadcast = true;\n    }\n\n    @action.bound\n    async switchAccountHandler () {\n        if (!this.switched || !this.switched.length || !this.getAccount(this.switched).token) {\n            // Logout if the switched_account doesn't belong to any loginid.\n            if (!this.all_loginids.some(id => id !== this.switched) || this.switched === this.loginid) {\n                this.root_store.ui.addNotification({\n                    message: localize('Could not switch to default account.'),\n                    type   : 'danger',\n                });\n                // request a logout\n                requestLogout();\n                this.root_store.modules.trade.clearContract();\n                return;\n            }\n\n            this.root_store.modules.portfolio.clearTable();\n            // Send a toast message to let the user know we can't switch his account.\n            this.root_store.ui.addNotification({\n                message: localize('Switching to default account.'),\n                type   : 'info',\n            });\n\n            // switch to default account.\n            this.switchAccount(this.all_loginids[0]);\n            await this.switchAccountHandler();\n            return;\n        }\n        sessionStorage.setItem('active_tab', '1');\n        // set local storage\n        this.root_store.gtm.setLoginFlag();\n        this.resetLocalStorageValues(this.switched);\n        SocketCache.clear();\n        await BinarySocket.send({ 'authorize': this.getToken() }, { forced: true });\n        await this.init();\n        this.broadcastAccountChange();\n    }\n\n    @action.bound\n    registerReactions() {\n        // Switch account reactions.\n        when(\n            () => this.switched,\n            this.switchAccountHandler\n        );\n    }\n\n    @action.bound\n    setBalance(balance) {\n        this.accounts[this.loginid].balance = balance;\n    }\n\n    @action.bound\n    selectCurrency(value) {\n        this.selected_currency = value;\n    }\n\n    @action.bound\n    setResidence(residence) {\n        this.accounts[this.loginid].residence = residence;\n    }\n\n    @action.bound\n    setEmail(email) {\n        this.accounts[this.loginid].email = email;\n        this.email = email;\n    }\n\n    @action.bound\n    cleanUp() {\n        this.root_store.gtm.pushDataLayer({ event: 'log_out' });\n        this.loginid = null;\n        this.upgrade_info = undefined;\n        this.accounts = [];\n        this.currencies_list  = {};\n        this.selected_currency = '';\n        this.root_store.modules.smart_chart.should_refresh_active_symbols = true;\n        return new Promise(async (resolve) => {\n            await this.root_store.modules.trade.clearContract();\n            await this.root_store.modules.trade.resetErrorServices();\n            await this.root_store.ui.removeAllNotifications();\n            await this.root_store.modules.trade.refresh();\n            return resolve(this.root_store.modules.trade.debouncedProposal());\n        });\n    }\n\n    /* eslint-disable */\n    @action.bound\n    storeClientAccounts(obj_params, account_list) {\n        // store consistent names with other API calls\n        // API_V4: send consistent names\n        const map_names = {\n            country             : 'residence',\n            landing_company_name: 'landing_company_shortcode',\n        };\n        const client_object = {};\n        let active_loginid;\n\n        let is_allowed_real = true;\n        // Performs check to avoid login of landing companies that are currently not supported in app\n        account_list.forEach(function(account) {\n            if (!/^virtual|svg$/.test(account.landing_company_name)) {\n                is_allowed_real = false;\n            }\n        });\n\n        account_list.forEach(function(account) {\n            Object.keys(account).forEach(function(param) {\n                if (param === 'loginid') {\n                    if (!active_loginid && !account.is_disabled) {\n                        if (is_allowed_real && !account.is_virtual) {\n                            active_loginid = account[param];\n                        } else if (account.is_virtual) { // TODO: [only_virtual] remove this to stop logging non-SVG clients into virtual\n                            active_loginid = account[param];\n                        }\n                    }\n                } else {\n                    const param_to_set = map_names[param] || param;\n                    const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                    if (!(account.loginid in client_object)) {\n                        client_object[account.loginid] = {};\n                    }\n                    client_object[account.loginid][param_to_set] = value_to_set;\n                }\n            });\n        });\n\n        let i = 1;\n        while (obj_params[`acct${  i}`]) {\n            const loginid = obj_params[`acct${  i}`];\n            const token   = obj_params[`token${  i}`];\n            if (loginid && token) {\n                client_object[loginid].token = token;\n            }\n            i++;\n        }\n\n        // if didn't find any login ID that matched the above condition\n        // or the selected one doesn't have a token, set the first one\n        if (!active_loginid || !client_object[active_loginid].token) {\n            active_loginid = obj_params.acct1;\n        }\n\n        // TODO: send login flag to GTM if needed\n\n        if (active_loginid && Object.keys(client_object).length) {\n            localStorage.setItem('active_loginid', active_loginid);\n            localStorage.setItem('client.accounts', JSON.stringify(client_object));\n        }\n    }\n\n    @action.bound\n    async setUserLogin() {\n        const obj_params = {};\n        const search     = window.location.search;\n        if (search) {\n            const arr_params = window.location.search.substr(1).split('&');\n            arr_params.forEach(function(param) {\n                if (param) {\n                    const param_value = param.split('=');\n                    if (param_value) {\n                        obj_params[param_value[0]] = param_value[1];\n                    }\n                }\n            });\n        }\n        const is_client_logging_in = obj_params.token1;\n\n        if (is_client_logging_in) {\n            window.history.replaceState({}, document.title, '/');\n\n            // is_populating_account_list is used for socket general to know not to filter the first-time logins\n            this.is_populating_account_list = true;\n            const authorize_response = await BinarySocket.send({ authorize: obj_params.token1 });\n            this.is_populating_account_list = false;\n            runInAction(() => {\n                const account_list = (authorize_response.authorize || {}).account_list;\n                if (account_list && !this.accounts) {\n                    this.storeClientAccounts(obj_params, account_list);\n                }\n            });\n            return authorize_response;\n        }\n    }\n\n    @action.bound\n    setVerificationCode(code) {\n        this.verification_code = code;\n        if (code) {\n            LocalStore.set('verification_code', code);\n        } else {\n            LocalStore.remove('verification_code');\n        }\n        // TODO: add await if error handling needs to happen before AccountSignup is initialised\n        // this.fetchResidenceList(); // Prefetch for use in account signup process\n    }\n\n    @action.bound\n    onSignup({ password, residence }) {\n        if (!this.verification_code || !password || !residence) return;\n\n        // Currently the code doesn't reach here and the console log is needed for debugging.\n        // TODO: remove console log when AccountSignup component and validation are ready\n        WS.newAccountVirtual(this.verification_code, password, residence).then(response => console.log(response));\n    }\n\n    fetchResidenceList() {\n        WS.residenceList().then(response => {\n            runInAction(() => {\n                this.residence_list = response.residence_list || [];\n            })\n        });\n    }\n}\n/* eslint-enable */\n","// TODO: [move-to-shared] - Remove the implementation in ClientBase and add this to shared utils\nexport const getClientAccountType = (loginid) => {\n    let account_type;\n    if (/^VR/.test(loginid))          account_type = 'virtual';\n    else if (/^MF/.test(loginid))     account_type = 'financial';\n    else if (/^MLT|MX/.test(loginid)) account_type = 'gaming';\n    return account_type;\n};\n\n// TODO: [move-to-shared] - Remove the implementation in ClientBase and add this to shared utils\nexport const getMT5AccountType = group => (group ? group.replace('\\\\', '_').replace(/_(\\d+|master|EUR|GBP)/, '') : '');\n","import {\n    action,\n    observable }           from 'mobx';\nimport moment              from 'moment';\nimport { currentLanguage } from 'Utils/Language/index';\nimport BaseStore           from './base-store';\n\nexport default class CommonStore extends BaseStore {\n    @observable server_time      = moment.utc();\n    @observable current_language = currentLanguage;\n    @observable has_error        = false;\n\n    @observable error = {\n        type   : 'info',\n        message: '',\n    };\n\n    @observable network_status    = {};\n    @observable is_network_online = false;\n    @observable is_socket_opened  = false;\n\n    @observable services_error = {};\n\n    @observable deposit_url = '';\n    @observable withdraw_url = '';\n\n    @action.bound\n    setIsSocketOpened(is_socket_opened) {\n        this.is_socket_opened = is_socket_opened;\n    }\n\n    @action.bound\n    setNetworkStatus(status, is_online) {\n        if (this.network_status.class) {\n            this.network_status.class   = status.class;\n            this.network_status.tooltip = status.tooltip;\n        } else {\n            this.network_status = status;\n        }\n        this.is_network_online = is_online;\n    }\n\n    @action.bound\n    setError(has_error, error) {\n        this.has_error = has_error;\n        this.error     = {\n            type: error ? error.type : 'info',\n            ...(error && {\n                header             : error.header,\n                message            : error.message,\n                redirect_label     : error.redirect_label,\n                redirectOnClick    : error.redirectOnClick,\n                should_show_refresh: error.should_show_refresh,\n            }),\n        };\n    }\n\n    @action.bound\n    showError(message, header, redirect_label, redirectOnClick, should_show_refresh) {\n        this.setError(true, {\n            header,\n            message,\n            redirect_label,\n            redirectOnClick,\n            should_show_refresh,\n            type: 'error',\n        });\n    }\n\n    @action.bound\n    setDepositURL(deposit_url) {\n        this.deposit_url = deposit_url;\n    }\n\n    @action.bound\n    setWithdrawURL(withdraw_url) {\n        this.withdraw_url = withdraw_url;\n    }\n}\n","import * as Cookies           from 'js-cookie';\nimport {\n    action,\n    computed }                from 'mobx';\nimport BinarySocket           from '_common/base/socket_base';\nimport { isLoginPages }       from '_common/base/login';\nimport { get as getLanguage } from '_common/language';\nimport {\n    toMoment,\n    epochToMoment }           from 'Utils/Date';\nimport BaseStore              from './base-store';\nimport { getMT5AccountType }  from './Helpers/client';\nimport { getAppId }           from '../config';\n\nexport default class GTMStore extends BaseStore {\n    is_gtm_applicable = /^(16303|16929)$/.test(getAppId());\n\n    constructor(root_store) {\n        super({ root_store });\n\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    @computed\n    get visitorId() {\n        return this.root_store.client.loginid;\n    }\n\n    /**\n     * Contains common data that will be passed to GTM on each datalayer push\n     *\n     * @returns {object}\n     */\n    @computed\n    get common_variables() {\n        return {\n            language: getLanguage(),\n            ...this.root_store.client.is_logged_in && {\n                visitorId: this.visitorId,\n                currency : this.root_store.client.currency,\n                userId   : this.root_store.client.user_id,\n            },\n            ...this.root_store.ui.is_dark_mode_on && {\n                theme: this.root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n            },\n        };\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => resolve(this.pushDataLayer({ event: 'account switch' })));\n    }\n\n    /**\n     * Pushes provided data as GTM DataLayer\n     *\n     * @param {object} data\n     */\n    @action.bound\n    async pushDataLayer(data) {\n        if (this.is_gtm_applicable && !isLoginPages()) {\n            BinarySocket.wait('authorize').then(() => {\n                dataLayer.push({\n                    ...this.common_variables,\n                    ...data,\n                });\n            });\n        }\n    }\n\n    @action.bound\n    pushPurchaseData(contract_data) {\n        const data = {\n            event   : 'buy_contract',\n            bom_ui  : 'new',\n            contract: {\n                amount       : contract_data.amount,\n                barrier1     : contract_data.barrier,\n                barrier2     : contract_data.barrier2,\n                basis        : contract_data.basis,\n                buy_price    : contract_data.buy_price,\n                contract_type: contract_data.contract_type,\n                currency     : contract_data.currency,\n                date_expiry  : contract_data.date_expiry,\n                date_start   : contract_data.date_start,\n                duration     : contract_data.duration,\n                duration_unit: contract_data.duration_unit,\n                payout       : contract_data.payout,\n                symbol       : contract_data.symbol,\n            },\n            settings: {\n                theme           : this.root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n                positions_drawer: this.root_store.ui.is_positions_drawer_on ? 'open' : 'closed',\n                // purchase_confirm: this.root_store.ui.is_purchase_confirm_on ? 'enabled' : 'disabled',\n                chart           : {\n                    toolbar_position: this.root_store.ui.is_chart_layout_default ? 'bottom' : 'left',\n                    chart_asset_info: this.root_store.ui.is_chart_asset_info_visible ? 'visible' : 'hidden',\n                    chart_type      : this.root_store.modules.smart_chart.chart_type,\n                    granularity     : this.root_store.modules.smart_chart.granularity,\n                },\n            },\n        };\n        this.pushDataLayer(data);\n    }\n\n    /**\n     * Pushes deposit & withdrawal data from transaction-stream to GTM\n     *\n     * @param {object} response\n     * @param {object} extra_data\n     */\n    @action.bound\n    pushTransactionData(response, extra_data = {}) {\n        if (!this.is_gtm_applicable || this.root_store.client.is_virtual) return;\n        if (!response.transaction || !response.transaction.action) return;\n        if (!['deposit', 'withdrawal'].includes(response.transaction.action)) return;\n\n        const moment_now  = toMoment();\n        const storage_key = 'GTM_transactions';\n\n        // Remove values from prev days so localStorage doesn't grow to infinity\n        let gtm_transactions = JSON.parse(localStorage.getItem(storage_key)) || {};\n        if (Object.prototype.hasOwnProperty.call(gtm_transactions, 'timestamp')) {\n            if (moment_now.isAfter(epochToMoment(gtm_transactions.timestamp), 'day')) {\n                localStorage.removeItem(storage_key);\n                gtm_transactions = { timestamp: moment_now.unix() };\n            }\n        }\n        const transactions_arr = gtm_transactions.transactions || [];\n        if (!transactions_arr.includes(response.transaction.transaction_id)) {\n            const data = {\n                event           : 'transaction',\n                bom_account_type: this.root_store.client.account_type,\n                bom_today       : moment_now.unix(),\n                transaction     : {\n                    id    : response.transaction.transaction_id,\n                    type  : response.transaction.action,\n                    time  : response.transaction.transaction_time,\n                    amount: response.transaction.amount,\n                },\n            };\n            Object.assign(data, extra_data);\n            this.pushDataLayer(data);\n\n            transactions_arr.push(response.transaction.transaction_id);\n            gtm_transactions.transactions = transactions_arr;\n            gtm_transactions.timestamp    = gtm_transactions.timestamp || moment_now.unix();\n\n            localStorage.setItem(storage_key, JSON.stringify(gtm_transactions));\n        }\n    }\n\n    @action.bound\n    eventHandler(get_settings) {\n        if (!this.is_gtm_applicable) return;\n\n        const login_event       = localStorage.getItem('GTM_login');\n        const is_new_account    = localStorage.getItem('GTM_new_account') === '1';\n\n        localStorage.removeItem('GTM_login');\n        localStorage.removeItem('GTM_new_account');\n\n        const affiliate_token = Cookies.getJSON('affiliate_tracking');\n        if (affiliate_token) {\n            this.pushDataLayer({ affiliate_token: affiliate_token.t });\n        }\n\n        // Get current time (moment, set by server), else fallback to client time\n        const moment_now = toMoment();\n        const data = {\n            visitorId     : this.visitorId,\n            account_type  : this.root_store.client.account_type,\n            currency      : this.root_store.client.currency,\n            country       : get_settings.country,\n            country_abbrev: get_settings.country_code,\n            email         : get_settings.email,\n            url           : window.location.href,\n            today         : moment_now.unix(),\n        };\n\n        if (is_new_account) {\n            data.event = 'new_account';\n            data.bom_date_joined = data.bom_today;\n        }\n\n        if (login_event) {\n            data.event = login_event;\n            BinarySocket.wait('mt5_login_list').then((response) => {\n                (response.mt5_login_list || []).forEach((obj) => {\n                    const acc_type = (getMT5AccountType(obj.group) || '')\n                        .replace('real_vanuatu', 'financial').replace('vanuatu_', '').replace(/svg/, 'gaming'); // i.e. financial_cent, demo_cent, demo_gaming, real_gaming\n                    if (acc_type) {\n                        data[`mt5_${acc_type}_id`] = obj.login;\n                    }\n                });\n                this.pushDataLayer(data);\n            });\n        } else {\n            this.pushDataLayer(data);\n        }\n    }\n\n    @action.bound\n    setLoginFlag(event_name) {\n        if (this.is_gtm_applicable) {\n            localStorage.setItem('GTM_login', event_name);\n        }\n    }\n}\n","import {\n    action,\n    observable }            from 'mobx';\nimport { isCryptocurrency } from '_common/base/currency_base';\nimport { WS }               from 'Services';\nimport BaseStore            from '../../base-store';\n\nclass Config {\n    container          = '';\n    is_session_timeout = true;\n    onIframeLoaded     = '';\n    timeout_session    = '';\n\n    @observable error_message = '';\n    @observable iframe_height = 0;\n    @observable iframe_url    = '';\n\n    constructor({ container }) {\n        this.container = container;\n    }\n}\n\nexport default class CashierStore extends BaseStore {\n    @observable is_loading = false;\n\n    @observable config = {\n        deposit     : new Config({ container: 'deposit' }),\n        verification: {\n            is_button_clicked: false,\n            is_email_sent    : false,\n            is_resend_clicked: false,\n            resend_timeout   : 60,\n            timeout_button   : '',\n        },\n        withdraw: new Config({ container: 'withdraw' }),\n    };\n\n    containers = [\n        this.config.deposit.container,\n        this.config.withdraw.container,\n    ];\n\n    constructor({ root_store }) {\n        super({ root_store });\n\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    @action.bound\n    async onMount(current_action, verification_code) {\n        if (this.containers.indexOf(current_action) === -1) {\n            throw new Error('Cashier Store onMount requires a valid container name.');\n        }\n        this.setErrorMessage('', current_action);\n        this.setContainerHeight(0, current_action);\n        this.setLoading(true);\n\n        if (!this.config[current_action].is_session_timeout) {\n            this.checkIframeLoaded(current_action);\n            return;\n        }\n\n        // if session has timed out reset everything\n        this.setIframeUrl('', current_action);\n\n        if (current_action === this.config.withdraw.container && !verification_code) {\n            // if no verification code, we should request again\n            return;\n        }\n\n        const response_cashier = await WS.cashier(current_action, verification_code);\n\n        // TODO: error handling UI & custom messages\n        if (response_cashier.error) {\n            this.setLoading(false);\n            this.setErrorMessage(response_cashier.error.message, current_action);\n            this.setSessionTimeout(true, current_action);\n            this.clearTimeoutCashierUrl(current_action);\n            if (verification_code) {\n                // clear verification code on error\n                this.clearVerification();\n            }\n        } else if (isCryptocurrency(this.root_store.client.currency)) {\n            this.setLoading(false);\n            this.setContainerHeight('700', current_action);\n            this.setIframeUrl(response_cashier.cashier, current_action);\n            // crypto cashier can only be accessed once and the session expires\n            // so no need to set timeouts to keep the session alive\n        } else {\n            await this.checkIframeLoaded(current_action);\n            this.setIframeUrl(response_cashier.cashier, current_action);\n            this.setSessionTimeout(false, current_action);\n            this.setTimeoutCashierUrl(current_action);\n        }\n    }\n\n    @action.bound\n    async onMountDeposit() {\n        await this.onMount(this.config.deposit.container);\n    }\n\n    @action.bound\n    async checkIframeLoaded(container) {\n        this.removeOnIframeLoaded(container);\n        this.config[container].onIframeLoaded = (function (e) {\n            if (/cashier|doughflow/.test(e.origin)) {\n                this.setLoading(false);\n                // set the height of the container after content loads so that the\n                // loading bar stays vertically centered until the end\n                this.setContainerHeight(+e.data || '1200', container);\n                // do not remove the listener\n                // on every iframe screen change we need to update the height to more/less to match the new content\n            }\n        }).bind(this);\n        window.addEventListener('message', this.config[container].onIframeLoaded, false);\n    }\n\n    removeOnIframeLoaded(container) {\n        if (this.config[container].onIframeLoaded) {\n            window.removeEventListener('message', this.config[container].onIframeLoaded, false);\n            this.config[container].onIframeLoaded = '';\n        }\n    }\n\n    @action.bound\n    setIframeUrl(url, container) {\n        this.config[container].iframe_url = url;\n        if (url) {\n            // after we set iframe url we can clear verification code\n            this.root_store.client.setVerificationCode('');\n        }\n    }\n\n    @action.bound\n    setContainerHeight(height, container) {\n        this.config[container].iframe_height = height;\n    }\n\n    @action.bound\n    setErrorMessage(message, container) {\n        this.config[container].error_message = message;\n    }\n\n    @action.bound\n    setLoading(is_loading) {\n        this.is_loading = is_loading;\n    }\n\n    @action.bound\n    setSessionTimeout(is_session_time_out, container) {\n        this.config[container].is_session_timeout = is_session_time_out;\n        if (is_session_time_out) {\n            this.removeOnIframeLoaded(container);\n        }\n    }\n\n    @action.bound\n    setVerificationButtonClicked(is_button_clicked) {\n        this.config.verification.is_button_clicked = is_button_clicked;\n    }\n\n    @action.bound\n    setVerificationEmailSent(is_email_sent) {\n        this.config.verification.is_email_sent = is_email_sent;\n    }\n\n    @action.bound\n    setVerificationResendClicked(is_resend_clicked) {\n        this.config.verification.is_resend_clicked = is_resend_clicked;\n    }\n\n    @action.bound\n    setVerificationResendTimeout(resend_timeout) {\n        this.config.verification.resend_timeout = resend_timeout;\n    }\n\n    clearTimeoutCashierUrl(container) {\n        if (this.config[container].timeout_session) {\n            clearTimeout(this.config[container].timeout_session);\n        }\n    }\n\n    // cashier session expires after one minute\n    // so we should resend the request for container (deposit|withdraw) url on next mount\n    @action.bound\n    setTimeoutCashierUrl(container) {\n        this.clearTimeoutCashierUrl(container);\n        this.config[container].timeout_session = setTimeout(() => {\n            this.setSessionTimeout(true, container);\n        }, 60000);\n    }\n\n    clearTimeoutVerification() {\n        if (this.config.verification.timeout_button) {\n            clearTimeout(this.config.verification.timeout_button);\n        }\n    }\n\n    // verification token expires after one hour\n    // so we should show the verification request button again after that\n    @action.bound\n    setTimeoutVerification() {\n        this.clearTimeoutVerification();\n        this.config.verification.timeout_button = setTimeout(() => {\n            this.clearVerification();\n        }, 3600000);\n    }\n\n    @action.bound\n    async onMountWithdraw(verification_code) {\n        await this.onMount(this.config.withdraw.container, verification_code);\n    }\n\n    @action.bound\n    async sendVerificationEmail() {\n        if (this.config.verification.is_button_clicked) {\n            return;\n        }\n\n        this.setErrorMessage('', this.config.withdraw.container);\n        this.setVerificationButtonClicked(true);\n        const response_verify_email = await WS.verifyEmail(this.root_store.client.email, 'payment_withdraw');\n\n        if (response_verify_email.error) {\n            this.clearVerification();\n            this.setErrorMessage(response_verify_email.error.message, this.config.withdraw.container);\n        } else {\n            this.setVerificationEmailSent(true);\n            this.setTimeoutVerification();\n        }\n    }\n\n    @action.bound\n    resendVerificationEmail() {\n        // don't allow clicking while ongoing timeout\n        if (this.config.verification.resend_timeout < 60) {\n            return;\n        }\n        this.setVerificationButtonClicked(false);\n        this.setCountDownResendVerification();\n        this.sendVerificationEmail();\n    }\n\n    setCountDownResendVerification() {\n        this.setVerificationResendTimeout(this.config.verification.resend_timeout - 1);\n        const resend_interval = setInterval(() => {\n            if (this.config.verification.resend_timeout === 1) {\n                this.setVerificationResendTimeout(60);\n                clearInterval(resend_interval);\n            } else {\n                this.setVerificationResendTimeout(this.config.verification.resend_timeout - 1);\n            }\n        }, 1000);\n    }\n\n    clearVerification() {\n        this.clearTimeoutVerification();\n        this.setVerificationButtonClicked(false);\n        this.setVerificationEmailSent(false);\n        this.setVerificationResendClicked(false);\n        this.setVerificationResendTimeout(60);\n        this.root_store.client.setVerificationCode('');\n    }\n\n    @action.bound\n    setActiveTab(container) {\n        // used to detect if old tabs with withdrawal tab open should be closed after verification token is opened in new tab\n        this.root_store.ui.setCashierActiveTab(container);\n    }\n\n    onUnmount() {\n        this.clearVerification();\n        [this.config.deposit.container, this.config.withdraw.container].forEach((container) => {\n            this.setIframeUrl('', container);\n            this.clearTimeoutCashierUrl(container);\n            this.setSessionTimeout(true, container);\n        });\n    }\n\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => resolve(this.onUnmount()));\n    }\n}\n","export const CONTRACT_SHADES = {\n    CALL       : 'ABOVE',\n    PUT        : 'BELOW',\n    CALLE      : 'ABOVE',\n    PUTE       : 'BELOW',\n    EXPIRYRANGE: 'BETWEEN',\n    EXPIRYMISS : 'OUTSIDE',\n    RANGE      : 'BETWEEN',\n    UPORDOWN   : 'OUTSIDE',\n    ONETOUCH   : 'NONE_SINGLE', // no shade\n    NOTOUCH    : 'NONE_SINGLE', // no shade\n    ASIANU     : 'ABOVE',\n    ASIAND     : 'BELOW',\n};\n\n// Default non-shade according to number of barriers\nexport const DEFAULT_SHADES = {\n    1: 'NONE_SINGLE',\n    2: 'NONE_DOUBLE',\n};\n\nexport const BARRIER_COLORS = {\n    GREEN    : '#39b19d',\n    RED      : 'red',\n    GRAY     : '#999cac',\n    DARK_GRAY: '#555975',\n};\n\nexport const BARRIER_LINE_STYLES = {\n    DASHED: 'dashed',\n    DOTTED: 'dotted',\n    SOLID : 'solid',\n};\n","import {\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES } from '../../SmartChart/Constants/barriers';\n\nexport const createChartBarrier = (SmartChartStore, contract_info, is_dark_mode) => {\n    SmartChartStore.removeBarriers();\n\n    if (contract_info) {\n        const { contract_type, barrier, high_barrier, low_barrier } = contract_info;\n\n        if (barrier || high_barrier) { // create barrier only when it's available in response\n            SmartChartStore.createBarriers(\n                contract_type,\n                barrier || high_barrier,\n                low_barrier,\n                null,\n                {   color        : is_dark_mode ? BARRIER_COLORS.DARK_GRAY : BARRIER_COLORS.GRAY,\n                    line_style   : BARRIER_LINE_STYLES.SOLID,\n                    not_draggable: true,\n                },\n            );\n\n            SmartChartStore.updateBarrierShade(true, contract_type);\n        }\n    }\n};\n","import classNames           from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Icon         from 'Assets/icon.jsx';\n\nconst MarkerLine = ({\n    label,\n    line_style,\n    marker_config,\n    status,\n}) => {\n    // TODO: Find a more elegant solution\n    if (!marker_config) return <div />;\n    return (\n        <div className={classNames('chart-marker-line__wrapper', `chart-marker-line--${line_style}`)}>\n            { label === marker_config.LINE_END.content_config.label &&\n                <Icon\n                    icon='IconEndTime'\n                    className={classNames('chart-marker-line__icon', {\n                        'chart-marker-line__icon--won' : status === 'won',\n                        'chart-marker-line__icon--lost': status === 'lost',\n                    })}\n                />\n            }\n            { label === marker_config.LINE_START.content_config.label &&\n                <Icon\n                    icon='IconStartTime'\n                    className={classNames(\n                        'chart-marker-line__icon',\n                        'chart-marker-line__icon--time',\n                    )}\n                />\n            }\n        </div>\n    );\n};\n\nMarkerLine.propTypes = {\n    label        : PropTypes.string,\n    line_style   : PropTypes.string,\n    marker_config: PropTypes.object,\n    status       : PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerLine);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes     from 'prop-types';\nimport React        from 'react';\n\nconst MarkerSpot = ({\n    className,\n    spot_count,\n}) => (\n    <div\n        className={classNames('chart-spot', className)}\n    >{spot_count}\n    </div>\n);\n\nMarkerSpot.propTypes = {\n    className : PropTypes.string,\n    spot_count: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n};\n\nexport default observer(MarkerSpot);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { addComma } from '_common/base/currency_base';\nimport { toMoment } from 'Utils/Date';\nimport Icon         from 'Assets/icon.jsx';\nimport MarkerSpot   from './marker-spot.jsx';\n\nclass MarkerSpotLabel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show_label: !this.props.has_hover_toggle,\n        };\n    }\n\n    handleHoverToggle = () => {\n        this.setState((state) =>  ({ show_label: !state.show_label }));\n    }\n\n    render() {\n        let marker_spot =\n            <MarkerSpot\n                className={this.props.spot_className}\n                spot_count={this.props.spot_count}\n            />;\n\n        if (this.props.has_hover_toggle) {\n            marker_spot =\n                <div className='marker-hover-container' onMouseEnter={this.handleHoverToggle} onMouseLeave={this.handleHoverToggle}>\n                    { marker_spot }\n                </div>;\n        }\n\n        return (\n            <div className={'chart-spot-label'}>\n                {this.state.show_label &&\n                    <div className='chart-spot-label__info-container'>\n                        <div className={`chart-spot-label__time-value-container chart-spot-label__time-value-container--${this.props.align_label}`}>\n                            <div className='chart-spot-label__time-container'>\n                                <Icon icon='IconClock' height='10' width='10' className='chart-spot-label__time-icon' />\n                                <p className='chart-spot-label__time'>{toMoment(+this.props.spot_epoch).format('HH:mm:ss')}</p>\n                            </div>\n                            <div\n                                className={classNames('chart-spot-label__value-container', {\n                                    'chart-spot-label__value-container--won' : this.props.status === 'won',\n                                    'chart-spot-label__value-container--lost': this.props.status === 'lost',\n                                })}\n                            >\n                                <p>{addComma(this.props.spot_value)}</p>\n                            </div>\n                        </div>\n                    </div>\n                }\n                { marker_spot }\n            </div>\n        );\n    }\n}\n\nMarkerSpotLabel.defaultProps = {\n    align_label: 'top',\n};\n\nMarkerSpotLabel.propTypes = {\n    align_label     : PropTypes.oneOf(['top', 'bottom']),\n    has_hover_toggle: PropTypes.bool,\n    spot_className  : PropTypes.string,\n    spot_count      : PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    spot_epoch      : PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    spot_value      : PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    status          : PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerSpotLabel);\n","import { localize }    from 'App/i18n';\nimport MarkerLine      from 'Modules/SmartChart/Components/Markers/marker-line.jsx';\nimport MarkerSpotLabel from 'Modules/SmartChart/Components/Markers/marker-spot-label.jsx';\nimport MarkerSpot      from 'Modules/SmartChart/Components/Markers/marker-spot.jsx';\n\nexport const MARKER_TYPES_CONFIG = {\n    LINE_END: {\n        type         : 'LINE_END',\n        marker_config: {\n            ContentComponent: MarkerLine,\n            className       : 'chart-marker-line',\n        },\n        content_config: { line_style: 'dash',  label: localize('End Time') },\n    },\n    LINE_PURCHASE: {\n        type         : 'LINE_PURCHASE',\n        marker_config: {\n            ContentComponent: MarkerLine,\n            className       : 'chart-marker-line',\n        },\n        content_config: { line_style: 'solid', label: localize('Purchase Time') },\n    },\n    LINE_START: {\n        type         : 'LINE_START',\n        marker_config: {\n            ContentComponent: MarkerLine,\n            className       : 'chart-marker-line',\n        },\n        content_config: { line_style: 'solid', label: localize('Start Time') },\n    },\n    SPOT_ENTRY: {\n        type         : 'SPOT_ENTRY',\n        marker_config: {\n            ContentComponent: MarkerSpot,\n        },\n        content_config: { className: 'chart-spot__entry' },\n    },\n    SPOT_SELL: {\n        type         : 'SPOT_SELL',\n        marker_config: {\n            ContentComponent: MarkerSpot,\n        },\n        content_config: { className: 'chart-spot__sell' },\n    },\n    SPOT_EXIT: {\n        type         : 'SPOT_EXIT',\n        marker_config: {\n            ContentComponent: MarkerSpotLabel,\n        },\n        content_config: { spot_className: 'chart-spot__spot' },\n    },\n    SPOT_MIDDLE: {\n        type         : 'SPOT_MIDDLE',\n        marker_config: {\n            ContentComponent: MarkerSpotLabel,\n        },\n        content_config: { spot_className: 'chart-spot__spot' },\n    },\n};\n","import extend                  from 'extend';\nimport { isDigitContract }     from 'Stores/Modules/Contract/Helpers/digits';\nimport {\n    isUserSold,\n    getEndTime }               from 'Stores/Modules/Contract/Helpers/logic';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nconst createMarkerConfig = (marker_type, x, y, content_config) => (\n    extend(true, {}, MARKER_TYPES_CONFIG[marker_type], {\n        marker_config: {\n            x: +x,\n            y,\n        },\n        content_config,\n    })\n);\n\nexport const getSpotCount = (contract_info, spot_count) =>\n    isDigitContract(contract_info.contract_type) ? spot_count + 1 : spot_count;\n\n// -------------------- Lines --------------------\nexport const createMarkerEndTime = (contract_info) => {\n    const end_time = getEndTime(contract_info);\n    if (!end_time) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_END.type,\n        +end_time,\n        null,\n        {\n            status       : `${contract_info.profit > 0 ? 'won' : 'lost' }`,\n            marker_config: MARKER_TYPES_CONFIG,\n        },\n    );\n};\n\nexport const createMarkerPurchaseTime = (contract_info) => {\n    if (!contract_info.purchase_time || !contract_info.date_start ||\n        +contract_info.purchase_time === +contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_PURCHASE.type,\n        +contract_info.purchase_time,\n    );\n};\n\nexport const createMarkerStartTime = (contract_info) => {\n    if (!contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_START.type,\n        +contract_info.date_start,\n        null,\n        {\n            marker_config: MARKER_TYPES_CONFIG,\n        }\n    );\n};\n\n// -------------------- Spots --------------------\nexport const createMarkerSpotEntry = (contract_info) => {\n    if (!contract_info.entry_tick_time) return false;\n\n    let marker_type      = MARKER_TYPES_CONFIG.SPOT_ENTRY.type;\n    let component_props  = {};\n\n    const entry_tick = contract_info.entry_tick_display_value;\n\n    const spot_has_label = isDigitContract(contract_info.contract_type);\n    if (spot_has_label) {\n        marker_type = MARKER_TYPES_CONFIG.SPOT_MIDDLE.type;\n\n        component_props = {\n            spot_value: `${entry_tick}`,\n            spot_epoch: `${contract_info.entry_tick_time}`,\n            spot_count: 1,\n        };\n    }\n\n    return createMarkerConfig(\n        marker_type,\n        contract_info.entry_tick_time,\n        entry_tick,\n        component_props,\n    );\n};\n\nexport const createMarkerSpotExit = (contract_info, tick, idx) => {\n    if (!contract_info.exit_tick_time) return false;\n    const is_user_sold = isUserSold(contract_info);\n\n    let spot_count, align_label;\n    if (tick) {\n        spot_count = getSpotCount(contract_info, idx);\n        align_label = tick.align_label;\n    }\n\n    const exit_tick = contract_info.exit_tick_display_value;\n\n    return createMarkerConfig(\n        !is_user_sold ? MARKER_TYPES_CONFIG.SPOT_EXIT.type : MARKER_TYPES_CONFIG.SPOT_SELL.type,\n        +contract_info.exit_tick_time,\n        +exit_tick,\n        !is_user_sold ?\n            {\n                spot_value: `${exit_tick}`,\n                spot_epoch: `${contract_info.exit_tick_time}`,\n                status    : `${+contract_info.profit > 0 ? 'won' : 'lost' }`,\n                align_label,\n                spot_count,\n            } : {},\n    );\n};\n\nexport const createMarkerSpotMiddle = (contract_info, tick, idx) => {\n    const spot_count = getSpotCount(contract_info, idx);\n    const spot       = tick.tick_display_value;\n\n    const marker_config = createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_MIDDLE.type,\n        +tick.epoch,\n        +spot,\n        {\n            spot_value : `${spot}`,\n            spot_epoch : `${tick.epoch}`,\n            align_label: tick.align_label,\n            spot_count,\n        },\n    );\n    marker_config.type = `${marker_config.type}_${idx}`;\n\n    return marker_config;\n};\n","import { unique }              from '_common/utility';\nimport {\n    createMarkerEndTime,\n    createMarkerPurchaseTime,\n    createMarkerSpotEntry,\n    createMarkerSpotExit,\n    createMarkerStartTime,\n    createMarkerSpotMiddle,\n    getSpotCount }             from './chart-marker-helpers';\nimport {\n    getChartType,\n    getEndTime }               from './logic';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nexport const createChartMarkers = (SmartChartStore, contract_info) => {\n    if (contract_info) {\n        const end_time = getEndTime(contract_info);\n        const chart_type = getChartType(contract_info.date_start, end_time);\n        if (contract_info.tick_count) {\n            addTickMarker(SmartChartStore, contract_info);\n        } else if (chart_type !== 'candle') {\n            addMarker(marker_spots, SmartChartStore, contract_info);\n        }\n        addMarker(marker_lines, SmartChartStore, contract_info);\n    }\n};\n\nconst marker_spots = {\n    [MARKER_TYPES_CONFIG.SPOT_ENTRY.type]: createMarkerSpotEntry,\n    [MARKER_TYPES_CONFIG.SPOT_EXIT.type] : createMarkerSpotExit,\n};\n\nconst marker_lines = {\n    [MARKER_TYPES_CONFIG.LINE_START.type]   : createMarkerStartTime,\n    [MARKER_TYPES_CONFIG.LINE_END.type]     : createMarkerEndTime,\n    [MARKER_TYPES_CONFIG.LINE_PURCHASE.type]: createMarkerPurchaseTime,\n};\n\nconst addMarker = async (marker_obj, SmartChartStore, contract_info) => {\n    Object.keys(marker_obj).forEach(createMarker);\n\n    function createMarker(marker_type) {\n        if (marker_type in SmartChartStore.markers) return;\n\n        const marker_config = marker_obj[marker_type](contract_info);\n        if (marker_config) {\n            SmartChartStore.createMarker(marker_config);\n        }\n    }\n};\n\nconst addLabelAlignment = (tick, idx, arr) => {\n    if (idx > 0 && arr.length) {\n        const prev_tick = arr[idx - 1];\n\n        if (+tick > +prev_tick.tick) tick.align_label = 'top';\n        if (+tick.tick < +prev_tick.tick) tick.align_label = 'bottom';\n        if (+tick.tick === +prev_tick.tick) tick.align_label = prev_tick.align_label;\n    }\n\n    return tick;\n};\n\nconst addTickMarker = async (SmartChartStore, contract_info) => {\n    const tick_stream = unique(contract_info.tick_stream, 'epoch').map(addLabelAlignment);\n\n    tick_stream.forEach((tick, idx) => {\n        const is_entry_spot  = idx === 0 && +tick.epoch !== contract_info.exit_tick_time;\n        const is_middle_spot = idx > 0 && +tick.epoch !== +contract_info.exit_tick_time;\n        const is_exit_spot   = +tick.epoch === +contract_info.exit_tick_time ||\n            getSpotCount(contract_info, idx) === contract_info.tick_count;\n\n        let marker_config;\n        if (is_entry_spot) {\n            marker_config = createMarkerSpotEntry(contract_info);\n        } else if (is_middle_spot) {\n            marker_config = createMarkerSpotMiddle(contract_info, tick, idx);\n        } else if (is_exit_spot) {\n            tick.align_label = 'top'; // force exit spot label to be 'top' to avoid overlapping\n            marker_config = createMarkerSpotExit(contract_info, tick, idx);\n        }\n\n        if (marker_config) {\n            if (marker_config.type in SmartChartStore.markers) return;\n\n            SmartChartStore.createMarker(marker_config);\n        }\n    });\n};\n","import React        from 'react';\nimport { localize } from 'App/i18n';\nimport Money        from '../../../../App/Components/Elements/money.jsx';\nimport Localize     from '../../../../App/Components/Elements/localize.jsx';\n\nexport const contractSold = (currency, sold_for) => ({\n    header : localize('Contract sold'),\n    message: (\n        <Localize\n            i18n_default_text='Contract was sold for <0 />.'\n            components={[ <Money key={sold_for} amount={sold_for} currency={currency} /> ]}\n        />\n    ),\n    type                 : 'contract_sold',\n    size                 : 'small',\n    should_hide_close_btn: true,\n    is_auto_close        : true,\n});\n","import {\n    action,\n    computed,\n    extendObservable,\n    observable }              from 'mobx';\nimport { localize }           from 'App/i18n';\nimport BinarySocket           from '_common/base/socket_base';\nimport { isEmptyObject }      from '_common/utility';\nimport { WS }                 from 'Services';\nimport { createChartBarrier } from './Helpers/chart-barriers';\nimport { createChartMarkers } from './Helpers/chart-markers';\nimport {\n    getDigitInfo,\n    isDigitContract }         from './Helpers/digits';\nimport {\n    getChartConfig,\n    getDisplayStatus,\n    getEndTime,\n    isEnded }                 from './Helpers/logic';\nimport { contractSold }       from '../Portfolio/Helpers/portfolio-notifcations';\nimport BaseStore              from '../../base-store';\n\nexport default class ContractReplayStore extends BaseStore {\n    // --- Observable properties ---\n    @observable digits_info = observable.object({});\n    @observable sell_info   = observable.object({});\n\n    @observable has_error         = false;\n    @observable error_message     = '';\n    @observable is_sell_requested = false;\n\n    // ---- Replay Contract Config ----\n    @observable contract_id;\n    @observable indicative_status;\n    @observable contract_info   = observable.object({});\n    @observable is_static_chart = false;\n\n    // ---- Normal properties ---\n    chart_type          = 'mountain';\n    is_ongoing_contract = false;\n\n    // Replay Contract Indicative Movement\n    prev_indicative = 0;\n    indicative      = 0;\n\n    // Forget old proposal_open_contract stream on account switch from ErrorComponent\n    should_forget_first = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    handleSubscribeProposalOpenContract = (contract_id, cb) => {\n        const proposal_open_contract_request = [contract_id, cb, false];\n\n        if (this.should_forget_first) {\n            WS.forgetAll('proposal_open_contract').then(() => {\n                this.should_forget_first = false;\n                WS.subscribeProposalOpenContract(...proposal_open_contract_request);\n            });\n        } else {\n            WS.subscribeProposalOpenContract(...proposal_open_contract_request);\n        }\n    }\n\n    @action.bound\n    onMount(contract_id) {\n        if (contract_id) {\n            this.smart_chart = this.root_store.modules.smart_chart;\n            this.smart_chart.setContractMode(true);\n            this.contract_id = contract_id;\n            BinarySocket.wait('authorize').then(() => {\n                this.handleSubscribeProposalOpenContract(this.contract_id, this.populateConfig);\n            });\n            WS.activeSymbols({ skip_cache_update: true });\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.forgetProposalOpenContract(this.contract_id, this.populateConfig);\n        this.contract_id         = null;\n        this.digits_info         = {};\n        this.is_ongoing_contract = false;\n        this.is_static_chart     = false;\n        this.is_sell_requested   = false;\n        this.contract_info       = {};\n        this.indicative_status   = null;\n        this.prev_indicative     = 0;\n        this.indicative          = 0;\n        this.sell_info           = {};\n        this.smart_chart.setContractMode(false);\n        this.smart_chart.cleanupContractChartView();\n    }\n\n    @action.bound\n    populateConfig(response) {\n        if ('error' in response) {\n            this.has_error       = true;\n            this.smart_chart.setIsChartLoading(false);\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error           = true;\n            this.error_message       = localize('Sorry, you can\\'t view this contract because it doesn\\'t belong to this account.');\n            this.should_forget_first = true;\n            this.smart_chart.setContractMode(false);\n            this.smart_chart.setIsChartLoading(false);\n            return;\n        }\n        if (+response.proposal_open_contract.contract_id !== this.contract_id) return;\n\n        this.contract_info = response.proposal_open_contract;\n\n        // Add indicative status for contract\n        const prev_indicative  = this.prev_indicative;\n        const new_indicative   = +this.contract_info.bid_price;\n        this.indicative = new_indicative;\n        if (new_indicative > prev_indicative) {\n            this.indicative_status = 'profit';\n        } else if (new_indicative < prev_indicative) {\n            this.indicative_status = 'loss';\n        } else {\n            this.indicative_status = null;\n        }\n        this.prev_indicative = this.indicative;\n\n        const end_time = getEndTime(this.contract_info);\n\n        this.smart_chart.updateMargin(\n            (end_time || this.contract_info.date_expiry) - this.contract_info.date_start);\n\n        if (!end_time) this.is_ongoing_contract = true;\n\n        // finish contracts if end_time exists\n        if (end_time) {\n            if (!this.is_ongoing_contract) {\n                this.is_static_chart = true;\n            } else {\n                this.is_static_chart = false;\n            }\n        }\n\n        createChartBarrier(this.smart_chart, this.contract_info, this.root_store.ui.is_dark_mode_on);\n        createChartMarkers(this.smart_chart, this.contract_info);\n        this.handleDigits(this.contract_info);\n\n        this.smart_chart.setIsChartLoading(false);\n    }\n\n    @action.bound\n    handleDigits(contract_info) {\n        if (this.is_digit_contract) {\n            extendObservable(this.digits_info, getDigitInfo(this.digits_info, contract_info));\n        }\n    }\n\n    @action.bound\n    onClickSell(contract_id) {\n        const { bid_price } = this.contract_info;\n        if (contract_id && bid_price) {\n            this.is_sell_requested = true;\n            WS.sell(contract_id, bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        if (response.error) {\n            // If unable to sell due to error, give error via pop up if not in contract mode\n            this.is_sell_requested = false;\n            this.root_store.common.services_error = {\n                type: response.msg_type,\n                ...response.error,\n            };\n            this.root_store.ui.toggleServicesErrorModal(true);\n        } else if (!response.error && response.sell) {\n            this.is_sell_requested = false;\n            // update contract store sell info after sell\n            this.sell_info = {\n                sell_price    : response.sell.sold_for,\n                transaction_id: response.sell.transaction_id,\n            };\n            this.root_store.ui.addNotification(contractSold(this.root_store.client.currency, response.sell.sold_for));\n        }\n    }\n\n    forgetProposalOpenContract = (contract_id, cb) => {\n        WS.forget('proposal_open_contract', cb, { contract_id });\n    }\n\n    @action.bound\n    removeErrorMessage() {\n        delete this.error_message;\n    }\n\n    @action.bound\n    clearError() {\n        this.error_message = null;\n        this.has_error = false;\n    }\n\n    // ---------------------------\n    // ----- Computed values -----\n    // ---------------------------\n    // TODO: currently this runs on each response, even if contract_info is deep equal previous one\n\n    @computed\n    get contract_config() {\n        return getChartConfig(this.contract_info, this.is_digit_contract, false);\n    }\n\n    @computed\n    get display_status() {\n        return getDisplayStatus(this.contract_info);\n    }\n\n    @computed\n    get is_ended() {\n        return isEnded(this.contract_info);\n    }\n\n    @computed\n    get is_digit_contract() {\n        return isDigitContract(this.contract_info.contract_type);\n    }\n}\n","import {\n    action,\n    computed,\n    extendObservable,\n    observable }              from 'mobx';\nimport BinarySocket           from '_common/base/socket_base';\nimport { isEmptyObject }      from '_common/utility';\nimport { localize }           from 'App/i18n';\nimport { WS }                 from 'Services';\nimport { createChartBarrier } from './Helpers/chart-barriers';\nimport { createChartMarkers } from './Helpers/chart-markers';\nimport {\n    getDigitInfo,\n    isDigitContract }         from './Helpers/digits';\nimport {\n    getChartGranularity,\n    getChartType,\n    getDisplayStatus,\n    getEndTime,\n    isEnded }                 from './Helpers/logic';\nimport BaseStore              from '../../base-store';\n\nexport default class ContractTradeStore extends BaseStore {\n    // --- Observable properties ---\n    @observable contract_id;\n    @observable contract_info = observable.object({});\n    @observable digits_info   = observable.object({});\n\n    @observable has_error     = false;\n    @observable error_message = '';\n\n    // ---- Normal properties ---\n    is_from_positions   = false;\n    is_ongoing_contract = false;\n\n    // Forget old proposal_open_contract stream on account switch from ErrorComponent\n    should_forget_first = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    @action.bound\n    drawChart() {\n        const {\n            date_expiry,\n            date_start,\n            tick_count,\n        } = this.contract_info;\n\n        const end_time = getEndTime(this.contract_info);\n\n        if (!end_time) this.is_ongoing_contract = true;\n\n        // finish contracts if end_time exists\n        if (end_time) {\n            const is_one_tick_contract = (tick_count < 2);\n            if (!this.is_ongoing_contract && !is_one_tick_contract) {\n                // set to static chart to true for non one tick contract\n                // to avoid chart from reloading\n                this.smart_chart.setStaticChart(true);\n            } else {\n                this.smart_chart.setStaticChart(false);\n            }\n            this.smart_chart.setContractStart(date_start);\n            this.smart_chart.setContractEnd(end_time);\n\n            // Clear chart loading status once ChartListener returns ready for completed contract\n            if (!this.is_ongoing_contract) {\n                this.smart_chart.setIsChartLoading(false);\n            }\n\n        // setters for ongoing contracts, will only init once onMount after left_epoch is set\n        } else if (this.is_from_positions) {\n            this.smart_chart.setContractStart(date_start);\n        }\n\n        this.smart_chart.updateMargin((end_time || date_expiry) - date_start);\n\n        createChartBarrier(this.smart_chart, this.contract_info, this.root_store.ui.is_dark_mode_on);\n        createChartMarkers(this.smart_chart, this.contract_info);\n\n        if (this.smart_chart.is_chart_ready) {\n            this.smart_chart.setIsChartLoading(false);\n        }\n    }\n\n    handleSubscribeProposalOpenContract = (contract_id, cb) => {\n        const proposal_open_contract_request = [contract_id, cb, false];\n\n        if (this.should_forget_first) {\n            WS.forgetAll('proposal_open_contract').then(() => {\n                this.should_forget_first = false;\n                WS.subscribeProposalOpenContract(...proposal_open_contract_request);\n            });\n        } else {\n            WS.subscribeProposalOpenContract(...proposal_open_contract_request);\n        }\n    }\n\n    @action.bound\n    drawContractStartTime(date_start, longcode, contract_id) {\n        this.contract_info.longcode = longcode;\n        createChartMarkers(this.root_store.modules.smart_chart, { date_start });\n        this.onMountBuy(contract_id);\n    }\n\n    @action.bound\n    onMountBuy(contract_id) {\n        if (contract_id === this.contract_id) return;\n        this.contract_id = contract_id;\n        // clear proposal and purchase info once contract is mounted\n        this.root_store.modules.trade.proposal_info = {};\n        this.root_store.modules.trade.purchase_info = {};\n        BinarySocket.wait('authorize').then(() => {\n            this.handleSubscribeProposalOpenContract(this.contract_id, this.updateProposal);\n        });\n    }\n\n    @action.bound\n    onMount(contract_id, is_from_positions) {\n        if (contract_id === this.contract_id) return;\n        this.smart_chart       = this.root_store.modules.smart_chart;\n        const has_existing_id  = this.smart_chart.is_contract_mode && !!(this.contract_id);\n        if (has_existing_id) this.resetValues(this.smart_chart);\n        this.has_error         = false;\n        this.error_message     = '';\n        this.contract_id       = contract_id;\n        this.is_from_positions = is_from_positions;\n\n        // clear proposal and purchase info once contract is mounted\n        this.root_store.modules.trade.proposal_info = {};\n        this.root_store.modules.trade.purchase_info = {};\n\n        if (contract_id) {\n            if (this.is_from_positions) {\n                this.smart_chart.setIsChartLoading(true);\n                this.smart_chart.switchToContractMode(true, has_existing_id);\n            }\n            BinarySocket.wait('authorize').then(() => {\n                this.handleSubscribeProposalOpenContract(this.contract_id, this.updateProposal);\n            });\n        }\n    }\n\n    @action.bound\n    resetValues(SmartChartStore) {\n        this.forgetProposalOpenContract(this.contract_id, this.updateProposal);\n        this.contract_id         = null;\n        this.contract_info       = {};\n        this.digits_info         = {};\n        this.error_message       = '';\n        this.has_error           = false;\n        this.is_from_positions   = false;\n        this.is_ongoing_contract = false;\n        SmartChartStore.cleanupContractChartView();\n    }\n\n    @action.bound\n    onCloseContract() {\n        if (!this.smart_chart) this.smart_chart = this.root_store.modules.smart_chart;\n        this.resetValues(this.smart_chart);\n        this.smart_chart.applySavedTradeChartLayout();\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.onCloseContract();\n    }\n\n    @action.bound\n    updateProposal(response) {\n        if ('error' in response) {\n            this.has_error     = true;\n            this.error_message = response.error.message;\n            this.contract_info = {};\n            this.smart_chart.setIsChartLoading(false);\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error           = true;\n            this.error_message       = localize('Sorry, you can\\'t view this contract because it doesn\\'t belong to this account.');\n            this.should_forget_first = true;\n            this.contract_info       = {};\n            this.contract_id         = null;\n            this.smart_chart.setContractMode(false);\n            this.smart_chart.setIsChartLoading(false);\n            return;\n        }\n        if (+response.proposal_open_contract.contract_id !== this.contract_id) return;\n\n        this.contract_info = response.proposal_open_contract;\n\n        // Set chart granularity and chart_type\n        this.handleChartType(this.contract_info.date_start, getEndTime(this.contract_info) || null);\n\n        // Set chart view to date_start\n        if (this.is_from_positions) {\n            if (this.smart_chart.granularity !== 0) {\n                this.smart_chart.setChartView(this.contract_info.date_start);\n            }\n        }\n\n        // Set contract symbol if trade_symbol and contract_symbol don't match\n        if (this.root_store.modules.trade.symbol !== this.contract_info.underlying) {\n            this.root_store.modules.trade.symbol = this.contract_info.underlying;\n        }\n\n        this.drawChart(this.contract_info);\n\n        this.handleDigits(this.contract_info);\n    }\n\n    @action.bound\n    handleDigits(contract_info) {\n        if (this.is_digit_contract) {\n            extendObservable(this.digits_info, getDigitInfo(this.digits_info, contract_info));\n        }\n    }\n\n    handleChartType(start, expiry) {\n        if (!this.smart_chart) {\n            this.smart_chart = this.root_store.modules.smart_chart;\n        }\n\n        const chart_type  = getChartType(start, expiry);\n        const granularity = getChartGranularity(start, expiry);\n\n        this.smart_chart.updateChartType(chart_type);\n        this.smart_chart.updateGranularity(granularity);\n    }\n\n    forgetProposalOpenContract = (contract_id, cb) => {\n        WS.forget('proposal_open_contract', cb, { contract_id });\n    }\n\n    @action.bound\n    removeErrorMessage() {\n        delete this.error_message;\n    }\n\n    @action.bound\n    clearError() {\n        this.error_message = null;\n        this.has_error = false;\n    }\n\n    @action.bound\n    setIsDigitContract(contract_type) {\n        this.contract_info.contract_type = contract_type;\n    }\n    // ---------------------------\n    // ----- Computed values -----\n    // ---------------------------\n    // TODO: currently this runs on each response, even if contract_info is deep equal previous one\n\n    @computed\n    get display_status() {\n        return getDisplayStatus(this.contract_info);\n    }\n\n    @computed\n    get is_ended() {\n        return isEnded(this.contract_info);\n    }\n\n    @computed\n    get is_digit_contract() {\n        return isDigitContract(this.contract_info.contract_type);\n    }\n}\n","import { flow }            from 'mobx';\nimport BinarySocket        from '_common/base/socket_base';\nimport { localize }        from 'App/i18n';\nimport { LocalStore }      from '_common/storage';\nimport { redirectToLogin } from '_common/base/login';\nimport { WS }              from 'Services';\n\nexport const showUnavailableLocationError = flow(function* (showError) {\n    const website_status = yield BinarySocket.wait('website_status');\n    const residence_list = yield WS.residenceList();\n\n    const clients_country_code = website_status.website_status.clients_country;\n    const clients_country_text =\n        (residence_list.residence_list.find(obj_country =>\n            obj_country.value === clients_country_code) || {}).text;\n\n    showError(\n        localize('If you have an account, log in to continue.'),\n        (clients_country_text ? localize('Sorry, this app is unavailable in {{clients_country}}.', { clients_country: clients_country_text }) : localize('Sorry, this app is unavailable in your current location.')),\n        localize('Log in'),\n        redirectToLogin,\n        false,\n    );\n});\n\nexport const isMarketClosed = (active_symbols = [], symbol) => {\n    if (!active_symbols.length) return false;\n    return (active_symbols.filter(x => x.symbol === symbol)[0]) ?\n        !active_symbols.filter(symbol_info => symbol_info.symbol === symbol)[0].exchange_is_open\n        :\n        false;\n};\n\nexport const pickDefaultSymbol = (active_symbols = []) => {\n    if (!active_symbols.length) return '';\n    return getFavoriteOpenSymbol(active_symbols) || getFirstOpenSymbol(active_symbols);\n};\n\nconst getFavoriteOpenSymbol = (active_symbols) => {\n    const chart_favorites = LocalStore.get('cq-favorites');\n    if (!chart_favorites) return undefined;\n    const client_favorite_markets = JSON.parse(chart_favorites)['chartTitle&Comparison'];\n\n    const client_favorite_list = client_favorite_markets\n        .map(client_fav_symbol => active_symbols\n            .find(symbol_info => symbol_info.symbol === client_fav_symbol));\n    if (client_favorite_list) {\n        const client_first_open_symbol = client_favorite_list\n            .filter(symbol => symbol).find(isSymbolOpen);\n        if (client_first_open_symbol) return client_first_open_symbol.symbol;\n    }\n    return undefined;\n};\n\nconst getFirstOpenSymbol = (active_symbols) => {\n    const first_open_symbol = active_symbols\n        .filter(symbol_info => /major_pairs|random_index/.test(symbol_info.submarket))\n        .find(isSymbolOpen);\n    if (first_open_symbol) return first_open_symbol.symbol;\n    return active_symbols.find(symbol_info => symbol_info.submarket === 'major_pairs').symbol;\n};\n\nconst isSymbolOpen = (symbol) => (\n    symbol.exchange_is_open === 1\n);\n\nexport const getSymbolDisplayName = (active_symbols = [], symbol) => (\n    (active_symbols.find(symbol_info => symbol_info.symbol.toUpperCase() === symbol.toUpperCase()) || { display_name: '' })\n        .display_name\n);\n","import { getUnsupportedContracts } from 'Constants';\nimport { getSymbolDisplayName }    from '../../Trading/Helpers/active-symbols';\nimport { getMarketInformation }    from '../../../../Modules/Reports/Helpers/market-underlying';\n\nexport const formatPortfolioPosition = (portfolio_pos, active_symbols = []) => {\n    const purchase     = parseFloat(portfolio_pos.buy_price);\n    const payout       = parseFloat(portfolio_pos.payout);\n    const display_name = getSymbolDisplayName(\n        active_symbols,\n        getMarketInformation(portfolio_pos.shortcode).underlying\n    );\n\n    return {\n        contract_info : portfolio_pos,\n        details       : portfolio_pos.longcode.replace(/\\n/g, '<br />'),\n        display_name,\n        id            : portfolio_pos.contract_id,\n        indicative    : 0,\n        payout,\n        purchase,\n        reference     : +portfolio_pos.transaction_id,\n        type          : portfolio_pos.contract_type,\n        is_unsupported: !!getUnsupportedContracts()[portfolio_pos.contract_type],\n    };\n};\n","import {\n    action,\n    computed,\n    observable,\n    reaction }                     from 'mobx';\nimport { createTransformer }       from 'mobx-utils';\nimport { WS }                      from 'Services';\nimport { formatPortfolioPosition } from './Helpers/format-response';\nimport { contractSold }            from './Helpers/portfolio-notifcations';\nimport {\n    getCurrentTick,\n    getDurationPeriod,\n    getDurationTime,\n    getDurationUnitText }          from './Helpers/details';\nimport {\n    getDisplayStatus,\n    getEndTime,\n    isEnded,\n    isUserSold,\n    isValidToSell }                from '../Contract/Helpers/logic';\nimport BaseStore                   from '../../base-store';\n\nexport default class PortfolioStore extends BaseStore {\n    @observable positions  = [];\n    @observable is_loading = false;\n    @observable error      = '';\n    getPositionById        = createTransformer((id) => this.positions.find((position) => +position.id === +id));\n\n    @action.bound\n    initializePortfolio = async () => {\n        this.is_loading = true;\n        await this.waitFor('authorize');\n        WS.portfolio().then(this.portfolioHandler);\n        WS.subscribeProposalOpenContract(null, this.proposalOpenContractHandler, false);\n        WS.subscribeTransaction(this.transactionHandler, false);\n    };\n\n    @action.bound\n    clearTable() {\n        this.positions  = [];\n        this.is_loading = false;\n        this.error      = '';\n    }\n\n    @action.bound\n    portfolioHandler(response) {\n        this.is_loading = false;\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n        this.error = '';\n        if (response.portfolio.contracts) {\n            this.positions = response.portfolio.contracts\n                .map(pos => formatPortfolioPosition(pos, this.root_store.modules.trade.active_symbols))\n                .sort((pos1, pos2) => pos2.reference - pos1.reference); // new contracts first\n        }\n    }\n\n    @action.bound\n    async transactionHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n        }\n        if (!response.transaction) return;\n        const { contract_id, action: act } = response.transaction;\n\n        if (act === 'buy') {\n            const res = await WS.portfolio();\n            const new_pos = res.portfolio.contracts.find(pos => +pos.contract_id === +contract_id);\n            if (!new_pos) return;\n            this.pushNewPosition(new_pos);\n            WS.subscribeProposalOpenContract(contract_id, this.proposalOpenContractHandler, false);\n        } else if (act === 'sell') {\n            const i = this.getPositionIndexById(contract_id);\n\n            // Currently, if the contract has ended before the response is sent\n            // the Portfolio API returns an empty `contracts` array.\n            // This causes the contract to not be pushed to the `positions` property here.\n            // The statement below prevents accessing undefined values caused by the above explanation.\n            if (i === -1) return;\n\n            this.positions[i].is_loading = true;\n            WS.subscribeProposalOpenContract(contract_id, this.populateResultDetails, false);\n        }\n    }\n\n    @action.bound\n    proposalOpenContractHandler(response) {\n        if ('error' in response) return;\n\n        const proposal = response.proposal_open_contract;\n        const portfolio_position = this.positions.find((position) => +position.id === +proposal.contract_id);\n\n        if (!portfolio_position) return;\n\n        const prev_indicative = portfolio_position.indicative;\n        const new_indicative  = +proposal.bid_price;\n        const profit_loss     = +proposal.profit;\n\n        // fix for missing barrier and entry_spot in proposal_open_contract API response, only re-assign if valid\n        if (proposal.barrier) portfolio_position.barrier = +proposal.barrier;\n        if (proposal.entry_spot) portfolio_position.entry_spot = +proposal.entry_spot;\n\n        // store contract proposal details that require modifiers\n        portfolio_position.indicative       = new_indicative;\n        portfolio_position.profit_loss      = profit_loss;\n        portfolio_position.is_valid_to_sell = isValidToSell(proposal);\n        // store contract proposal details that do not require modifiers\n        portfolio_position.contract_info    = proposal;\n\n        // for tick contracts\n        if (proposal.tick_count) {\n            const current_tick = (portfolio_position.current_tick > getCurrentTick(proposal)) ?\n                portfolio_position.current_tick : getCurrentTick(proposal);\n            portfolio_position.current_tick = current_tick;\n        }\n\n        if (new_indicative > prev_indicative) {\n            portfolio_position.status = 'profit';\n        } else if (new_indicative < prev_indicative) {\n            portfolio_position.status = 'loss';\n        } else {\n            portfolio_position.status = null;\n        }\n    }\n\n    @action.bound\n    onClickSell(contract_id) {\n        const i = this.getPositionIndexById(contract_id);\n        const { bid_price } = this.positions[i].contract_info;\n        this.positions[i].is_sell_requested = false;\n        if (contract_id && bid_price) {\n            WS.sell(contract_id, bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        if (response.error) {\n            // If unable to sell due to error, give error via pop up if not in contract mode\n            const i = this.getPositionIndexById(response.echo_req.sell);\n            this.positions[i].is_sell_requested = false;\n            this.root_store.common.services_error = {\n                type: response.msg_type,\n                ...response.error,\n            };\n            this.root_store.ui.toggleServicesErrorModal(true);\n        } else if (!response.error && response.sell) {\n            const i = this.getPositionIndexById(response.sell.contract_id);\n            this.positions[i].is_sell_requested = false;\n            // update contract store sell info after sell\n            this.root_store.modules.contract_trade.sell_info = {\n                sell_price    : response.sell.sold_for,\n                transaction_id: response.sell.transaction_id,\n            };\n            this.root_store.ui.addNotification(contractSold(this.root_store.client.currency, response.sell.sold_for));\n        }\n    }\n\n    @action.bound\n    populateResultDetails = (response) => {\n        const contract_response = response.proposal_open_contract;\n        const i = this.getPositionIndexById(contract_response.contract_id);\n\n        this.positions[i].contract_info    = contract_response;\n        this.positions[i].duration         = getDurationTime(contract_response);\n        this.positions[i].duration_unit    = getDurationUnitText(getDurationPeriod(contract_response));\n        this.positions[i].exit_spot        = contract_response.exit_tick || contract_response.current_spot; // workaround if no exit_tick in proposal_open_contract, use latest spot\n        this.positions[i].is_valid_to_sell = isValidToSell(contract_response);\n        this.positions[i].result           = getDisplayStatus(contract_response);\n        this.positions[i].profit_loss      = +contract_response.profit;\n        this.positions[i].sell_time        = getEndTime(contract_response) || contract_response.current_spot_time; // same as exit_spot, use latest spot time if no exit_tick_time\n        this.positions[i].sell_price       = contract_response.sell_price;\n        this.positions[i].status           = 'complete';\n\n        // fix for missing barrier and entry_spot\n        if (!this.positions[i].contract_info.barrier || !this.positions[i].contract_info.entry_spot) {\n            this.positions[i].contract_info.barrier    = this.positions[i].barrier;\n            this.positions[i].contract_info.entry_spot = this.positions[i].entry_spot;\n        }\n\n        // remove exit_spot for manually sold contracts\n        if (isUserSold(contract_response)) this.positions[i].exit_spot = '-';\n\n        this.positions[i].is_loading = false;\n\n        if (isEnded(contract_response)) {\n            // also forget for buy\n            [this.populateResultDetails, this.proposalOpenContractHandler].forEach(cb => {\n                WS.forget('proposal_open_contract', cb, { contract_id: contract_response.contract_id });\n            });\n        }\n    };\n\n    @action.bound\n    pushNewPosition(new_pos) {\n        this.positions.unshift(formatPortfolioPosition(new_pos, this.root_store.modules.trade.active_symbols));\n    }\n\n    @action.bound\n    removePositionById(contract_id) {\n        const { is_contract_mode } = this.root_store.modules.smart_chart;\n        const contract_idx         = this.getPositionIndexById(contract_id);\n\n        this.positions.splice(contract_idx, 1);\n\n        // check if contract is in view in contract_mode before removing contract details from chart\n        if (is_contract_mode && (+this.root_store.modules.contract_trade.contract_id === +contract_id)) {\n            this.root_store.modules.contract_trade.onCloseContract();\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener () {\n        return new Promise(async (resolve) => {\n            await this.clearTable();\n            await WS.forgetAll('proposal_open_contract', 'transaction');\n            return resolve(this.initializePortfolio());\n        });\n    }\n\n    @action.bound\n    onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener.bind(null));\n        if (this.positions.length === 0) {\n            // TODO: Optimise the way is_logged_in changes are detected for \"logging in\" and \"already logged on\" states\n            if (this.root_store.client.is_logged_in) {\n                this.initializePortfolio();\n            } else {\n                reaction(() => this.root_store.client.is_logged_in, () => {\n                    if (this.root_store.client.is_logged_in) {\n                        this.initializePortfolio();\n                    }\n                });\n            }\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        // keep data and connections for portfolio drawer on desktop\n        if (this.root_store.ui.is_mobile) {\n            this.clearTable();\n            WS.forgetAll('proposal_open_contract', 'transaction');\n        }\n    }\n\n    getPositionIndexById(contract_id) {\n        return this.positions.findIndex(pos => +pos.id === +contract_id);\n    }\n\n    @computed\n    get totals() {\n        let indicative = 0;\n        let payout     = 0;\n        let purchase   = 0;\n\n        this.positions.forEach((portfolio_pos) => {\n            indicative += (+portfolio_pos.indicative);\n            payout     += (+portfolio_pos.payout);\n            purchase   += (+portfolio_pos.purchase);\n        });\n        return {\n            indicative,\n            payout,\n            purchase,\n        };\n    }\n\n    @computed\n    get active_positions_totals() {\n        let indicative = 0;\n        let purchase   = 0;\n\n        this.active_positions.forEach((portfolio_pos) => {\n            indicative += (+portfolio_pos.indicative);\n            purchase   += (+portfolio_pos.purchase);\n        });\n        return {\n            indicative,\n            purchase,\n        };\n    }\n\n    @computed\n    get active_positions() {\n        return this.positions.filter((portfolio_pos) => !portfolio_pos.result);\n    }\n\n    @computed\n    get all_positions() {\n        return this.positions;\n    }\n\n    @computed\n    get is_active_empty() {\n        return !this.is_loading && this.active_positions.length === 0;\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.all_positions.length === 0;\n    }\n}\n","import {\n    epochToMoment,\n    toMoment,\n} from 'Utils/Date';\n\nconst getDateTo = (partial_fetch_time, date_to) => {\n    const today = toMoment().startOf('day').unix();\n    if (date_to && today > date_to) {\n        return date_to;\n    } else if (partial_fetch_time) {\n        return epochToMoment(today).add(1, 'd').subtract(1, 's').unix();\n    }\n    return epochToMoment(today).add(1, 'd').subtract(1, 's').unix();\n};\n\nconst getDateFrom = (should_load_partially, partial_fetch_time, date_from, date_to) => {\n    const today = toMoment().startOf('day').unix();\n    if (today > date_to) {\n        return date_from;\n    }\n    return should_load_partially && partial_fetch_time ? partial_fetch_time : date_from;\n};\n\nconst shouldSendDateFrom = (date_from, should_load_partially, partial_fetch_time, date_to) => {\n    const today = toMoment().startOf('day').unix();\n    if (today > date_to) {\n        return (!!date_from || should_load_partially);\n    }\n    return should_load_partially ? (partial_fetch_time || date_from) : !!date_from || false;\n};\n\nconst getDateBoundaries = (date_from, date_to, partial_fetch_time, should_load_partially = false) => (\n    {\n        // eslint-disable-next-line max-len\n        ...(shouldSendDateFrom(date_from, should_load_partially, partial_fetch_time, date_to)) && { date_from: getDateFrom(should_load_partially, partial_fetch_time, date_from, date_to) },\n        ...(date_to || should_load_partially) && { date_to: getDateTo(partial_fetch_time, date_to) },\n    }\n);\n\nexport default getDateBoundaries;\n","import { formatMoney }          from '_common/base/currency_base';\nimport { toMoment }             from 'Utils/Date';\nimport { getMarketInformation } from '../../../../Modules/Reports/Helpers/market-underlying';\nimport { getSymbolDisplayName } from '../../Trading/Helpers/active-symbols';\n\nexport const formatProfitTableTransactions = (transaction, currency, active_symbols = []) => {\n    const format_string           = 'DD MMM YYYY HH:mm:ss';\n    const purchase_time           = `${toMoment(+transaction.purchase_time).format(format_string)}`;\n    const sell_time               = `${toMoment(+transaction.sell_time).format(format_string)}`;\n    const payout                  = parseFloat(transaction.payout);\n    const sell_price              = parseFloat(transaction.sell_price);\n    const buy_price               = parseFloat(transaction.buy_price);\n    const profit_loss             = formatMoney(currency, Number(sell_price - buy_price), true);\n    const should_exclude_currency = true;\n    const display_name            = getSymbolDisplayName(\n        active_symbols,\n        getMarketInformation(transaction.shortcode).underlying\n    );\n\n    return {\n        ...transaction,\n        ...{\n            payout    : isNaN(payout) ? '-' : formatMoney(currency, payout, should_exclude_currency),\n            sell_price: isNaN(sell_price) ? '-' : formatMoney(currency, sell_price, should_exclude_currency),\n            buy_price : isNaN(buy_price) ? '-' : formatMoney(currency, buy_price, should_exclude_currency),\n            profit_loss,\n            sell_time,\n            purchase_time,\n            display_name,\n        },\n    };\n};\n","import debounce                          from 'lodash.debounce';\nimport {\n    action,\n    computed,\n    observable,\n}                                        from 'mobx';\nimport { WS }                            from 'Services';\nimport { toMoment }                      from 'Utils/Date';\nimport getDateBoundaries                 from './Helpers/format-request';\nimport { formatProfitTableTransactions } from './Helpers/format-response';\nimport BaseStore                         from '../../base-store';\n\nconst batch_size = 50;\nconst delay_on_scroll_time = 150;\n\nexport default class ProfitTableStore extends BaseStore {\n    @observable data           = [];\n    @observable date_from      =  null;\n    @observable date_to        = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n    @observable error          = '';\n    @observable has_loaded_all = false;\n    @observable is_loading     = false;\n\n    // `client_loginid` is only used to detect if this is in sync with the client-store, don't rely on\n    // this for calculations. Use the client.currency instead.\n    @observable client_loginid = '';\n\n    @computed\n    get total_profit () {\n        return this.data.reduce((previous, current) => {\n            const buy_price  = Number(parseFloat(current.buy_price));\n            const sell_price = Number(parseFloat(current.sell_price));\n            const pl         = sell_price - buy_price;\n            return previous + pl;\n        }, 0);\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    @computed\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    shouldFetchNextBatch(should_load_partially) {\n        if (!should_load_partially && (this.has_loaded_all || this.is_loading)) return false;\n        const today = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n        if (this.date_to < today) return (!should_load_partially && this.partial_fetch_time);\n        return true;\n    }\n\n    @action.bound\n    async fetchNextBatch(should_load_partially = false) {\n        if (!this.shouldFetchNextBatch(should_load_partially)) return;\n        this.is_loading = true;\n\n        const response = await WS.profitTable(\n            batch_size,\n            !should_load_partially ? this.data.length : undefined,\n            getDateBoundaries(this.date_from, this.date_to, this.partial_fetch_time, should_load_partially)\n        );\n\n        this.profitTableResponseHandler(response, should_load_partially);\n    }\n\n    @action.bound\n    profitTableResponseHandler(response, should_load_partially = false) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.profit_table.transactions\n            .map(transaction => formatProfitTableTransactions(\n                transaction,\n                this.root_store.client.currency,\n                this.root_store.modules.trade.active_symbols,\n            ));\n\n        if (should_load_partially) {\n            this.data = [...formatted_transactions, ...this.data];\n        } else {\n            this.data = [...this.data, ...formatted_transactions];\n        }\n        this.has_loaded_all      = !should_load_partially && formatted_transactions.length < batch_size;\n        this.is_loading          = false;\n        if (formatted_transactions.length > 0) {\n            this.partial_fetch_time = toMoment().unix();\n        }\n    }\n\n    fetchOnScroll = debounce((left) => {\n        if (left < 2000) {\n            this.fetchNextBatch();\n        }\n    }, delay_on_scroll_time);\n\n    @action.bound\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll                            = scrollHeight - (scrollTop + clientHeight);\n        this.fetchOnScroll(left_to_scroll);\n    }\n\n    @action.bound\n    async onMount() {\n        this.assertHasValidCache(\n            this.client_loginid,\n            this.clearDateFilter,\n            this.clearTable,\n            WS.forgetAll.bind(null, 'proposal')\n        );\n        this.client_loginid = this.root_store.client.loginid;\n        this.onSwitchAccount(this.accountSwitcherListener);\n        await this.waitFor('authorize');\n        this.fetchNextBatch(true);\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal');\n    }\n\n    @computed\n    get totals() {\n        let profit_loss = 0;\n\n        this.data.forEach((transaction) => {\n            if (transaction.profit_loss.indexOf('-') !== -1) {\n                profit_loss -= parseFloat(transaction.profit_loss.split('-')[1]);\n            } else {\n                profit_loss += parseFloat(transaction.profit_loss);\n            }\n        });\n        return {\n            profit_loss: profit_loss.toString(),\n        };\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise((resolve) => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    @action.bound\n    clearTable() {\n        this.data           = [];\n        this.has_loaded_all = false;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    clearDateFilter() {\n        this.date_from = null;\n        this.date_to   = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n        this.partial_fetch_time = 0;\n    }\n\n    @action.bound\n    handleDateChange(date_values) {\n        Object.keys(date_values).forEach(key => {\n            this[`date_${key}`] = date_values[key];\n        });\n        this.clearTable();\n        this.fetchNextBatch();\n    }\n}\n","import { toJS }            from 'mobx';\nimport { isEmptyObject }   from '_common/utility';\nimport { CONTRACT_SHADES } from '../Constants/barriers';\n\nexport const isBarrierSupported = (contract_type) => contract_type in CONTRACT_SHADES;\n\nexport const barriersToString = (is_relative, ...barriers_list) => barriers_list\n    .filter(barrier => barrier !== undefined && barrier !== null)\n    .map(barrier => `${is_relative && !/^[+-]/.test(barrier) ? '+' : ''}${barrier}`);\n\nexport const barriersObjectToArray = (barriers, reference_array) => {\n    Object.keys(barriers).forEach(barrier => {\n        const js_object = toJS(barriers[barrier]);\n        if (!isEmptyObject(js_object)) {\n            reference_array.push(js_object);\n        }\n    });\n\n    return reference_array;\n};\n","import {\n    action,\n    computed,\n    observable }            from 'mobx';\nimport {\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES,\n    CONTRACT_SHADES,\n    DEFAULT_SHADES }        from './Constants/barriers';\nimport { barriersToString } from './Helpers/barriers';\n\nexport class ChartBarrierStore {\n    @observable color;\n    @observable lineStyle;\n    @observable shade;\n\n    @observable high;\n    @observable low;\n\n    @observable relative;\n    @observable draggable;\n    @observable hidePriceLines;\n\n    onChartBarrierChange;\n\n    constructor(\n        high_barrier,\n        low_barrier,\n        onChartBarrierChange = null,\n        { color, line_style, not_draggable } = {}\n    ) {\n        this.color     = color;\n        this.lineStyle = line_style || BARRIER_LINE_STYLES.SOLID;\n        this.onChange  = this.onBarrierChange;\n\n        // trade_store's action to process new barriers on dragged\n        this.onChartBarrierChange = typeof onChartBarrierChange === 'function' ? onChartBarrierChange.bind(this) : () => {};\n\n        this.high = +high_barrier || 0; // 0 to follow the price\n        if (low_barrier) {\n            this.low = +low_barrier;\n        }\n\n        this.shade = this.default_shade;\n\n        const has_barrier   = !!high_barrier;\n        this.relative       = !has_barrier || /^[+-]/.test(high_barrier);\n        this.draggable      = !not_draggable && has_barrier;\n        this.hidePriceLines = !has_barrier;\n    }\n\n    @action.bound\n    updateBarriers(high, low, isFromChart = false) {\n        if (!isFromChart) {\n            this.relative       = /^[+-]/.test(high);\n        }\n        this.high = +high || undefined;\n        this.low  = +low  || undefined;\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        this.shade = (should_display && CONTRACT_SHADES[contract_type]) || this.default_shade;\n    }\n\n    @action.bound\n    onBarrierChange({ high, low }) {\n        this.updateBarriers(high, low, true);\n        this.onChartBarrierChange(...barriersToString(this.relative, high, low));\n    }\n\n    @action.bound\n    updateBarrierColor(is_dark_mode) {\n        this.color = is_dark_mode ? BARRIER_COLORS.DARK_GRAY : BARRIER_COLORS.GRAY;\n    }\n\n    @computed\n    get barrier_count() {\n        return (typeof this.high !== 'undefined') + (typeof this.low !== 'undefined');\n    }\n\n    @computed\n    get default_shade() {\n        return DEFAULT_SHADES[this.barrier_count];\n    }\n}\n","import { observable } from 'mobx';\n\nexport class ChartMarkerStore {\n    @observable marker_config  = observable.object({});\n    @observable content_config = observable.object({});\n\n    constructor(marker_config, content_config) {\n        this.marker_config  = marker_config;\n        this.content_config = content_config;\n    }\n}\n","import extend                 from 'extend';\nimport {\n    action,\n    computed,\n    observable }              from 'mobx';\nimport { isEmptyObject }      from '_common/utility';\nimport ServerTime             from '_common/base/server_time';\nimport BinarySocket           from '_common/base/socket_base';\nimport { WS }                 from 'Services';\nimport { ChartBarrierStore }  from './chart-barrier-store';\nimport { ChartMarkerStore }   from './chart-marker-store';\nimport {\n    barriersObjectToArray,\n    isBarrierSupported }      from './Helpers/barriers';\nimport BaseStore              from '../../base-store';\n\nexport default class SmartChartStore extends BaseStore {\n    @observable chart_type;\n    @observable granularity;\n    @observable barriers = observable.object({});\n    @observable markers  = observable.object({});\n    barriers_empty_array = [];\n    markers_empty_array = [];\n\n    @observable is_contract_mode = false;\n    @observable is_static_chart  = false;\n    @observable is_title_enabled = true;\n\n    @observable start_epoch;\n    @observable end_epoch;\n    @observable margin;\n\n    @observable scroll_to_left_epoch = null;\n\n    @observable chart_id                      = 'trade';\n    @observable is_chart_loading              = false;\n    @observable is_chart_ready                = false;\n    @observable should_import_layout          = false;\n    @observable should_export_layout          = false;\n    @observable should_clear_chart            = false;\n    @observable trade_chart_layout            = null;\n    @observable should_refresh_active_symbols = false;\n\n    trade_chart_symbol               = null;\n    trade_chart_granularity          = null;\n    trade_chart_type                 = null;\n\n    @action.bound\n    switchToContractMode(\n        is_from_positions = false,\n        is_from_other_position = false,\n        chart_type = 'mountain',\n        granularity = 0,\n    ) {\n\n        if (!is_from_other_position) this.saveAndClearTradeChartLayout(null);\n        this.setContractMode(true);\n        if (!is_from_positions) {\n            this.updateGranularity(granularity);\n            this.updateChartType(chart_type);\n        }\n    }\n\n    @action.bound\n    getChartStatus(status) {\n        this.is_chart_ready = status;\n    }\n\n    @action.bound\n    updateChartType(type) {\n        this.chart_type = type;\n        if (!this.is_contract_mode) this.trade_chart_type = type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.granularity = granularity;\n        if (!this.is_contract_mode) this.trade_chart_granularity = granularity;\n    }\n\n    @action.bound\n    updateMargin(duration) {\n        this.margin = Math.floor(!this.granularity ?\n            (Math.max(300, (30 * duration) / (60 * 60) || 0))\n            :\n            3 * this.granularity);\n    }\n\n    @action.bound\n    updateEpochScrollToValue(epoch) {\n        this.scroll_to_left_epoch = epoch;\n    }\n\n    @action.bound\n    cleanupContractChartView() {\n        this.margin = null;\n        this.removeBarriers();\n        this.removeMarkers();\n        this.resetScrollToLeft();\n        this.setContractMode(false);\n        this.setContractStart(null);\n        this.setContractEnd(null);\n        this.setStaticChart(false);\n        this.root_store.ui.resetPurchaseStates();\n    }\n\n    @action.bound\n    resetScrollToLeft() {\n        this.scroll_to_left_epoch = null;\n    }\n\n    @action.bound\n    setContractMode(is_contract_mode) {\n        this.is_contract_mode = is_contract_mode;\n        this.is_title_enabled = !is_contract_mode;\n    }\n\n    @action.bound\n    onMount = () => {\n        // remove any barriers and markers before chart is ready\n        if (this.trade_chart_layout && !isEmptyObject(this.trade_chart_layout)) {\n            this.applySavedTradeChartLayout();\n        }\n    };\n\n    @action.bound\n    onUnmount = () => {\n        this.symbol = null;\n        this.trade_chart_layout = null;\n        this.should_import_layout = false;\n        this.setIsChartLoading(false);\n        this.cleanupContractChartView();\n    };\n\n    // --------- Set Contract Scroll to Left ---------\n    @action.bound\n    setChartView(scroll_to_left_epoch) {\n        this.updateEpochScrollToValue(scroll_to_left_epoch);\n    }\n\n    // --------- All Contracts ---------\n    @action.bound\n    setContractStart(start) {\n        this.start_epoch = start;\n    }\n\n    @action.bound\n    setContractEnd(end) {\n        this.end_epoch = end;\n    }\n\n    @action.bound\n    setIsChartLoading(bool) {\n        this.is_chart_loading = bool;\n    }\n\n    // ---------- Barriers ----------\n    @action.bound\n    createBarriers = (contract_type, high_barrier, low_barrier, onChartBarrierChange, barrier_config) => {\n        if (isEmptyObject(this.barriers.main)) {\n            let main_barrier = {};\n            if (isBarrierSupported(contract_type)) {\n                main_barrier = new ChartBarrierStore(high_barrier, low_barrier, onChartBarrierChange, barrier_config);\n            }\n\n            this.barriers = {\n                main: main_barrier,\n            };\n        }\n    };\n\n    @action.bound\n    updateBarriers(barrier_1, barrier_2) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarriers(barrier_1, barrier_2);\n        }\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarrierShade(should_display, contract_type);\n        }\n    }\n\n    @action.bound\n    updateBarrierColor(is_dark_mode) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarrierColor(is_dark_mode);\n        }\n    }\n\n    @action.bound\n    removeBarriers() {\n        this.barriers = {};\n    }\n\n    @action.bound\n    saveAndClearTradeChartLayout(chart_id) {\n        this.should_export_layout    = true;\n        this.should_import_layout    = false;\n        this.trade_chart_symbol      = this.root_store.modules.trade.symbol;\n        this.trade_chart_granularity = this.root_store.modules.smart_chart.granularity || 0;\n        this.trade_chart_type        = this.root_store.modules.smart_chart.chart_type || 'mountain';\n        this.chart_id                = chart_id;\n    }\n\n    @action.bound\n    applySavedTradeChartLayout() {\n        if (!this.trade_chart_layout) return;\n\n        this.setIsChartLoading(true);\n        this.should_export_layout = false;\n        this.should_import_layout = true;\n        this.should_clear_chart   = false;\n        this.chart_id             = 'trade';\n\n        this.trade_chart_layout.isDone = action(() => {\n            this.trade_chart_layout   = null;\n            this.should_import_layout = false;\n\n            // Reset back to symbol before loading contract if trade_symbol and contract_symbol don't match\n            if (this.trade_chart_symbol !== this.root_store.modules.trade.symbol) {\n                this.root_store.modules.trade.symbol = this.trade_chart_symbol;\n            }\n            WS.forgetAll('proposal').then(this.root_store.modules.trade.requestProposal());\n\n            // Clear chart loading status once ChartListener returns ready\n            if (this.is_chart_ready) {\n                this.setIsChartLoading(false);\n            }\n        });\n    }\n\n    @action.bound\n    exportLayout(layout) {\n        this.trade_chart_layout = layout;\n        this.should_clear_chart = true;\n    }\n\n    @action.bound\n    setStaticChart(bool) {\n        this.is_static_chart = bool;\n    }\n\n    @computed\n    get barriers_array() {\n        let has_differing = false;\n        const barriers_array = barriersObjectToArray(this.barriers, []);\n\n        if (this.barriers_empty_array.length !== barriers_array.length) {\n            has_differing = true;\n        } else {\n            this.barriers_empty_array.forEach(barrier => {\n                barriers_array.forEach(next_barrier => {\n                    Object.keys(barrier).forEach(key => {\n                        if (barrier[key] !== next_barrier[key]) {\n                            has_differing = true;\n                        }\n                    });\n                });\n            });\n        }\n\n        if (has_differing) {\n            this.barriers_empty_array = [];\n        } else {\n            this.barriers_empty_array.length = 0;\n        }\n\n        return barriersObjectToArray(this.barriers, this.barriers_empty_array);\n    }\n\n    // ---------- Markers ----------\n    @action.bound\n    createMarker(config) {\n        this.markers = extend({}, this.markers, {\n            [config.type]: new ChartMarkerStore(config.marker_config, config.content_config),\n        });\n    }\n\n    @action.bound\n    removeMarkers() {\n        this.markers = {};\n    }\n\n    @computed\n    get markers_array() {\n        let has_differing   = false;\n        const markers_array = barriersObjectToArray(this.markers, []);\n\n        if (this.markers_empty_array.length !== markers_array.length) {\n            has_differing = true;\n        } else {\n            this.markers_empty_array.forEach(marker => {\n                markers_array.forEach(next_marker => {\n                    Object.keys(marker).forEach(key => {\n                        if (marker[key] !== next_marker[key]) {\n                            has_differing = true;\n                        }\n                    });\n                });\n            });\n        }\n\n        if (has_differing) {\n            this.markers_empty_array = [];\n        } else {\n            this.markers_empty_array.length = 0;\n        }\n\n        return barriersObjectToArray(this.markers, this.markers_empty_array);\n    }\n\n    // ---------- Chart Settings ----------\n    @computed\n    get settings() {\n        return (({ common, ui } = this.root_store) => ({\n            assetInformation            : false, // ui.is_chart_asset_info_visible,\n            countdown                   : ui.is_chart_countdown_visible,\n            isHighestLowestMarkerEnabled: false, // !this.is_contract_mode, // TODO: Pending UI\n            lang                        : common.current_language,\n            position                    : ui.is_chart_layout_default ? 'bottom' : 'left',\n            theme                       : ui.is_dark_mode_on ? 'dark' : 'light',\n        }))();\n    }\n\n    // ---------- WS ----------\n    wsSubscribe = (request_object, callback) => {\n        if (request_object.subscribe !== 1) return;\n        WS.subscribeTicksHistory({ ...request_object }, callback); // use a copy of the request_object to prevent updating the source\n    };\n\n    wsForget = (match_values, callback) => (\n        WS.forget('ticks_history', callback, match_values)\n    );\n\n    wsForgetStream = (stream_id) => (\n        WS.forgetStream(stream_id)\n    );\n\n    wsSendRequest = (request_object) => {\n        if (request_object.time) {\n            return ServerTime.timePromise.then(() => ({\n                msg_type: 'time',\n                time    : ServerTime.get().unix(),\n            }));\n        }\n        if (request_object.active_symbols) {\n            if (this.should_refresh_active_symbols) {\n                return WS.sendRequest(request_object, { forced: true });\n            }\n            return BinarySocket.wait('active_symbols');\n        }\n        return WS.sendRequest(request_object);\n    };\n}\n","import debounce                       from 'lodash.debounce';\nimport {\n    action,\n    computed,\n    observable,\n}                                     from 'mobx';\nimport { WS }                         from 'Services';\nimport { toMoment }                   from 'Utils/Date';\nimport { formatStatementTransaction } from './Helpers/format-response';\nimport getDateBoundaries              from '../Profit/Helpers/format-request';\nimport BaseStore                      from '../../base-store';\n\nconst batch_size = 100; // request response limit\nconst delay_on_scroll_time = 150; // fetch debounce delay on scroll\n\nexport default class StatementStore extends BaseStore {\n    @observable data           = [];\n    @observable is_loading     = false;\n    @observable has_loaded_all = false;\n    @observable date_from      = null;\n    @observable date_to        = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n    @observable error          = '';\n\n    // `client_loginid` is only used to detect if this is in sync with the client-store, don't rely on\n    // this for calculations. Use the client.currency instead.\n    @observable client_loginid = '';\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    @computed\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    @action.bound\n    clearTable() {\n        this.data               = [];\n        this.has_loaded_all     = false;\n        this.is_loading         = false;\n    }\n\n    @action.bound\n    clearDateFilter() {\n        this.date_from = null;\n        this.date_to   = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n        this.partial_fetch_time = 0;\n    }\n\n    shouldFetchNextBatch(should_load_partially) {\n        if (!should_load_partially && (this.has_loaded_all || this.is_loading)) return false;\n        const today = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n        if (this.date_to < today) return (!should_load_partially && this.partial_fetch_time);\n        return true;\n    }\n\n    @action.bound\n    async fetchNextBatch(should_load_partially = false) {\n        if (!this.shouldFetchNextBatch(should_load_partially)) return;\n        this.is_loading = true;\n\n        const response = await WS.statement(\n            batch_size,\n            !should_load_partially ? this.data.length : undefined,\n            getDateBoundaries(this.date_from, this.date_to, this.partial_fetch_time, should_load_partially),\n        );\n        this.statementHandler(response, should_load_partially);\n    }\n\n    @action.bound\n    statementHandler(response, should_load_partially) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.statement.transactions\n            .map(transaction => formatStatementTransaction(transaction,\n                this.root_store.client.currency,\n                this.root_store.modules.trade.active_symbols,\n            ));\n\n        if (should_load_partially) {\n            this.data = [...formatted_transactions, ...this.data];\n        } else {\n            this.data = [...this.data, ...formatted_transactions];\n        }\n        this.has_loaded_all = !should_load_partially && formatted_transactions.length < batch_size;\n        this.is_loading     = false;\n        if (formatted_transactions.length > 0) {\n            this.partial_fetch_time = toMoment().unix();\n        }\n    }\n\n    @action.bound\n    handleDateChange(date_values) {\n        Object.keys(date_values).forEach(key => {\n            if (date_values[key]) {\n                this[`date_${key}`] = date_values[key];\n            }\n        });\n        this.clearTable();\n        this.fetchNextBatch();\n    }\n\n    fetchOnScroll = debounce((left) => {\n        if (left < 2000) {\n            this.fetchNextBatch();\n        }\n    }, delay_on_scroll_time);\n\n    @action.bound\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll  = scrollHeight - (scrollTop + clientHeight);\n\n        this.fetchOnScroll(left_to_scroll);\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise((resolve) => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        this.assertHasValidCache(\n            this.client_loginid,\n            this.clearDateFilter,\n            this.clearTable,\n            WS.forgetAll.bind(null, 'proposal')\n        );\n        this.client_loginid = this.root_store.client.loginid;\n        this.onSwitchAccount(this.accountSwitcherListener);\n        await this.waitFor('authorize');\n        this.fetchNextBatch(true);\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal');\n    }\n}\n","import { formatMoney }          from '_common/base/currency_base';\nimport { toTitleCase }          from '_common/string_util';\nimport { localize }             from 'App/i18n';\nimport { getMarketInformation } from 'Modules/Reports/Helpers/market-underlying';\nimport { toMoment }             from 'Utils/Date';\nimport { getSymbolDisplayName } from '../../Trading/Helpers/active-symbols';\n\nexport const formatStatementTransaction = (transaction, currency, active_symbols = []) => {\n    const format_string           = 'DD MMM YYYY HH:mm:ss';\n    const transaction_time        = toMoment(transaction.transaction_time).format(format_string);\n    const payout                  = parseFloat(transaction.payout);\n    const amount                  = parseFloat(transaction.amount);\n    const balance                 = parseFloat(transaction.balance_after);\n    const should_exclude_currency = true;\n    const shortcode               = ['buy', 'sell'].includes(transaction.action_type) ? transaction.shortcode : null;\n    const display_name            = shortcode ? getSymbolDisplayName(\n        active_symbols,\n        getMarketInformation(shortcode).underlying\n    ) : '';\n\n    return {\n        action     : localize(toTitleCase(transaction.action_type) /* localize-ignore */), // handled in static_strings_app.js: 'Buy', 'Sell', 'Deposit', 'Withdrawal'\n        date       : transaction_time,\n        display_name,\n        refid      : transaction.transaction_id,\n        payout     : isNaN(payout) ? '-' : formatMoney(currency, payout, should_exclude_currency),\n        amount     : isNaN(amount) ? '-' : formatMoney(currency, amount, should_exclude_currency),\n        balance    : isNaN(balance) ? '-' : formatMoney(currency, balance, should_exclude_currency),\n        desc       : transaction.longcode.replace(/\\n/g, '<br />'),\n        id         : transaction.contract_id,\n        app_id     : transaction.app_id,\n        shortcode,\n        action_type: transaction.action_type,\n    };\n};\n","import { WS } from 'Services';\n\nexport const processPurchase = async(proposal_id, price) =>\n    WS.subscribeProposalOpenContractOnBuy({ buy: proposal_id, price });\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeSymbolAsync = async(symbol) => {\n    await ContractType.buildContractTypesConfig(symbol);\n};\n","import { localize }           from 'App/i18n';\nimport { isSessionAvailable } from 'Stores/Modules/Trading/Helpers/start-date';\nimport {\n    isHourValid,\n    isMinuteValid,\n    isTimeValid,\n    toMoment }                from 'Utils/Date';\n\nconst getValidationRules = () => ({\n    amount: {\n        rules: [\n            ['req'    , { message: localize('Amount is a required field.') }],\n            ['number' , { min: 0, type: 'float' }],\n        ],\n    },\n    barrier_1: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.barrier_count }],\n            ['custom' , { func: (value, options, store, inputs) => store.barrier_count > 1 ? +value > +inputs.barrier_2 : true, message: localize('Higher barrier must be higher than lower barrier.') }],\n        ],\n        trigger: 'barrier_2',\n    },\n    barrier_2: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count > 1 && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.barrier_count }],\n            ['custom' , { func: (value, options, store, inputs) => (/^[+-]/g.test(inputs.barrier_1) && /^[+-]/g.test(value)) || (/^(?![+-])/g.test(inputs.barrier_1) && /^(?![+-])/g.test(value)), message: localize('Both barriers should be relative or absolute') }],\n            ['custom' , { func: (value, options, store, inputs) => +inputs.barrier_1 > +value, message: localize('Lower barrier must be lower than higher barrier.') }],\n        ],\n        trigger: 'barrier_1',\n    },\n    duration: {\n        rules: [\n            ['req'    , { message: localize('Duration is a required field.') }],\n        ],\n    },\n    start_date: {\n        trigger: 'start_time',\n    },\n    expiry_date: {\n        trigger: 'expiry_time',\n    },\n    start_time: {\n        rules: [\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isTimeValid(value)  , message: localize('Please enter the start time in the format \"HH:MM\".') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isHourValid(value)  , message: localize('Hour must be between 0 and 23.') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isMinuteValid(value), message: localize('Minute must be between 0 and 59.') }],\n            ['custom' , { func: (value, options, store) => {\n                if (store.contract_start_type === 'spot') return true;\n                if (!isTimeValid(value)) return false;\n                const start_moment       = toMoment(store.start_date);\n                const start_moment_clone = start_moment.clone();\n                const [h, m] = value.split(':');\n                return isSessionAvailable(store.sessions, start_moment_clone.hour(h).minute(m), start_moment);\n            }, message: localize('Start time cannot be in the past.') }],\n        ],\n    },\n    expiry_time: {\n        rules: [\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isTimeValid(value)  , message: localize('Please enter the start time in the format \"HH:MM\".') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isHourValid(value)  , message: localize('Hour must be between 0 and 23.') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isMinuteValid(value), message: localize('Minute must be between 0 and 59.') }],\n            ['custom' , { func: (value, options, store) => {\n                if (store.contract_start_type === 'spot') return true;\n                if (!isTimeValid(value)) return false;\n                const start_moment       = toMoment(store.start_date);\n                const start_moment_clone = start_moment.clone();\n                const [h, m] = value.split(':');\n                return isSessionAvailable(store.sessions, start_moment_clone.hour(h).minute(m), start_moment);\n            }, message: localize('Expiry time cannot be in the past.') }],\n        ],\n    },\n});\n\nexport default getValidationRules;\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeContractTypeList = ({ contract_types_list, contract_type }) => (\n    ContractType.getContractType(contract_types_list, contract_type)\n);\n\nexport const onChangeContractType = (store) => (\n    ContractType.getContractValues(store)\n);\n","import ContractType      from '../Helpers/contract-type';\nimport { getExpiryType } from '../Helpers/duration';\n\nexport const onChangeExpiry = (store) => {\n    const contract_expiry_type = getExpiryType(store);\n\n    // TODO: there will be no barrier available if contract is only daily but client chooses intraday endtime. we should find a way to handle this.\n    const obj_barriers = store.contract_expiry_type !== contract_expiry_type && // barrier value changes for tick/intraday/daily\n        ContractType.getBarriers(store.contract_type, contract_expiry_type);\n\n    return {\n        contract_expiry_type,\n        ...obj_barriers,\n    };\n};\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeStartDate = async (store) => {\n    const {\n        contract_type,\n        duration_unit,\n        expiry_time,\n        start_date,\n        symbol } = store;\n    const server_time = store.root_store.common.server_time;\n    let {\n        start_time,\n        expiry_date,\n        expiry_type } = store;\n\n    start_time = start_time || server_time.clone().add(6, 'minute').format('HH:mm'); // when there is not a default value for start_time, it should be set more than 5 min after server_time\n\n    const obj_contract_start_type = ContractType.getStartType(start_date);\n    const contract_start_type     = obj_contract_start_type.contract_start_type;\n    const obj_sessions            = ContractType.getSessions(contract_type, start_date);\n    const sessions                = obj_sessions.sessions;\n    const obj_start_time          = ContractType.getStartTime(sessions, start_date, start_time);\n    start_time                    = obj_start_time.start_time;\n\n    const obj_duration_units_list = ContractType.getDurationUnitsList(contract_type, contract_start_type);\n    const duration_units_list     = obj_duration_units_list.duration_units_list;\n    const obj_duration_unit       = ContractType.getDurationUnit(duration_unit, contract_type, contract_start_type);\n\n    const obj_expiry_type = ContractType.getExpiryType(duration_units_list, expiry_type);\n    expiry_type           = obj_expiry_type.expiry_type;\n    const obj_expiry_date = ContractType.getExpiryDate(duration_units_list, expiry_date, expiry_type, start_date);\n    expiry_date           = obj_expiry_date.expiry_date;\n    \n    const trading_times          = await ContractType.getTradingTimes(expiry_date, symbol);\n    const obj_market_open_times  = { market_open_times: trading_times.open };\n    const obj_market_close_times = { market_close_times: trading_times.close };\n\n    const market_close_times     = obj_market_close_times.market_close_times;\n    const obj_expiry_time        = ContractType.getExpiryTime(\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    );\n\n    const obj_duration_min_max = ContractType.getDurationMinMax(contract_type, contract_start_type);\n\n    return {\n        ...obj_contract_start_type,\n        ...obj_duration_units_list,\n        ...obj_duration_min_max,\n        ...obj_duration_unit,\n        ...obj_sessions,\n        ...obj_start_time,\n        ...obj_expiry_date,\n        ...obj_expiry_time,\n        ...obj_expiry_type,\n        ...obj_market_open_times,\n        ...obj_market_close_times,\n    };\n};\n","import extend from 'extend';\n\nimport ContractTypeHelper from './contract-type';\nimport * as ContractType  from '../Actions/contract-type';\nimport * as Duration      from '../Actions/duration';\nimport * as StartDate     from '../Actions/start-date';\n\nexport const processTradeParams = async(store, new_state) => {\n    const snapshot = store.getSnapshot();\n    const functions = getMethodsList(store, new_state);\n\n    // To make sure that every function is invoked and affects the snapshot respectively, we have to use for instead of forEach\n    for (let i = 0; i < functions.length; i++){\n        extendOrReplace(snapshot, await functions[i](snapshot)); // eslint-disable-line no-await-in-loop\n    }\n\n    return snapshot;\n};\n\nconst getMethodsList = (store, new_state) => ([\n    ContractTypeHelper.getContractCategories,\n    ContractType.onChangeContractTypeList,\n    ...(/\\b(symbol|contract_type)\\b/.test(Object.keys(new_state)) || !store.contract_type ? // symbol/contract_type changed or contract_type not set yet\n        [ContractType.onChangeContractType] : []),\n    StartDate.onChangeStartDate,\n    Duration.onChangeExpiry, // it should be always after StartDate.onChangeStartDate\n]);\n\n// Some values need to be replaced, not extended\nconst extendOrReplace = (source, new_values) => {\n    const to_replace = ['contract_types_list', 'duration_units_list', 'form_components', 'market_close_times', 'trade_types'];\n\n    to_replace.forEach((key) => {\n        if (key in new_values) {\n            source[key] = undefined;\n        }\n    });\n\n    extend(true, source, new_values);\n};\n","import { getDecimalPlaces }                from '_common/base/currency_base';\nimport { isVisible }                       from '_common/common_functions';\nimport {\n    getPropertyValue,\n    isDeepEqual }                          from '_common/utility';\nimport {\n    convertToUnix,\n    toMoment }                             from 'Utils/Date';\n\nconst map_error_field = {\n    barrier    : 'barrier_1',\n    barrier2   : 'barrier_2',\n    date_expiry: 'expiry_date',\n};\n\nexport const getProposalErrorField = (response) => {\n    const error_field = getPropertyValue(response, ['error', 'details', 'field']);\n    if (!error_field) {\n        return null;\n    }\n    const error_id = map_error_field[error_field] || error_field;\n    const el_error = document.getElementsByName(error_id)[0];\n    return (el_error && isVisible(el_error)) ? error_id : null;\n};\n\nexport const getProposalInfo = (store, response, obj_prev_contract_basis) => {\n    const proposal   = response.proposal || {};\n    const profit     = (proposal.payout - proposal.ask_price) || 0;\n    const returns    = profit * 100 / (proposal.ask_price || 1);\n    const stake      = proposal.display_value;\n    const basis_list = store.basis_list;\n\n    const contract_basis = (basis_list.find(o => o.value !== store.basis));\n    const is_stake       = contract_basis.text === 'Stake';\n    const price          = is_stake ? stake : proposal[contract_basis.value];\n    let has_increased    = price > obj_prev_contract_basis.value;\n\n    if (!obj_prev_contract_basis.value || price === obj_prev_contract_basis.value) {\n        has_increased = null;\n    }\n\n    const obj_contract_basis = {\n        text : contract_basis.text || '',\n        value: price || '',\n    };\n\n    return {\n        id               : proposal.id || '',\n        has_error        : !!response.error,\n        has_error_details: !!getProposalErrorField(response),\n        has_increased,\n        message          : proposal.longcode || response.error.message,\n        obj_contract_basis,\n        payout           : proposal.payout,\n        profit           : profit.toFixed(getDecimalPlaces(store.currency)),\n        returns          : `${returns.toFixed(2)}%`,\n        stake,\n    };\n};\n\nexport const createProposalRequests = (store) => {\n    const requests = {};\n\n    Object.keys(store.trade_types).forEach((type) => {\n        const new_req     = createProposalRequestForContract(store, type);\n        const current_req = store.proposal_requests[type];\n        if (!isDeepEqual(new_req, current_req)) {\n            requests[type] = new_req;\n        }\n    });\n\n    return requests;\n};\n\nconst createProposalRequestForContract = (store, type_of_contract) => {\n    const obj_expiry = {};\n    if (store.expiry_type === 'endtime') {\n        const expiry_date = toMoment(store.expiry_date);\n        obj_expiry.date_expiry = convertToUnix(expiry_date.unix(), store.expiry_time);\n    }\n\n    return {\n        proposal     : 1,\n        subscribe    : 1,\n        amount       : parseFloat(store.amount),\n        basis        : store.basis,\n        contract_type: type_of_contract,\n        currency     : store.root_store.client.currency,\n        symbol       : store.symbol,\n        ...(\n            store.start_date &&\n            { date_start: convertToUnix(store.start_date, store.start_time) }\n        ),\n        ...(\n            store.expiry_type === 'duration' ?\n                {\n                    duration     : parseInt(store.duration),\n                    duration_unit: store.duration_unit,\n                }\n                :\n                obj_expiry\n        ),\n        ...(\n            (store.barrier_count > 0 || store.form_components.indexOf('last_digit') !== -1) &&\n            { barrier: store.barrier_1 || store.last_digit }\n        ),\n        ...(\n            store.barrier_count === 2 &&\n            { barrier2: store.barrier_2 }\n        ),\n    };\n};\n","import debounce                       from 'lodash.debounce';\nimport {\n    action,\n    computed,\n    observable,\n    reaction,\n    runInAction }                     from 'mobx';\nimport BinarySocket                   from '_common/base/socket_base';\nimport { localize }                   from 'App/i18n';\nimport {\n    cloneObject,\n    isEmptyObject,\n    getPropertyValue }                from '_common/utility';\nimport {\n    getMinPayout,\n    isCryptocurrency }                from '_common/base/currency_base';\nimport { WS }                         from 'Services';\nimport { isDigitTradeType }           from 'Modules/Trading/Helpers/digits';\nimport { processPurchase }            from './Actions/purchase';\nimport * as Symbol                    from './Actions/symbol';\nimport getValidationRules             from './Constants/validation-rules';\nimport {\n    pickDefaultSymbol,\n    showUnavailableLocationError,\n    isMarketClosed,\n}                                     from './Helpers/active-symbols';\nimport { setChartBarrier }            from './Helpers/chart';\nimport ContractType                   from './Helpers/contract-type';\nimport {\n    convertDurationLimit,\n    resetEndTimeOnVolatilityIndices } from './Helpers/duration';\nimport { processTradeParams }         from './Helpers/process';\nimport {\n    createProposalRequests,\n    getProposalErrorField,\n    getProposalInfo }                 from './Helpers/proposal';\nimport { BARRIER_COLORS }             from '../SmartChart/Constants/barriers';\nimport BaseStore                      from '../../base-store';\n\nconst store_name = 'trade_store';\n\nexport default class TradeStore extends BaseStore {\n    // Control values\n    @observable is_trade_component_mounted = false;\n    @observable is_purchase_enabled        = false;\n    @observable is_trade_enabled           = false;\n    @observable is_equal                   = 0;\n\n    // Underlying\n    @observable symbol;\n    @observable is_market_closed = false;\n    @observable previous_symbol = '';\n    @observable active_symbols = [];\n\n    // Contract Type\n    @observable contract_expiry_type = '';\n    @observable contract_start_type  = '';\n    @observable contract_type        = '';\n    @observable contract_types_list  = {};\n    @observable form_components      = [];\n    @observable trade_types          = {};\n\n    // Amount\n    @observable amount     = 10;\n    @observable basis      = '';\n    @observable basis_list = [];\n    @observable currency   = '';\n\n    // Duration\n    @observable duration            = 5;\n    @observable duration_unit       = '';\n    @observable duration_units_list = [];\n    @observable duration_min_max    = {};\n    @observable expiry_date         = '';\n    @observable expiry_time         = '';\n    @observable expiry_type         = 'duration';\n\n    // Barrier\n    @observable barrier_1     = '';\n    @observable barrier_2     = '';\n    @observable barrier_count = 0;\n\n    // Start Time\n    @observable start_date       = Number(0); // Number(0) refers to 'now'\n    @observable start_dates_list = [];\n    @observable start_time       = null;\n    @observable sessions         = [];\n\n    @observable market_open_times = [];\n    // End Date Time\n    /**\n     * An array that contains market closing time.\n     *\n     * e.g. [\"04:00:00\", \"08:00:00\"]\n     *\n     */\n    @observable market_close_times = [];\n\n    // Last Digit\n    @observable last_digit = 5;\n\n    // Purchase\n    @observable proposal_info = {};\n    @observable purchase_info = {};\n\n    debouncedProposal = debounce(this.requestProposal, 500);\n    proposal_requests = {};\n\n    initial_barriers;\n    is_initial_barrier_applied = false;\n\n    @action.bound\n    init = async () => {\n        // To be sure that the website_status response has been received before processing trading page.\n        await BinarySocket.wait('authorize', 'website_status');\n        action(async() => {\n            this.active_symbols = await WS.activeSymbols().active_symbols;\n        });\n    };\n\n    constructor({ root_store }) {\n        const local_storage_properties = [\n            'amount',\n            'barrier_1',\n            'barrier_2',\n            'basis',\n            'contract_start_type',\n            'contract_type',\n            'duration',\n            'duration_unit',\n            'expiry_date',\n            'expiry_type',\n            'is_equal',\n            'last_digit',\n            'start_date',\n            'start_time',\n            'symbol',\n        ];\n        super({\n            root_store,\n            local_storage_properties,\n            store_name,\n            validation_rules: getValidationRules(),\n        });\n\n        // Adds intercept to change min_max value of duration validation\n        reaction(\n            () => [this.contract_expiry_type, this.duration_min_max, this.duration_unit, this.expiry_type],\n            () => {\n                this.changeDurationValidationRules();\n            },\n        );\n        reaction(\n            () => this.is_equal,\n            () => {\n                this.onAllowEqualsChange();\n            },\n        );\n        reaction(\n            () => this.symbol,\n            () => {\n                const date = resetEndTimeOnVolatilityIndices(this.symbol, this.expiry_type);\n                if (date) {\n                    this.expiry_date = date;\n                }\n            }\n        );\n        reaction(\n            () => this.duration_unit,\n            () => {\n                this.contract_expiry_type = this.duration_unit === 't' ? 'tick' : 'intraday';\n            }\n        );\n    }\n\n    @computed\n    get is_symbol_in_active_symbols() {\n        return this.active_symbols\n            .some(symbol_info => symbol_info.symbol === this.symbol && symbol_info.exchange_is_open === 1);\n    }\n\n    @action.bound\n    refresh = () => {\n        this.proposal_info     = {};\n        this.purchase_info     = {};\n        this.proposal_requests = {};\n        WS.forgetAll('proposal');\n    };\n\n    @action.bound\n    clearContract = () => {\n        if (this.root_store.modules.smart_chart.is_contract_mode) {\n            this.root_store.modules.contract_trade.onCloseContract();\n        }\n    };\n\n    @action.bound\n    setDefaultSymbol() {\n        if (!this.is_symbol_in_active_symbols) {\n            this.processNewValuesAsync({\n                symbol: pickDefaultSymbol(this.active_symbols),\n            });\n        }\n    }\n\n    @action.bound\n    async setActiveSymbols() {\n        const { active_symbols, error } = this.smart_chart.should_refresh_active_symbols ?\n            // if SmartCharts has requested active_symbols, we wait for the response\n            await BinarySocket.wait('active_symbols')\n            : // else requests new active_symbols\n            await WS.activeSymbols({ forced: true });\n\n        if (error) {\n            this.root_store.common.showError(localize('Trading is unavailable at this time.'));\n            return;\n        } else if (!active_symbols || !active_symbols.length) {\n            showUnavailableLocationError(this.root_store.common.showError);\n            return;\n        }\n\n        this.processNewValuesAsync({ active_symbols });\n    }\n\n    @action.bound\n    async setContractTypes() {\n        if (this.symbol && this.is_symbol_in_active_symbols) {\n            await Symbol.onChangeSymbolAsync(this.symbol);\n            runInAction(() => {\n                this.processNewValuesAsync({\n                    ...ContractType.getContractValues(this),\n                    ...ContractType.getContractCategories(),\n                });\n            });\n        }\n    }\n\n    @action.bound\n    async prepareTradeStore() {\n        this.smart_chart      = this.root_store.modules.smart_chart;\n        this.currency         = this.root_store.client.currency;\n        this.initial_barriers = { barrier_1: this.barrier_1, barrier_2: this.barrier_2 };\n\n        await BinarySocket.wait('authorize');\n        await this.setActiveSymbols();\n        runInAction(async() => {\n            this.setDefaultSymbol();\n            await this.setContractTypes();\n            runInAction(() => {\n                this.processNewValuesAsync({\n                    is_market_closed: isMarketClosed(this.active_symbols, this.symbol),\n                });\n            });\n        });\n    }\n\n    @action.bound\n    onChangeMultiple(values) {\n        Object.keys(values).forEach((name) => {\n            if (!(name in this)) {\n                throw new Error(`Invalid Argument: ${name}`);\n            }\n        });\n\n        this.processNewValuesAsync({ ...values }, true);\n    }\n\n    @action.bound\n    onChange(e) {\n        const { name, value } = e.target;\n\n        // save trade_chart_symbol upon user change\n        if (name === 'symbol' && value) {\n            this.root_store.modules.smart_chart.trade_chart_symbol = value;\n        }\n\n        if (name === 'currency') {\n            this.root_store.client.selectCurrency(value);\n        } else if (name === 'expiry_date') {\n            this.expiry_time = null;\n        } else if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n\n        this.validateAllProperties();\n        this.processNewValuesAsync({ [name]: value }, true);\n    }\n\n    @action.bound\n    setPreviousSymbol(symbol) {\n        if (this.previous_symbol !== symbol) this.previous_symbol = symbol;\n    }\n\n    @action.bound\n    async resetPreviousSymbol() {\n        this.setMarketStatus(isMarketClosed(this.active_symbols, this.previous_symbol));\n        await Symbol.onChangeSymbolAsync(this.previous_symbol);\n        runInAction(() => {\n            this.previous_symbol = ''; // reset the symbol to default\n        });\n    }\n\n    @action.bound\n    onHoverPurchase(is_over, contract_type) {\n        if (this.is_purchase_enabled) {\n            this.smart_chart.updateBarrierShade(is_over, contract_type);\n        }\n    }\n\n    @action.bound\n    onPurchase(proposal_id, price, type) {\n        if (!this.is_purchase_enabled) return;\n        if (proposal_id) {\n            this.is_purchase_enabled = false;\n            processPurchase(proposal_id, price).then(action((response) => {\n                if (this.proposal_info[type].id !== proposal_id) {\n                    this.smart_chart.cleanupContractChartView();\n                    this.smart_chart.applySavedTradeChartLayout();\n                    throw new Error('Proposal ID does not match.');\n                }\n                if (response.buy) {\n                    this.smart_chart.switchToContractMode();\n                    const contract_data = {\n                        ...this.proposal_requests[type],\n                        ...this.proposal_info[type],\n                        buy_price: response.buy.buy_price,\n                    };\n                    const {\n                        contract_id,\n                        longcode,\n                        start_time,\n                    } = response.buy;\n                    // toggle smartcharts to contract mode\n                    if (contract_id) {\n                        // NOTE: changing chart granularity and chart_type has to be done in a different render cycle\n                        // so we have to set chart granularity to zero, and change the chart_type to 'mountain' first,\n                        // and then set the chart view to the start_time\n                        this.smart_chart.setChartView(start_time);\n                        // draw the start time line and show longcode then mount contract\n                        this.root_store.modules.contract_trade.drawContractStartTime(start_time, longcode, contract_id);\n                        this.root_store.ui.openPositionsDrawer();\n                    }\n                    this.root_store.gtm.pushPurchaseData(contract_data);\n                } else if (response.error) {\n                    // using javascript to disable purchase-buttons manually to compensate for mobx lag\n                    this.disablePurchaseButtons();\n                    this.root_store.common.services_error = {\n                        type: response.msg_type,\n                        ...response.error,\n                    };\n                    this.root_store.ui.toggleServicesErrorModal(true);\n                }\n                WS.forgetAll('proposal');\n                this.purchase_info = response;\n                this.is_purchase_enabled = true;\n            }));\n        }\n    }\n\n    disablePurchaseButtons = () => {\n        const el_purchase_value    = document.getElementsByClassName('trade-container__price-info');\n        const el_purchase_buttons  = document.getElementsByClassName('btn-purchase');\n        [].forEach.bind(el_purchase_buttons, (el) => {\n            el.classList.add('btn-purchase--disabled');\n        })();\n        [].forEach.bind(el_purchase_value, (el) => {\n            el.classList.add('trade-container__price-info--fade');\n        })();\n    }\n\n    /**\n     * Updates the store with new values\n     * @param  {Object} new_state - new values to update the store with\n     * @return {Object} returns the object having only those values that are updated\n     */\n    @action.bound\n    updateStore(new_state) {\n        Object.keys(cloneObject(new_state)).forEach((key) => {\n            if (key === 'root_store' || ['validation_rules', 'validation_errors', 'currency', 'smart_chart'].indexOf(key) > -1) return;\n            if (JSON.stringify(this[key]) === JSON.stringify(new_state[key])) {\n                delete new_state[key];\n            } else {\n                if (key === 'symbol') {\n                    this.is_purchase_enabled = false;\n                    this.is_trade_enabled    = false;\n                }\n\n                if (new_state.start_date && typeof new_state.start_date === 'string') {\n                    new_state.start_date = parseInt(new_state.start_date);\n                }\n\n                this[key] = new_state[key];\n\n                // validation is done in mobx intercept (base_store.js)\n                // when barrier_1 is set, it is compared with store.barrier_2 (which is not updated yet)\n                if (key === 'barrier_2' && new_state.barrier_1) {\n                    this.barrier_1 = new_state.barrier_1; // set it again, after barrier_2 is updated in store\n                }\n            }\n        });\n        return new_state;\n    }\n\n    async processNewValuesAsync(\n        obj_new_values = {},\n        is_changed_by_user = false,\n        obj_old_values = {},\n        should_forget_first = true,\n    ) {\n        // Sets the default value to Amount when Currency has changed from Fiat to Crypto and vice versa.\n        // The source of default values is the website_status response.\n        if (should_forget_first) WS.forgetAll('proposal');\n        if (is_changed_by_user &&\n            /\\bcurrency\\b/.test(Object.keys(obj_new_values))\n        ) {\n            const prev_currency = obj_old_values &&\n            !isEmptyObject(obj_old_values) &&\n            obj_old_values.currency ? obj_old_values.currency : this.currency;\n            if (isCryptocurrency(obj_new_values.currency) !== isCryptocurrency(prev_currency)) {\n                obj_new_values.amount = is_changed_by_user && obj_new_values.amount ?\n                    obj_new_values.amount : getMinPayout(obj_new_values.currency);\n            }\n            this.currency = obj_new_values.currency;\n        }\n\n        let has_only_forward_starting_contracts;\n\n        if (Object.keys(obj_new_values).includes('symbol')) {\n            this.setPreviousSymbol(this.symbol);\n            await Symbol.onChangeSymbolAsync(obj_new_values.symbol);\n            this.setMarketStatus(isMarketClosed(this.active_symbols, obj_new_values.symbol));\n            has_only_forward_starting_contracts =\n                ContractType.getContractCategories().has_only_forward_starting_contracts;\n        }\n        // TODO: remove all traces of setHasOnlyForwardingContracts and has_only_forward_starting_contracts in app\n        //  once future contracts are implemented\n        this.root_store.ui.setHasOnlyForwardingContracts(has_only_forward_starting_contracts);\n        if (has_only_forward_starting_contracts) return;\n\n        const new_state = this.updateStore(cloneObject(obj_new_values));\n\n        if (is_changed_by_user || /\\b(symbol|contract_types_list)\\b/.test(Object.keys(new_state))) {\n            this.updateStore({ // disable purchase button(s), clear contract info\n                is_purchase_enabled: false,\n                proposal_info      : {},\n            });\n\n            // To prevent infinite loop when changing from advanced end_time to digit type contract\n            if (obj_new_values.contract_type && this.root_store.ui.is_advanced_duration) {\n                if (isDigitTradeType(obj_new_values.contract_type)) {\n                    this.barrier_1     = '';\n                    this.barrier_2     = '';\n                    this.expiry_type = 'duration';\n                    this.root_store.ui.is_advanced_duration = false;\n                }\n            }\n\n            if (!this.smart_chart.is_contract_mode) {\n                const is_barrier_changed = 'barrier_1' in new_state || 'barrier_2' in new_state;\n                if (is_barrier_changed) {\n                    this.smart_chart.updateBarriers(this.barrier_1, this.barrier_2);\n                } else {\n                    this.smart_chart.removeBarriers();\n                }\n            }\n\n            const snapshot            = await processTradeParams(this, new_state);\n            snapshot.is_trade_enabled = true;\n\n            this.updateStore({\n                ...snapshot,\n                ...(!this.is_initial_barrier_applied ? this.initial_barriers : {}),\n            });\n            this.is_initial_barrier_applied = true;\n\n            if (/\\bcontract_type\\b/.test(Object.keys(new_state))) {\n                this.validateAllProperties();\n            }\n\n            if (!this.smart_chart.is_contract_mode) {\n                this.debouncedProposal();\n            }\n        }\n    }\n\n    @action.bound\n    clearPurchaseInfo() {\n        this.purchase_info = {};\n        this.proposal_requests = {};\n        this.proposal_info = {};\n    }\n\n    @action.bound\n    requestProposal() {\n        const requests = createProposalRequests(this);\n\n        if (Object.values(this.validation_errors).some(e => e.length)) {\n            this.proposal_info = {};\n            this.purchase_info = {};\n            WS.forgetAll('proposal');\n            return;\n        }\n\n        if (!isEmptyObject(requests)) {\n            this.proposal_requests = requests;\n            this.proposal_info     = {};\n            this.purchase_info     = {};\n            this.root_store.modules.contract_trade.setIsDigitContract(Object.keys(this.proposal_requests)[0]);\n\n            Object.keys(this.proposal_requests).forEach((type) => {\n                WS.subscribeProposal(this.proposal_requests[type], this.onProposalResponse);\n            });\n        }\n        this.root_store.ui.resetPurchaseStates();\n    }\n\n    @action.bound\n    setMarketStatus(status) {\n        this.is_market_closed = status;\n    }\n\n    @action.bound\n    onProposalResponse(response) {\n        // We do not want new proposal requests when in contract mode\n        if (this.root_store.modules.smart_chart.is_contract_mode) return;\n        const contract_type           = response.echo_req.contract_type;\n        const prev_proposal_info      = getPropertyValue(this.proposal_info, contract_type) || {};\n        const obj_prev_contract_basis = getPropertyValue(prev_proposal_info, 'obj_contract_basis') || {};\n\n        this.proposal_info  = {\n            ...this.proposal_info,\n            [contract_type]: getProposalInfo(this, response, obj_prev_contract_basis),\n        };\n\n        if (!this.smart_chart.is_contract_mode) {\n            const color = this.root_store.ui.is_dark_mode_on ? BARRIER_COLORS.DARK_GRAY : BARRIER_COLORS.GRAY;\n            const barrier_config = { color };\n            setChartBarrier(this.smart_chart, response, this.onChartBarrierChange, barrier_config);\n        }\n\n        if (response.error) {\n            const error_id = getProposalErrorField(response);\n            if (error_id) {\n                this.setValidationErrorMessages(error_id, [response.error.message]);\n            }\n        } else {\n            this.validateAllProperties();\n        }\n\n        this.is_purchase_enabled = true;\n    }\n\n    @action.bound\n    onChartBarrierChange(barrier_1, barrier_2) {\n        this.processNewValuesAsync({ barrier_1, barrier_2 }, true);\n    }\n\n    @action.bound\n    onAllowEqualsChange() {\n        this.processNewValuesAsync({ contract_type: parseInt(this.is_equal) ? 'rise_fall_equal' : 'rise_fall' }, true);\n    }\n\n    @action.bound\n    updateSymbol(underlying) {\n        if (!underlying) return;\n        this.onChange({\n            target: {\n                name : 'symbol',\n                value: underlying,\n            },\n        });\n    }\n\n    @action.bound\n    changeDurationValidationRules() {\n        if (this.expiry_type === 'endtime') {\n            this.validation_errors.duration = [];\n            return;\n        }\n\n        const index  = this.validation_rules.duration.rules.findIndex(item => item[0] === 'number');\n        const limits = this.duration_min_max[this.contract_expiry_type] || false;\n\n        if (limits) {\n            const duration_options = {\n                min: convertDurationLimit(+limits.min, this.duration_unit),\n                max: convertDurationLimit(+limits.max, this.duration_unit),\n            };\n\n            if (index > -1) {\n                this.validation_rules.duration.rules[index][1] = duration_options;\n            } else {\n                this.validation_rules.duration.rules.push(['number', duration_options]);\n            }\n            this.validateProperty('duration', this.duration);\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => {\n            await this.processNewValuesAsync(\n                { currency: this.root_store.client.currency },\n                true,\n                { currency: this.currency },\n                false,\n            );\n            await this.clearContract();\n            await this.resetErrorServices();\n            await this.refresh();\n            return resolve(this.debouncedProposal());\n        });\n    }\n\n    @action.bound\n    resetErrorServices() {\n        this.root_store.ui.toggleServicesErrorModal(false);\n    }\n\n    @action.bound\n    onMount() {\n        runInAction(() => {\n            this.is_trade_component_mounted = true;\n        });\n        this.onSwitchAccount(this.accountSwitcherListener);\n        return new Promise(async (resolve) => {\n            await this.refresh();\n            await this.prepareTradeStore();\n            return resolve(this.debouncedProposal());\n        });\n    }\n\n    @action.bound\n    restoreTradeChart() {\n        const smart_chart_store = this.root_store.modules.smart_chart;\n        if (smart_chart_store.trade_chart_symbol &&\n            (smart_chart_store.trade_chart_symbol !== this.symbol)) {\n            this.symbol = smart_chart_store.trade_chart_symbol;\n        }\n        if (smart_chart_store.trade_chart_granularity &&\n            (smart_chart_store.trade_chart_granularity !== smart_chart_store.granularity)) {\n            smart_chart_store.granularity = smart_chart_store.trade_chart_granularity;\n        } else {\n            smart_chart_store.granularity = 0;\n        }\n        if (smart_chart_store.trade_chart_type !== smart_chart_store.chart_type) {\n            smart_chart_store.chart_type = smart_chart_store.trade_chart_type;\n        } else {\n            smart_chart_store.chart_type = 'mountain';\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.proposal_info = {};\n        this.purchase_info = {};\n        WS.forgetAll('proposal');\n        this.resetErrorServices();\n        this.restoreTradeChart();\n        this.is_trade_component_mounted = false;\n        // clear url query string\n        window.history.pushState(null, null, window.location.pathname);\n    }\n}\n","export const setChartBarrier = (SmartChartStore, proposal_response, onBarrierChange, barrier_config) => {\n    const { barrier, barrier2, contract_type } = proposal_response.echo_req;\n    SmartChartStore.createBarriers(\n        contract_type,\n        barrier,\n        barrier2,\n        onBarrierChange,\n        barrier_config,\n    );\n};\n","import CashierStore        from './Cashier/cashier-store';\nimport ContractReplayStore from './Contract/contract-replay-store';\nimport ContractTradeStore  from './Contract/contract-trade-store';\nimport PortfolioStore      from './Portfolio/portfolio-store';\nimport ProfitTableStore    from './Profit/profit-store';\nimport SmartChartStore     from './SmartChart/smart-chart-store';\nimport StatementStore      from './Statement/statement-store';\nimport TradeStore          from './Trading/trade-store';\n\nexport default class ModulesStore {\n    constructor(root_store) {\n        this.cashier         = new CashierStore({ root_store });\n        this.contract_replay = new ContractReplayStore({ root_store });\n        this.contract_trade  = new ContractTradeStore({ root_store });\n        this.portfolio       = new PortfolioStore({ root_store });\n        this.profit_table    = new ProfitTableStore({ root_store });\n        this.smart_chart     = new SmartChartStore({ root_store });\n        this.statement       = new StatementStore({ root_store });\n        this.trade           = new TradeStore({ root_store });\n    }\n}\n","import {\n    action,\n    autorun,\n    computed,\n    observable }             from 'mobx';\nimport {\n    MAX_MOBILE_WIDTH,\n    MAX_TABLET_WIDTH }       from 'Constants/ui';\nimport { unique }            from '_common/utility';\nimport BaseStore             from './base-store';\nimport { sortNotifications } from '../App/Components/Elements/NotificationMessage';\n\nconst store_name = 'ui_store';\n\nexport default class UIStore extends BaseStore {\n    @observable is_main_drawer_on          = false;\n    @observable is_notifications_drawer_on = false;\n    @observable is_positions_drawer_on     = false;\n    @observable is_reports_visible         = false;\n\n    @observable is_cashier_modal_on     = false;\n    @observable is_dark_mode_on         = false;\n    @observable is_settings_modal_on    = false;\n    @observable is_accounts_switcher_on = false;\n\n    @observable has_only_forward_starting_contracts = false;\n\n    // Purchase Controls\n    // @observable is_purchase_confirm_on    = false;\n    @observable is_services_error_visible             = false;\n    @observable is_unsupported_contract_modal_visible = false;\n    @observable is_account_signup_modal_visible       = false;\n    // @observable is_purchase_lock_on       = false;\n\n    // SmartCharts Controls\n    // TODO: enable asset information\n    // @observable is_chart_asset_info_visible = true;\n    @observable is_chart_countdown_visible  = false;\n    @observable is_chart_layout_default     = true;\n\n    // PWA event and config\n    @observable pwa_prompt_event = null;\n\n    @observable screen_width = window.innerWidth;\n\n    @observable notification_messages = [];\n    @observable push_notifications = [];\n\n    @observable is_advanced_duration   = false;\n    @observable advanced_duration_unit = 't';\n    @observable advanced_expiry_type   = 'duration';\n    @observable simple_duration_unit   = 't';\n    @observable duration_t             = 5;\n    @observable duration_s             = 15;\n    @observable duration_m             = 3;\n    @observable duration_h             = 1;\n    @observable duration_d             = 1;\n\n    // purchase button states\n    @observable purchase_states = [ false, false ];\n\n    // app states for modal\n    @observable is_app_disabled   = false;\n    @observable is_route_modal_on = false;\n\n    // position states\n    @observable show_positions_toggle = true;\n\n    @observable active_cashier_tab = 'deposit';\n\n    getDurationFromUnit = (unit) => this[`duration_${unit}`];\n\n    constructor() {\n        const local_storage_properties = [\n            'advanced_duration_unit',\n            'is_advanced_duration',\n            'advanced_expiry_type',\n            'simple_duration_unit',\n            'duration_t',\n            'duration_s',\n            'duration_m',\n            'duration_h',\n            'duration_d',\n            'is_chart_asset_info_visible',\n            'is_chart_countdown_visible',\n            'is_chart_layout_default',\n            'is_dark_mode_on',\n            'is_positions_drawer_on',\n            'is_reports_visible',\n            // 'is_purchase_confirm_on',\n            // 'is_purchase_lock_on',\n        ];\n\n        super({ local_storage_properties, store_name });\n        window.addEventListener('resize', this.handleResize);\n        autorun(() => {\n            if (this.is_dark_mode_on) {\n                document.body.classList.remove('theme--light');\n                document.body.classList.add('theme--dark');\n            } else {\n                document.body.classList.remove('theme--dark');\n                document.body.classList.add('theme--light');\n            }\n        });\n    }\n\n    @action.bound\n    onChangeUiStore({ name, value }) {\n        if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n        this[name] = value;\n    }\n\n    @action.bound\n    handleResize() {\n        this.screen_width = window.innerWidth;\n        if (this.is_mobile) {\n            this.is_positions_drawer_on = false;\n        }\n    }\n\n    @computed\n    get is_mobile() {\n        return this.screen_width <= MAX_MOBILE_WIDTH;\n    }\n\n    @computed\n    get is_tablet() {\n        return this.screen_width <= MAX_TABLET_WIDTH;\n    }\n\n    @action.bound\n    setRouteModal() {\n        this.is_route_modal_on = true;\n    }\n\n    @action.bound\n    disableRouteModal() {\n        this.is_route_modal_on = false;\n    }\n\n    @action.bound\n    disableApp() {\n        this.is_app_disabled = true;\n    }\n\n    @action.bound\n    enableApp() {\n        this.is_app_disabled = false;\n    }\n\n    @action.bound\n    toggleAccountsDialog() {\n        this.is_accounts_switcher_on = !this.is_accounts_switcher_on;\n    }\n\n    @action.bound\n    setPurchaseState(index) {\n        this.purchase_states[index] = true;\n\n        // TODO: Find better solution in the future for hack below\n        // Force the animation to start quicker by manually assigning class to compensate for mobx getter lag\n        // Because mobx has a delay before it can receive the updated prop used to assign the animation class\n        const el_purchase_buttons = document.getElementsByClassName('btn-purchase');\n        if (el_purchase_buttons[index]) {\n            el_purchase_buttons[index].classList.add('btn-purchase--swoosh');\n        }\n        // UI/UX wants button to remain green until transition is finished and only then disable buttons\n        setTimeout(() => {\n            [].forEach.bind(el_purchase_buttons, (el) => {\n                el.classList.add('btn-purchase--disabled');\n            })();\n        }, 250);\n    }\n\n    @action.bound\n    resetPurchaseStates() {\n        this.purchase_states = [ false, false ];\n    }\n\n    @action.bound\n    toggleChartLayout() {\n        this.is_chart_layout_default = !this.is_chart_layout_default;\n    }\n\n    // TODO: enable asset information\n    // @action.bound\n    // toggleChartAssetInfo() {\n    //     this.is_chart_asset_info_visible = !this.is_chart_asset_info_visible;\n    // }\n\n    @action.bound\n    toggleChartCountdown() {\n        this.is_chart_countdown_visible = !this.is_chart_countdown_visible;\n    }\n\n    // @action.bound\n    // togglePurchaseLock() {\n    //     this.is_purchase_lock_on = !this.is_purchase_lock_on;\n    // }\n\n    // @action.bound\n    // togglePurchaseConfirmation() {\n    //     this.is_purchase_confirm_on = !this.is_purchase_confirm_on;\n    // }\n\n    @action.bound\n    toggleDarkMode() {\n        this.is_dark_mode_on = !this.is_dark_mode_on;\n        return this.is_dark_mode_on;\n    }\n\n    @action.bound\n    showPositionsFooterToggle() {\n        this.show_positions_toggle = true;\n    }\n\n    @action.bound\n    hidePositionsFooterToggle() {\n        this.show_positions_toggle = false;\n    }\n\n    @action.bound\n    toggleCashierModal(active_tab) {\n        if (/^(deposit|withdraw)$/.test(active_tab)) {\n            this.setCashierActiveTab(active_tab);\n        }\n        this.is_cashier_modal_on = !this.is_cashier_modal_on;\n    }\n\n    @action.bound\n    setCashierActiveTab(tab = 'deposit') {\n        if (this.active_cashier_tab !== tab) this.active_cashier_tab = tab;\n    }\n\n    @action.bound\n    toggleSettingsModal() {\n        this.is_settings_modal_on = !this.is_settings_modal_on;\n    }\n\n    @action.bound\n    openPositionsDrawer() { // show and hide Positions Drawer\n        this.is_positions_drawer_on = true;\n    }\n\n    @action.bound\n    togglePositionsDrawer() { // toggle Positions Drawer\n        this.is_positions_drawer_on = !this.is_positions_drawer_on;\n    }\n\n    @action.bound\n    toggleReports(is_visible) {\n        this.is_reports_visible = is_visible;\n    }\n\n    @action.bound\n    toggleServicesErrorModal(is_visible) {\n        this.is_services_error_visible = is_visible;\n    }\n\n    @action.bound\n    showMainDrawer() { // show main Drawer\n        this.is_main_drawer_on = true;\n    }\n\n    @action.bound\n    showNotificationsDrawer() { // show nofitications Drawer\n        this.is_notifications_drawer_on = true;\n    }\n\n    @action.bound\n    hideDrawers() { // hide both menu drawers\n        this.is_main_drawer_on = false;\n        this.is_notifications_drawer_on = false;\n    }\n\n    @action.bound\n    removePWAPromptEvent() {\n        this.pwa_prompt_event = null;\n    }\n\n    @action.bound\n    setPWAPromptEvent(e) {\n        this.pwa_prompt_event = e;\n    }\n\n    @action.bound\n    addNotification(notification) {\n        this.notification_messages = [...this.notification_messages, notification].sort(sortNotifications);\n    }\n\n    @action.bound\n    removeNotification(notification) {\n        const index = this.notification_messages.indexOf(notification);\n        if (index > -1) {\n            this.notification_messages.splice(index, 1);\n        }\n    }\n\n    @action.bound\n    removeAllNotifications() {\n        this.notification_messages = [];\n    }\n\n    @action.bound\n    setHasOnlyForwardingContracts(has_only_forward_starting_contracts) {\n        this.has_only_forward_starting_contracts = has_only_forward_starting_contracts;\n    }\n\n    @action.bound\n    addNotificationBar(message) {\n        this.push_notifications.push(message);\n        this.push_notifications = unique(this.push_notifications, 'msg_type');\n    }\n\n    @action.bound\n    toggleUnsupportedContractModal(state_change = !this.is_unsupported_contract_modal_visible) {\n        this.is_unsupported_contract_modal_visible = state_change;\n    }\n\n    @action.bound\n    toggleAccountSignupModal(state_change = !this.is_unsupported_contract_modal_visible) {\n        this.is_account_signup_modal_visible = state_change;\n    }\n}\n","import ClientStore  from './client-store';\nimport CommonStore  from './common-store';\nimport GTMStore     from './gtm-store';\nimport ModulesStore from './Modules';\nimport UIStore      from './ui-store';\n\nexport default class RootStore {\n    constructor() {\n        this.client  = new ClientStore(this);\n        this.common  = new CommonStore();\n        this.modules = new ModulesStore(this);\n        this.ui      = new UIStore();\n        this.gtm     = new GTMStore(this);\n    }\n}\n","import { configure }        from 'mobx';\nimport Client               from '_common/base/client_base';\nimport NetworkMonitor       from 'Services/network-monitor';\nimport OutdatedBrowser      from 'Services/outdated-browser';\nimport RootStore            from 'Stores';\nimport { setStorageEvents } from 'Utils/Events/storage';\n\nconfigure({ enforceActions: 'observed' });\n\nconst initStore = () => {\n    Client.init();\n\n    const root_store = new RootStore();\n\n    setStorageEvents(root_store);\n\n    NetworkMonitor.init(root_store);\n    OutdatedBrowser.init(root_store);\n    root_store.client.init();\n    root_store.modules.trade.init();\n\n    return root_store;\n};\n\nexport default initStore;\n","export const setStorageEvents = (root_store) => {\n    window.addEventListener('storage', (evt) => {\n        switch (evt.key) {\n            case 'active_loginid':\n                if (document.hidden) {\n                    window.location.reload();\n                }\n                break;\n            case 'verification_code':\n                if (document.hidden && root_store.ui.is_cashier_modal_on && root_store.ui.active_cashier_tab === 'withdraw') {\n                    root_store.modules.cashier.clearVerification();\n                    root_store.ui.toggleCashierModal();\n                }\n            // no default\n        }\n    });\n};\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport ReactDOM                    from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { MobxProvider }            from 'Stores/connect';\nimport ErrorBoundary               from './Components/Elements/Errors/error-boundary.jsx';\nimport AppContents                 from './Containers/Layout/app-contents.jsx';\nimport Footer                      from './Containers/Layout/footer.jsx';\nimport Header                      from './Containers/Layout/header.jsx';\nimport Lazy                        from './Containers/Lazy';\nimport Routes                      from './Containers/Routes/routes.jsx';\nimport './i18n';\n// eslint-disable-next-line import/extensions\nimport initStore                   from './app.js';\n// eslint-disable-next-line import/no-unresolved\nimport 'Sass/app.scss';\n// Check if device is touch capable\nconst isTouchDevice = 'ontouchstart' in document.documentElement;\n\nconst App = ({ root_store }) => {\n    const l = window.location;\n    const base = l.pathname.split('/')[1];\n    return (\n        <Router basename={/^\\/br_/.test(l.pathname) ? `/${base}` : null}>\n            <MobxProvider store={root_store}>\n                {\n                    root_store.ui.is_mobile || (root_store.ui.is_tablet && isTouchDevice) ?\n                        <Lazy\n                            ctor={() => import(/* webpackChunkName: \"work-in-progress\" */'./Containers/Wip')}\n                            should_load={root_store.ui.is_mobile || (root_store.ui.is_tablet && isTouchDevice)}\n                            has_progress={true}\n                        /> :\n                        <React.Fragment>\n                            <Header />\n                            <ErrorBoundary>\n                                <AppContents>\n                                    <Routes />\n                                    <Lazy\n                                        ctor={() => import(/* webpackChunkName: \"push-notification\" */'./Containers/push-notification.jsx')}\n                                        should_load={!root_store.ui.is_loading}\n                                        has_progress={false}\n                                    />\n                                </AppContents>\n                            </ErrorBoundary>\n                            <Footer />\n                            <Lazy\n                                ctor={() => import(/* webpackChunkName: \"modals\", webpackPrefetch: true */'./Containers/Modals')}\n                                should_load={true}\n                                has_progress={false}\n                            />\n                        </React.Fragment>\n                }\n            </MobxProvider>\n        </Router>\n    );\n};\n\nApp.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default App;\n\nconst root_store = initStore();\n\nconst wrapper = document.getElementById('deriv_app');\n// eslint-disable-next-line no-unused-expressions\nwrapper ? ReactDOM.render(<App root_store={root_store} />, wrapper) : false;\n","export default function register () { // Register the service worker\n    if (/* process.env.NODE_ENV === 'production' && */ 'serviceWorker' in navigator) {\n        window.addEventListener('load', () => {\n            let path_name = window.location.pathname;\n            path_name = /index\\.html/g.test(path_name) ? window.location.pathname.replace('index.html', '') : '';\n            const sw_url = `${path_name}service-worker.js`;\n            navigator.serviceWorker\n                .register(sw_url)\n                .then(registration => {\n                    registration.onupdatefound = () => {\n                        const installingWorker = registration.installing;\n                        installingWorker.onstatechange = () => {\n                            if (installingWorker.state === 'installed') {\n                                if (navigator.serviceWorker.controller) {\n                                    // At this point, the old content will have been purged and\n                                    // the fresh content will have been added to the cache.\n                                    // It's the perfect time to display a \"New content is\n                                    // available; please refresh.\" message in your web app.\n                                    console.log('New content is available; please refresh.'); // eslint-disable-line no-console\n                                } else {\n                                    // At this point, everything has been precached.\n                                    // It's the perfect time to display a\n                                    // \"Content is cached for offline use.\" message.\n                                    console.log('Content is cached for offline use.'); // eslint-disable-line no-console\n                                }\n                            }\n                        };\n                    };\n                })\n                .catch(error => {\n                    console.error('Error during service worker registration:', error); // eslint-disable-line no-console\n                });\n        });\n    }\n}\n\nexport function unregister () {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import classNames           from 'classnames';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport ReactDOM             from 'react-dom';\nimport posed, { PoseGroup } from 'react-pose';\nimport Icon                 from 'Assets/icon.jsx';\n\nconst FadeIn = posed.span({\n    enter: {\n        opacity   : 1,\n        transition: {\n            duration: 150,\n        },\n    },\n    exit: {\n        opacity   : 0,\n        transition: {\n            duration: 150,\n        },\n    },\n});\n\nclass PopoverBubble extends React.PureComponent {\n    calculatePosition = () => {\n        const { alignment, target_rectangle, margin = 0 } = this.props;\n\n        switch (alignment) {\n            case 'top': return {\n                left     : (target_rectangle.width / 2) + target_rectangle.left,\n                bottom   : (window.innerHeight - target_rectangle.top) + margin,\n                transform: 'translateX(-50%)',\n            };\n            case 'bottom': return {\n                left     : (target_rectangle.width / 2) + target_rectangle.left,\n                top      : target_rectangle.bottom + margin,\n                transform: 'translateX(-50%)',\n            };\n            case 'left': return {\n                right    : (window.innerWidth - target_rectangle.left) + margin,\n                top      : (target_rectangle.height / 2) + target_rectangle.top,\n                transform: 'translateY(-50%)',\n            };\n            case 'right': return {\n                left     : target_rectangle.right + margin,\n                top      : (target_rectangle.height / 2) + target_rectangle.top,\n                transform: 'translateY(-50%)',\n            };\n            default: return {\n                left: target_rectangle.left,\n                top : target_rectangle.top,\n            };\n        }\n    };\n\n    render() {\n        const {\n            alignment,\n            className,\n            has_error,\n            icon,\n            id,\n            is_open,\n            message,\n            target_rectangle,\n        } = this.props;\n\n        if (!target_rectangle) return null;\n\n        const popover_bubble = (\n            <PoseGroup>\n                { is_open &&\n                <FadeIn key='fade_in' initialPose='exit' style={{ position: 'fixed', zIndex: 999 }}>\n                    <span\n                        style={ target_rectangle ? this.calculatePosition() : {}}\n                        data-popover-pos={alignment}\n                        className={classNames(\n                            className,\n                            'popover__bubble',\n                            { 'popover__bubble--error': has_error },\n                        )}\n                        id={id}\n                    >\n                        { icon === 'info' &&\n                            <i className='popover__bubble__icon'>\n                                <Icon icon='IconInfoBlue' />\n                            </i>\n                        }\n\n                        <span className='popover__bubble__text'>\n                            { message }\n                        </span>\n                        <span className='popover__bubble__arrow' />\n                    </span>\n                </FadeIn>\n                }\n            </PoseGroup>\n        );\n\n        return ReactDOM.createPortal(\n            popover_bubble,\n            document.getElementById('deriv_app')\n        );\n    }\n}\n\nPopoverBubble.propTypes = {\n    alignment       : PropTypes.string,\n    children        : PropTypes.node,\n    className       : PropTypes.string,\n    has_error       : PropTypes.bool,\n    icon            : PropTypes.string,\n    id              : PropTypes.string,\n    is_open         : PropTypes.bool,\n    margin          : PropTypes.number,\n    message         : PropTypes.string.isRequired,\n    target_rectangle: PropTypes.object,\n};\n\nexport default PopoverBubble;\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport Icon          from 'Assets/icon.jsx';\nimport PopoverBubble from './popover-bubble.jsx';\n\nclass Popover extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_open         : false,\n            target_rectangle: null,\n        };\n        this.target_reference = React.createRef();\n    }\n\n    componentDidMount() {\n        this.setState({\n            is_open         : this.props.has_error,\n            target_rectangle: this.target_reference.current.getBoundingClientRect(),\n        });\n    }\n\n    toggleOpen = () => {\n        this.setState({\n            is_open         : Boolean(this.props.message),\n            target_rectangle: this.target_reference.current.getBoundingClientRect(),\n        });\n    }\n\n    toggleClose = () => this.setState({ is_open: false });\n\n    render() {\n        const {\n            alignment,\n            children,\n            classNameBubble,\n            classNameTarget,\n            classNameTargetIcon,\n            disable_target_icon,\n            has_error,\n            icon,\n            id,\n            margin,\n            message,\n        } = this.props;\n\n        const icon_class_name = classNames(classNameTargetIcon, icon);\n        return (\n            <div\n                className='popover'\n                id={id}\n                onMouseEnter={this.toggleOpen}\n                onMouseLeave={this.toggleClose}\n            >\n                <div className={classNames(classNameTarget, 'popover__target')} ref={this.target_reference}>\n                    { !disable_target_icon &&\n                        <i className={message ? 'popover__target__icon' : 'popover__target__icon--disabled'}>\n                            {(icon === 'info')     && <Icon icon='IconInfoOutline' className={icon_class_name} /> }\n                            {(icon === 'question') && <Icon icon='IconQuestion'    className={icon_class_name} />}\n                            {(icon === 'dot')      && <Icon icon='IconRedDot'      className={icon_class_name} />}\n                        </i>\n                    }\n\n                    { children }\n                </div>\n\n                <PopoverBubble\n                    alignment={alignment}\n                    className={classNameBubble}\n                    has_error={has_error}\n                    icon={icon}\n                    id={`${id}_bubble`}\n                    is_open={this.state.is_open}\n                    target_rectangle={this.state.target_rectangle}\n                    margin={margin}\n                    message={message}\n                />\n            </div>\n        );\n    }\n}\n\nPopover.propTypes = {\n    alignment          : PropTypes.string,\n    children           : PropTypes.node,\n    classNameBubble    : PropTypes.string,\n    classNameTarget    : PropTypes.string,\n    classNameTargetIcon: PropTypes.string,\n    disable_target_icon: PropTypes.bool,\n    has_error          : PropTypes.bool,\n    icon               : PropTypes.string,\n    id                 : PropTypes.string,\n    margin             : PropTypes.number,\n    message            : PropTypes.string,\n};\n\nexport default Popover;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Fieldset = ({\n    children,\n    className,\n    header,\n    is_center,\n    onMouseEnter,\n    onMouseLeave,\n}) => {\n    const fieldset_header_class = classNames('trade-container__fieldset-header', is_center ? 'center-text' : '');\n    const fieldset_info_class   = classNames('trade-container__fieldset-info', !is_center && 'trade-container__fieldset-info--left');\n\n    return (\n        <fieldset className={className} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            {!!header &&\n                <div className={fieldset_header_class}>\n                    <span className={fieldset_info_class}>{header}</span>\n                </div>\n            }\n            {children}\n        </fieldset>\n    );\n};\n\n// ToDo:\n// - Refactor Last Digit to keep the children as array type.\n//   Currently last_digit.jsx returns object (React-Element) as 'children'\n//   props type.\nFieldset.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    className   : PropTypes.string,\n    header      : PropTypes.string,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n};\n\nexport default Fieldset;\n","import ServerTime   from '_common/base/server_time';\nimport { toMoment } from 'Utils/Date';\n\nexport const buildForwardStartingConfig = (contract, forward_starting_dates) => {\n    const forward_starting_config = [];\n\n    if ((contract.forward_starting_options || []).length) {\n        contract.forward_starting_options.forEach(option => {\n            const duplicated_option = forward_starting_config.find(opt => opt.value === parseInt(option.date));\n            const current_session   = { open: toMoment(option.open), close: toMoment(option.close) };\n            if (duplicated_option) {\n                duplicated_option.sessions.push(current_session);\n            } else {\n                forward_starting_config.push({\n                    text    : toMoment(option.date).format('ddd - DD MMM, YYYY'),\n                    value   : parseInt(option.date),\n                    sessions: [current_session],\n                });\n            }\n        });\n    }\n\n    return forward_starting_config.length ? forward_starting_config : forward_starting_dates;\n};\n\n// returns false if same as now\nconst isBeforeDate = (compare_moment, start_moment, should_only_check_hour) => {\n    const now_moment = toMoment(start_moment);\n    if (should_only_check_hour) {\n        now_moment.minute(0).second(0);\n    }\n    return compare_moment.isBefore(now_moment) && now_moment.unix() !== compare_moment.unix();\n};\n\nexport const isSessionAvailable = (\n    sessions               = [],\n    compare_moment         = toMoment(ServerTime.get()),\n    start_moment           = toMoment(ServerTime.get()),\n    should_only_check_hour = false,\n) => (\n    !isBeforeDate(compare_moment, ServerTime.get(), should_only_check_hour) &&\n    !isBeforeDate(compare_moment, start_moment, should_only_check_hour) &&\n        (!sessions.length ||\n            !!sessions.find(session =>\n                compare_moment.isBetween(session.open, session.close, should_only_check_hour ? 'hour' : null, '[]')))\n);\n","const Client              = require('./client_base');\nconst getElementById      = require('../common_functions').getElementById;\nconst getLanguage         = require('../language').get;\nconst isMobile            = require('../os_detect').isMobile;\nconst isStorageSupported  = require('../storage').isStorageSupported;\nconst LocalStore          = require('../storage').LocalStore;\nconst urlForCurrentDomain = require('../url').urlForCurrentDomain;\nconst domain_app_ids      = require('../../config').domain_app_ids;\nconst getAppId            = require('../../config').getAppId;\n\nconst Login = (() => {\n    const redirectToLogin = () => {\n        if (!Client.isLoggedIn() && !isLoginPages() && isStorageSupported(sessionStorage)) {\n            sessionStorage.setItem('redirect_url', window.location.href);\n            window.location.href = loginUrl();\n        }\n    };\n\n    const loginUrl = () => {\n        const server_url         = localStorage.getItem('config.server_url');\n        const language           = getLanguage();\n        const signup_device      = LocalStore.get('signup_device') || (isMobile() ? 'mobile' : 'desktop');\n        const date_first_contact = LocalStore.get('date_first_contact');\n        const marketing_queries  = `&signup_device=${signup_device}${date_first_contact ? `&date_first_contact=${date_first_contact}` : ''}`;\n        const default_binary_url = `https://oauth.binary.com/oauth2/authorize?app_id=${getAppId()}&l=${language}${marketing_queries}`;\n\n        if (server_url && /qa/.test(server_url)) {\n            return `https://${server_url}/oauth2/authorize?app_id=${getAppId()}&l=${language}${marketing_queries}`;\n        }\n        if (getAppId === domain_app_ids['deriv.app']) {\n            return default_binary_url;\n        }\n\n        return urlForCurrentDomain(default_binary_url);\n    };\n\n    // TODO: update this to handle logging into /app/ url\n    const isLoginPages = () => /logged_inws|redirect/i.test(window.location.pathname);\n\n    const socialLoginUrl = brand => (`${loginUrl()}&social_signup=${brand}`);\n\n    const initOneAll = () => {\n        ['google', 'facebook'].forEach(provider => {\n            const el_button = getElementById(`#button_${provider}`);\n            el_button.removeEventListener('click');\n            el_button.addEventListener('click', (e) => {\n                e.preventDefault();\n                window.location.href = socialLoginUrl(provider);\n            });\n        });\n    };\n\n    return {\n        redirectToLogin,\n        isLoginPages,\n        initOneAll,\n    };\n})();\n\nmodule.exports = Login;\n","import { getLastTickFromTickStream } from './logic';\n\nexport const isDigitContract = (contract_type) => /digit/i.test(contract_type);\n\nexport const getDigitInfo = (digits_info, contract_info) => {\n    const { tick_stream } = contract_info;\n    const { tick_display_value, epoch } = getLastTickFromTickStream(tick_stream);\n\n    if (!tick_display_value || !epoch) return {}; // filter out empty responses\n\n    const current = (epoch in digits_info) ? {} : // filter out duplicated responses\n        createDigitInfo(tick_display_value, epoch);\n\n    return {\n        ...current,\n    };\n};\n\nconst createDigitInfo = (spot, spot_time) => {\n    const digit = +`${spot}`.slice(-1);\n\n    return {\n        [+spot_time]: {\n            digit,\n            spot,\n        },\n    };\n};\n","import React     from 'react';\nimport PropTypes from 'prop-types';\n\nclass Icon extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        /* When adding a new icon, arrange it by following the ascending file system arrangement */\n        this.icons = {\n            // Common\n            IconArrowBold         : React.lazy(() => import('./Common/icon-arrow-bold.jsx')),\n            IconArrow             : React.lazy(() => import('./Common/icon-arrow.jsx')),\n            IconBack              : React.lazy(() => import('./Common/icon-back.jsx')),\n            IconCalendarToday     : React.lazy(() => import('./Common/icon-calendar-today.jsx')),\n            IconCalendar          : React.lazy(() => import('./Common/icon-calendar.jsx')),\n            IconChevronDoubleLeft : React.lazy(() => import('./Common/icon-chevron-double-left.jsx')),\n            IconChevronDoubleRight: React.lazy(() => import('./Common/icon-chevron-double-right.jsx')),\n            IconChevronLeft       : React.lazy(() => import('./Common/icon-chevron-left.jsx')),\n            IconChevronRight      : React.lazy(() => import('./Common/icon-chevron-right.jsx')),\n            IconClear             : React.lazy(() => import('./Common/icon-clear.jsx')),\n            IconClock             : React.lazy(() => import('./Common/icon-clock.jsx')),\n            IconClose             : React.lazy(() => import('./Common/icon-close.jsx')),\n            IconCountryFlag       : React.lazy(() => import('./Common/icon-country-flag.jsx')),\n            IconDanger            : React.lazy(() => import('./Common/icon-danger.jsx')),\n            IconDeposit           : React.lazy(() => import('./Common/icon-deposit.jsx')), // TODO: update big when design is ready\n            IconDepositSmall      : React.lazy(() => import('./Common/icon-deposit-small.jsx')),\n            IconExclamation       : React.lazy(() => import('./Common/icon-exclamation.jsx')),\n            IconFlag              : React.lazy(() => import('./Common/icon-flag.jsx')),\n            IconInfoBlue          : React.lazy(() => import('./Common/icon-info-blue.jsx')),\n            IconInfoOutline       : React.lazy(() => import('./Common/icon-info-outline.jsx')),\n            IconInformation       : React.lazy(() => import('./Common/icon-information.jsx')),\n            IconMinimize          : React.lazy(() => import('./Common/icon-minimize.jsx')),\n            IconMinus             : React.lazy(() => import('./Common/icon-minus.jsx')),\n            IconPlus              : React.lazy(() => import('./Common/icon-plus.jsx')),\n            IconQuestion          : React.lazy(() => import('./Common/icon-question.jsx')),\n            IconRedDot            : React.lazy(() => import('./Common/icon-red-dot.jsx')),\n            IconSuccess           : React.lazy(() => import('./Common/icon-success.jsx')),\n            IconWarning           : React.lazy(() => import('./Common/icon-warning.jsx')),\n            IconWip               : React.lazy(() => import('./Common/icon-wip.jsx')),\n            IconWithdrawal        : React.lazy(() => import('./Common/icon-withdrawal.jsx')), // TODO: update big when design is ready\n            IconWithdrawalSmall   : React.lazy(() => import('./Common/icon-withdrawal-small.jsx')),\n\n            // Contract\n            ContractIconClose: React.lazy(() => import('./Contract/icon-close.jsx')),\n            IconEndTime      : React.lazy(() => import('./Contract/icon-end-time.jsx')),\n            ContractIconFlag : React.lazy(() => import('./Contract/icon-flag.jsx')),\n            IconStartTime    : React.lazy(() => import('./Contract/icon-start-time.jsx')),\n            IconTick         : React.lazy(() => import('./Contract/icon-tick.jsx')),\n\n            // Cashier\n            IconAuthenticateWithdrawals: React.lazy(() => import('./Cashier/icon-authenticate-withdrawals.jsx')),\n            IconEmailSent              : React.lazy(() => import('./Cashier/icon-email-sent.jsx')),\n\n            // Modal\n            ModalIconClose: React.lazy(() => import('./Modal/icon-close.jsx')),\n\n            // Footer\n            IconMaximize : React.lazy(() => import('./Footer/icon-maximize.jsx')),\n            IconPositions: React.lazy(() => import('./Footer/icon-positions.jsx')),\n            IconSettings : React.lazy(() => import('./Footer/icon-settings.jsx')),\n\n            // Header\n            IconAccountsCurrency: React.lazy(() => import('./Header/AccountsCurrency/icon_accounts_currency.jsx')),\n            IconLogout          : React.lazy(() => import('./Header/Drawer/icon-logout.jsx')),\n            IconBell            : React.lazy(() => import('./Header/NavBar/icon-bell.jsx')),\n            IconCashier         : React.lazy(() => import('./Header/NavBar/icon-cashier.jsx')),\n            IconDeriv           : React.lazy(() => import('./Header/NavBar/icon-deriv.jsx')),\n            IconHamburger       : React.lazy(() => import('./Header/NavBar/icon-hamburger.jsx')),\n            IconPortfolio       : React.lazy(() => import('./Header/NavBar/icon-portfolio.jsx')),\n            IconReports         : React.lazy(() => import('./Header/NavBar/icon-reports.jsx')),\n            IconTrade           : React.lazy(() => import('./Header/NavBar/icon-trade.jsx')),\n\n            // Reports\n            IconDemo                : React.lazy(() => import('./Reports/icon-demo.jsx')),\n            IconOpenPositions       : React.lazy(() => import('./Reports/icon-open-positions.jsx')),\n            IconProfitTable         : React.lazy(() => import('./Reports/icon-profit-table.jsx')),\n            IconStatement           : React.lazy(() => import('./Reports/icon-statement.jsx')),\n            IconCalendarForwardToday: React.lazy(() => import('./Reports/ic-calendar-forwardtoday.jsx')),\n\n            // Settings\n            IconCharts  : React.lazy(() => import('./Settings/icon-charts.jsx')),\n            IconLanguage: React.lazy(() => import('./Settings/icon-language.jsx')),\n            IconPurchase: React.lazy(() => import('./Settings/icon-purchase.jsx')),\n            IconTheme   : React.lazy(() => import('./Settings/icon-theme.jsx')),\n\n            // Statement\n            IconBuy   : React.lazy(() => import('./Statement/icon-buy.jsx')),\n            IconPayout: React.lazy(() => import('./Statement/icon-payout.jsx')),\n            IconSell  : React.lazy(() => import('./Statement/icon-sell.jsx')),\n            IconWallet: React.lazy(() => import('./Statement/icon-wallet.jsx')),\n\n            // Trading\n            IconBarrierDown   : React.lazy(() => import('./Trading/Barriers/icon-barrier-down.jsx')),\n            IconBarrierUp     : React.lazy(() => import('./Trading/Barriers/icon-barrier-up.jsx')),\n            IconTradeCategory : React.lazy(() => import('./Trading/Categories/icon-trade-categories.jsx')),\n            TradeCategoriesGIF: React.lazy(() => import('./Trading/Categories/trade-categories-gif.jsx')),\n            TradeCategories   : React.lazy(() => import('./Trading/Categories/trade-categories.jsx')),\n            IconTradeType     : React.lazy(() => import('./Trading/Types/icon-trade-types.jsx')),\n            IconLock          : React.lazy(() => import('./Trading/icon-lock.jsx')),\n            IconPriceMove     : React.lazy(() => import('./Trading/icon-price-move.jsx')),\n        };\n    }\n\n    render() {\n        const options = {\n            category     : this.props.category,\n            className    : this.props.className,\n            classNamePath: this.props.classNamePath,\n            classNameRect: this.props.classNameRect,\n            is_dark_theme: this.props.is_dark_theme,\n            is_disabled  : this.props.is_disabled,\n            onClick      : this.props.onClick,\n            onMouseEnter : this.props.onMouseEnter,\n            onMouseLeave : this.props.onMouseLeave,\n            type         : this.props.type,\n        };\n\n        const IconLazy = this.icons[this.props.icon];\n        if (!IconLazy) return <div />;\n\n        return (\n            <React.Suspense fallback={<div />}>\n                <IconLazy {...options} />\n            </React.Suspense>\n        );\n    }\n}\n\nIcon.propTypes = {\n    category     : PropTypes.string,\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n    classNameRect: PropTypes.string,\n    icon         : PropTypes.string,\n    is_dark_theme: PropTypes.bool,\n    is_disabled  : PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n    onClick      : PropTypes.func,\n    type         : PropTypes.string,\n};\n\nexport default Icon;\n","// const Cookies = require('js-cookie');\n\n/*\n * Configuration values needed in js codes\n *\n * NOTE:\n * Please use the following command to avoid accidentally committing personal changes\n * git update-index --assume-unchanged src/javascript/config.js\n *\n */\nconst domain_app_ids = { // these domains as supported \"production domains\"\n    'deriv.app': 16929,\n};\n\nconst getCurrentProductionDomain = () => (\n    !/^staging\\./.test(window.location.hostname) &&\n    Object.keys(domain_app_ids).find(domain => (new RegExp(`.${domain}$`, 'i').test(window.location.hostname)))\n);\n\nconst isProduction = () => {\n    const all_domains = Object.keys(domain_app_ids).map(domain => `www\\\\.${domain.replace('.', '\\\\.')}`);\n    return new RegExp(`^(${all_domains.join('|')})$`, 'i').test(window.location.hostname);\n};\n\nconst binary_desktop_app_id = 14473;\n\nconst getAppId = () => {\n    let app_id = null;\n    const user_app_id   = ''; // you can insert Application ID of your registered application here\n    const config_app_id = window.localStorage.getItem('config.app_id');\n    if (config_app_id) {\n        app_id = config_app_id;\n    } else if (/desktop-app/i.test(window.location.href) || window.localStorage.getItem('config.is_desktop_app')) {\n        window.localStorage.removeItem('config.default_app_id');\n        window.localStorage.setItem('config.is_desktop_app', 1);\n        app_id = binary_desktop_app_id;\n    } else if (user_app_id.length) {\n        window.localStorage.setItem('config.default_app_id', user_app_id);\n        app_id = user_app_id;\n    } else if (/staging\\.deriv\\.app/i.test(window.location.hostname)) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 16303; // it's being used in endpoint chrome extension - please do not remove\n    } else if (/localhost/i.test(window.location.hostname)) {\n        app_id = 17044;\n    } else {\n        window.localStorage.removeItem('config.default_app_id');\n        const current_domain = getCurrentProductionDomain();\n        app_id = domain_app_ids[current_domain] || 16929;\n    }\n    return app_id;\n};\n\nconst getSocketURL = () => {\n    let server_url = window.localStorage.getItem('config.server_url');\n    if (!server_url) {\n        // const to_green_percent = { real: 100, virtual: 0, logged_out: 0 }; // default percentage\n        // const category_map     = ['real', 'virtual', 'logged_out'];\n        // const percent_values   = Cookies.get('connection_setup'); // set by GTM\n        //\n        // // override defaults by cookie values\n        // if (percent_values && percent_values.indexOf(',') > 0) {\n        //     const cookie_percents = percent_values.split(',');\n        //     category_map.map((cat, idx) => {\n        //         if (cookie_percents[idx] && !isNaN(cookie_percents[idx])) {\n        //             to_green_percent[cat] = +cookie_percents[idx].trim();\n        //         }\n        //     });\n        // }\n\n        // let server = 'blue';\n        // if (/www\\.binary\\.com/i.test(window.location.hostname)) {\n        //     const loginid = window.localStorage.getItem('active_loginid');\n        //     let client_type = category_map[2];\n        //     if (loginid) {\n        //         client_type = /^VRT/.test(loginid) ? category_map[1] : category_map[0];\n        //     }\n        //\n        //     const random_percent = Math.random() * 100;\n        //     if (random_percent < to_green_percent[client_type]) {\n        //         server = 'green';\n        //     }\n        // }\n\n        // TODO: in order to use connection_setup config, uncomment the above section and remove next lines\n\n        const loginid       = window.localStorage.getItem('active_loginid');\n        const is_real       = loginid && !/^VRT/.test(loginid);\n        const server        = isProduction() && is_real ? 'green' : 'blue';\n\n        server_url = `${server}.binaryws.com`;\n    }\n    return `wss://${server_url}/websockets/v3`;\n};\n\nmodule.exports = {\n    domain_app_ids,\n    getCurrentProductionDomain,\n    isProduction,\n    getAppId,\n    getSocketURL,\n};\n","import { localize } from 'App/i18n';\n\nexport const getMarketNamesMap = () => ({\n    FRXAUDCAD : localize('AUD/CAD'),\n    FRXAUDCHF : localize('AUD/CHF'),\n    FRXAUDJPY : localize('AUD/JPY'),\n    FRXAUDNZD : localize('AUD/NZD'),\n    FRXAUDPLN : localize('AUD/PLN'),\n    FRXAUDUSD : localize('AUD/USD'),\n    FRXBROUSD : localize('Oil/USD'),\n    FRXEURAUD : localize('EUR/AUD'),\n    FRXEURCAD : localize('EUR/CAD'),\n    FRXEURCHF : localize('EUR/CHF'),\n    FRXEURGBP : localize('EUR/GBP'),\n    FRXEURJPY : localize('EUR/JPY'),\n    FRXEURNZD : localize('EUR/NZD'),\n    FRXEURUSD : localize('EUR/USD'),\n    FRXGBPAUD : localize('GBP/AUD'),\n    FRXGBPCAD : localize('GBP/CAD'),\n    FRXGBPCHF : localize('GBP/CHF'),\n    FRXGBPJPY : localize('GBP/JPY'),\n    FRXGBPNOK : localize('GBP/NOK'),\n    FRXGBPUSD : localize('GBP/USD'),\n    FRXNZDJPY : localize('NZD/JPY'),\n    FRXNZDUSD : localize('NZD/USD'),\n    FRXUSDCAD : localize('USD/CAD'),\n    FRXUSDCHF : localize('USD/CHF'),\n    FRXUSDJPY : localize('USD/JPY'),\n    FRXUSDNOK : localize('USD/NOK'),\n    FRXUSDPLN : localize('USD/PLN'),\n    FRXUSDSEK : localize('USD/SEK'),\n    FRXXAGUSD : localize('Silver/USD'),\n    FRXXAUUSD : localize('Gold/USD'),\n    FRXXPDUSD : localize('Palladium/USD'),\n    FRXXPTUSD : localize('Platinum/USD'),\n    OTC_AEX   : localize('Dutch Index'),\n    OTC_AS51  : localize('Australian Index'),\n    OTC_DJI   : localize('Wall Street Index'),\n    OTC_FCHI  : localize('French Index'),\n    OTC_FTSE  : localize('UK Index'),\n    OTC_GDAXI : localize('German Index'),\n    OTC_HSI   : localize('Hong Kong Index'),\n    OTC_IBEX35: localize('Spanish Index'),\n    OTC_N225  : localize('Japanese Index'),\n    OTC_NDX   : localize('US Tech Index'),\n    OTC_SPC   : localize('US Index'),\n    OTC_SSMI  : localize('Swiss Index'),\n    OTC_SX5E  : localize('Euro 50 Index'),\n    R_10      : localize('Volatility 10 Index'),\n    R_25      : localize('Volatility 25 Index'),\n    R_50      : localize('Volatility 50 Index'),\n    R_75      : localize('Volatility 75 Index'),\n    R_100     : localize('Volatility 100 Index'),\n    RDBEAR    : localize('Bear Market Index'),\n    RDBULL    : localize('Bull Market Index'),\n    WLDAUD    : localize('AUD Index'),\n    WLDEUR    : localize('EUR Index'),\n    WLDGBP    : localize('GBP Index'),\n    WLDUSD    : localize('USD Index'),\n});\n\nexport const getUnsupportedContracts = () => ({\n    EXPIRYMISS: {\n        name    : localize('Ends Outside'),\n        position: 'top',\n    },\n    EXPIRYRANGE: {\n        name    : localize('Ends Between'),\n        position: 'bottom',\n    },\n    RANGE: {\n        name    : localize('Stays Between'),\n        position: 'top',\n    },\n    UPORDOWN: {\n        name    : localize('Goes Outside'),\n        position: 'bottom',\n    },\n    RESETCALL: {\n        name    : localize('Reset Call'),\n        position: 'top',\n    },\n    RESETPUT: {\n        name    : localize('Reset Put'),\n        position: 'bottom',\n    },\n    TICKHIGH: {\n        name    : localize('High Tick'),\n        position: 'top',\n    },\n    TICKLOW: {\n        name    : localize('Low Tick'),\n        position: 'bottom',\n    },\n    ASIANU: {\n        name    : localize('Asian Up'),\n        position: 'top',\n    },\n    ASIAND: {\n        name    : localize('Asian Down'),\n        position: 'bottom',\n    },\n    LBFLOATCALL: {\n        name    : localize('Close-Low'),\n        position: 'top',\n    },\n    LBFLOATPUT: {\n        name    : localize('High-Close'),\n        position: 'top',\n    },\n    LBHIGHLOW: {\n        name    : localize('High-Low'),\n        position: 'top',\n    },\n    CALLSPREAD: {\n        name    : localize('Call Spread'),\n        position: 'top',\n    },\n    PUTSPREAD: {\n        name    : localize('Put Spread'),\n        position: 'bottom',\n    },\n    RUNHIGH: {\n        name    : localize('Only Ups'),\n        position: 'top',\n    },\n    RUNLOW: {\n        name    : localize('Only Downs'),\n        position: 'bottom',\n    },\n});\n\nexport const getSupportedContracts = is_high_low => ({\n    CALL: {\n        name    : is_high_low ?  localize('Higher') : localize('Rise'),\n        position: 'top',\n    },\n    PUT: {\n        name    : is_high_low ? localize('Lower') : localize('Fall'),\n        position: 'bottom',\n    },\n    CALLE: {\n        name    : localize('Rise'),\n        position: 'top',\n    },\n    PUTE: {\n        name    : localize('Fall'),\n        position: 'bottom',\n    },\n    DIGITMATCH: {\n        name    : localize('Matches'),\n        position: 'top',\n    },\n    DIGITDIFF: {\n        name    : localize('Differs'),\n        position: 'bottom',\n    },\n    DIGITEVEN: {\n        name    : localize('Even'),\n        position: 'top',\n    },\n    DIGITODD: {\n        name    : localize('Odd'),\n        position: 'bottom',\n    },\n    DIGITOVER: {\n        name    : localize('Over'),\n        position: 'top',\n    },\n    DIGITUNDER: {\n        name    : localize('Under'),\n        position: 'bottom',\n    },\n    ONETOUCH: {\n        name    : localize('Touch'),\n        position: 'top',\n    },\n    NOTOUCH: {\n        name    : localize('No Touch'),\n        position: 'bottom',\n    },\n});\n\nexport const getContractConfig = is_high_low => ({\n    ...getSupportedContracts(is_high_low),\n    ...getUnsupportedContracts(),\n});\n\nexport const getContractTypeDisplay  = (\n    type,\n    is_high_low = false) => (\n    getContractConfig(is_high_low)[type] ? getContractConfig(is_high_low)[type.toUpperCase()].name : ''\n);\n\nexport const getContractTypePosition = (\n    type,\n    is_high_low = false) => (\n    getContractConfig(is_high_low)[type] ? getContractConfig(is_high_low)[type.toUpperCase()].position : 'top'\n);\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { formatMoney } from '_common/base/currency_base';\n\nconst Money = ({\n    amount,\n    className,\n    currency = 'USD',\n    has_sign,\n    is_formatted = true,\n}) => {\n    let sign = '';\n    if (+amount && (amount < 0 || has_sign)) {\n        sign = amount > 0 ? '+' : '-';\n    }\n\n    const abs_value = Math.abs(amount);\n    const final_amount = is_formatted ? formatMoney(currency, abs_value, true) : abs_value;\n\n    return (\n        <React.Fragment>\n            {has_sign && sign}\n            <span className={classNames(className, 'symbols', `symbols--${currency.toLowerCase()}`)} />\n            {final_amount}\n        </React.Fragment>\n    );\n};\n\nMoney.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className   : PropTypes.string,\n    currency    : PropTypes.string,\n    has_sign    : PropTypes.bool,\n    is_formatted: PropTypes.bool,\n};\n\nexport default Money;\n","import { localize } from 'App/i18n';\n\nexport const month_headers = {\n    Jan: localize('Jan'),\n    Feb: localize('Feb'),\n    Mar: localize('Mar'),\n    Apr: localize('Apr'),\n    May: localize('May'),\n    Jun: localize('Jun'),\n    Jul: localize('Jul'),\n    Aug: localize('Aug'),\n    Sep: localize('Sep'),\n    Oct: localize('Oct'),\n    Nov: localize('Nov'),\n    Dec: localize('Dec'),\n};\n\nexport const week_headers = {\n    Monday   : localize('Monday'),\n    Tuesday  : localize('Tuesday'),\n    Wednesday: localize('Wednesday'),\n    Thursday : localize('Thursday'),\n    Friday   : localize('Friday'),\n    Saturday : localize('Saturday'),\n    Sunday   : localize('Sunday'),\n};\n\nexport const week_headers_abbr = {\n    Monday   : localize('M'),\n    Tuesday  : localize('T'),\n    Wednesday: localize('W'),\n    Thursday : localize('T'),\n    Friday   : localize('F'),\n    Saturday : localize('S'),\n    Sunday   : localize('S'),\n};\n\nexport const getDaysOfTheWeek = (day) => {\n    const days_of_the_week = {\n        'Mondays'   : 1,\n        'Tuesdays'  : 2,\n        'Wednesdays': 3,\n        'Thursdays' : 4,\n        'Fridays'   : 5,\n        'Saturdays' : 6,\n        'Sundays'   : 0,\n    };\n\n    return days_of_the_week[day];\n};\n","const extend = require('extend');\nrequire('./lib/polyfills/element.matches');\n\nconst template = (string, content) => {\n    let to_replace = content;\n    if (content && !Array.isArray(content)) {\n        to_replace = [content];\n    }\n    return string.replace(/\\[_(\\d+)]/g, (s, index) => to_replace[(+index) - 1]);\n};\n\nconst isEmptyObject = (obj) => {\n    let is_empty = true;\n    if (obj && obj instanceof Object) {\n        Object.keys(obj).forEach((key) => {\n            if (Object.prototype.hasOwnProperty.call(obj, key)) is_empty = false;\n        });\n    }\n    return is_empty;\n};\n\nconst cloneObject = obj => (!isEmptyObject(obj) ? extend(true, Array.isArray(obj) ? [] : {}, obj) : obj);\n\nconst isDeepEqual = (a, b) => {\n    if (typeof a !== typeof b) {\n        return false;\n    } else if (Array.isArray(a)) {\n        return isEqualArray(a, b);\n    } else if (a && b && typeof a === 'object') {\n        return isEqualObject(a, b);\n    }\n    // else\n    return a === b;\n};\n\nconst isEqualArray = (arr1, arr2) => (\n    arr1 === arr2 ||\n    (\n        arr1.length === arr2.length &&\n        arr1.every((value, idx) => isDeepEqual(value, arr2[idx]))\n    )\n);\n\nconst isEqualObject = (obj1, obj2) => (\n    obj1 === obj2 ||\n    (\n        Object.keys(obj1).length === Object.keys(obj2).length &&\n        Object.keys(obj1).every(key => isDeepEqual(obj1[key], obj2[key]))\n    )\n);\n\n// Filters out duplicates in an array of objects by key\nconst unique = (array, key) => array.filter((e, idx) =>\n    array.findIndex((a, i) => a[key] ? a[key] === e[key] : i === idx) === idx);\n\nconst getPropertyValue = (obj, k) => {\n    let keys = k;\n    if (!Array.isArray(keys)) keys = [keys];\n    if (!isEmptyObject(obj) && keys[0] in obj && keys && keys.length > 1) {\n        return getPropertyValue(obj[keys[0]], keys.slice(1));\n    }\n    // else return clone of object to avoid overwriting data\n    return obj ? cloneObject(obj[keys[0]]) : undefined;\n};\n\n/**\n * Creates a DOM element and adds any attributes to it.\n *\n * @param {String} tag_name: the tag to create, e.g. 'div', 'a', etc\n * @param {Object} attributes: all the attributes to assign, e.g. { id: '...', class: '...', html: '...', ... }\n * @return the created DOM element\n */\nconst createElement = (tag_name, attributes = {}) => {\n    const el = document.createElement(tag_name);\n    Object.keys(attributes).forEach((attr) => {\n        const value = attributes[attr];\n        if (attr === 'text') {\n            el.textContent = value;\n        } else if (attr === 'html') {\n            el.html(value);\n        } else {\n            el.setAttribute(attr, value);\n        }\n    });\n    return el;\n};\n\nlet static_hash;\nconst getStaticHash = () => {\n    static_hash = static_hash || (document.querySelector('script[src*=\"main\"]').getAttribute('src') || '').split('.')[1];\n    return static_hash;\n};\n\nclass PromiseClass {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.reject  = reject;\n            this.resolve = resolve;\n        });\n    }\n}\n\nmodule.exports = {\n    template,\n    isEmptyObject,\n    cloneObject,\n    isDeepEqual,\n    unique,\n    getPropertyValue,\n    createElement,\n    getStaticHash,\n    PromiseClass,\n};\n","import { toMoment } from 'Utils/Date';\n\nexport const getDecade = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(9, 'years').year()}`;\n\nexport const getCentury = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(99, 'years').year()}`;\n","export *                   from './logout';\nexport BinarySocketGeneral from './socket-general';\nexport WS                  from './ws-methods';\n","import { matchPath } from 'react-router';\nimport routes        from 'Constants/routes';\n\nexport const normalizePath = (path) => /^\\//.test(path) ? path : `/${path || ''}`; // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some((route_info) => {\n        let match_path;\n        try {\n            match_path = matchPath(path, route_info);\n        } catch (e) {\n            if (/undefined/.test(e.message)) {\n                return undefined;\n            }\n        }\n\n        if (match_path) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) =>\n    !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) => (\n    Object.keys(params).reduce(\n        (p, name) => p.replace(`:${name}`, params[name]),\n        route_path,\n    )\n);\n\nexport const getContractPath = (contract_id) => getPath(routes.contract, { contract_id });\n","const moment           = require('moment');\nconst getLanguage      = require('../language').get;\nconst LocalStore       = require('../storage').LocalStore;\nconst getPropertyValue = require('../utility').getPropertyValue;\nconst getStaticHash    = require('../utility').getStaticHash;\nconst isEmptyObject    = require('../utility').isEmptyObject;\n\n/*\n * Caches WS responses to reduce delay time and number of requests\n * Stores data in LocalStore which is the first one available in: localStorage, sessionStorage, InScriptStore\n *\n * 1. It caches only the response of those calls which determined in `config`\n * 2. It doesn't cache responses which returned error\n * 3. The value is requested by BinarySocket,\n *    if this returns a value according to the logic here, socket code take it as response\n *    but also triggers an async `send` request, to keep the cache updated for next time\n * 4. Uses client's time to set and check for expiry, as the expire durations are not so long to need a more precise one\n *    (And doesn't worth to wait for the response of time call)\n * 5. Some responses should be cached by a particular value from request (e.g. contracts_for_frxAUDJPY)\n *    so there can be more than one value for a particular call\n * 6. Clears the whole cache regardless their expire time on the following events:\n *    6.1. Client changes: login / logout / switch loginid\n *    6.2. Detect a new release (static hash changed)\n */\nconst SocketCache = (() => {\n    // keys are msg_type\n    // expire: how long to keep the value (in minutes)\n    // map_to: to store different responses of the same key, should be array of:\n    //     string  : the property value from echo_req\n    //     function: return value of the function\n    const config = {\n        payout_currencies     : { expire: 120 },\n        proposal_open_contract: { expire: 10,  map_to: ['contract_id'] },\n        active_symbols        : { expire: 10,  map_to: ['product_type', 'landing_company', getLanguage] },\n        contracts_for         : { expire: 10,  map_to: ['contracts_for', 'product_type', 'currency'] },\n        exchange_rates        : { expire: 60,  map_to: ['base_currency'] },\n        ticks_history         : { expire: 10,  map_to: ['ticks_history', 'granularity', 'start', 'end', 'style'] },\n        trading_times         : { expire: 120, map_to: ['trading_times'] },\n        // TODO: Enable statement and profit table caching once we have UI design for handling\n        // transitions between cached table and newly added data to table\n        // statement             : { expire: 10,   map_to: ['limit', 'offset'] },\n        // profit_table          : { expire: 10,   map_to: ['date_from', 'limit', 'offset'] },\n    };\n\n    const storage_key = 'ws_cache';\n\n    let data_obj = {};\n\n    const msg_type_mapping = {\n        history: 'ticks_history',\n        candles: 'ticks_history',\n    };\n\n    const isMarketClosed = (active_symbols = [], symbol) => {\n        if (!active_symbols.length) return false;\n        return (active_symbols.filter(x => x.symbol === symbol)[0]) ?\n            !active_symbols.filter(symbol_info => symbol_info.symbol === symbol)[0].exchange_is_open\n            :\n            false;\n    };\n\n    const set = (response) => {\n        const msg_type = msg_type_mapping[response.msg_type] || response.msg_type;\n\n        // Excluding closed markets from caching once we have ws_cache and active_symbols cache set up\n        const ws_cache = JSON.parse(localStorage.getItem('ws_cache'));\n        // TODO: Update method of getting language from cookies once we have it in ui_store localStorage\n        const curr_lang = document.cookie.replace(/(?:(?:^|.*;\\s*)language\\s*=\\s*([^;]*).*$)|^.*$/, '$1');\n\n        const active_symbols_obj = curr_lang ? `active_symbols___${curr_lang}` : null;\n\n        if (!isEmptyObject(ws_cache)) {\n            if (msg_type === 'ticks_history' && !isEmptyObject(ws_cache[active_symbols_obj])) {\n                const active_symbols = ws_cache[active_symbols_obj].value.active_symbols;\n                const curr_symbol    = response.echo_req.ticks_history;\n                if (isMarketClosed(active_symbols, curr_symbol)) {\n                    return;\n                }\n            }\n        }\n\n        // check if response has subscription, since we only want to cache non-streaming responses\n        if (response.subscription || (response.echo_req.end === 'latest')) return;\n\n        if (!config[msg_type]) return;\n        // prevent unwanted page behaviour\n        // if a cached version already exists but it gives an error after being called for updating the cache\n        const cached_response = get(response.echo_req) || {};\n        const cached_message  = cached_response[msg_type];\n        const new_message     = response[msg_type];\n\n        const has_error_or_missing = response.error; // || !(msg_type in response);\n        const has_new_value        = cached_message && isEmptyValue(cached_message) && !isEmptyValue(new_message);\n        const has_old_cache        = cached_message && isEmptyValue(new_message) && !isEmptyValue(cached_message);\n        const has_valid_cache      = !isEmptyValue(cached_response) && !cached_response.error;\n\n        if ((has_error_or_missing || has_new_value || has_old_cache) && has_valid_cache) {\n            clear();\n            // window.location.reload();\n            return;\n        }\n\n        const key      = makeKey(response.echo_req, msg_type);\n        const expires  = moment().add(config[msg_type].expire, 'm').valueOf();\n\n        if (!data_obj.static_hash) {\n            data_obj.static_hash = getStaticHash();\n        }\n\n        data_obj[key] = { value: response, expires };\n        LocalStore.setObject(storage_key, data_obj);\n    };\n\n    const isEmptyValue = (data) => {\n        let is_empty_data = false;\n        if (Array.isArray(data)) {\n            if (!data.length) {\n                is_empty_data = true;\n            }\n        } else if (typeof response_data === 'object') {\n            if (!Object.keys(data).length) {\n                is_empty_data = true;\n            }\n        }\n        return is_empty_data;\n    };\n\n    const get = (request, msg_type) => {\n        let response;\n\n        if (isEmptyObject(data_obj)) {\n            data_obj = LocalStore.getObject(storage_key);\n            if (isEmptyObject(data_obj)) return undefined;\n        }\n\n        if (data_obj.static_hash !== getStaticHash()) { // new release\n            clear();\n        }\n\n        const key          = makeKey(request, msg_type);\n        const response_obj = getPropertyValue(data_obj, key) || {};\n\n        if (moment().isBefore(response_obj.expires)) {\n            response = response_obj.value;\n        } else { // remove if expired\n            remove(key);\n        }\n\n        return response;\n    };\n\n    const makeKey = (source_obj = {}, msg_type = '') => {\n        let key = msg_type || Object.keys(source_obj).find(type => config[type]);\n\n        if (key && !isEmptyObject(source_obj)) {\n            ((config[key] || {}).map_to || []).forEach((map_key) => {\n                const value = typeof map_key === 'function' ? map_key() : source_obj[map_key];\n                key += map_key ? `_${value || ''}` : '';\n            });\n        }\n\n        return key;\n    };\n\n    const remove = (key, should_match_all) => {\n        if (should_match_all) {\n            Object.keys(data_obj).forEach((data_key) => {\n                if (data_key.indexOf(key) !== -1) {\n                    delete data_obj[data_key];\n                }\n            });\n        } else if (key in data_obj) {\n            delete data_obj[key];\n        }\n        LocalStore.setObject(storage_key, data_obj);\n    };\n\n    const clear = () => {\n        LocalStore.remove(storage_key);\n        data_obj = {};\n    };\n\n    return {\n        set,\n        get,\n        remove,\n        clear,\n    };\n})();\n\nmodule.exports = SocketCache;\n"],"sourceRoot":""}