{"version":3,"sources":["webpack:///./App/Components/Elements/FullPageModal/full-page-modal.jsx","webpack:///./App/Components/Elements/Modals/UnsupportedContractModal/unsupported-contract-modal.jsx","webpack:///./App/Components/Elements/Modals/MarketUnavailableModal/market-unavailable.jsx","webpack:///./App/Components/Elements/Modals/DenialOfServiceModal/denial-of-service.jsx","webpack:///./App/Components/Elements/Modals/ServicesErrorModal/constants.js","webpack:///./App/Components/Elements/Modals/ServicesErrorModal/services-error-modal.jsx","webpack:///./App/Containers/Modals/modals.jsx"],"names":["FullPageModal","handleCancel","props","is_closed_on_cancel","enableApp","onCancel","handleConfirm","is_closed_on_confirm","onConfirm","React","Component","this","is_visible","disableApp","cancel_button_text","children","confirm_button_text","is_loading","title","Fragment","appear","in","timeout","classNames","enter","enterDone","exit","unmountOnExit","className","has_effect","text","onClick","defaultProps","propTypes","PropTypes","string","func","bool","full_page_modal","connect","ui","UnsupportedContractModal","PureComponent","onClose","localize","i18n_default_text","values","website_name","MarketUnavailableModal","DenialOfServiceModal","buy","sell","ServicesErrorModal","services_error","code","message","type","object","client","modules","common","is_denial_of_service_modal_visible","is_client_allowed_to_visit","is_market_unavailable_visible","has_only_forward_starting_contracts","is_services_error_visible","is_unsupported_contract_modal_visible","proposal_info","trade","purchase_info","resetPreviousSymbol","clearPurchaseInfo","resetPurchase","requestProposal","switchAccount","setHasOnlyForwardingContracts","toggleServicesErrorModal","toggleUnsupportedContractModal","virtual_account_loginid","denialOfServiceOnConfirm","unsupportedContractOnClose","window","open","urlFor","undefined"],"mappings":"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","file":"js/modals.684da66112764f270639.js","sourcesContent":["import classNames        from 'classnames';\nimport React             from 'react';\nimport PropTypes         from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport Button            from 'deriv-components/lib/button';\nimport { connect }       from 'Stores/connect';\n\nclass FullPageModal extends React.Component {\n    componentDidMount() {\n        if (this.props.is_visible) {\n            this.props.disableApp();\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.props.is_visible) {\n            this.props.disableApp();\n        }\n    }\n\n    handleCancel = () => {\n        if (this.props.is_closed_on_cancel) {\n            this.props.enableApp();\n        }\n        this.props.onCancel();\n    };\n\n    handleConfirm = () => {\n        if (this.props.is_closed_on_confirm) {\n            this.props.enableApp();\n        }\n        this.props.onConfirm();\n    };\n\n    render() {\n        const {\n            cancel_button_text,\n            children,\n            confirm_button_text,\n            onCancel,\n            is_loading,\n            is_visible,\n            title,\n        } = this.props;\n        return (\n            <React.Fragment>\n                <CSSTransition\n                    appear\n                    in={(is_visible && !is_loading)}\n                    timeout={50}\n                    classNames={{\n                        appear   : 'full-page-modal__wrapper--enter',\n                        enter    : 'full-page-modal__wrapper--enter',\n                        enterDone: 'full-page-modal__wrapper--enter-done',\n                        exit     : 'full-page-modal__wrapper--exit',\n                    }}\n                    unmountOnExit\n                >\n                    <div className='full-page-modal__wrapper'>\n                        <div className='full-page-modal__dialog'>\n                            { title &&\n                                <h1 className='full-page-modal__header'>{title}</h1>\n                            }\n                            { typeof children === 'string' ?\n                                <p className='full-page-modal__content'>{children}</p>\n                                :\n                                <div className='full-page-modal__content'>{children}</div>\n                            }\n                            <div className='full-page-modal__footer'>\n                                { onCancel &&\n                                    <Button\n                                        className={classNames(\n                                            'full-page-modal__button',\n                                            'btn--secondary',\n                                            'btn--secondary--orange',\n                                        )}\n                                        has_effect\n                                        text={cancel_button_text}\n                                        onClick={this.handleCancel}\n                                    />\n                                }\n                                { confirm_button_text &&\n                                    <Button\n                                        className={classNames(\n                                            'full-page-modal__button',\n                                            'btn--primary',\n                                            'btn--primary--orange',\n                                        )}\n                                        has_effect\n                                        text={confirm_button_text}\n                                        onClick={this.handleConfirm}\n                                    />\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </CSSTransition>\n            </React.Fragment>\n        );\n    }\n}\n\nFullPageModal.defaultProps = {\n    is_closed_on_cancel : true,\n    is_closed_on_confirm: true,\n};\n\nFullPageModal.propTypes = {\n    cancel_button_text  : PropTypes.string,\n    confirm_button_text : PropTypes.string,\n    disableApp          : PropTypes.func,\n    enableApp           : PropTypes.func,\n    is_closed_on_cancel : PropTypes.bool,\n    is_closed_on_confirm: PropTypes.bool,\n    is_loading          : PropTypes.bool,\n    is_visible          : PropTypes.bool,\n    onCancel            : PropTypes.func,\n    onConfirm           : PropTypes.func,\n    title               : PropTypes.string,\n};\n\nconst full_page_modal = connect(\n    ({ ui }) => ({\n        disableApp: ui.disableApp,\n        enableApp : ui.enableApp,\n        is_loading: ui.is_loading,\n    }),\n)(FullPageModal);\nexport default full_page_modal;\n","import React            from 'react';\nimport PropTypes        from 'prop-types';\nimport { localize }     from 'App/i18n';\nimport FullPageModal    from 'App/Components/Elements/FullPageModal/full-page-modal.jsx';\nimport Localize         from 'App/Components/Elements/localize.jsx';\nimport { website_name } from '../../../../Constants/app-config';\n\nclass UnsupportedContractModal extends React.PureComponent {\n    render() {\n        const { is_visible, onConfirm, onClose } = this.props;\n        return (\n            <FullPageModal\n                title={localize('Whoops!')}\n                confirm_button_text={localize('Continue to Binary.com')}\n                cancel_button_text={localize('Back to trade page')}\n                onConfirm={onConfirm}\n                onCancel={onClose}\n                is_closed_on_cancel\n                is_visible={is_visible}\n            >\n                <Localize\n                    i18n_default_text='This trade type is currently not supported on {{website_name}}. Please go to Binary.com for details.'\n                    values={{ website_name }}\n                />\n            </FullPageModal>\n        );\n    }\n}\n\nUnsupportedContractModal.propTypes = {\n    is_visible: PropTypes.bool,\n    onClose   : PropTypes.func,\n    onConfirm : PropTypes.func,\n};\n\nexport default UnsupportedContractModal;\n","import React          from 'react';\nimport PropTypes      from 'prop-types';\nimport { localize }   from 'App/i18n';\nimport FullPageModal  from 'App/Components/Elements/FullPageModal/full-page-modal.jsx';\nimport Localize       from 'App/Components/Elements/localize.jsx';\n\nconst MarketUnavailableModal = ({\n    is_visible,\n    onCancel,\n    onConfirm,\n}) => (\n    <FullPageModal\n        cancel_button_text={localize('Go to SmartTrader')}\n        confirm_button_text={localize('No, stay on Deriv')}\n        is_visible={is_visible}\n        onCancel={onCancel}\n        onConfirm={onConfirm}\n        title={localize('Market is unavailable')}\n    >\n        <Localize i18n_default_text='Sorry, but this market is not supported yet on Deriv. Do you want to trade this market on SmartTrader?' />\n    </FullPageModal>\n);\n\nMarketUnavailableModal.propTypes = {\n    is_visible: PropTypes.bool,\n    onCancel  : PropTypes.func,\n    onConfirm : PropTypes.func,\n};\n\nexport default MarketUnavailableModal;\n","import React         from 'react';\nimport PropTypes     from 'prop-types';\nimport { localize }  from 'App/i18n';\nimport FullPageModal from 'App/Components/Elements/FullPageModal/full-page-modal.jsx';\nimport Localize      from 'App/Components/Elements/localize.jsx';\n\nconst DenialOfServiceModal = ({ is_visible, onCancel, onConfirm }) => (\n    <FullPageModal\n        title={localize('Whoops!')}\n        confirm_button_text={localize('Continue with Virtual Account')}\n        cancel_button_text={localize('Back to main website')}\n        onConfirm={onConfirm}\n        onCancel={onCancel}\n        is_closed_on_cancel={false}\n        is_visible={is_visible}\n    >\n        <Localize i18n_default_text='You cannot use your real money account with Deriv at this time.' />\n    </FullPageModal>\n);\n\nDenialOfServiceModal.propTypes = {\n    is_visible: PropTypes.bool,\n    onCancel  : PropTypes.func,\n    onConfirm : PropTypes.func,\n};\n\nexport default DenialOfServiceModal;\n","import { localize }  from 'App/i18n';\n\nexport const title = {\n    buy : localize('Purchase Error'),\n    sell: localize('Sell Error'),\n};\n","import React         from 'react';\nimport PropTypes     from 'prop-types';\nimport { localize }  from 'App/i18n';\nimport FullPageModal from 'App/Components/Elements/FullPageModal/full-page-modal.jsx';\nimport { title }     from './constants';\n\nconst ServicesErrorModal = ({\n    is_visible,\n    onConfirm,\n    services_error,\n}) => {\n    const { code, message } = services_error;\n\n    if (!code || !message) return null;\n\n    return (\n        <FullPageModal\n            title={title[services_error.type]}\n            confirm_button_text={localize('OK')}\n            onConfirm={onConfirm}\n            // TODO: handle onCancel\n            // cancel_button_text={cancel_button_text}\n            // onCancel={onCancel}\n            is_visible={is_visible}\n        >\n            {message}\n        </FullPageModal>\n    );\n};\n\nServicesErrorModal.propTypes = {\n    is_visible    : PropTypes.bool,\n    onConfirm     : PropTypes.func,\n    services_error: PropTypes.object,\n};\n\nexport default ServicesErrorModal;\n","import React       from 'react';\nimport { connect } from 'Stores/connect';\nimport { urlFor }  from '_common/url';\nimport 'Sass/app/modules/modals.scss';\nimport UnsupportedContractModal from 'App/Components/Elements/Modals/UnsupportedContractModal';\nimport MarketUnavailableModal   from 'App/Components/Elements/Modals/MarketUnavailableModal';\nimport DenialOfServiceModal     from 'App/Components/Elements/Modals/DenialOfServiceModal';\nimport ServicesErrorModal       from 'App/Components/Elements/Modals/ServicesErrorModal';\n\n// const AccountSignupModal       = React.lazy(() => import(/* webpackChunkName: \"AccountSignupModal\" */'./Containers/AccountSignupModal'));\n\nconst Modals = ({\n    clearPurchaseInfo,\n    is_denial_of_service_modal_visible,\n    is_unsupported_contract_modal_visible,\n    is_market_unavailable_visible,\n    is_services_error_visible,\n    toggleUnsupportedContractModal,\n    setHasOnlyForwardingContracts,\n    resetPreviousSymbol,\n    toggleServicesErrorModal,\n    resetPurchase,\n    services_error,\n    switchAccount,\n    virtual_account_loginid,\n}) => {\n    const denialOfServiceOnCancel = () => {\n        window.open(urlFor('trading', undefined, undefined, true));\n    };\n\n    const denialOfServiceOnConfirm = async () => {\n        await switchAccount(virtual_account_loginid);\n    };\n\n    const marketUnavailableOnConfirm = () => {\n        setHasOnlyForwardingContracts(false);\n        resetPreviousSymbol();\n    };\n\n    const marketUnavailableOnCancel = () => window.open(urlFor('trading', undefined, undefined, true)) &&\n        setHasOnlyForwardingContracts(false);\n\n    const servicesErrorModalOnConfirm = () => {\n        toggleServicesErrorModal(false);\n        if (services_error.type === 'buy') {\n            clearPurchaseInfo();\n            resetPurchase();\n        }\n    };\n\n    const unsupportedContractOnConfirm = () => {\n        window.open(urlFor('user/portfoliows', undefined, undefined, true), '_blank');\n        unsupportedContractOnClose();\n    };\n\n    const unsupportedContractOnClose = () => {\n        toggleUnsupportedContractModal(false);\n    };\n\n    return (\n        <React.Fragment>\n            <UnsupportedContractModal\n                onConfirm={unsupportedContractOnConfirm}\n                onClose={unsupportedContractOnClose}\n                is_visible={is_unsupported_contract_modal_visible}\n            />\n\n            <DenialOfServiceModal\n                onConfirm={denialOfServiceOnConfirm}\n                onCancel={denialOfServiceOnCancel}\n                is_visible={is_denial_of_service_modal_visible}\n            />\n\n            <MarketUnavailableModal\n                onConfirm={marketUnavailableOnConfirm}\n                onCancel={marketUnavailableOnCancel}\n                is_visible={is_market_unavailable_visible}\n            />\n            <ServicesErrorModal\n                onConfirm={servicesErrorModalOnConfirm}\n                services_error={services_error}\n                is_visible={is_services_error_visible}\n            />\n            {/* TODO: Enable AccountSignupModal once its UI component is ready */}\n            {/* <AccountSignupModal /> */}\n        </React.Fragment>\n    );\n};\n\nexport default connect(({ ui, client, modules, common }) => ({\n    is_denial_of_service_modal_visible   : !client.is_client_allowed_to_visit,\n    is_market_unavailable_visible        : ui.has_only_forward_starting_contracts,\n    is_services_error_visible            : ui.is_services_error_visible,\n    is_unsupported_contract_modal_visible: ui.is_unsupported_contract_modal_visible,\n    proposal_info                        : modules.trade.proposal_info,\n    purchase_info                        : modules.trade.purchase_info,\n    resetPreviousSymbol                  : modules.trade.resetPreviousSymbol,\n    clearPurchaseInfo                    : modules.trade.clearPurchaseInfo,\n    resetPurchase                        : modules.trade.requestProposal,\n    services_error                       : common.services_error,\n    switchAccount                        : client.switchAccount,\n    setHasOnlyForwardingContracts        : ui.setHasOnlyForwardingContracts,\n    toggleServicesErrorModal             : ui.toggleServicesErrorModal,\n    toggleUnsupportedContractModal       : ui.toggleUnsupportedContractModal,\n    virtual_account_loginid              : client.virtual_account_loginid,\n}))(Modals);\n"],"sourceRoot":""}