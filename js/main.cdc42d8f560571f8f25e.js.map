{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./_common/base/socket_base.js","webpack:///./_common/base/socket_cache.js","webpack:///./Modules/Reports/Helpers/market-underlying.js","webpack:///./Services/logout.js","webpack:///./_common/common_functions.js","webpack:///./_common/string_util.js","webpack:///./Stores/Modules/Trading/Constants/contract.js","webpack:///./Stores/connect.js","webpack:///./Stores/Modules/Portfolio/Helpers/details.js","webpack:///./Constants/ui.js","webpack:///./_common/base/currency_base.js","webpack:///./App/Components/Routes/button-link.jsx","webpack:///./App/Components/Elements/VerticalTabs/vertical-tab-content-container.jsx","webpack:///./App/Components/Elements/VerticalTabs/vertical-tab-headers.jsx","webpack:///./Modules/Trading/Components/Elements/full-screen-dialog.jsx","webpack:///./Services/socket-general.js","webpack:///./App/Containers/Redirect/redirect.jsx","webpack:///./Modules/Reports/Components/empty-portfolio-message.jsx","webpack:///./Modules/Contract/Containers/contract-link.jsx","webpack:///./Assets/SvgComponents/portfolio/ic-check.svg","webpack:///./Assets/SvgComponents/portfolio/ic-cross.svg","webpack:///./App/Components/Elements/PositionsDrawer/result-overlay.jsx","webpack:///./App/Components/Elements/PositionsDrawer/positions-drawer-card.jsx","webpack:///./App/Components/Elements/PositionsDrawer/positions-drawer.jsx","webpack:///./App/Components/Elements/market-is-closed-overlay.jsx","webpack:///./Modules/Trading/Containers/test.jsx","webpack:///./Modules/Trading/Components/Form/screen-large.jsx","webpack:///./Modules/Trading/Components/Form/form-layout.jsx","webpack:///./Modules/Trading/Containers/trade.jsx","webpack:///./App/Constants/routes-config.js","webpack:///./App/Components/Routes/binary-link.jsx","webpack:///./App/Components/Elements/login-prompt.jsx","webpack:///./App/Components/Routes/route-with-sub-routes.jsx","webpack:///./App/Components/Routes/binary-routes.jsx","webpack:///./Modules/PageError/PageError.jsx","webpack:///./Modules/Trading/Helpers/digits.js","webpack:///./Modules/Reports/Helpers/shortcode.js","webpack:///./App/Constants/app-config.js","webpack:///./App/Components/Elements/tooltip.jsx","webpack:///./App/Components/Form/InputField/increment-buttons.jsx","webpack:///./App/Components/Form/InputField/input.jsx","webpack:///./App/Components/Form/InputField/input-field.jsx","webpack:///./App/Components/Elements/VerticalTabs/vertical-tab.jsx","webpack:///./templates/_common/components/loading.jsx","webpack:///./App/Components/Elements/underlying-icon.jsx","webpack:///./App/Components/Elements/PositionsDrawer/ProgressSlider/positions-progress-ticks.jsx","webpack:///./App/Containers/remaining-time.jsx","webpack:///./App/Components/Elements/PositionsDrawer/ProgressSlider/positions-progress-slider.jsx","webpack:///./App/Components/Elements/localize.jsx","webpack:///./Stores/Modules/Contract/Helpers/logic.js","webpack:///./_common/storage.js","webpack:///./Stores/Modules/Trading/Helpers/barrier.js","webpack:///./Stores/Modules/Trading/Helpers/contract-type.js","webpack:///./App/Components/Elements/chart-loader.jsx","webpack:///./App/Components/Elements/PositionsDrawer/contract-type-cell.jsx","webpack:///./App/Components/Elements/Calendar/calendar-footer.jsx","webpack:///./App/Components/Form/ButtonToggleMenu/button-highlight.jsx","webpack:///./App/Components/Form/ButtonToggleMenu/button-highlight-wrapper.jsx","webpack:///./App/Components/Form/ButtonToggleMenu/button-toggle-menu.jsx","webpack:///./App/Components/Form/DropDown/items.jsx","webpack:///./App/Components/Form/DropDown/native-select.jsx","webpack:///./App/Components/Form/DropDown/helpers.js","webpack:///./App/Components/Form/DropDown/dropdown.jsx","webpack:///./Stores/Modules/Trading/Helpers/allow-equals.js","webpack:///./Modules/Trading/Components/Form/TradeParams/allow-equals.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/amount.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/barrier.jsx","webpack:///./App/Components/Form/RangeSlider/tick-steps.jsx","webpack:///./App/Components/Form/RangeSlider/range-slider.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/Duration/duration-toggle.jsx","webpack:///./App/Components/Form/DatePicker/helpers.js","webpack:///./App/Components/Elements/Calendar/calendar.jsx","webpack:///./App/Components/Form/DatePicker/date-picker.jsx","webpack:///./Modules/Trading/Components/Form/DatePicker/trading-date-picker.jsx","webpack:///./App/Components/Form/TimePicker/dialog.jsx","webpack:///./App/Components/Form/TimePicker/time-picker.jsx","webpack:///./Stores/Modules/Trading/Helpers/end-time.js","webpack:///./Modules/Trading/Components/Form/TimePicker/trading-time-picker.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/Duration/advanced-duration.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/Duration/simple-duration.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/Duration/duration.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/Duration/duration-wrapper.jsx","webpack:///./App/Components/Form/number-selector.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/last-digit.jsx","webpack:///./Modules/Trading/Containers/trade-params.jsx","webpack:///./Modules/Trading/Components/Form/ContractType/contract-type-dialog.jsx","webpack:///./Modules/Trading/Components/Form/ContractType/contract-type-item.jsx","webpack:///./Modules/Trading/Components/Form/ContractType/contract-type-list.jsx","webpack:///./Modules/Trading/Components/Form/TradeTypeInfo/trade-type-info-dialog.jsx","webpack:///./Modules/Trading/Components/Form/TradeTypeInfo/trade-type-info-item.jsx","webpack:///./Modules/Trading/Components/Form/ContractType/contract-type-widget.jsx","webpack:///./Modules/Trading/Containers/contract-type.jsx","webpack:///./App/Components/Elements/Calendar/panels/types.js","webpack:///./App/Components/Elements/Calendar/panels/calendar-days.jsx","webpack:///./App/Components/Elements/Calendar/panels/calendar-months.jsx","webpack:///./App/Components/Elements/Calendar/panels/calendar-years.jsx","webpack:///./App/Components/Elements/Calendar/panels/calendar-decades.jsx","webpack:///./App/Components/Elements/Calendar/calendar-body.jsx","webpack:///./Modules/Trading/Components/Form/Purchase/contract-info.jsx","webpack:///./Modules/Trading/Components/Elements/purchase-button.jsx","webpack:///./Modules/Trading/Components/Elements/purchase-fieldset.jsx","webpack:///./Modules/Trading/Containers/purchase.jsx","webpack:///./App/Components/Elements/NotificationMessage/close-button.jsx","webpack:///./App/Components/Elements/NotificationMessage/constants.js","webpack:///./App/Components/Elements/NotificationMessage/notification.jsx","webpack:///./App/Components/Elements/PositionsDrawer/helpers/positions-helper.js","webpack:///./App/Components/Elements/PositionsDrawer/helpers/index.js","webpack:///./App/Components/Elements/Errors/error-component.jsx","webpack:///./App/Components/Elements/modal.jsx","webpack:///./Utils/Language/language.js","webpack:///./Utils/Language/index.js","webpack:///./App/Components/Elements/Calendar/calendar-button.jsx","webpack:///./App/Components/Elements/Calendar/calendar-header.jsx","webpack:///./App/Components/Elements/ContentLoader/positions-card.jsx","webpack:///./App/Components/Elements/ContentLoader/index.js","webpack:///./_common/base/network_monitor_base.js","webpack:///./_common/url.js","webpack:///./App/Components/Form/button.jsx","webpack:///./App/i18n.js","webpack:///./App/Containers/Lazy/lazy.jsx","webpack:///./Constants/index.js","webpack:///./_common/base/client_base.js","webpack:///./Constants/routes.js","webpack:///./_common/base/server_time.js","webpack:///./Utils/Date/date-time.js","webpack:///./Utils/Date/index.js","webpack:///./Stores/Modules/Trading/Helpers/duration.js","webpack:///./_common/language.js","webpack:///./_common/lib/polyfills/nodelist.foreach.js","webpack:///./_common/lib/polyfills/element.closest.js","webpack:///./_common/lib/plugins.js","webpack:///./_common/base/subscription_manager.js","webpack:///./Services/trackjs.js","webpack:///./Services/ws-methods.js","webpack:///./_common/lib/polyfills/element.matches.js","webpack:///./_common/os_detect.js","webpack:///./App/Components/Elements/Errors/error-boundary.jsx","webpack:///./templates/app/components/loading.jsx","webpack:///./App/Containers/Layout/app-contents.jsx","webpack:///./App/Containers/server-time.jsx","webpack:///./App/Components/Layout/Footer/network-status.jsx","webpack:///./App/Components/Layout/Footer/toggle-fullscreen.jsx","webpack:///./App/Components/Layout/Footer/toggle-positions.jsx","webpack:///./App/Components/Layout/Footer/toggle-settings.jsx","webpack:///./App/Containers/Layout/footer.jsx","webpack:///./App/Components/Layout/Header/menu-links.jsx","webpack:///./App/Components/Layout/Header/login-button.jsx","webpack:///./App/Components/Layout/Header/signup-button.jsx","webpack:///./App/Components/Layout/Header/upgrade-button.jsx","webpack:///./App/Components/Layout/Header/account-actions.jsx","webpack:///./App/Constants/header-links.js","webpack:///./App/Containers/Layout/header.jsx","webpack:///./App/Containers/Modals/modals.jsx","webpack:///./App/Containers/Routes/routes.jsx","webpack:///./Services/network-monitor.js","webpack:///./Services/outdated-browser.js","webpack:///./Stores/Helpers/client-notifications.js","webpack:///./Utils/Validator/declarative-validation-rules.js","webpack:///./Utils/Validator/errors.js","webpack:///./Utils/Validator/validator.js","webpack:///./Stores/base-store.js","webpack:///./Stores/Modules/Trading/Helpers/currency.js","webpack:///./Stores/client-store.js","webpack:///./Stores/Helpers/client.js","webpack:///./Stores/common-store.js","webpack:///./Stores/gtm-store.js","webpack:///./Stores/Modules/Cashier/cashier-store.js","webpack:///./Stores/Modules/SmartChart/Constants/barriers.js","webpack:///./Stores/Modules/Contract/Helpers/chart-barriers.js","webpack:///./Modules/SmartChart/Components/Markers/marker-line.jsx","webpack:///./Modules/SmartChart/Components/Markers/marker-spot.jsx","webpack:///./Modules/SmartChart/Components/Markers/marker-spot-label.jsx","webpack:///./Stores/Modules/SmartChart/Constants/markers.js","webpack:///./Stores/Modules/Contract/Helpers/chart-marker-helpers.js","webpack:///./Stores/Modules/Contract/Helpers/chart-markers.js","webpack:///./Stores/Modules/Portfolio/Helpers/portfolio-notifcations.js","webpack:///./Stores/Modules/Contract/contract-replay-store.js","webpack:///./Stores/Modules/Contract/contract-trade-store.js","webpack:///./Stores/Modules/Trading/Helpers/active-symbols.js","webpack:///./Stores/Modules/Portfolio/Helpers/format-response.js","webpack:///./Stores/Modules/Portfolio/portfolio-store.js","webpack:///./Stores/Modules/Profit/Helpers/format-request.js","webpack:///./Stores/Modules/Profit/Helpers/format-response.js","webpack:///./Stores/Modules/Profit/profit-store.js","webpack:///./Stores/Modules/SmartChart/Helpers/barriers.js","webpack:///./Stores/Modules/SmartChart/chart-barrier-store.js","webpack:///./Stores/Modules/SmartChart/chart-marker-store.js","webpack:///./Stores/Modules/SmartChart/smart-chart-store.js","webpack:///./Stores/Modules/Statement/statement-store.js","webpack:///./Stores/Modules/Statement/Helpers/format-response.js","webpack:///./Stores/Modules/Trading/Actions/purchase.js","webpack:///./Stores/Modules/Trading/Actions/symbol.js","webpack:///./Stores/Modules/Trading/Constants/validation-rules.js","webpack:///./Stores/Modules/Trading/Actions/contract-type.js","webpack:///./Stores/Modules/Trading/Actions/duration.js","webpack:///./Stores/Modules/Trading/Actions/start-date.js","webpack:///./Stores/Modules/Trading/Helpers/process.js","webpack:///./Stores/Modules/Trading/Helpers/proposal.js","webpack:///./Stores/Modules/Trading/trade-store.js","webpack:///./Stores/Modules/Trading/Helpers/chart.js","webpack:///./Stores/Modules/index.js","webpack:///./Stores/ui-store.js","webpack:///./Stores/index.js","webpack:///./App/app.js","webpack:///./Utils/Events/storage.js","webpack:///./App/app.jsx","webpack:///./Utils/pwa/register-service-worker.js","webpack:///./App/Components/Elements/Popover/popover-bubble.jsx","webpack:///./App/Components/Elements/Popover/popover.jsx","webpack:///./App/Components/Form/fieldset.jsx","webpack:///./Stores/Modules/Trading/Helpers/start-date.js","webpack:///./_common/base/login.js","webpack:///./Stores/Modules/Contract/Helpers/digits.js","webpack:///./Assets/icon.jsx","webpack:///./config.js","webpack:///./Constants/contract.js","webpack:///./App/Components/Elements/money.jsx","webpack:///./Constants/date-time.js","webpack:///./_common/utility.js","webpack:///./App/Components/Elements/ui-loader.jsx","webpack:///./App/Components/Elements/Calendar/helper.js","webpack:///./Services/index.js","webpack:///./App/Components/Routes/helpers.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","prefetchChunks","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","deferredPrefetch","apply","shift","deferredModules","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","forEach","undefined","link","document","createElement","nc","setAttribute","rel","as","href","jsonpScriptSrc","head","appendChild","installedModules","installedCssChunks","main","p","404","DenialOfServiceModal","MarketUnavailableModal","ServicesErrorModal","UnsupportedContractModal","account-info","contract","digits","info-box","notification-messages","push-notification","reports","screen-small","settings-chart","settings-language","settings-theme","toggle-cashier","toggle-menu-drawer","vendors~open_position~7c650be5","default~open_position~1833eefb","open_positions","profit_table","statement","vendors~smart_chart","smart_chart","work-in-progress","wallet-information","two-month-picker","exports","module","l","e","promises","Promise","resolve","reject","fullhref","existingLinkTags","getElementsByTagName","dataHref","tag","getAttribute","existingStyleTags","linkTag","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","error","clearTimeout","chunk","errorType","realSrc","message","name","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","startupResult","binary_socket","config","buffered_sends","req_id","wrong_app_id","is_available","is_disconnect_called","is_connected_before","socket_url","timeouts","no_duplicate_requests","sent_requests","waiting_list","clearTimeouts","isReady","hasReadyState","sendBufferedRequests","wait","send","ClientBase","require","SocketCache","getLanguage","State","cloneObject","getPropertyValue","isEmptyObject","PromiseClass","getAppId","getSocketURL","BinarySocketBase","concat","items","clear","has","msg_type","indexOf","add","remove","promise_obj","response","this_promises","pr","another_exists","keys","some","req_obj","options","arguments","has_callback","callback","find","forced","set","skip_cache_update","JSON","stringify","time","assign","last_response","subscribe","isOnline","passthrough","wsEvent","init","_typeof","WebSocket","onopen","isLoggedIn","authorize","onOpen","onReconnect","onmessage","msg","parse","test","this_req_id","onMessage","onclose","onDisconnect","_len2","msg_types","Array","_key2","is_resolved","availability","status","_len","states","_key","readyState","sendBuffered","setOnDisconnect","setOnReconnect","removeOnReconnect","removeOnDisconnect","data_obj","msg_type_mapping","isEmptyValue","makeKey","moment","LocalStore","getStaticHash","payout_currencies","expire","proposal_open_contract","map_to","active_symbols","contracts_for","exchange_rates","ticks_history","trading_times","history","candles","is_empty_data","isArray","response_data","getObject","static_hash","response_obj","isBefore","expires","source_obj","map_key","ws_cache","localStorage","getItem","curr_lang","cookie","replace","active_symbols_obj","symbol","filter","x","symbol_info","exchange_is_open","isMarketClosed","echo_req","subscription","end","cached_response","cached_message","new_message","has_error_or_missing","has_new_value","has_old_cache","has_valid_cache","valueOf","setObject","should_match_all","data_key","__webpack_exports__","getMarketInformation","getMarketName","getTradeTypeName","Constants__WEBPACK_IMPORTED_MODULE_0__","shortcode","market_info","category","underlying","extracted","RegExp","exec","toLowerCase","getMarketNamesMap","toUpperCase","getContractConfig","requestLogout","_common_base_client_base__WEBPACK_IMPORTED_MODULE_0__","_common_base_client_base__WEBPACK_IMPORTED_MODULE_0___default","_common_base_socket_cache__WEBPACK_IMPORTED_MODULE_1__","_common_base_socket_cache__WEBPACK_IMPORTED_MODULE_1___default","_common_storage__WEBPACK_IMPORTED_MODULE_2__","_ws_methods__WEBPACK_IMPORTED_MODULE_3__","WS","logout","doLogout","removeCookies","Client","clearAllAccounts","isVisible","elem","offsetWidth","offsetHeight","getElementById","id_selector","parent","padLeft","txt","len","char","text","String","join","numberToString","toTitleCase","str","charAt","substr","compareBigUnsignedInt","a","b","first_num","second_num","max_length","Math","max","order","getLocalizedBasis","payout","localize","stake","multiplier","getContractTypesConfig","rise_fall","title","trade_types","basis","components","barrier_count","rise_fall_equal","high_low","touch","stay","asian","match_diff","even_odd","over_under","lb_call","lb_put","lb_high_low","getContractCategoriesConfig","_ref","_defineProperty","SPECIAL_REACT_KEYS","children","ref","MobxProvider","_Provider","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","_inherits","Provider","_createClass","stores","baseStores","context","mobxStores","props","store","_objectSpread","childContextTypes","PropTypes","client","common","gtm","ui","connect","StoreClass","mapper","Component","inject","observer","connect_global_store","observed","StoredComponent","_Component","_getPrototypeOf2","_this","args","propTypes","React","wrappedDisplayName","displayName","constructor","getCurrentTick","getDurationUnitText","getDurationPeriod","getDurationTime","App_i18n__WEBPACK_IMPORTED_MODULE_0__","_common_utility__WEBPACK_IMPORTED_MODULE_1__","Utils_Date__WEBPACK_IMPORTED_MODULE_2__","_Contract_Helpers_digits__WEBPACK_IMPORTED_MODULE_3__","contract_info","tick_stream","unique","current_tick","isDigitContract","contract_type","isEndTime","duration","obj_duration","unit_map","name_plural","name_singular","h","duration_ms","asMilliseconds","getDiffDuration","epochToMoment","purchase_time","date_start","date_expiry","tick_count","floor","is_end_time","string_format","formatMiliseconds","getDurationUnitValue","MAX_MOBILE_WIDTH","MAX_TABLET_WIDTH","crypto_config","currencies_config","formatCurrency","currency","addComma","num","decimal_points","is_crypto","number","toFixed","parseFloat","toString","$0","$1","$2","getDecimalPlaces","isCryptocurrency","calcDecimalPlaces","CryptoConfig","BTC","min_withdrawal","pa_max_withdrawal","pa_min_withdrawal","BCH","ETH","ETC","LTC","UST","USB","getMinWithdrawal","formatMoney","currency_value","amount","exclude_currency","decimals","minimumFractionDigits","money","sign","Number","decimal_places","isNaN","abs","Intl","maximumFractionDigits","NumberFormat","format","setCurrencies","website_status","getCurrencyName","getTransferLimits","which","transfer_limits","min","getTransferFee","currency_from","currency_to","transfer_fee","getMinimumTransferFee","pow","getTextFormat","getMinPayout","getPaWithdrawalLimit","limit","getCurrencies","classnames__WEBPACK_IMPORTED_MODULE_0__","classnames__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","ButtonLink","className","to","onClick","classNames","string","func","VerticalTabContentContainer","PureComponent","_this$props","action_bar","action_bar_classname","is_routed","selected","selected_item","item","label","TabContent","react__WEBPACK_IMPORTED_MODULE_1___default","map","component","icon","Assets_icon_jsx__WEBPACK_IMPORTED_MODULE_3__","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","exact","from","routes","positions","_ref2","path","render","component_icon","VerticalTabHeaders","header_title","onChange","activeClassName","vertical-tab__header--active","vertical-tab__header__icon--active","FullScreenDialog","visible","wrapperClassName","body","classList","fullscreen-dialog--open","tagName","scrollToTarget","el","viewport_offset","getBoundingClientRect","top","clientHeight","innerHeight","new_el_top","scrollTop","scrollToElement","currentTarget","addEventListener","removeEventListener","onClose","any","bool","client_store","common_store","gtm_store","setResidence","setBalance","handleError","authorizeAccount","mobx__WEBPACK_IMPORTED_MODULE_0__","_common_base_login__WEBPACK_IMPORTED_MODULE_1__","_common_base_login__WEBPACK_IMPORTED_MODULE_1___default","_common_base_server_time__WEBPACK_IMPORTED_MODULE_2__","_common_base_server_time__WEBPACK_IMPORTED_MODULE_2___default","_common_base_socket_base__WEBPACK_IMPORTED_MODULE_3__","_common_base_socket_base__WEBPACK_IMPORTED_MODULE_3___default","_common_storage__WEBPACK_IMPORTED_MODULE_4__","_common_utility__WEBPACK_IMPORTED_MODULE_5__","App_i18n__WEBPACK_IMPORTED_MODULE_6__","_logout__WEBPACK_IMPORTED_MODULE_7__","_ws_methods__WEBPACK_IMPORTED_MODULE_8__","BinarySocketGeneral","setIsSocketOpened","is_ready","Login","isLoginPages","is_valid_login","subscribeWebsiteStatus","ResponseHandlers","websiteStatus","ServerTime","action","server_time","is_active_tab","sessionStorage","removeItem","loginid","is_populating_account_list","get_settings","country_code","setEmail","email","eventHandler","responsePayoutCurrencies","pushTransactionData","residence","landingCompany","flow","regeneratorRuntime","mark","_callee","balance","wrap","_context","prev","next","BinarySocket","stop","setError","responseAuthorize","subscribeBalance","sendRequest","getAccountStatus","payoutCurrencies","mt5LoginList","country","accounts","is_virtual","getSelfExclusion","accepted_bch","site_status","location","reload","setWebsiteStatus","Redirect","setCashierActiveTab","setVerificationCode","toggleAccountSignupModal","toggleCashierModal","url_params","URLSearchParams","search","replaceState","root","withRouter","EmptyPortfolioMessage","react_default","Fragment","ContractLink","contract_id","openContract","node","onMount","contract_trade","ic_check","styles","_objectWithoutProperties","_extends","xmlns","width","height","fill","fillRule","cx","cy","ic_cross","ic_cross_objectWithoutProperties","ic_cross_extends","stroke","strokeLinecap","ResultOverlay","handleClick","is_unsupported","preventDefault","is_visible","onClickRemove","is_contract_won","react_transition_group","in","enter","enterDone","exit","unmountOnExit","positions-drawer-card__result--won","positions-drawer-card__result--lost","react_router_dom","getContractPath","result__caption--won","result__caption--lost","oneOfType","has_same_contract_mounted","PositionsDrawerCard","active_position","indicative","id","is_dark_theme","is_loading","is_sell_requested","is_valid_to_sell","profit_loss","onClickSell","sell_price","toggleUnsupportedContractModal","loader_el","ContentLoader","speed","fallback_result","contract_el","underlying_icon","market","display_name","contract_type_cell","is_high_low","Shortcode","isHighLow","is_sold","ProgressSlider","start_time","expiry_time","ticks_count","positions-drawer-card__profit-loss--is-crypto","positions-drawer-card__profit-loss--negative","positions-drawer-card__profit-loss--positive","positions-drawer-card__indicative--movement-complete","buy_price","positions-drawer-card__wrapper--active","parseInt","result_overlay","positions-drawer-card--active","positions-drawer-card--green","positions-drawer-card--red","contract_link","Form_button","btn--loading","is_disabled","duration_unit","exit_spot","sell_time","PositionsDrawer","onUnmount","all_positions","active_contract_id","is_contract_mode","is_empty","is_positions_drawer_on","toggleDrawer","body_content","portfolio_position","appear","positions_drawer_card","positions_drawer_extends","positions-drawer--open","positions-drawer--contract-mode","lib","style","autoHide","empty_portfolio_message","MobxPropTypes","arrayOrObservableArray","portfolio","removePositionById","is_dark_mode_on","togglePositionsDrawer","startAnimation","children_background_color","getComputedStyle","firstElementChild","converted_rgba","startsWith","split","querySelectorAll","element","backgroundColor","requestAnimationFrame","toggleFade","opacity","direction","color","sub_or_add","reduction","new_opacity","stopId","cancelAnimationFrame","querySelector","contains","click","MarketIsClosedOverlay","i18n_default_text","classNameSpan","Test","state","setVisibility","stateVisibility","test_assertThisInitialized","container","fontSize","lineHeight","position","zIndex","background","padding","marginTop","display","overflowY","prop_name","componentDidMount","componentWillUnmount","ctrlKey","keyCode","setState","_this2","entries","sort","_slicedToArray","k","v","test_typeof","toJS","array","_ref3","trade","ScreenLarge","is_contract_visible","is_trade_enabled","is_blurred","sidebar__items--blur","fieldset","trade_params","purchase","ui_loader","FormLayout","is_mobile","Lazy","ctor","should_load","screen_large","SmartChart","lazy","Trade","showPositions","hidePositions","onCloseContract","form_wrapper_class","should_show_bottom_widgets","is_digit_contract","should_show_last_digit_stats","isDigitTradeType","is_chart_visible","is_chart_loading","is_chart_ready","positions_drawer","has_progress","Suspense","fallback","chart_loader","chart_id","chart_type","Digits","is_trade_page","digits_info","display_status","is_ended","InfoBox","error_message","removeError","end_epoch","granularity","is_static_chart","onSymbolChange","scroll_to_epoch","start_epoch","cursor","is_market_closed","market_is_closed_overlay","form_layout","onClickNewTrade","purchase_info","routesConfig","removeErrorMessage","scroll_to_left_epoch","hidePositionsFooterToggle","showPositionsFooterToggle","has_only_forward_starting_contracts","setHasOnlyForwardingContracts","ContractDetails","Reports","OpenPositions","ProfitTable","Statement","Page404","route_default","getRoutesConfig","is_authenticated","index","RouterRedirect","icon_component","default","profit","error404","redirect","BinaryLink","active_class","binary_link_objectWithoutProperties","normalizePath","route","findRouteByPath","binary_link_extends","LoginPrompt","onLogin","onSignup","page_title","PageError","header","values","messages","defaultProps","open","urlFor","pushDataLayer","react_router","pathname","is_logged_in","login_prompt","redirectToLogin","route_with_sub_routes_extends","Language","setCookie","default_title","BinaryRoutes","idx","route_with_sub_routes","binary_routes_extends","buttonOnClick","error_code","redirect_label","redirect_url","has_html","dangerouslySetInnerHTML","__html","button_link","digitTypesMap","includes","extractInfoFromShortcode","info_from_shortcode","barrier_1","_ref$shortcode","_ref$shortcode_info","shortcode_info","website_name","Tooltip","show_tooltip_balloon_icon","onMouseEnter","onMouseLeave","alignment","classNameIcon","has_error","icon_class","tooltip--error","data-tooltip","data-tooltip-pos","Assets_icon","tooltip__balloon-icon--show","IncrementButtons","decrementValue","incrementValue","max_is_disabled","min_is_disabled","tabIndex","Input","changeValue","checked","classNameInlinePrefix","data_value","data_tip","display_value","fractional_digits","inline_prefix","is_autocomplete_disabled","is_hj_whitelisted","is_incrementable","is_read_only","onKeyPressed","placeholder","required","autoComplete","data-for","data-hj-whitelist","data-tip","data-value","disabled","maxLength","navigator","userAgent","selectionStart","evt","selectionEnd","onKeyDown","readOnly","InputField","classNameInput","classNamePrefix","error_messages","helper","is_float","_this$props$is_hj_whi","is_negative_disabled","_this$props$is_read_o","_this$props$is_signed","is_signed","_this$props$is_unit_a","is_unit_at_right","max_value","min_value","prefix","unit","Icon","has_valid_length","getDecimals","val","array_value","increment_value","new_value","calculateDecrementedValue","decrement_value","is_increment_input","input","InputField_input","trim","signed_regex","is_number","is_not_completed_number","has_zero_at_end","is_scientific_notation","input--error","increment_buttons","InputField_increment_buttons","input_tooltip","tooltip","tooltip--with-label","htmlFor","VerticalTab","changeSelected","applicable_routes","list","current_path","selected_index","vertical-tab--full-screen","is_full_width","_vertical_tab_headers_jsx__WEBPACK_IMPORTED_MODULE_4__","_vertical_tab_content_container_jsx__WEBPACK_IMPORTED_MODULE_3__","arrayOf","shape","isRequired","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","Loading","is_invisible","theme","inx","UnderlyingIcon","react__WEBPACK_IMPORTED_MODULE_1__","ProgressTicks","arr_ticks","_toConsumableArray","progress-slider__ticks-step--marked","RemainingTime","_ref$end_time","end_time","unix","remaining_time","formatDuration","percentage","getTimePercentage","positions_progress_ticks","Containers_remaining_time","progress-slider__line--green","progress-slider__line--orange","progress-slider__line--red","prop_types__WEBPACK_IMPORTED_MODULE_0__","prop_types__WEBPACK_IMPORTED_MODULE_0___default","react_i18next__WEBPACK_IMPORTED_MODULE_2__","Localize","defaults","getChartConfig","getChartType","getChartGranularity","getDisplayStatus","getIndicativePrice","getLastTickFromTickStream","isEnded","isUserSold","isValidToSell","getEndTime","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","is_from_purchase","start","hour_to_granularity_map","getExpiryTime","diff","asHours","calculateGranularity","getFinalPrice","bid_price","is_expired","is_settleable","exit_tick_time","is_path_dependent","is_tick_contract","Cookies","isProduction","setItem","Storage","isStorageSupported","storage","Store","InScriptStore","obj","getResponse","CookieStorage","cookie_name","cookie_domain","hostname","initialized","domain","Date","read","cookie_value","write","expireDate","isSecure","secure","SessionStore","domains","parent_path","cookie_names","contract_types","available_contract_types","available_categories","buildTradeTypesConfig","getArrayDefaultValue","getComponents","getDurationUnitsList","getDurationUnit","getDurationMinMax","getStartType","getStartDates","hours","minutes","getValidTime","buildMoment","setMinuteMultipleByFive","getTradeTypes","getBarriers","getBasis","ContractType","contract_display","arr_new_values","c_type","form_components","contract_start_type","duration_units_list","duration_units","arr_units","contract_expiry_type","duration_min_max","start_date","current_start_date","start_dates_list","has_spot","forward_starting_dates","sessions","compare_moment","start_moment","isSessionAvailable","minute","hour","date","isTimeValid","toMoment","moment_obj","ceil","arr_basis","localized_basis","basis_list","reduce","cur","bas","buildContractTypesConfig","contractsFor","has_contracts","available","start_type","contract_categories","barriers","sub_cats","durations","buildDurationConfig","count","obj_barrier","field","expiry_type","buildBarriersConfig","buildForwardStartingConfig","barrier_values","barrier","high_barrier","barrier_2","low_barrier","getContractType","arr_list","ct","getContractValues","obj_basis","obj_trade_types","obj_start_dates","obj_start_type","getFullContractTypes","getExpiryDate","expiry_date","proper_expiry_date","moment_start","moment_expiry","hasIntradayDurationUnit","isAfter","clone","isSameOrBefore","market_close_times","market_close_time","end_moment","expiry_sessions","close","minDate","is_end_of_day","is_end_of_session","subtract","getExpiryType","getSessions","option","getStartTime","getTradingTimes","trading_times_response","submarkets","symbols","_args","abrupt","sent","markets","times","_x","getContractCategories","contract_types_list","_templates_common_components_loading_jsx__WEBPACK_IMPORTED_MODULE_2__","ChartLoader","Constants_contract__WEBPACK_IMPORTED_MODULE_2__","ContractTypeCell","getContractTypeDisplay","Assets_icon_jsx__WEBPACK_IMPORTED_MODULE_2__","App_i18n__WEBPACK_IMPORTED_MODULE_3__","FooterIcon","use_icon","CalendarFooter","footer","has_today_btn","has_range_selection","duration_date","is_minimum","Highlight","left","left_offset","highlight_style","transform","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","HighlightWrapper","buttonClick","updateHighlightPosition","closest","resetHighlight","offsetLeft","active_button_el","getElementsByClassName","other_props","classnames","Children","child","cloneElement","button_highlight_Highlight","ButtonToggleMenu","buttons_arr","is_animated","menu","button-menu__button--active","selected_value","button_highlight_wrapper","Items","handleSelect","has_symbol","symbol_type_class_name","list__item--highlighted","list__item--selected","list__item--disabled","has_tooltip","Popover","NativeSelect","getItemFromValue","findInArray","findIndex","isArrayLike","getValueFromIndex","getPrevIndex","getNextIndex","Dropdown","list_ref","createRef","curr_index","is_list_visible","handleVisibility","setWrapperRef","wrapper_ref","handleClickOutside","is_single_option","prev_index","next_index","is_alignment_left","firstChars","is_nativepicker","native_select","left_alignment_style","list_width","dropdown--left","dropdown--show","dropdown--disabled","classNameDisplay","dropdown__display--clicked","dropdown__display--has-symbol","dropdown__select-arrow--left","onEntered","current","dropdown__list--left","list--left","autoHeight","autoHeightMax","renderTrackHorizontal","dropdown_extends","renderThumbHorizontal","DropDown_items","hasCallPutEqual","contract_type_list","hasDurationForCallPutEqual","contract_duration_list","allow_equals_toConsumableArray","AllowEquals","has_callputequal_duration","has_callputequal","isRiseFallEqual","input_field","_e$target","classNameTarget","margin","Amount","currencies_list","is_equal","is_minimized","is_single_currency","validation_errors","button_toggle_menu","dropdown","trade-container__currency-options-dropdown","allow_equals","observableObject","Barrier","barrier_title","input_class","is_center","TickSteps","hover_value","tick_steps_toConsumableArray","isActive","isMarked","isMarkedOnHover","range-slider__ticks-step--active","range-slider__ticks-step--marked","range-slider__ticks-step--marked-hover","RangeSlider","handleChange","resetOnHover","rangeSliderTrack","getRangeSliderTrackWidth","_e$nativeEvent","nativeEvent","offsetX","offsetY","is_hover","range-slider__error","steps","tick_steps","DurationToggle","icon_className","advanced-simple-toggle__icon--active","react","classNamePath","trading_events","getTradingEvents","events","Calendar","calendar_classCallCheck","calendar_possibleConstructorReturn","calendar_getPrototypeOf","switchView","view","calendar_view","navigateTo","new_date","calendar_date","date_format","onChangeCalendarMonth","start_of_month","getStartOfMonth","onMouseOver","hovered_date","updateSelectedDate","max_date","min_date","onSelect","moment_date","dataset","startOf","is_before","is_after","formatted_date","selected_date","updateSelected","stopPropagation","isPeriodDisabled","month","year","decade","resetCalendar","_this$props2","default_date","setToday","_this$props3","now","_this$props4","start_of_period","endOf","current_date","default_message","_this$props5","holidays","weekends","_this$state","calendar_header","calendar_body","calendar_footer","dates","descrip","DatePicker","date_value","is_datepicker_visible","is_clear_btn_visible","is_mounted","onClickOutside","mainNode","updateDatePickerValue","formatDate","is_clearable","onSelectCalendar","isDateValid","onChangeInput","formatted_value","addDays","clearDatePickerInput","updateStore","calendar","daysFromTodayTo","new_date_value","renderInputField","initial_value","disable_trading_events","defaultValue","datepicker__icon--is-hidden","datepicker__icon--with-label","datepicker__picker--left","date_picker_objectSpread","TradingDatePicker","max_date_duration","min_date_expiry","duration_d","is_24_hours_contract","has_intraday_unit","min_duration","daily","moment_contract_start_date_time","setTime","max_daily_duration","is_duration_contract","date_picker","disable_year_selector","Dialog","preClass","selected_time","start_time_moment","end_time_moment","seconds","milliseconds","to_compare_moment","_selected_time$split2","dialog_toConsumableArray","selectOption","current_value","prev_value","is_enabled","_prev_value$split","_prev_value$split2","prev_hour","prev_minute","start_time_reset_minute","is_hour_enabled","isBetween","is_minute_enabled","dialog_defineProperty","mm","TimePicker","is_open","toggleDropDown","arg","time_picker_typeof","saveRef","nodeName","target_element","dialog","getClosestTime","interval","TradingTimePicker","market_open_times","moment_expiry_date","market_open_datetime","market_close_datetime","expiry_datetime","server_datetime","boundaries","market_open_time","getBoundaries","getSelectedTime","time_picker","AdvancedDuration","advanced_duration_unit","advanced_expiry_type","duration_t","changeDurationUnit","getDurationFromUnit","expiry_list","number_input_props","onChangeUiStore","shared_input_props","has_intraday_duration_unit","isSame","endtime_container_class","has-time","range_slider","advanced_duration_extends","ticks","trading_date_picker","trading_time_picker","SimpleDuration","arr","filtered_arr","simple_duration_unit","has_label","du","simple_duration_extends","Duration","hasDurationUnit","is_advanced_duration","onChangeMultiple","has_end_time","expiry","pop","duration_unit_text","duration_value","shared_input","duration_name","number_input","has_toggle","trade-container__fieldset--advanced","duration_extends","advanced_duration","simple_duration","duration_toggle","_ref4","current_duration_unit","new_trade_store_values","duration_objectSpread","DurationWrapper","duration_list","duration_wrapper_toConsumableArray","advancedHasWrongExpiry","handleEndTime","getDurationMinMaxValues","convertDurationLimit","new_duration_unit","new_duration_value","current_unit","current_duration","_this$getDurationMinM2","duration_wrapper_slicedToArray","has_missing_duration_unit","simple_is_missing_duration_unit","_this$getDurationMinM4","setDurationUnit","Duration_duration","duration_wrapper_extends","duration_h","duration_m","duration_s","NumberSelector","arr_arr_numbers","selected_number","arr_numbers","number-selector__selection--selected","LastDigit","last_digit","arr_five","last_digit_toConsumableArray","number_selector","TradeParams","component_key","duration_wrapper","TradeParams_last_digit","TradeParams_amount","ContractTypeDialog","full_screen_dialog","ContractTypeItem","contracts","handleInfoClick","contract-type-item--selected","contract-type-item--invisible","ContractTypeList","contract_type_item","objectOrObservableObject","TradeTypeInfoDialog","TradeTypeInfoItem","handleNavigationClick","handleNextClick","handlePrevClick","item_index","itemList","onBackButtonClick","onSubmitButtonClick","ContractTypeWidget","is_dialog_open","is_info_dialog_open","handleInfoVisibility","navigationLength","nextIndex","list_item","prevIndex","onWidgetClick","getDisplayText","getItemIndex","curr_item","getItemList","contract-type-widget__display--clicked","contract_type_dialog","trade_type_info_dialog","trade_type_info_item","Contract","contract_type_widget","CommonPropTypes","CalendarDays","days","hide_others","moment_today","moment_cur_date","num_of_days","daysInMonth","moment_month_start","moment_month_end","moment_selected","subMonths","day","subDays","start_of_next_month","addMonths","moment_start_date","moment_hovered","is_active","is_today","getDaysOfTheWeek","has_events","is_closes_early","match","duration_from_today","is_between","is_between_hover","is_before_min_or_after_max_date","is_other_month","calendar__cell--active","calendar__cell--today","calendar__cell--active-duration","calendar__cell--today-duration","calendar__cell--disabled","calendar__cell--is-hidden","calendar__cell--other","calendar__cell--between-hover","calendar__cell--between","data-date","data-duration","classNameTargetIcon","getDays","week_headers_abbr","CalendarMonths","moment_selected_date","month_headers","data-month","calendar_months_objectSpread","CalendarYears","_getDecade$split2","getDecade","start_of_decade","end_of_decade","years","is_other_decade","data-year","calendar_years_objectSpread","CalendarDecades","decades","min_year","getCentury","_decade$split2","calendar_decades_slicedToArray","is_other_century","data-decade","calendar_decades_objectSpread","CalendarBody","calendar_days_CalendarDays","calendar_months_CalendarMonths","calendar_years_CalendarYears","calendar_decades_CalendarDecades","ContractInfo","has_increased","should_fade","proposal_info","has_error_or_not_loaded","trade-container__price-info--disabled","trade-container__price-info--slide","trade-container__price-info--fade","stakeOrPayout","obj_contract_basis","PurchaseButton","buy_info","info","is_proposal_empty","purchased_states_arr","setPurchaseState","onClickPurchase","is_button_disabled","btn-purchase--disabled","btn-purchase--animated--slide","btn-purchase--animated--fade","btn-purchase--swoosh","returns","PurchaseFieldset","is_proposal_error","onHoverPurchase","purchase_button","Elements_purchase_button","btn-purchase__shadow-wrapper--disabled","classNameBubble","Purchase","is_client_allowed_to_visit","isLoading","has_error_details","purchase_fieldset","Elements_purchase_fieldset","getContractTypePosition","unshift","is_purchase_locked","onPurchase","purchase_states","CloseButton","notification_order","types","danger","success","warning","contract_sold","sortNotifications","Notification","removeNotification","destroy","is_closed_by_user","closeOnClick","is_auto_close","delay","notification--small","size","should_hide_close_btn","close_button","oneOf","duration_from_purchase","round","getBarrierLabel","isDigitType","getBarrierValue","digitTypeMap","addCommaToNumber","DIGITDIFF","DIGITEVEN","DIGITMATCH","DIGITODD","DIGITOVER","DIGITUNDER","positions_helper_getTimePercentage","positions_helper_getBarrierLabel","ErrorComponent","redirectOnClick","_ref$should_show_refr","should_show_refresh","refresh_message","ModalElement","showFullBlur","modal_root","hideFullBlur","toggleModal","ReactDOM","createPortal","vertical_tab","classNameHeader","modal_content","Modal","modal_ModalElement","currentLanguage","getAllowedLanguages","exclude_languages","getAll","EN","getURL","lang","language_getAllowedLanguages","language_getURL","CalendarButton","is_hidden","CalendarHeader","disable_month_selector","hide_disabled_periods","is_date_view","is_month_view","is_year_view","is_decade_view","num_of_years","century","is_prev_month_disabled","is_prev_year_disabled","subYears","is_next_month_disabled","is_next_year_disabled","addYears","is_select_year_disabled","should_hide_next_month","should_hide_prev_month","should_hide_prev_year","should_hide_next_year","onClickPrevYear","onClickNextYear","onClickPrevMonth","onClickNextMonth","calendar_button","calendar__nav--disabled","calendar__nav--is-hidden","calendar__btn--disabled","PositionsCardLoader","react_content_loader_es","primaryColor","secondaryColor","y","rx","ry","positions_card_PositionsCardLoader","_pending_timeouts","status_config","ws_config","network_status","updateUI","StatusConfig","pendings","pending_keys","pending_timeouts","setStatus","ws_events_map","setPending","clearPendings","NetworkMonitorBase","online","class","offline","blinking","ws_init","ws_request","onLine","ping","socket_general_functions","fncUpdateUI","urlForLanguage","getCurrentProductionDomain","location_url","static_host","paramsHash","host_map","Url","bot.binary.com","developers.binary.com","academy.binary.com","tech.binary.com","blog.binary.com","getUrlBase","reset","param_hash","arr_params","parsed","URL","p_l","param","params","pars","language","should_change_to_legacy","new_url","urlForCurrentDomain","current_domain","url_object","urlForStatic","websiteUrl","protocol","getHostMap","resetStaticHost","Button","_ref$className","has_effect","classes","effect","button","wrapper","i18n_config","resources","translation","hashTransKey","crc32","lng","query","fallbackLng","i18n","use","initReactI18next","_ref$should_load","component_props","LazyLoadedComponent","_contract__WEBPACK_IMPORTED_MODULE_0__","_routes__WEBPACK_IMPORTED_MODULE_1__","current_loginid","types_map_config","client_object","getAllAccountsObject","getAllLoginids","getAccountType","isAccountOfType","getAccountOfType","TypesMapConfig","updateAccountList","canTransferFundsTo","only_enabled","this_type","financial","gaming","virtual","account_list","account","excluded_until","param_to_set","value_to_set","to_loginid","from_currency","to_currency","from_landing_company","to_landing_company","maltainvest","malta","is_from_crypto","is_to_crypto","isValidLoginid","valid_login_ids","every","current_client","account_type","hasAccountType","hasCurrencyType","loginids","getAccountTitle","types_map","landing_company_name","shouldAcceptTnc","website_tnc_version","client_tnc_status","setNewAccount","token","currentLandingCompany","landing_company_response","this_shortcode","landing_company_prop","shouldCompleteTax","getMT5AccountType","group","getBasicUpgradeInfo","can_upgrade_to","upgradeable_landing_companies","can_open_multi","current_landing_company","landing_companies","landing_company","canUpgrade","can_upgrade","getLandingCompanyValue","landing_company_object","real","financial_company","gaming_company","getRiskAssessment","is_high_risk","canTransferFunds","hasSvgAccount","canChangeCurrency","mt5_login_list","is_current","has_no_mt5","has_no_transaction","transactions","has_account_criteria","account_password","apps","cashier_password","exclusion","limits","personal","settings","performance_request_time","get_time_interval","update_time_interval","onTimeUpdated","clock_started","pending","requestTime","timeCounter","fncTimeUpdated","clearInterval","setInterval","performance","start_timestamp","performance_response_time","server_time_at_response","updateTime","time_since_response","utc","timePromise","createFromInputFallback","_d","NaN","epoch","isValid","isUTC","today_moment","second","convertToUnix","toGMTFormat","diffInMonths","asDays","formatted_str","time_str","isHourValid","isMinuteValid","num_of_months","date_1","date_2","miliseconds","str_format","date_time_epochToMoment","date_time_toMoment","date_time_toGMTFormat","date_time_getDiffDuration","date_time_formatDuration","date_time_isDateValid","date_time_minDate","date_time_formatMiliseconds","getDurationMaps","to_second","min_max","units_display","obj_min","getDurationFromString","min_contract_duration","obj_max","max_contract_duration","convertDurationUnit","duration_maps","u","from_unit","to_unit","duration_string","root_store","duration_is_day","expiry_is_after_today","isInteger","resetEndTimeOnVolatilityIndices","all_languages","url_lang","lang_regex","languageFromUrl","current_lang","ACH","DE","ES","FR","ID","IT","PL","PT","RU","TH","VI","ZH_CN","ZH_TW","crowdin_lang","url","urlLang","custom_url","NodeList","thisArg","Element","documentElement","matches","parentElement","nodeType","hide","show","toggleClass","class_name","should_add","make_visible","html","content","innerHTML","subscriptions","forget_requested","subscription_id","dispatch","forget","forgetStream","hasCallbackFunction","hasValues","SubscriptionManager","sub_id","stream_id","sub_info","subscribers","fnc","fncCallback","match_values","forgets_list","request_obj","values_obj","addSubscriptionFromRequest","send_request","subscribe_request","subscription_props","is_stream","prop","should_forget_first","isDeepEqual","forgetAll","types_to_forget","sub_ids","forget_all","ignored_responses_in_trackjs","queue","ResponseQueue","ApiCallProxyHandler","prop_key","receiver","target_value","Reflect","return_value","TrackJS","log","fresh","track","getMessage","activeSymbols","buy","proposal_id","price","cashier","verification_code","get_account_status","get_self_exclusion","getSettings","newAccountVirtual","client_password","new_account_virtual","oauthApps","oauth_apps","profitTable","offset","date_boundaries","description","proposalOpenContract","residenceList","residence_list","sell","sellExpired","sell_expired","request_object","force_request","verifyEmail","verify_email","cb","is_forced","subscribeProposal","req","subscribeProposalOpenContract","subscribeProposalOpenContractOnBuy","buy_request","subscribeTicks","subscribeTicksHistory","subscribeTransaction","transaction","trackJSNetworkMonitor","Proxy","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","ownerDocument","isMobile","ErrorBoundary","componentDidCatch","hasError","Errors","is_slow_loading","AppContents","is_app_blurred","is_dark_mode","is_fully_blurred","slow_loading_status","loading","app-contents--show-positions-drawer","app-contents--contract-mode","app-contents--is-blurred","tt_react_custom_scrollbars_lib","addNotificationBar","pwa_prompt_event","setPWAPromptEvent","gmt_time","NetworkStatus","network-status__circle--offline","network-status__circle--online","network-status__circle--blinker","ToggleFullScreen","toggle_fullscreen_classCallCheck","toggle_fullscreen_possibleConstructorReturn","toggle_fullscreen_getPrototypeOf","onFullScreen","is_full_screen","fullscreen_map","toggleFullScreen","to_exit","fncToCall","fnc_enter","fnc_exit","full_screen_icon_class","ic-fullscreen--active","TogglePositions","positions_count","toggle_positions_class","ic-positions--active","ic-positions--has-count","data-count","ToggleSettings","is_settings_visible","toggleSettings","toggle_settings_class","ic-settings--active","modal","Footer","active_positions","is_route_blurred","is_settings_modal_on","show_positions_toggle","toggleSettingsModal","footer--is-blurred","toggle_positions_TogglePositions","Containers_server_time","toggle_settings_ToggleSettings","toggle_fullscreen_ToggleFullScreen","MenuLinks","login_only","Components_Routes","link_to","logo","image","LoginButton","SignupButton","UpgradeButton","AccountActions","account_actions_classCallCheck","account_actions_possibleConstructorReturn","account_actions_getPrototypeOf","account_actions_inherits","nextProps","is_acc_switcher_on","onClickUpgrade","toggleAccountsDialog","is_upgrade_enabled","is_dialog_on","toggleDialog","upgrade_button_UpgradeButton","login_button_LoginButton","signup_button_SignupButton","active_cashier_tab","is_cashier_modal_on","header_links","Header","header--is-blurred","menu_links_MenuLinks","account_actions_AccountActions","is_accounts_switcher_on","is_initial_idle","is_denial_of_service_modal_visible","is_market_unavailable_visible","is_services_error_visible","is_unsupported_contract_modal_visible","resetPreviousSymbol","clearPurchaseInfo","resetPurchase","requestProposal","services_error","switchAccount","toggleServicesErrorModal","virtual_account_loginid","denialOfServiceOnConfirm","unsupportedContractOnClose","onConfirm","onCancel","Routes","NetworkMonitor","is_online","setNetworkStatus","OutdatedBrowser","showError","opening_tag","closing_tag","interpolation","escapeValue","$buoop","vs","f","api","noclose","reminder","onshow","nomessage","insecure","pre_build_dvrs","client_notifications","self_exclusion","exclusion_end","authenticate","cashier_locked","withdrawal_locked","mt5_withdrawal_locked","document_needs_action","unwelcome","mf_retail","financial_limit","risk","tax","tnc","required_fields","handleClientNotifications","addNotification","_response$get_account","prompt_client_to_authenticate","_getStatusValidations","validations","account_status","document_under_review","ukrts_max_turnover_limit_not_set","professional","is_mf_retail","landing_company_shortcode","checkAccountStatus","necessary_withdrawal_fields","necessary_signup_fields","required_settings_fields","getRequiredFields","hasMissingRequiredField","validRequired","validEmail","validPassword","validLetterSymbol","validGeneral","validAddress","validPostCode","validPhone","validRegular","regex","validEmailToken","validTaxID","validBarrier","validCompare","validNotEqual","validMin","validLength","validNumber","opts","allow_empty","is_ok","decimal_count","format_money","isMoreThanMax","getPreBuildDVRs","address","permitted_characters","compare","general","letter_symbol","not_equal","value_one","value_two","password","phone","postcode","regular","signup_token","tax_id","errors_classCallCheck","errors","attribute","Validator","rules","validator_classCallCheck","error_count","rule","is_rule_string","rule_object","validator","template","name1","name2","ruleObject","getRuleObject","condition","addFailure","check","BaseStore","bound","base_store_classCallCheck","_initializerDefineProperty","_descriptor","_descriptor2","switchAccountDisposer","switch_account_listener","_descriptor3","waitFor","base_store_asyncToGenerator","local_storage_properties","session_storage_properties","validation_rules","store_name","writable","setValidationRules","setupReactionForLocalStorage","setupReactionForSessionStorage","retrieveFromStorage","properties","snapshot","reaction","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","getSnapshot","_this3","propertyName","_this4","_this5","addRule","_this6","intercept","change","validateProperty","newValue","_this7","trigger","inputs","isPassed","setValidationErrorMessages","_this8","listener","_this9","when","switch_broadcast","_callee2","_context2","switchEndSignal","onSwitchAccount","t0","disposeSwitchAccount","reactions","act","partial_fetch_time","freeze","observable","ClientStore","client_store_classCallCheck","client_store_initializerDefineProperty","client_store_getPrototypeOf","client_store_descriptor","client_store_assertThisInitialized","client_store_descriptor2","client_store_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","fiat","crypto","isCrypto","currency_defineProperty","selectCurrency","session_start","upgrade_info","user_id","removeAllNotifications","setSwitched","setUserLogin","authorize_response","setLoginId","setAccounts","registerReactions","switched","getAccount","all_loginids","clearContract","clearTable","switchAccountHandler","setLoginFlag","resetLocalStorageValues","getToken","broadcastAccountChange","selected_currency","should_refresh_active_symbols","client_store_asyncToGenerator","_callee3","_context3","resetErrorServices","refresh","debouncedProposal","obj_params","active_loginid","map_names","is_allowed_real","acct1","param_value","token1","runInAction","storeClientAccounts","_this10","isDisabled","getAccountInfo","default_currency","valid_login_ids_regex","_this11","_this12","acc","computed","CommonStore","is_socket_opened","is_network_online","common_store_objectSpread","deposit_url","withdraw_url","GTMStore","gtm_store_classCallCheck","gtm_store_possibleConstructorReturn","gtm_store_getPrototypeOf","is_gtm_applicable","accountSwitcherListener","gtm_store_asyncToGenerator","dataLayer","gtm_store_objectSpread","common_variables","contract_data","bom_ui","barrier1","barrier2","chart","toolbar_position","is_chart_layout_default","chart_asset_info","is_chart_asset_info_visible","extra_data","moment_now","storage_key","gtm_transactions","timestamp","transactions_arr","transaction_id","bom_account_type","bom_today","transaction_time","login_event","is_new_account","affiliate_token","visitorId","country_abbrev","today","bom_date_joined","acc_type","login","event_name","userId","CashierStore","cashier_store_classCallCheck","cashier_store_initializerDefineProperty","cashier_store_getPrototypeOf","cashier_store_descriptor","cashier_store_assertThisInitialized","cashier_store_descriptor2","cashier_store_descriptor3","cashier_store_descriptor4","cashier_store_descriptor5","cashier_store_descriptor6","cashier_store_descriptor7","containers","deposit","withdraw","default_cashier_height","timeout_cashier_url","timeout_verification_button","setErrorMessage","setContainerHeight","setLoading","container_urls","is_session_timeout","checkIframeLoaded","setSessionTimeout","setContainerUrl","response_cashier","clearVerification","setTimeoutCashierUrl","onIframeLoaded","clearTimeoutCashierUrl","container_height","is_session_time_out","is_verification_button_clicked","is_verification_email_sent","clearTimeoutVerification","setVerificationButtonClicked","response_verify_email","setVerificationEmailSent","setTimeoutVerification","cashier_store_asyncToGenerator","_callee6","_context6","_x5","CONTRACT_SHADES","CALL","PUT","CALLE","PUTE","EXPIRYRANGE","EXPIRYMISS","RANGE","UPORDOWN","ONETOUCH","NOTOUCH","ASIANU","ASIAND","DEFAULT_SHADES","1","2","BARRIER_COLORS","BARRIER_LINE_STYLES","DASHED","DOTTED","SOLID","createChartBarrier","SmartChartStore","removeBarriers","createBarriers","line_style","not_draggable","updateBarrierShade","MarkerLine","marker_config","LINE_END","content_config","chart-marker-line__icon--won","chart-marker-line__icon--lost","LINE_START","MarkerSpot","spot_count","MarkerSpotLabel","marker_spot_label_classCallCheck","marker_spot_label_possibleConstructorReturn","marker_spot_label_getPrototypeOf","handleHoverToggle","show_label","has_hover_toggle","marker_spot","Markers_marker_spot","spot_className","align_label","spot_epoch","chart-spot-label__value-container--won","chart-spot-label__value-container--lost","spot_value","MARKER_TYPES_CONFIG","ContentComponent","LINE_PURCHASE","SPOT_ENTRY","SPOT_SELL","SPOT_EXIT","SPOT_MIDDLE","createMarkerConfig","marker_type","extend","getSpotCount","createMarkerSpotEntry","entry_tick_time","entry_tick","entry_tick_display_value","createMarkerSpotExit","tick","is_user_sold","exit_tick","exit_tick_display_value","createMarkerSpotMiddle","spot","tick_display_value","createChartMarkers","addTickMarker","addMarker","marker_spots","marker_lines","chart_markers_defineProperty","_marker_spots","_marker_lines","chart_markers_asyncToGenerator","marker_obj","createMarker","markers","_x2","_x3","addLabelAlignment","prev_tick","is_entry_spot","is_middle_spot","is_exit_spot","_x4","contractSold","sold_for","ContractReplayStore","is_ongoing_contract","prev_indicative","handleSubscribeProposalOpenContract","proposal_open_contract_request","forgetProposalOpenContract","setContractMode","populateConfig","indicative_status","sell_info","cleanupContractChartView","setIsChartLoading","new_indicative","updateMargin","handleDigits","extendObservable","getDigitInfo","handleSell","contract_replay_store_objectSpread","ContractTradeStore","is_from_positions","_this$contract_info","is_one_tick_contract","setStaticChart","setContractStart","setContractEnd","longcode","onMountBuy","updateProposal","has_existing_id","resetValues","switchToContractMode","applySavedTradeChartLayout","handleChartType","setChartView","drawChart","updateChartType","updateGranularity","showUnavailableLocationError","clients_country_code","clients_country_text","clients_country","obj_country","pickDefaultSymbol","getFavoriteOpenSymbol","getFirstOpenSymbol","chart_favorites","client_favorite_list","client_fav_symbol","client_first_open_symbol","isSymbolOpen","first_open_symbol","submarket","getSymbolDisplayName","formatPortfolioPosition","portfolio_pos","details","reference","getUnsupportedContracts","PortfolioStore","getPositionById","createTransformer","pos","pos1","pos2","res","new_pos","pushNewPosition","proposalOpenContractHandler","getPositionIndexById","populateResultDetails","proposal","entry_spot","portfolio_store_objectSpread","contract_idx","portfolio_store_asyncToGenerator","initializePortfolio","portfolioHandler","transactionHandler","contract_response","current_spot","current_spot_time","getDateTo","date_to","getDateFrom","should_load_partially","date_from","shouldSendDateFrom","getDateBoundaries","format_request_objectSpread","formatProfitTableTransactions","format_string","should_exclude_currency","format_response_objectSpread","delay_on_scroll_time","ProfitTableStore","fetchOnScroll","debounce","fetchNextBatch","has_loaded_all","shouldFetchNextBatch","profitTableResponseHandler","formatted_transactions","profit_store_toConsumableArray","_event$target","left_to_scroll","scrollHeight","assertHasValidCache","client_loginid","clearDateFilter","date_values","previous","barriersObjectToArray","reference_array","js_object","ChartBarrierStore","chart_barrier_store_dec","chart_barrier_store_dec2","chart_barrier_store_dec3","chart_barrier_store_dec4","chart_barrier_store_descriptor","chart_barrier_store_applyDecoratedDescriptor","chart_barrier_store_class","onChartBarrierChange","chart_barrier_store_classCallCheck","chart_barrier_store_initializerDefineProperty","chart_barrier_store_descriptor2","chart_barrier_store_descriptor3","chart_barrier_store_descriptor4","chart_barrier_store_descriptor5","chart_barrier_store_descriptor6","chart_barrier_store_descriptor7","chart_barrier_store_descriptor8","lineStyle","onBarrierChange","high","low","shade","default_shade","has_barrier","relative","draggable","hidePriceLines","isFromChart","should_display","updateBarriers","chart_barrier_store_toConsumableArray","is_relative","barriers_list","barriersToString","configurable","initializer","getOwnPropertyDescriptor","ChartMarkerStore","chart_marker_store_descriptor","chart_marker_store_applyDecoratedDescriptor","chart_marker_store_class","chart_marker_store_classCallCheck","chart_marker_store_initializerDefineProperty","chart_marker_store_descriptor2","barriers_empty_array","markers_empty_array","trade_chart_symbol","trade_chart_granularity","trade_chart_type","wsSubscribe","smart_chart_store_objectSpread","wsForget","wsForgetStream","wsSendRequest","is_from_other_position","saveAndClearTradeChartLayout","removeMarkers","resetScrollToLeft","resetPurchaseStates","is_title_enabled","updateEpochScrollToValue","updateBarrierColor","should_export_layout","should_import_layout","trade_chart_layout","should_clear_chart","isDone","layout","smart_chart_store_defineProperty","has_differing","barriers_array","next_barrier","markers_array","marker","next_marker","assetInformation","countdown","is_chart_countdown_visible","isHighestLowestMarkerEnabled","current_language","barrier_config","main_barrier","isBarrierSupported","StatementStore","statementHandler","balance_after","action_type","refid","desc","app_id","formatStatementTransaction","statement_store_toConsumableArray","processPurchase","onChangeSymbolAsync","getValidationRules","start_moment_clone","_value$split2","_value$split4","onChangeContractTypeList","onChangeContractType","onChangeExpiry","onChangeStartDate","obj_contract_start_type","obj_sessions","obj_start_time","obj_duration_units_list","obj_duration_unit","obj_expiry_type","obj_expiry_date","obj_market_open_times","obj_market_close_times","obj_expiry_time","obj_duration_min_max","start_date_objectSpread","processTradeParams","new_state","functions","getMethodsList","extendOrReplace","t1","t2","ContractTypeHelper","process_toConsumableArray","StartDate","source","new_values","map_error_field","getProposalErrorField","error_field","error_id","el_error","getElementsByName","createProposalRequestForContract","type_of_contract","obj_expiry","proposal_objectSpread","TradeStore","trade_store_classCallCheck","trade_store_getPrototypeOf","trade_store_initializerDefineProperty","trade_store_descriptor","trade_store_assertThisInitialized","trade_store_descriptor2","trade_store_descriptor3","trade_store_descriptor4","trade_store_descriptor5","trade_store_descriptor6","trade_store_descriptor7","trade_store_descriptor8","trade_store_descriptor9","trade_store_descriptor10","trade_store_descriptor11","trade_store_descriptor12","trade_store_descriptor13","trade_store_descriptor14","trade_store_descriptor15","trade_store_descriptor16","trade_store_descriptor17","trade_store_descriptor18","trade_store_descriptor19","trade_store_descriptor20","trade_store_descriptor21","trade_store_descriptor22","_descriptor23","_descriptor24","_descriptor25","_descriptor26","_descriptor27","_descriptor28","_descriptor29","_descriptor30","_descriptor31","_descriptor32","_descriptor33","_descriptor34","_descriptor35","_descriptor36","_descriptor37","proposal_requests","initial_barriers","is_initial_barrier_applied","_descriptor38","_descriptor39","_descriptor40","disablePurchaseButtons","el_purchase_value","el_purchase_buttons","changeDurationValidationRules","onAllowEqualsChange","is_symbol_in_active_symbols","processNewValuesAsync","setAppLoading","trade_store_objectSpread","setActiveSymbols","trade_store_asyncToGenerator","setDefaultSymbol","setContractTypes","validateAllProperties","trade_store_defineProperty","previous_symbol","setMarketStatus","is_over","is_purchase_enabled","_response$buy","drawContractStartTime","openPositionsDrawer","pushPurchaseData","obj_new_values","is_changed_by_user","obj_old_values","prev_currency","setPreviousSymbol","requests","new_req","current_req","createProposalRequests","setIsDigitContract","onProposalResponse","prev_proposal_info","obj_prev_contract_basis","ask_price","contract_basis","getProposalInfo","proposal_response","_proposal_response$ec","setChartBarrier","duration_options","_callee7","_context7","onLoadingMount","prepareTradeStore","is_trade_component_mounted","first_timeout","loading_message","secondary_message","setSlowLoading","second_timeout","loading_interval","smart_chart_store","restoreTradeChart","pushState","_callee10","_context10","_callee9","_context9","_this13","_this14","_this15","ModulesStore","Modules_classCallCheck","contract_replay","UIStore","ui_store_classCallCheck","ui_store_getPrototypeOf","ui_store_initializerDefineProperty","ui_store_descriptor","ui_store_assertThisInitialized","ui_store_descriptor2","ui_store_descriptor3","ui_store_descriptor4","ui_store_descriptor5","ui_store_descriptor6","ui_store_descriptor7","ui_store_descriptor8","ui_store_descriptor9","ui_store_descriptor10","ui_store_descriptor11","ui_store_descriptor12","ui_store_descriptor13","ui_store_descriptor14","ui_store_descriptor15","ui_store_descriptor16","ui_store_descriptor17","ui_store_descriptor18","ui_store_descriptor19","ui_store_descriptor20","ui_store_descriptor21","ui_store_descriptor22","ui_store_descriptor23","ui_store_descriptor24","ui_store_descriptor25","ui_store_descriptor26","ui_store_descriptor27","ui_store_descriptor28","ui_store_descriptor29","ui_store_descriptor30","ui_store_descriptor31","ui_store_descriptor32","ui_store_descriptor33","ui_store_descriptor34","ui_store_descriptor35","ui_store_descriptor36","handleResize","autorun","screen_width","innerWidth","tab","is_reports_visible","is_main_drawer_on","is_notifications_drawer_on","notification","notification_messages","ui_store_toConsumableArray","push_notifications","state_change","is_account_signup_modal_visible","RootStore","Stores_classCallCheck","configure","enforceActions","initStore","hidden","setStorageEvents","isTouchDevice","App","base","basename","is_tablet","error_boundary","app_contents","Routes_routes","Modals_modals","app_App","path_name","sw_url","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","FadeIn","posed","span","transition","PopoverBubble","calculatePosition","target_rectangle","_this$props$margin","bottom","right","popover_bubble","react_pose_es","initialPose","data-popover-pos","popover__bubble--error","popover_classCallCheck","popover_possibleConstructorReturn","popover_getPrototypeOf","toggleOpen","Boolean","target_reference","toggleClose","disable_target_icon","icon_class_name","Popover_popover_bubble","Fieldset","fieldset_header_class","fieldset_info_class","_common_base_server_time__WEBPACK_IMPORTED_MODULE_0__","_common_base_server_time__WEBPACK_IMPORTED_MODULE_0___default","Utils_Date__WEBPACK_IMPORTED_MODULE_1__","forward_starting_config","forward_starting_options","duplicated_option","opt","current_session","isBeforeDate","should_only_check_hour","now_moment","session","loginUrl","domain_app_ids","server_url","signup_device","date_first_contact","marketing_queries","default_binary_url","initOneAll","provider","el_button","brand","_getLastTickFromTickS","createDigitInfo","spot_time","digit","icons","IconArrowBold","IconArrow","IconBack","IconCalendarToday","IconCalendar","IconChevronDoubleLeft","IconChevronDoubleRight","IconChevronLeft","IconChevronRight","IconClear","IconClock","IconClose","IconCountryFlag","IconDanger","IconDeposit","IconDepositSmall","IconExclamation","IconFlag","IconInfoBlue","IconInfoOutline","IconInformation","IconMinimize","IconMinus","IconPlus","IconQuestion","IconRedDot","IconSuccess","IconWarning","IconWip","IconWithdrawal","IconWithdrawalSmall","ContractIconClose","IconEndTime","ContractIconFlag","IconStartTime","IconTick","IconAuthenticateWithdrawals","IconEmailSent","ModalIconClose","IconMaximize","IconPositions","IconSettings","IconAccountsCurrency","IconLogout","IconBell","IconCashier","IconDeriv","IconHamburger","IconPortfolio","IconReports","IconTrade","IconDemo","IconOpenPositions","IconProfitTable","IconStatement","IconCalendarForwardToday","IconCharts","IconLanguage","IconPurchase","IconTheme","IconBuy","IconPayout","IconSell","IconWallet","IconBarrierDown","IconBarrierUp","IconTradeCategory","TradeCategoriesGIF","TradeCategories","IconTradeType","IconLock","IconPriceMove","classNameRect","IconLazy","deriv.app","all_domains","config_app_id","is_real","server","FRXAUDCAD","FRXAUDCHF","FRXAUDJPY","FRXAUDNZD","FRXAUDPLN","FRXAUDUSD","FRXBROUSD","FRXEURAUD","FRXEURCAD","FRXEURCHF","FRXEURGBP","FRXEURJPY","FRXEURNZD","FRXEURUSD","FRXGBPAUD","FRXGBPCAD","FRXGBPCHF","FRXGBPJPY","FRXGBPNOK","FRXGBPUSD","FRXNZDJPY","FRXNZDUSD","FRXUSDCAD","FRXUSDCHF","FRXUSDJPY","FRXUSDNOK","FRXUSDPLN","FRXUSDSEK","FRXXAGUSD","FRXXAUUSD","FRXXPDUSD","FRXXPTUSD","OTC_AEX","OTC_AS51","OTC_DJI","OTC_FCHI","OTC_FTSE","OTC_GDAXI","OTC_HSI","OTC_IBEX35","OTC_N225","OTC_NDX","OTC_SPC","OTC_SSMI","OTC_SX5E","R_10","R_25","R_50","R_75","R_100","RDBEAR","RDBULL","WLDAUD","WLDEUR","WLDGBP","WLDUSD","RESETCALL","RESETPUT","TICKHIGH","TICKLOW","LBFLOATCALL","LBFLOATPUT","LBHIGHLOW","CALLSPREAD","PUTSPREAD","RUNHIGH","RUNLOW","getSupportedContracts","_common_base_currency_base__WEBPACK_IMPORTED_MODULE_3__","Money","_ref$currency","has_sign","_ref$is_formatted","is_formatted","abs_value","final_amount","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","Mondays","Tuesdays","Wednesdays","Thursdays","Fridays","Saturdays","Sundays","isEqualArray","isEqualObject","arr1","arr2","obj1","obj2","to_replace","tag_name","attributes","attr","textContent","UILoader","classNameBlock","block_class","loading_class","viewBox","strokeWidth","strokeMiterlimit","Utils_Date__WEBPACK_IMPORTED_MODULE_0__","_logout__WEBPACK_IMPORTED_MODULE_0__","_socket_general__WEBPACK_IMPORTED_MODULE_1__","_ws_methods__WEBPACK_IMPORTED_MODULE_2__","react_router__WEBPACK_IMPORTED_MODULE_0__","Constants_routes__WEBPACK_IMPORTED_MODULE_1__","routes_config","route_info","match_path","matchPath","route_path","getPath"],"mappings":"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","file":"js/main.cdc42d8f560571f8f25e.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\tvar prefetchChunks = data[3] || [];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\tdeferredPrefetch.push.apply(deferredPrefetch, prefetchChunks);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\tif(deferredModules.length === 0) {\n \t\t\t// chunk prefetching for javascript\n \t\t\tdeferredPrefetch.forEach(function(chunkId) {\n \t\t\t\tif(installedChunks[chunkId] === undefined) {\n \t\t\t\t\tinstalledChunks[chunkId] = null;\n \t\t\t\t\tvar link = document.createElement('link');\n\n \t\t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\t\tlink.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t\t}\n \t\t\t\t\tlink.rel = \"prefetch\";\n \t\t\t\t\tlink.as = \"script\";\n \t\t\t\t\tlink.href = jsonpScriptSrc(chunkId);\n \t\t\t\t\tdocument.head.appendChild(link);\n \t\t\t\t}\n \t\t\t});\n \t\t\tdeferredPrefetch.length = 0;\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"main\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"main\": 0\n \t};\n\n \tvar deferredModules = [], deferredPrefetch = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"404\":\"404\",\"DenialOfServiceModal\":\"DenialOfServiceModal\",\"MarketUnavailableModal\":\"MarketUnavailableModal\",\"ServicesErrorModal\":\"ServicesErrorModal\",\"UnsupportedContractModal\":\"UnsupportedContractModal\",\"account-info\":\"account-info\",\"contract\":\"contract\",\"digits\":\"digits\",\"info-box\":\"info-box\",\"notification-messages\":\"notification-messages\",\"push-notification\":\"push-notification\",\"reports\":\"reports\",\"screen-small\":\"screen-small\",\"settings-chart\":\"settings-chart\",\"settings-language\":\"settings-language\",\"settings-theme\":\"settings-theme\",\"toggle-cashier\":\"toggle-cashier\",\"toggle-menu-drawer\":\"toggle-menu-drawer\",\"vendors~open_position~7c650be5\":\"vendors~open_position~7c650be5\",\"default~open_position~1833eefb\":\"default~open_position~1833eefb\",\"open_positions\":\"open_positions\",\"profit_table\":\"profit_table\",\"statement\":\"statement\",\"vendors~smart_chart\":\"vendors~smart_chart\",\"smart_chart\":\"smart_chart\",\"work-in-progress\":\"work-in-progress\",\"wallet-information\":\"wallet-information\",\"two-month-picker\":\"two-month-picker\"}[chunkId]||chunkId) + \".\" + \"cdc42d8f560571f8f25e\" + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"digits\":1,\"notification-messages\":1,\"reports\":1,\"screen-small\":1,\"work-in-progress\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + chunkId + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \tvar startupResult = (function() {\n \t// add entry module to deferred list\n \tdeferredModules.push([507,\"vendors~main\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n \t})();\n\n \twebpackJsonpCallback([[], {}, 0, [\"digits\",\"info-box\",\"settings-chart\",\"settings-language\",\"settings-theme\",\"toggle-cashier\"]]);\n \treturn startupResult;\n","const ClientBase       = require('./client_base');\nconst SocketCache      = require('./socket_cache');\nconst getLanguage      = require('../language').get;\nconst State            = require('../storage').State;\nconst cloneObject      = require('../utility').cloneObject;\nconst getPropertyValue = require('../utility').getPropertyValue;\nconst isEmptyObject    = require('../utility').isEmptyObject;\nconst PromiseClass     = require('../utility').PromiseClass;\nconst getAppId         = require('../../config').getAppId;\nconst getSocketURL     = require('../../config').getSocketURL;\n\n/*\n * An abstraction layer over native javascript WebSocket,\n * which provides additional functionality like\n * reopen the closed connection and process the buffered requests\n */\nconst BinarySocketBase = (() => {\n    let binary_socket;\n\n    let config               = {};\n    let buffered_sends       = [];\n    let req_id               = 0;\n    let wrong_app_id         = 0;\n    let is_available         = true;\n    let is_disconnect_called = false;\n    let is_connected_before  = false;\n\n    const socket_url = `${getSocketURL()}?app_id=${getAppId()}&l=${getLanguage()}`;\n    const timeouts   = {};\n    const promises   = {};\n\n    const no_duplicate_requests = [\n        'authorize',\n        'get_settings',\n        'residence_list',\n        'landing_company',\n        'payout_currencies',\n        'asset_index',\n        'active_symbols',\n    ];\n\n    const sent_requests = {\n        items : [],\n        clear : () => { sent_requests.items = []; },\n        has   : msg_type => sent_requests.items.indexOf(msg_type) >= 0,\n        add   : (msg_type) => { if (!sent_requests.has(msg_type)) sent_requests.items.push(msg_type); },\n        remove: (msg_type) => {\n            if (sent_requests.has(msg_type)) sent_requests.items.splice(sent_requests.items.indexOf(msg_type, 1));\n        },\n    };\n\n    const waiting_list = {\n        items: {},\n        add  : (msg_type, promise_obj) => {\n            if (!waiting_list.items[msg_type]) {\n                waiting_list.items[msg_type] = [];\n            }\n            waiting_list.items[msg_type].push(promise_obj);\n        },\n        resolve: (response) => {\n            const msg_type      = response.msg_type;\n            const this_promises = waiting_list.items[msg_type];\n            if (this_promises && this_promises.length) {\n                this_promises.forEach((pr) => {\n                    if (!waiting_list.another_exists(pr, msg_type)) {\n                        pr.resolve(response);\n                    }\n                });\n                waiting_list.items[msg_type] = [];\n            }\n        },\n        another_exists: (pr, msg_type) => (\n            Object.keys(waiting_list.items)\n                .some(type => (\n                    type !== msg_type &&\n                    waiting_list.items[type].indexOf(pr) !== -1\n                ))\n        ),\n    };\n\n    const clearTimeouts = () => {\n        Object.keys(timeouts).forEach((key) => {\n            clearTimeout(timeouts[key]);\n            delete timeouts[key];\n        });\n    };\n\n    const isReady = () => hasReadyState(1);\n\n    const isClose = () => !binary_socket || hasReadyState(2, 3);\n\n    const hasReadyState = (...states) => binary_socket && states.some(s => binary_socket.readyState === s);\n\n    const sendBufferedRequests = () => {\n        while (buffered_sends.length > 0 && is_available) {\n            const req_obj = buffered_sends.shift();\n            send(req_obj.request, req_obj.options);\n        }\n    };\n\n    const wait = (...msg_types) => {\n        const promise_obj = new PromiseClass();\n        let is_resolved   = true;\n        msg_types.forEach((msg_type) => {\n            const last_response = State.get(['response', msg_type]);\n            if (!last_response) {\n                if (msg_type !== 'authorize' || ClientBase.isLoggedIn()) {\n                    waiting_list.add(msg_type, promise_obj);\n                    is_resolved = false;\n                }\n            } else if (msg_types.length === 1) {\n                promise_obj.resolve(last_response);\n            }\n        });\n        if (is_resolved) {\n            promise_obj.resolve();\n        }\n        return promise_obj.promise;\n    };\n\n    /**\n     * @param {Object} data: request object\n     * @param {Object} options:\n     *      forced  : {boolean}  sends the request regardless the same msg_type has been sent before\n     *      msg_type: {string}   specify the type of request call\n     *      callback: {function} to call on response of streaming requests\n     */\n    const send = function (data, options = {}) {\n        const promise_obj = options.promise || new PromiseClass();\n        const has_callback = typeof options.callback === 'function';\n\n        if (!data || isEmptyObject(data)) return promise_obj.promise;\n\n        const msg_type = options.msg_type || no_duplicate_requests.find(c => c in data);\n\n        // Fetch from cache\n        if (!options.forced) {\n            const response = SocketCache.get(data, msg_type);\n            if (response) {\n                State.set(['response', msg_type], cloneObject(response));\n                if (isReady() && is_available && !options.skip_cache_update && !has_callback) { // make the request to keep the cache updated\n                    binary_socket.send(JSON.stringify(data), { forced: true });\n                } else if (+data.time !== 1) { // Do not buffer all time requests\n                    buffered_sends.push({\n                        request: data,\n                        options: Object.assign(options, { promise: promise_obj, forced: true }),\n                    });\n                }\n                promise_obj.resolve(response);\n                if (has_callback) {\n                    options.callback(response);\n                } else {\n                    return promise_obj.promise;\n                }\n            }\n        }\n\n        // Fetch from state\n        if (!options.forced && msg_type && no_duplicate_requests.indexOf(msg_type) !== -1) {\n            const last_response = State.get(['response', msg_type]);\n            if (last_response) {\n                promise_obj.resolve(last_response);\n                return promise_obj.promise;\n            } else if (sent_requests.has(msg_type)) {\n                return wait(msg_type).then((response) => {\n                    promise_obj.resolve(response);\n                    return promise_obj.promise;\n                });\n            }\n        }\n\n        if (!data.req_id) {\n            data.req_id = ++req_id;\n        }\n        promises[data.req_id] = {\n            callback: (response) => {\n                if (has_callback) {\n                    options.callback(response);\n                } else {\n                    promise_obj.resolve(response);\n                }\n            },\n            subscribe: !!data.subscribe,\n        };\n\n        if (isReady() && is_available && config.isOnline()) {\n            is_disconnect_called = false;\n            if (!getPropertyValue(data, 'passthrough') && !getPropertyValue(data, 'verify_email')) {\n                data.passthrough = {};\n            }\n\n            binary_socket.send(JSON.stringify(data));\n            config.wsEvent('send');\n            if (msg_type && !sent_requests.has(msg_type)) {\n                sent_requests.add(msg_type);\n            }\n        } else if (+data.time !== 1) { // Do not buffer all time requests\n            buffered_sends.push({ request: data, options: Object.assign(options, { promise: promise_obj }) });\n        }\n\n        return promise_obj.promise;\n    };\n\n    const init = (options) => {\n        if (wrong_app_id === getAppId()) {\n            return;\n        }\n        if (typeof options === 'object' && config !== options) {\n            config         = options;\n            buffered_sends = [];\n        }\n        clearTimeouts();\n        config.wsEvent('init');\n\n        if (isClose()) {\n            binary_socket = new WebSocket(socket_url);\n            State.set('response', {});\n        }\n\n        binary_socket.onopen = () => {\n            config.wsEvent('open');\n            if (ClientBase.isLoggedIn()) {\n                send({ authorize: ClientBase.get('token') }, { forced: true });\n            } else {\n                sendBufferedRequests();\n            }\n\n            if (typeof config.onOpen === 'function') {\n                config.onOpen(isReady());\n            }\n\n            if (typeof config.onReconnect === 'function' && is_connected_before) {\n                config.onReconnect();\n            }\n\n            if (!is_connected_before) {\n                is_connected_before = true;\n            }\n        };\n\n        binary_socket.onmessage = (msg) => {\n            config.wsEvent('message');\n            const response = msg.data ? JSON.parse(msg.data) : undefined;\n            if (response) {\n                SocketCache.set(response);\n                const msg_type = response.msg_type;\n\n                // store in State\n                if (!getPropertyValue(response, ['echo_req', 'subscribe']) || /balance|website_status/.test(msg_type)) {\n                    State.set(['response', msg_type], cloneObject(response));\n                }\n                // resolve the send promise\n                const this_req_id = response.req_id;\n                const pr          = this_req_id ? promises[this_req_id] : null;\n                if (pr && typeof pr.callback === 'function') {\n                    pr.callback(response);\n                    if (!pr.subscribe) {\n                        delete promises[this_req_id];\n                    }\n                }\n                // resolve the wait promise\n                waiting_list.resolve(response);\n\n                if (getPropertyValue(response, ['error', 'code']) === 'InvalidAppID') {\n                    wrong_app_id = getAppId();\n                }\n\n                if (typeof config.onMessage === 'function') {\n                    config.onMessage(response);\n                }\n            }\n        };\n\n        binary_socket.onclose = () => {\n            sent_requests.clear();\n            clearTimeouts();\n            config.wsEvent('close');\n\n            if (wrong_app_id !== getAppId() && typeof config.onDisconnect === 'function' && !is_disconnect_called) {\n                config.onDisconnect();\n                is_disconnect_called = true;\n            }\n        };\n    };\n\n    const clear = (msg_type) => {\n        buffered_sends = [];\n        if (msg_type) {\n            State.set(['response', msg_type], undefined);\n            sent_requests.remove(msg_type);\n        }\n    };\n\n    const availability = (status) => {\n        if (typeof status !== 'undefined') {\n            is_available = !!status;\n        }\n        return is_available;\n    };\n\n    return {\n        init,\n        wait,\n        send,\n        clear,\n        clearTimeouts,\n        availability,\n        hasReadyState,\n        sendBuffered      : sendBufferedRequests,\n        get               : () => binary_socket,\n        setOnDisconnect   : (onDisconnect) => { config.onDisconnect = onDisconnect; },\n        setOnReconnect    : (onReconnect) => { config.onReconnect = onReconnect; },\n        removeOnReconnect : () => { delete config.onReconnect; },\n        removeOnDisconnect: () => { delete config.onDisconnect; },\n    };\n})();\n\nmodule.exports = BinarySocketBase;\n","const moment           = require('moment');\nconst getLanguage      = require('../language').get;\nconst LocalStore       = require('../storage').LocalStore;\nconst getPropertyValue = require('../utility').getPropertyValue;\nconst getStaticHash    = require('../utility').getStaticHash;\nconst isEmptyObject    = require('../utility').isEmptyObject;\n\n/*\n * Caches WS responses to reduce delay time and number of requests\n * Stores data in LocalStore which is the first one available in: localStorage, sessionStorage, InScriptStore\n *\n * 1. It caches only the response of those calls which determined in `config`\n * 2. It doesn't cache responses which returned error\n * 3. The value is requested by BinarySocket,\n *    if this returns a value according to the logic here, socket code take it as response\n *    but also triggers an async `send` request, to keep the cache updated for next time\n * 4. Uses client's time to set and check for expiry, as the expire durations are not so long to need a more precise one\n *    (And doesn't worth to wait for the response of time call)\n * 5. Some responses should be cached by a particular value from request (e.g. contracts_for_frxAUDJPY)\n *    so there can be more than one value for a particular call\n * 6. Clears the whole cache regardless their expire time on the following events:\n *    6.1. Client changes: login / logout / switch loginid\n *    6.2. Detect a new release (static hash changed)\n */\nconst SocketCache = (() => {\n    // keys are msg_type\n    // expire: how long to keep the value (in minutes)\n    // map_to: to store different responses of the same key, should be array of:\n    //     string  : the property value from echo_req\n    //     function: return value of the function\n    const config = {\n        payout_currencies     : { expire: 120 },\n        proposal_open_contract: { expire: 10,  map_to: ['contract_id'] },\n        active_symbols        : { expire: 10,  map_to: ['product_type', 'landing_company', getLanguage] },\n        contracts_for         : { expire: 10,  map_to: ['contracts_for', 'product_type', 'currency'] },\n        exchange_rates        : { expire: 60,  map_to: ['base_currency'] },\n        ticks_history         : { expire: 10,  map_to: ['ticks_history', 'granularity', 'start', 'end', 'style'] },\n        trading_times         : { expire: 120, map_to: ['trading_times'] },\n        // TODO: Enable statement and profit table caching once we have UI design for handling\n        // transitions between cached table and newly added data to table\n        // statement             : { expire: 10,   map_to: ['limit', 'offset'] },\n        // profit_table          : { expire: 10,   map_to: ['date_from', 'limit', 'offset'] },\n    };\n\n    const storage_key = 'ws_cache';\n\n    let data_obj = {};\n\n    const msg_type_mapping = {\n        history: 'ticks_history',\n        candles: 'ticks_history',\n    };\n\n    const isMarketClosed = (active_symbols = [], symbol) => {\n        if (!active_symbols.length) return false;\n        return (active_symbols.filter(x => x.symbol === symbol)[0]) ?\n            !active_symbols.filter(symbol_info => symbol_info.symbol === symbol)[0].exchange_is_open\n            :\n            false;\n    };\n\n    const set = (response) => {\n        const msg_type = msg_type_mapping[response.msg_type] || response.msg_type;\n\n        // Excluding closed markets from caching once we have ws_cache and active_symbols cache set up\n        const ws_cache = JSON.parse(localStorage.getItem('ws_cache'));\n        // TODO: Update method of getting language from cookies once we have it in ui_store localStorage\n        const curr_lang = document.cookie.replace(/(?:(?:^|.*;\\s*)language\\s*=\\s*([^;]*).*$)|^.*$/, '$1');\n\n        const active_symbols_obj = curr_lang ? `active_symbols___${curr_lang}` : null;\n\n        if (!isEmptyObject(ws_cache)) {\n            if (msg_type === 'ticks_history' && !isEmptyObject(ws_cache[active_symbols_obj])) {\n                const active_symbols = ws_cache[active_symbols_obj].value.active_symbols;\n                const curr_symbol    = response.echo_req.ticks_history;\n                if (isMarketClosed(active_symbols, curr_symbol)) {\n                    return;\n                }\n            }\n        }\n\n        // check if response has subscription, since we only want to cache non-streaming responses\n        if (response.subscription || (response.echo_req.end === 'latest')) return;\n\n        if (!config[msg_type]) return;\n        // prevent unwanted page behaviour\n        // if a cached version already exists but it gives an error after being called for updating the cache\n        const cached_response = get(response.echo_req) || {};\n        const cached_message  = cached_response[msg_type];\n        const new_message     = response[msg_type];\n\n        const has_error_or_missing = response.error; // || !(msg_type in response);\n        const has_new_value        = cached_message && isEmptyValue(cached_message) && !isEmptyValue(new_message);\n        const has_old_cache        = cached_message && isEmptyValue(new_message) && !isEmptyValue(cached_message);\n        const has_valid_cache      = !isEmptyValue(cached_response) && !cached_response.error;\n\n        if ((has_error_or_missing || has_new_value || has_old_cache) && has_valid_cache) {\n            clear();\n            // window.location.reload();\n            return;\n        }\n\n        const key      = makeKey(response.echo_req, msg_type);\n        const expires  = moment().add(config[msg_type].expire, 'm').valueOf();\n\n        if (!data_obj.static_hash) {\n            data_obj.static_hash = getStaticHash();\n        }\n\n        data_obj[key] = { value: response, expires };\n        LocalStore.setObject(storage_key, data_obj);\n    };\n\n    const isEmptyValue = (data) => {\n        let is_empty_data = false;\n        if (Array.isArray(data)) {\n            if (!data.length) {\n                is_empty_data = true;\n            }\n        } else if (typeof response_data === 'object') {\n            if (!Object.keys(data).length) {\n                is_empty_data = true;\n            }\n        }\n        return is_empty_data;\n    };\n\n    const get = (request, msg_type) => {\n        let response;\n\n        if (isEmptyObject(data_obj)) {\n            data_obj = LocalStore.getObject(storage_key);\n            if (isEmptyObject(data_obj)) return undefined;\n        }\n\n        if (data_obj.static_hash !== getStaticHash()) { // new release\n            clear();\n        }\n\n        const key          = makeKey(request, msg_type);\n        const response_obj = getPropertyValue(data_obj, key) || {};\n\n        if (moment().isBefore(response_obj.expires)) {\n            response = response_obj.value;\n        } else { // remove if expired\n            remove(key);\n        }\n\n        return response;\n    };\n\n    const makeKey = (source_obj = {}, msg_type = '') => {\n        let key = msg_type || Object.keys(source_obj).find(type => config[type]);\n\n        if (key && !isEmptyObject(source_obj)) {\n            ((config[key] || {}).map_to || []).forEach((map_key) => {\n                const value = typeof map_key === 'function' ? map_key() : source_obj[map_key];\n                key += map_key ? `_${value || ''}` : '';\n            });\n        }\n\n        return key;\n    };\n\n    const remove = (key, should_match_all) => {\n        if (should_match_all) {\n            Object.keys(data_obj).forEach((data_key) => {\n                if (data_key.indexOf(key) !== -1) {\n                    delete data_obj[data_key];\n                }\n            });\n        } else if (key in data_obj) {\n            delete data_obj[key];\n        }\n        LocalStore.setObject(storage_key, data_obj);\n    };\n\n    const clear = () => {\n        LocalStore.remove(storage_key);\n        data_obj = {};\n    };\n\n    return {\n        set,\n        get,\n        remove,\n        clear,\n    };\n})();\n\nmodule.exports = SocketCache;\n","import { getMarketNamesMap, getContractConfig } from 'Constants';\n\n/**\n * Fetch market information from shortcode\n * @param shortcode: string\n * @returns {{underlying: string, category: string}}\n */\nexport const getMarketInformation = (shortcode) => {\n    const market_info = {\n        category  : '',\n        underlying: '',\n    };\n\n    const pattern = new RegExp('^([A-Z]+)_((OTC_[A-Z0-9]+)|R_[\\\\d]{2,3}|[A-Z]+)_'); // Used to get market name from shortcode\n    const extracted = pattern.exec(shortcode);\n    if (extracted !== null) {\n        market_info.category   = extracted[1].toLowerCase();\n        market_info.underlying = extracted[2];\n    }\n\n    return market_info;\n};\n\nexport const getMarketName = (underlying) => underlying ? getMarketNamesMap()[underlying.toUpperCase()] : null;\n\nexport const getTradeTypeName = (category) => category ? getContractConfig()[category.toUpperCase()].name : null;\n","import Client            from '_common/base/client_base';\nimport SocketCache       from '_common/base/socket_cache';\nimport { removeCookies } from '_common/storage';\nimport WS                from './ws-methods';\n\nexport const requestLogout = () =>\n    WS.logout().then(doLogout);\n\nconst doLogout = (response) => {\n    if (response.logout !== 1) return;\n    removeCookies('affiliate_token', 'affiliate_tracking');\n    Client.clearAllAccounts();\n    Client.set('loginid', '');\n    SocketCache.clear();\n};\n","const createElement = require('./utility').createElement;\n\n/*\n * function to check if element is visible or not\n *\n */\nconst isVisible = elem => !(!elem || (elem.offsetWidth === 0 && elem.offsetHeight === 0));\n\n/*\n * @param  {String}  id_selector   the selector for the element\n * @param  {Element} parent        optional selector to use for parent, defaults to document\n * @return {Element}               return element if it exists, if it doesn't return a dummy element\n */\nconst getElementById = (id_selector, parent = document) => parent.getElementById(id_selector) || createElement('div');\n\nmodule.exports = {\n    isVisible,\n    getElementById,\n};\n","const toTitleCase = str => (\n    (str || '').replace(/\\w[^\\s/\\\\]*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase())\n);\n\nconst padLeft = (txt, len, char) => {\n    const text = String(txt || '');\n    return text.length >= len ? text : `${Array((len - text.length) + 1).join(char)}${text}`;\n};\n\nconst compareBigUnsignedInt = (a, b) => {\n    let first_num  = numberToString(a);\n    let second_num = numberToString(b);\n    if (!first_num || !second_num) {\n        return '';\n    }\n    const max_length = Math.max(first_num.length, second_num.length);\n    first_num        = padLeft(first_num, max_length, '0');\n    second_num       = padLeft(second_num, max_length, '0');\n\n    // lexicographical comparison\n    let order = 0;\n    if (first_num !== second_num) {\n        order = first_num > second_num ? 1 : -1;\n    }\n\n    return order;\n};\n\nconst numberToString = n => (typeof n === 'number' ? String(n) : n);\n\nmodule.exports = {\n    toTitleCase,\n    padLeft,\n    numberToString,\n    compareBigUnsignedInt,\n};\n","import { localize } from 'App/i18n';\n\nexport const getLocalizedBasis = () => ({\n    payout    : localize('Payout'),\n    stake     : localize('Stake'),\n    multiplier: localize('Multiplier'),\n});\n\n/**\n * components can be undef or an array containing any of: 'start_date', 'barrier', 'last_digit'\n *     ['duration', 'amount'] are omitted, as they're available in all contract types\n */\nexport const getContractTypesConfig = () => (\n    {\n        rise_fall      : { title: localize('Rise/Fall'),                  trade_types: ['CALL', 'PUT'],               basis: ['stake', 'payout'], components: ['start_date'], barrier_count: 0 },\n        rise_fall_equal: { title: localize('Rise/Fall'),                  trade_types: ['CALLE', 'PUTE'],             basis: ['stake', 'payout'], components: ['start_date'], barrier_count: 0 },\n        high_low       : { title: localize('Higher/Lower'),               trade_types: ['CALL', 'PUT'],               basis: ['stake', 'payout'], components: ['barrier'],    barrier_count: 1 },\n        touch          : { title: localize('Touch/No Touch'),             trade_types: ['ONETOUCH', 'NOTOUCH'],       basis: ['stake', 'payout'], components: ['barrier'] },\n        end            : { title: localize('Ends Between/Ends Outside'),  trade_types: ['EXPIRYMISS', 'EXPIRYRANGE'], basis: ['stake', 'payout'], components: ['barrier'] },\n        stay           : { title: localize('Stays Between/Goes Outside'), trade_types: ['RANGE', 'UPORDOWN'],         basis: ['stake', 'payout'], components: ['barrier'] },\n        asian          : { title: localize('Asians'),                     trade_types: ['ASIANU', 'ASIAND'],          basis: ['stake', 'payout'], components: [] },\n        match_diff     : { title: localize('Matches/Differs'),            trade_types: ['DIGITMATCH', 'DIGITDIFF'],   basis: ['stake', 'payout'], components: ['last_digit'] },\n        even_odd       : { title: localize('Even/Odd'),                   trade_types: ['DIGITODD', 'DIGITEVEN'],     basis: ['stake', 'payout'], components: [] },\n        over_under     : { title: localize('Over/Under'),                 trade_types: ['DIGITOVER', 'DIGITUNDER'],   basis: ['stake', 'payout'], components: ['last_digit'] },\n        lb_call        : { title: localize('Close-Low'),                  trade_types: ['LBFLOATCALL'],               basis: ['multiplier'],      components: [] },\n        lb_put         : { title: localize('High-Close'),                 trade_types: ['LBFLOATPUT'],                basis: ['multiplier'],      components: [] },\n        lb_high_low    : { title: localize('High-Low'),                   trade_types: ['LBHIGHLOW'],                 basis: ['multiplier'],      components: [] },\n    }\n);\n\nexport const getContractCategoriesConfig = () => (\n    {\n        [localize('Up/Down')]       : ['rise_fall', 'rise_fall_equal', 'high_low'],\n        [localize('Touch/No Touch')]: ['touch'],\n        [localize('In/Out')]        : ['end', 'stay'],\n        [localize('Asians')]        : ['asian'],\n        [localize('Digits')]        : ['match_diff', 'even_odd', 'over_under'],\n        // [localize('Lookback')]      : ['lb_call', 'lb_put', 'lb_high_low'],\n    }\n);\n","import {\n    inject,\n    Provider,\n    observer }   from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst SPECIAL_REACT_KEYS = { children: true, key: true, ref: true };\n\nexport class MobxProvider extends Provider {\n    getChildContext() {\n        const stores = {};\n\n        // inherit stores\n        const baseStores = this.context.mobxStores;\n        if (baseStores) {\n            for (const key in baseStores) { // eslint-disable-line\n                stores[key] = baseStores[key];\n            }\n        }\n\n        // add own stores\n        for (const key in this.props.store) { // eslint-disable-line\n            if (!SPECIAL_REACT_KEYS[key]) {\n                stores[key] = this.props.store[key];\n            }\n        }\n\n        return {\n            mobxStores: stores,\n            ...stores,\n        };\n    }\n\n    static childContextTypes = {\n        mobxStores: PropTypes.object,\n        client    : PropTypes.object,\n        common    : PropTypes.object,\n        gtm       : PropTypes.object,\n        modules   : PropTypes.object,\n        ui        : PropTypes.object,\n    };\n}\n\nconst connect_global_store = (mapper) => Component => inject(mapper)(observer(Component));\n\nexport const connect = (StoreClass, mapper) => Component => {\n    if (!mapper) {\n        return connect_global_store(StoreClass)(Component);\n    }\n\n    const observed = observer(Component);\n\n    class StoredComponent extends Component {\n        store = new StoreClass();\n\n        render() {\n            return React.createElement(\n                observed,\n                {\n                    ...this.props,\n                    store: this.store,\n                },\n                this.props.children,\n            );\n        }\n\n        propTypes = {\n            children: PropTypes.object,\n        }\n    }\n\n    const wrappedDisplayName = Component.displayName\n        || Component.name\n        || (Component.constructor && Component.constructor.name)\n        || 'Unknown';\n    StoredComponent.displayName = `store-${wrappedDisplayName}`;\n\n    return inject(mapper)(StoredComponent);\n};\n","import { localize }        from 'App/i18n';\nimport { unique }          from '_common/utility';\nimport {\n    epochToMoment,\n    formatMiliseconds,\n    getDiffDuration }      from 'Utils/Date';\nimport { isDigitContract } from '../../Contract/Helpers/digits';\n\nexport const getCurrentTick = (contract_info) => {\n    const tick_stream = unique(contract_info.tick_stream, 'epoch');\n    const current_tick = isDigitContract(contract_info.contract_type) ? tick_stream.length : tick_stream.length - 1;\n    return (!current_tick || current_tick < 0) ? 0 : current_tick;\n};\n\nexport const getDurationUnitValue = (obj_duration) => {\n    const duration_ms = obj_duration.asMilliseconds() / 1000;\n    // Check with isEndTime to find out if value of duration has decimals\n    // for days we do not require precision for End Time value since users cannot select with timepicker if not in same day\n    // Seconds is the smallest End Time duration displayed thus we can keep the same formatting as normal Duration\n\n    if (duration_ms >= 86400000) {\n        const duration = duration_ms / (1000 * 60 * 60 * 24);\n        return Math.floor(duration);\n    } else if (duration_ms >= 3600000 && duration_ms < 86400000) {\n        const duration      = duration_ms / (1000 * 60 * 60);\n        const is_end_time   = isEndTime(duration);\n        const has_seconds   = isEndTime(duration_ms / (1000 * 60));\n        const string_format = has_seconds ? 'HH[h] mm[m] ss[s]' : 'HH[h] mm[m]';\n\n        return is_end_time ?\n            formatMiliseconds(duration_ms, string_format)\n            :\n            Math.floor(duration_ms / (1000 * 60 * 60));\n    } else if (duration_ms >= 60000 && duration_ms < 3600000) {\n        const duration = duration_ms / (1000 * 60);\n        const is_end_time = isEndTime(duration);\n        return is_end_time ?\n            formatMiliseconds(duration_ms, 'mm[m] ss[s]')\n            :\n            Math.floor(duration_ms / (1000 * 60));\n    } else if (duration_ms >= 1000 && duration_ms < 60000) {\n        return Math.floor(duration_ms / 1000);\n    }\n    return Math.floor(duration_ms / 1000);\n};\n\nexport const isEndTime = (duration) => (duration % 1) !== 0;\n\nexport const getDurationUnitText = (obj_duration) => {\n    const unit_map = {\n        d: { name_plural: localize('days'),    name_singular: localize('day') },\n        h: { name_plural: localize('hours'),   name_singular: localize('hour') },\n        m: { name_plural: localize('minutes'), name_singular: localize('minute') },\n        s: { name: localize('seconds') },\n    };\n    const duration_ms = obj_duration.asMilliseconds() / 1000;\n    // return empty suffix string if duration is End Time set except for days and seconds, refer to L18 and L19\n\n    if (duration_ms) {\n        if (duration_ms >= 86400000) {\n            const days_value = duration_ms / 86400000;\n            return (days_value <= 2) ? unit_map.d.name_singular : unit_map.d.name_plural;\n        } else if (duration_ms >= 3600000 && duration_ms < 86400000) {\n            if (isEndTime(duration_ms / (1000 * 60 * 60))) return '';\n            return (duration_ms === 3600000) ? unit_map.h.name_singular : unit_map.h.name_plural;\n        } else if (duration_ms >= 60000 && duration_ms < 3600000) {\n            if (isEndTime(duration_ms / (1000 * 60))) return '';\n            return (duration_ms === 60000) ? unit_map.m.name_singular : unit_map.m.name_plural;\n        } else if (duration_ms >= 1000 && duration_ms < 60000) {\n            return unit_map.s.name;\n        }\n    }\n    return unit_map.s.name;\n};\n\nexport const getDurationPeriod = (contract_info) => (\n    getDiffDuration(\n        epochToMoment(contract_info.purchase_time || contract_info.date_start),\n        epochToMoment(contract_info.date_expiry)\n    )\n);\n\nexport const getDurationTime = (contract_info) => (\n    contract_info.tick_count ?\n        contract_info.tick_count\n        :\n        getDurationUnitValue(getDurationPeriod(contract_info))\n);\n","export const MAX_MOBILE_WIDTH = 767;\nexport const MAX_TABLET_WIDTH = 1024;\n","const getLanguage      = require('../language').get;\nconst localize         = require('../../App/i18n').localize;\nconst getPropertyValue = require('../utility').getPropertyValue;\n\nlet currencies_config = {};\n\nconst getTextFormat = (number, currency) => `${currency} ${addComma(number, getDecimalPlaces(currency), isCryptocurrency(currency))}`;\n\nconst formatMoney = (currency_value, amount, exclude_currency, decimals = 0, minimumFractionDigits = 0) => {\n    let money = amount;\n    if (money) money = String(money).replace(/,/g, '');\n    const sign           = money && Number(money) < 0 ? '-' : '';\n    const decimal_places = decimals || getDecimalPlaces(currency_value);\n\n    money = isNaN(money) ? 0 : Math.abs(money);\n    if (typeof Intl !== 'undefined') {\n        const options = {\n            minimumFractionDigits: minimumFractionDigits || decimal_places,\n            maximumFractionDigits: decimal_places,\n        };\n        money = new Intl.NumberFormat(getLanguage().toLowerCase().replace('_', '-'), options).format(money);\n    } else {\n        money = addComma(money, decimal_places);\n    }\n\n    return sign + (exclude_currency ? '' : formatCurrency(currency_value)) + money;\n};\n\nconst formatCurrency = currency => `<span class=\"symbols ${(currency || '').toLowerCase()}\"></span>`;\n\nconst addComma = (num, decimal_points, is_crypto) => {\n    let number = String(num || 0).replace(/,/g, '');\n    if (typeof decimal_points !== 'undefined') {\n        number = (+number).toFixed(decimal_points);\n    }\n    if (is_crypto) {\n        number = parseFloat(+number);\n    }\n\n    return number.toString().replace(/(^|[^\\w.])(\\d{4,})/g, ($0, $1, $2) => (\n        $1 + $2.replace(/\\d(?=(?:\\d\\d\\d)+(?!\\d))/g, '$&,')\n    ));\n};\n\nconst calcDecimalPlaces = (currency) => isCryptocurrency(currency) ? 8 : 2;\n\nconst getDecimalPlaces = (currency) => (\n    // need to check currencies_config[currency] exists instead of || in case of 0 value\n    currencies_config[currency] ? getPropertyValue(currencies_config, [currency, 'fractional_digits']) : calcDecimalPlaces(currency)\n);\n\nconst setCurrencies = (website_status) => {\n    currencies_config = website_status.currencies_config;\n};\n\n// (currency in crypto_config) is a back-up in case website_status doesn't include the currency config, in some cases where it's disabled\nconst isCryptocurrency = currency => /crypto/i.test(getPropertyValue(currencies_config, [currency, 'type'])) || (currency in CryptoConfig.get());\n\nconst CryptoConfig = (() => {\n    let crypto_config;\n\n    const initCryptoConfig = () => ({\n        BTC: { name: localize('Bitcoin'),       min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        BCH: { name: localize('Bitcoin Cash'),  min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        ETH: { name: localize('Ether'),         min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        ETC: { name: localize('Ether Classic'), min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        LTC: { name: localize('Litecoin'),      min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        UST: { name: localize('Tether'),        min_withdrawal: 0.02,  pa_max_withdrawal: 2000, pa_min_withdrawal: 10 },\n        USB: { name: localize('Binary Coin'),   min_withdrawal: 0.02,  pa_max_withdrawal: 2000, pa_min_withdrawal: 10 },\n    });\n\n    return {\n        get: () => {\n            if (!crypto_config) {\n                crypto_config = initCryptoConfig();\n            }\n            return crypto_config;\n        },\n    };\n})();\n\nconst getMinWithdrawal = currency => (isCryptocurrency(currency) ? (getPropertyValue(CryptoConfig.get(), [currency, 'min_withdrawal']) || 0.002) : 1);\n\n/**\n * Returns the transfer limits for the account.\n * @param currency\n * @param {string} max|undefined\n * @returns numeric|undefined\n */\nconst getTransferLimits = (currency, which) => {\n    const transfer_limits = getPropertyValue(currencies_config, [currency, 'transfer_between_accounts', 'limits']) || getMinWithdrawal(currency);\n    const decimals        = getDecimalPlaces(currency);\n    if (which === 'max') {\n        return transfer_limits.max ? transfer_limits.max.toFixed(decimals) : undefined;\n    }\n\n    return transfer_limits.min ? transfer_limits.min.toFixed(decimals) : undefined;\n};\n\nconst getTransferFee = (currency_from, currency_to) => {\n    const transfer_fee = getPropertyValue(currencies_config, [currency_from, 'transfer_between_accounts', 'fees', currency_to]);\n    return `${typeof transfer_fee === 'undefined' ? '1' : transfer_fee}%`;\n};\n\n// returns in a string format, e.g. '0.00000001'\nconst getMinimumTransferFee = (currency) => {\n    const decimals = getDecimalPlaces(currency);\n    return `${currency} ${(1 / Math.pow(10, decimals)).toFixed(decimals)}`; // we need toFixed() so that it doesn't display in scientific notation, e.g. 1e-8 for currencies with 8 decimal places\n};\n\n// @param {String} limit = max|min\nconst getPaWithdrawalLimit = (currency, limit) => {\n    if (isCryptocurrency(currency)) {\n        return getPropertyValue(CryptoConfig.get(), [currency, `pa_${limit}_withdrawal`]); // pa_min_withdrawal and pa_max_withdrawal used here\n    }\n    return limit === 'max' ? 2000 : 10; // limits for fiat currency\n};\n\nconst getCurrencyName = currency => getPropertyValue(CryptoConfig.get(), [currency, 'name']) || '';\n\nconst getMinPayout = currency => getPropertyValue(currencies_config, [currency, 'stake_default']);\n\nmodule.exports = {\n    formatMoney,\n    formatCurrency,\n    addComma,\n    getDecimalPlaces,\n    setCurrencies,\n    isCryptocurrency,\n    getCurrencyName,\n    getMinWithdrawal,\n    getTransferLimits,\n    getTransferFee,\n    getMinimumTransferFee,\n    getTextFormat,\n    getMinPayout,\n    getPaWithdrawalLimit,\n    getCurrencies: () => currencies_config,\n};\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport { Link }   from 'react-router-dom';\n\nconst ButtonLink = ({ children, className, to, onClick }) => (\n    <Link\n        className={classNames('btn btn--link', className, 'effect')}\n        to={to}\n        onClick={onClick}\n    >\n        {children}\n    </Link>\n);\n\nButtonLink.propTypes = {\n    children : PropTypes.object,\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n    to       : PropTypes.string,\n};\n\nexport default ButtonLink;\n","import classNames                  from 'classnames';\nimport React                       from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport Icon                        from 'Assets/icon.jsx';\nimport routes                      from 'Constants/routes';\n\nclass VerticalTabContentContainer extends React.PureComponent {\n    render() {\n        const {\n            action_bar,\n            action_bar_classname,\n            is_routed,\n            items,\n            selected,\n        } = this.props;\n        const selected_item = items.find(item => item.label === selected.label);\n        const TabContent    = selected_item.value;\n\n        return (\n            <div className='vertical-tab__content'>\n                { action_bar &&\n                    <div className={classNames('vertical-tab__action-bar', {\n                        [action_bar_classname]: !!action_bar_classname,\n                    })}\n                    >\n                        {\n                            action_bar.map(({ component, icon, onClick, title }) => {\n                                const Component = component;\n                                return (\n                                    component ?\n                                        <Component key={title} />\n                                        :\n                                        <div\n                                            className='vertical-tab__action-bar-wrapper'\n                                            key={title}\n                                            onClick={onClick}\n                                        >\n                                            <Icon\n                                                className='vertical-tab__action-bar--icon'\n                                                icon={icon}\n                                            />\n                                        </div>\n                                );\n                            })\n                        }\n                    </div>\n                }\n                { is_routed ?\n                    <Switch>\n                        <Redirect exact from={routes.reports} to={routes.positions} />\n                        {\n                            items.map(({ value, path, icon }) => {\n                                const Component = value;\n                                return (\n                                    <Route\n                                        key={path}\n                                        path={path}\n                                        render={() => <Component component_icon={icon} />}\n                                    />\n                                );\n                            })\n                        }\n                    </Switch>\n                    :\n                    <TabContent\n                        key={selected_item.label}\n                        className='item-id'\n                    />\n                }\n            </div>\n        );\n    }\n}\n\nexport { VerticalTabContentContainer };\n","import classNames  from 'classnames';\nimport React       from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Icon        from 'Assets/icon.jsx';\n\nclass VerticalTabHeaders extends React.PureComponent {\n    render() {\n        return (\n            <div className='vertical-tab__tab'>\n                {this.props.header_title &&\n                    <div className='vertical-tab__header-title'>\n                        <p>{ this.props.header_title }</p>\n                    </div>\n                }\n\n                {this.props.items.map(item => {\n                    // Capitalize only the first letter of the label and make the rest lowercase\n                    const label = item.label.charAt(0).toUpperCase() + item.label.slice(1).toLowerCase();\n\n                    return (\n                        this.props.is_routed ?\n                            <NavLink\n                                key={item.path}\n                                to={item.path}\n                                onClick={() => this.props.onChange(item)}\n                                className='vertical-tab__header'\n                                activeClassName={\n                                    classNames({\n                                        'vertical-tab__header--active': this.props.selected.label === item.label,\n                                    })\n                                }\n                            >\n                                <Icon\n                                    icon={item.icon}\n                                    className={classNames('vertical-tab__header__icon', {\n                                        'vertical-tab__header__icon--active': this.props.selected.label === item.label,\n                                    })}\n                                />\n                                <span className='vertical-tab__header__link'>{label}</span>\n                            </NavLink>\n                            :\n                            <div\n                                className={\n                                    classNames('vertical-tab__header', {\n                                        'vertical-tab__header--active': this.props.selected.label === item.label,\n                                    })\n                                }\n                                key={item.label}\n                                onClick={() => this.props.onChange(item)}\n                            >\n                                <Icon\n                                    icon={item.icon}\n                                    className={classNames('vertical-tab__header__icon', {\n                                        'vertical-tab__header__icon--active': this.props.selected.label === item.label,\n                                    })}\n                                />\n                                <a\n                                    key={item.label}\n                                    className='vertical-tab__header__link'\n                                >\n                                    {label}\n                                </a>\n                            </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport { VerticalTabHeaders };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Icon       from 'Assets/icon.jsx';\n\nconst FullScreenDialog = (props) => {\n    const { title, visible, children, wrapperClassName } = props;\n\n    const checkVisibility = () => {\n        if (props.visible) {\n            document.body.classList.add('no-scroll');\n            document.getElementById('deriv_app').classList.add('no-scroll');\n        } else {\n            document.body.classList.remove('no-scroll');\n            document.getElementById('deriv_app').classList.remove('no-scroll');\n        }\n    };\n\n    const scrollToElement = (parent, el) => {\n        const viewport_offset = el.getBoundingClientRect();\n        const hidden = viewport_offset.top + el.clientHeight + 20 > window.innerHeight;\n        if (hidden) {\n            const new_el_top = (window.innerHeight - el.clientHeight) / 2;\n            parent.scrollTop += viewport_offset.top - new_el_top;\n        }\n    };\n\n    // sometimes input is covered by virtual keyboard on mobile chrome, uc browser\n    const handleClick = (e) => {\n        if (e.target.tagName === 'INPUT' && e.target.type === 'number') {\n            const scrollToTarget = scrollToElement(e.currentTarget, e.target);\n            window.addEventListener('resize', scrollToTarget, false);\n\n            // remove listener, resize is not fired on iOS safari\n            window.setTimeout(() => {\n                window.removeEventListener('resize', scrollToTarget, false);\n            }, 2000);\n        }\n    };\n\n    checkVisibility();\n\n    return (\n        <div\n            className={classNames('fullscreen-dialog', {\n                'fullscreen-dialog--open': visible,\n            })}\n            onClick={handleClick}\n        >\n            <div className='fullscreen-dialog__header'>\n                <h2 className='fullscreen-dialog__title'>\n                    {title}\n                </h2>\n                <div\n                    className='icons btn-close fullscreen-dialog__close-btn'\n                    onClick={props.onClose}\n                >\n                    <Icon icon='IconClose' className='fullscreen-dialog__close-btn-icon' />\n                </div>\n            </div>\n            <div className='fullscreen-dialog__header-shadow-cover' />\n            <div className='fullscreen-dialog__header-shadow' />\n            <div className='fullscreen-dialog__content'>\n                <div className={`fullscreen-dialog__${wrapperClassName || 'contracts-modal-list'}`}>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nFullScreenDialog.propTypes = {\n    children        : PropTypes.any,\n    onClose         : PropTypes.func,\n    title           : PropTypes.string,\n    visible         : PropTypes.bool,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default FullScreenDialog;\n","import { action, flow }     from 'mobx';\nimport Login                from '_common/base/login';\nimport ServerTime           from '_common/base/server_time';\nimport BinarySocket         from '_common/base/socket_base';\nimport { State }            from '_common/storage';\nimport { getPropertyValue } from '_common/utility';\nimport { localize }         from 'App/i18n';\nimport { requestLogout }    from './logout';\nimport WS                   from './ws-methods';\n\nlet client_store,\n    common_store,\n    gtm_store;\n\n// TODO: update commented statements to the corresponding functions from app\nconst BinarySocketGeneral = (() => {\n    const onDisconnect = () => {\n        common_store.setIsSocketOpened(false);\n    };\n\n    const onOpen = (is_ready) => {\n        // Header.hideNotification();\n        if (is_ready) {\n            if (!Login.isLoginPages()) {\n                if (!client_store.is_valid_login) {\n                    requestLogout();\n                    return;\n                }\n                WS.subscribeWebsiteStatus(ResponseHandlers.websiteStatus);\n            }\n            ServerTime.init(action('setTime', () => { common_store.server_time = ServerTime.get(); }));\n            common_store.setIsSocketOpened(true);\n        }\n    };\n\n    const onMessage = (response) => {\n        handleError(response);\n        // Header.hideNotification('CONNECTION_ERROR');\n        switch (response.msg_type) {\n            case 'authorize':\n                if (response.error) {\n                    const is_active_tab = sessionStorage.getItem('active_tab') === '1';\n                    if (getPropertyValue(response, ['error', 'code']) === 'SelfExclusion' && is_active_tab) {\n                        sessionStorage.removeItem('active_tab');\n                        // Dialog.alert({ id: 'authorize_error_alert', message: response.error.message });\n                    }\n                    requestLogout();\n                } else if (!Login.isLoginPages() && !/authorize/.test(State.get('skip_response'))) {\n                    // is_populating_account_list is a check to avoid logout on the first logged-in session\n                    // In any other case, if the response loginid does not match the store's loginid, user must be logged out\n                    if (response.authorize.loginid !== client_store.loginid &&\n                        !client_store.is_populating_account_list) {\n                        requestLogout();\n                    } else if (response.authorize.loginid === client_store.loginid) {\n                        // All other cases continue with the loginid and authorize the profile\n                        authorizeAccount(response);\n                    }\n                }\n                break;\n            case 'landing_company':\n                // Header.upgradeMessageVisibility();\n                break;\n            case 'get_self_exclusion':\n                // SessionDurationLimit.exclusionResponseHandler(response);\n                break;\n            case 'get_settings':\n                if (response.get_settings) {\n                    setResidence(response.get_settings.country_code);\n                    client_store.setEmail(response.get_settings.email);\n                    gtm_store.eventHandler(response.get_settings);\n                }\n                break;\n            case 'payout_currencies':\n                client_store.responsePayoutCurrencies(response.payout_currencies);\n                break;\n            case 'transaction':\n                gtm_store.pushTransactionData(response);\n                break;\n            // no default\n        }\n    };\n\n    const setResidence = (residence) => {\n        if (residence) {\n            client_store.setResidence(residence);\n            WS.landingCompany(residence);\n        }\n    };\n\n    const setBalance = flow(function* (balance) {\n        yield BinarySocket.wait('website_status');\n        client_store.setBalance(balance);\n    });\n\n    const handleError = (response) => {\n        const msg_type   = response.msg_type;\n        const error_code = getPropertyValue(response, ['error', 'code']);\n        switch (error_code) {\n            case 'WrongResponse':\n            case 'InternalServerError':\n            case 'OutputValidationFailed': {\n                if (msg_type !== 'mt5_login_list') {\n                    common_store.setError(true, { message: response.error.message });\n                }\n                break;\n            }\n            case 'RateLimit':\n                if (msg_type !== 'cashier_password') {\n                    common_store.setError(true, { message: localize('You have reached the rate limit of requests per second. Please try later.') });\n                }\n                break;\n            case 'InvalidAppID':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'DisabledClient':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            // no default\n        }\n    };\n\n    const init = (store) => {\n        client_store = store.client;\n        common_store = store.common;\n        gtm_store    = store.gtm;\n\n        return {\n            onDisconnect,\n            onOpen,\n            onMessage,\n        };\n    };\n\n    const authorizeAccount = (response) => {\n        client_store.responseAuthorize(response);\n        WS.subscribeBalance(ResponseHandlers.balance, true);\n        WS.sendRequest({ get_settings: 1 }, { forced: true });\n        WS.getAccountStatus();\n        WS.payoutCurrencies();\n        WS.mt5LoginList();\n        setResidence(\n            response.authorize.country ||\n            client_store.accounts[client_store.loginid].residence\n        );\n        if (!client_store.is_virtual) {\n            WS.getSelfExclusion();\n        }\n        BinarySocket.sendBuffered();\n        if (/bch/i.test(response.authorize.currency) && !client_store.accounts[client_store.loginid].accepted_bch) {\n            // showPopup({\n            //     url        : urlFor('user/warning'),\n            //     popup_id   : 'warning_popup',\n            //     form_id    : '#frm_warning',\n            //     content_id : '#warning_content',\n            //     validations: [{ selector: '#chk_accept', validations: [['req', { hide_asterisk: true }]] }],\n            //     onAccept   : () => { Client.set('accepted_bch', 1); },\n            // });\n        }\n    };\n\n    return {\n        init,\n        setBalance,\n        authorizeAccount,\n    };\n})();\n\nexport default BinarySocketGeneral;\n\nconst ResponseHandlers = (() => {\n    let is_available = false;\n    const websiteStatus = (response) => {\n        if (response.website_status) {\n            is_available = /^up$/i.test(response.website_status.site_status);\n            if (is_available && !BinarySocket.availability()) {\n                window.location.reload();\n                return;\n            }\n            if (response.website_status.message) {\n                // Footer.displayNotification(response.website_status.message);\n            } else {\n                // Footer.clearNotification();\n            }\n            BinarySocket.availability(is_available);\n            client_store.setWebsiteStatus(response);\n        }\n    };\n\n    const balance = (response) => {\n        if (!response.error){\n            BinarySocketGeneral.setBalance(response.balance.balance);\n        }\n    };\n\n    return {\n        websiteStatus,\n        balance,\n    };\n})();\n","import PropTypes      from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect }    from 'Stores/connect';\nimport routes         from '../../../Constants/routes';\n\nconst Redirect = ({\n    history,\n    setCashierActiveTab,\n    setVerificationCode,\n    toggleAccountSignupModal,\n    toggleCashierModal,\n}) => {\n    const url_params = new URLSearchParams(window.location.search);\n\n    setVerificationCode(url_params.get('code'));\n\n    switch (url_params.get('action')) {\n        case 'signup': {\n            toggleAccountSignupModal(true);\n            break;\n        }\n        case 'payment_withdraw': {\n            setCashierActiveTab('withdraw');\n            toggleCashierModal(true);\n            break;\n        }\n        default: break;\n    }\n\n    // Clear URL search params and route to root (currently set to `trade`)\n    window.history.replaceState({}, document.title, '/');\n    history.push(routes.root);\n\n    return null;\n};\n\nRedirect.propTypes = {\n    history                 : PropTypes.object,\n    setVerificationCode     : PropTypes.func,\n    toggleAccountSignupModal: PropTypes.func,\n    toggleCashierModal      : PropTypes.func,\n};\n\nexport default withRouter(connect(\n    ({ client, ui }) => ({\n        setCashierActiveTab     : ui.setCashierActiveTab,\n        setVerificationCode     : client.setVerificationCode,\n        toggleAccountSignupModal: ui.toggleAccountSignupModal,\n        toggleCashierModal      : ui.toggleCashierModal,\n    }),\n)(Redirect));\n","import React        from 'react';\nimport { localize } from 'App/i18n';\nimport Icon         from 'Assets/icon.jsx';\n\nconst EmptyPortfolioMessage = ({ error }) => (\n    <div className='portfolio-empty'>\n        <div className='portfolio-empty__wrapper'>\n            { error ?\n                <span className='portfolio-empty__text'>{error}</span>\n                :\n                <React.Fragment>\n                    <Icon icon='IconPositions' className='portfolio-empty__icon' />\n                    <span className='portfolio-empty__text'>{localize('No open positions')}</span>\n                </React.Fragment>\n            }\n        </div>\n    </div>\n);\n\nexport default EmptyPortfolioMessage;\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nconst ContractLink = ({\n    contract_id,\n    children,\n    className,\n    openContract,\n}) => (\n    <a\n        className={className}\n        href='javascript:;'\n        onClick={() => openContract(contract_id, true)}\n    >\n        {children}\n    </a>\n);\n\nContractLink.propTypes = {\n    children   : PropTypes.node,\n    className  : PropTypes.string,\n    contract_id: PropTypes.number,\n    onMount    : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        openContract: modules.contract_trade.onMount,\n    }),\n)(ContractLink);\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" {...props}><g fill=\"none\" fillRule=\"evenodd\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#4BBFAB\" /><path fill=\"#FFF\" fillRule=\"nonzero\" d=\"M6.5 10.8l5.65-5.65a.5.5 0 0 1 .7.7l-6 6a.5.5 0 0 1-.7 0l-3-3a.5.5 0 1 1 .7-.7l2.65 2.64z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" {...props}><g fill=\"none\" fillRule=\"evenodd\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#E31C4B\" fillRule=\"nonzero\" /><path stroke=\"#FFF\" strokeLinecap=\"round\" d=\"M10.5 5.5l-5 5m5 0l-5-5\" /></g></svg>);","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { NavLink }         from 'react-router-dom';\nimport { getContractPath } from 'App/Components/Routes/helpers';\nimport IconCheck           from 'Assets/SvgComponents/portfolio/ic-check.svg';\nimport IconCross           from 'Assets/SvgComponents/portfolio/ic-cross.svg';\nimport { localize }        from 'App/i18n';\n\nclass ResultOverlay extends React.PureComponent {\n\n    handleClick = (e) => {\n        if (this.props.is_unsupported) {\n            e.preventDefault();\n            this.props.onClick();\n        }\n    }\n\n    render() {\n        const {\n            contract_id,\n            is_visible,\n            onClickRemove,\n            result } = this.props;\n        const is_contract_won = (result === 'won');\n        return (\n            <React.Fragment>\n                <CSSTransition\n                    in={is_visible}\n                    timeout={250}\n                    classNames={{\n                        enter    : 'positions-drawer-card__result--enter',\n                        enterDone: 'positions-drawer-card__result--enter-done',\n                        exit     : 'positions-drawer-card__result--exit',\n                    }}\n                    unmountOnExit\n                >\n                    <div className={classNames('positions-drawer-card__result', {\n                        'positions-drawer-card__result--won' : is_contract_won,\n                        'positions-drawer-card__result--lost': !is_contract_won,\n                    })}\n                    >\n                        <span\n                            className='result__close-btn'\n                            onClick={() => onClickRemove(contract_id)}\n                        />\n                        <NavLink\n                            className='result__caption-wrapper'\n                            to={getContractPath(contract_id)}\n                            onClick={this.handleClick}\n                        >\n                            <span\n                                className={classNames('result__caption', {\n                                    'result__caption--won' : is_contract_won,\n                                    'result__caption--lost': !is_contract_won,\n                                }\n                                )}\n                            >\n                                {\n                                    (is_contract_won) ?\n                                        <React.Fragment>\n                                            {localize('won')}\n                                            <IconCheck className='result__icon' />\n                                        </React.Fragment>\n                                        :\n                                        <React.Fragment>\n                                            {localize('lost')}\n                                            <IconCross className='result__icon' />\n                                        </React.Fragment>\n                                }\n                            </span>\n                        </NavLink>\n                    </div>\n                </CSSTransition>\n            </React.Fragment>\n        );\n    }\n}\n\nResultOverlay.propTypes = {\n    contract_id              : PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    has_same_contract_mounted: PropTypes.bool,\n    is_unsupported           : PropTypes.bool,\n    is_visible               : PropTypes.bool,\n    onClick                  : PropTypes.func,\n    onClickRemove            : PropTypes.func,\n    result                   : PropTypes.string,\n};\n\nexport default ResultOverlay;\n","import classNames              from 'classnames';\nimport PropTypes               from 'prop-types';\nimport React                   from 'react';\nimport { CSSTransition }       from 'react-transition-group';\nimport ContractLink            from 'Modules/Contract/Containers/contract-link.jsx';\nimport Shortcode               from 'Modules/Reports/Helpers/shortcode';\nimport { isCryptocurrency }    from '_common/base/currency_base';\nimport { localize }            from 'App/i18n';\nimport Icon                    from 'Assets/icon.jsx';\nimport Button                  from 'App/Components/Form/button.jsx';\nimport Money                   from 'App/Components/Elements/money.jsx';\nimport { UnderlyingIcon }      from 'App/Components/Elements/underlying-icon.jsx';\nimport { PositionsCardLoader } from 'App/Components/Elements/ContentLoader';\nimport ContractTypeCell        from './contract-type-cell.jsx';\nimport ProgressSlider          from './ProgressSlider';\nimport ResultOverlay           from './result-overlay.jsx';\n\nconst PositionsDrawerCard = ({\n    active_position,\n    className,\n    contract_info,\n    currency,\n    current_tick,\n    indicative,\n    id,\n    is_dark_theme,\n    is_loading,\n    is_sell_requested,\n    is_unsupported,\n    is_valid_to_sell,\n    profit_loss,\n    onClickSell,\n    onClickRemove,\n    result,\n    sell_price,\n    status,\n    toggleUnsupportedContractModal,\n    type,\n}) => {\n    const loader_el = (\n        <div className='positions-drawer-card__content-loader'>\n            <PositionsCardLoader\n                is_dark_theme={is_dark_theme}\n                speed={2}\n            />\n        </div>\n    );\n    const fallback_result = (profit_loss < 0) ? 'lost' : 'won';\n    const contract_el = (\n        <React.Fragment>\n            <div className={classNames(\n                'positions-drawer-card__grid',\n                'positions-drawer-card__grid-underlying-trade'\n            )}\n            >\n                <div className='positions-drawer-card__underlying-name'>\n                    <UnderlyingIcon market={contract_info.underlying} />\n                    <span className='positions-drawer-card__symbol'>\n                        {contract_info.display_name}\n                    </span>\n                </div>\n                <div className='positions-drawer-card__type'>\n                    <ContractTypeCell\n                        type={type}\n                        is_high_low={Shortcode.isHighLow({ shortcode: contract_info.shortcode })}\n                    />\n                </div>\n            </div>\n            {(result || !!(contract_info.is_sold)) ?\n                <div className='progress-slider--completed' />\n                :\n                <ProgressSlider\n                    is_loading={is_loading}\n                    start_time={contract_info.date_start}\n                    expiry_time={contract_info.date_expiry}\n                    current_tick={current_tick}\n                    ticks_count={contract_info.tick_count}\n                />\n            }\n            <div className={classNames(\n                'positions-drawer-card__grid',\n                'positions-drawer-card__grid-profit-payout'\n            )}\n            >\n                <div className={classNames(\n                    'positions-drawer-card__profit-loss',\n                    'positions-drawer-card__profit-loss-label',\n                )}\n                >\n                    {result ? localize('Profit/Loss:') : localize('Potential profit/loss:')}\n                </div>\n                <div className={classNames(\n                    'positions-drawer-card__indicative',\n                    'positions-drawer-card__indicative-label',\n                )}\n                >\n                    {!result ? localize('Indicative price:') : localize('Payout:')}\n                </div>\n                <div className={classNames(\n                    'positions-drawer-card__profit-loss', {\n                        'positions-drawer-card__profit-loss--is-crypto': isCryptocurrency(currency),\n                        'positions-drawer-card__profit-loss--negative' : (profit_loss < 0),\n                        'positions-drawer-card__profit-loss--positive' : (profit_loss > 0),\n                    })}\n                >\n                    <Money amount={Math.abs(profit_loss)} currency={currency} />\n                    <div className={classNames(\n                        'positions-drawer-card__indicative--movement', {\n                            'positions-drawer-card__indicative--movement-complete': !!result,\n                        },\n                    )}\n                    >\n                        <Icon\n                            icon='IconPriceMove'\n                            type={(status !== 'complete') ? status : null}\n                        />\n                    </div>\n                </div>\n                <div className='positions-drawer-card__indicative'>\n                    <Money amount={sell_price || indicative} currency={currency} />\n                    <div className={classNames(\n                        'positions-drawer-card__indicative--movement', {\n                            'positions-drawer-card__indicative--movement-complete': !!result,\n                        },\n                    )}\n                    >\n                        <Icon\n                            icon='IconPriceMove'\n                            type={(status !== 'complete') ? status : null}\n                        />\n                    </div>\n                </div>\n            </div>\n            <div className={classNames(\n                'positions-drawer-card__grid',\n                'positions-drawer-card__grid-price-payout',\n            )}\n            >\n                <div className='positions-drawer-card__purchase-price'>\n                    <span className='positions-drawer-card__purchase-label'>\n                        {localize('Purchase price:')}\n                    </span>\n                    <span className='positions-drawer-card__purchase-value'>\n                        <Money amount={contract_info.buy_price} currency={currency} />\n                    </span>\n                </div>\n                <div className='positions-drawer-card__payout-price'>\n                    <span className='positions-drawer-card__payout-label'>\n                        {localize('Potential payout:')}\n                    </span>\n                    <span className='positions-drawer-card__payout-value'>\n                        {contract_info.payout ?\n                            <Money amount={contract_info.payout} currency={currency} />\n                            :\n                            <strong>-</strong>\n                        }\n                    </span>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n\n    return (\n        <div className={classNames(\n            'positions-drawer-card__wrapper', {\n                'positions-drawer-card__wrapper--active': (parseInt(active_position) === id),\n            },\n            className)}\n        >\n            <ResultOverlay\n                contract_id={id}\n                is_unsupported={is_unsupported}\n                is_visible={!!(contract_info.is_sold)}\n                has_same_contract_mounted={id === parseInt(active_position)}\n                onClickRemove={onClickRemove}\n                onClick={() => toggleUnsupportedContractModal(true)}\n                result={(result || fallback_result)}\n            />\n            {is_unsupported ?\n                <div\n                    className={classNames(\n                        'positions-drawer-card', {\n                            'positions-drawer-card--active': (parseInt(active_position) === id),\n                            'positions-drawer-card--green' : (profit_loss > 0) && !result,\n                            'positions-drawer-card--red'   : (profit_loss < 0) && !result,\n                        }\n                    )}\n                    onClick={() => toggleUnsupportedContractModal(true)}\n                >\n                    {contract_info.underlying ? contract_el : loader_el}\n                </div>\n                :\n                <ContractLink\n                    className={classNames(\n                        'positions-drawer-card', {\n                            'positions-drawer-card--active': (parseInt(active_position) === id),\n                            'positions-drawer-card--green' : (profit_loss > 0) && !result,\n                            'positions-drawer-card--red'   : (profit_loss < 0) && !result,\n                        }\n                    )}\n                    contract_id={id}\n                >\n                    {contract_info.underlying ? contract_el : loader_el}\n                </ContractLink>\n            }\n            <CSSTransition\n                in={!!(is_valid_to_sell)}\n                timeout={250}\n                classNames={{\n                    enter    : 'positions-drawer-card__sell-button--enter',\n                    enterDone: 'positions-drawer-card__sell-button--enter-done',\n                    exit     : 'positions-drawer-card__sell-button--exit',\n                }}\n                unmountOnExit\n            >\n                <div className='positions-drawer-card__sell-button'>\n                    <Button\n                        className={classNames(\n                            'btn--primary',\n                            'btn--primary--green',\n                            'btn--sell', {\n                                'btn--loading': is_sell_requested,\n                            })}\n                        is_disabled={!is_valid_to_sell || is_sell_requested}\n                        text={localize('Sell contract')}\n                        onClick={() => onClickSell(id)}\n                    />\n                </div>\n            </CSSTransition>\n        </div>\n    );\n};\n\nPositionsDrawerCard.propTypes = {\n    active_position: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className                     : PropTypes.string,\n    contract_info                 : PropTypes.object,\n    currency                      : PropTypes.string,\n    current_tick                  : PropTypes.number,\n    duration                      : PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    duration_unit                 : PropTypes.string,\n    exit_spot                     : PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    id                            : PropTypes.number,\n    indicative                    : PropTypes.number,\n    is_dark_theme                 : PropTypes.bool,\n    is_loading                    : PropTypes.bool,\n    is_sell_requested             : PropTypes.bool,\n    is_unsupported                : PropTypes.bool,\n    is_valid_to_sell              : PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n    onClickRemove                 : PropTypes.func,\n    onClickSell                   : PropTypes.func,\n    profit_loss                   : PropTypes.number,\n    result                        : PropTypes.string,\n    sell_time                     : PropTypes.number,\n    status                        : PropTypes.string,\n    toggleUnsupportedContractModal: PropTypes.func,\n    type                          : PropTypes.string,\n};\n\nexport default PositionsDrawerCard;\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { NavLink }                    from 'react-router-dom';\nimport { TransitionGroup,\n    CSSTransition }                   from 'react-transition-group';\nimport { Scrollbars }                 from 'tt-react-custom-scrollbars';\nimport { localize }                   from 'App/i18n';\nimport Icon                           from 'Assets/icon.jsx';\nimport routes                         from 'Constants/routes';\nimport EmptyPortfolioMessage          from 'Modules/Reports/Components/empty-portfolio-message.jsx';\nimport { connect }                    from 'Stores/connect';\nimport PositionsDrawerCard            from './positions-drawer-card.jsx';\n\nclass PositionsDrawer extends React.Component {\n    componentDidMount()    {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const {\n            all_positions,\n            active_contract_id,\n            error,\n            currency,\n            is_contract_mode,\n            is_dark_theme,\n            is_empty,\n            is_positions_drawer_on,\n            onClickSell,\n            onClickRemove,\n            openContract,\n            toggleDrawer,\n            toggleUnsupportedContractModal,\n        } = this.props;\n\n        // Show only 5 most recent open contracts\n        const body_content = (\n            <React.Fragment>\n                <TransitionGroup component='div'>\n                    {all_positions.slice(0, 5).map((portfolio_position) => (\n                        <CSSTransition\n                            appear\n                            key={portfolio_position.id}\n                            in={true}\n                            timeout={150}\n                            classNames={{\n                                appear   : 'positions-drawer-card__wrapper--enter',\n                                enter    : 'positions-drawer-card__wrapper--enter',\n                                enterDone: 'positions-drawer-card__wrapper--enter-done',\n                                exit     : 'positions-drawer-card__wrapper--exit',\n                            }}\n                            unmountOnExit\n                        >\n                            <PositionsDrawerCard\n                                active_position={active_contract_id}\n                                is_dark_theme={is_dark_theme}\n                                onClickSell={onClickSell}\n                                onClickRemove={onClickRemove}\n                                openContract={openContract}\n                                key={portfolio_position.id}\n                                currency={currency}\n                                toggleUnsupportedContractModal={toggleUnsupportedContractModal}\n                                {...portfolio_position}\n                            />\n                        </CSSTransition>\n                    ))}\n                </TransitionGroup>\n            </React.Fragment>\n        );\n\n        return (\n            <div className={classNames(\n                'positions-drawer', {\n                    'positions-drawer--open'         : is_positions_drawer_on,\n                    'positions-drawer--contract-mode': is_contract_mode,\n                })}\n            >\n                <div className='positions-drawer__header'>\n                    <span className='positions-drawer__title'>{localize('Recent Positions')}</span>\n                    <div\n                        className='positions-drawer__icon-close'\n                        onClick={toggleDrawer}\n                    >\n                        <Icon icon='IconMinimize' />\n                    </div>\n                </div>\n                <div className='positions-drawer__body'>\n                    <Scrollbars\n                        style={{ width: '100%', height: '100%' }}\n                        autoHide\n                    >\n                        {(is_empty || error) ? <EmptyPortfolioMessage error={error} />  : body_content}\n                    </Scrollbars>\n                </div>\n                <div className='positions-drawer__footer'>\n                    <NavLink className='btn btn--link btn--alternate' to={routes.reports}>\n                        <span className='btn__text'>\n                            {localize('Go to Reports')}\n                        </span>\n                    </NavLink>\n                </div>\n            </div>\n        );\n    }\n}\n\nPositionsDrawer.propTypes = {\n    active_contract_id    : PropTypes.number,\n    all_positions         : MobxPropTypes.arrayOrObservableArray,\n    children              : PropTypes.any,\n    currency              : PropTypes.string,\n    error                 : PropTypes.string,\n    is_contract_mode      : PropTypes.bool,\n    is_dark_theme         : PropTypes.bool,\n    is_empty              : PropTypes.bool,\n    is_loading            : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    onClickRemove         : PropTypes.func,\n    onClickSell           : PropTypes.func,\n    onMount               : PropTypes.func,\n    onUnmount             : PropTypes.func,\n    openContract          : PropTypes.func,\n    toggleDrawer          : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, client, ui }) => ({\n        currency                      : client.currency,\n        active_contract_id            : modules.contract_trade.contract_id,\n        all_positions                 : modules.portfolio.all_positions,\n        error                         : modules.portfolio.error,\n        is_contract_mode              : modules.smart_chart.is_contract_mode,\n        is_empty                      : modules.portfolio.is_empty,\n        is_loading                    : modules.portfolio.is_loading,\n        onClickSell                   : modules.portfolio.onClickSell,\n        onClickRemove                 : modules.portfolio.removePositionById,\n        openContract                  : modules.contract_trade.onMount,\n        onMount                       : modules.portfolio.onMount,\n        onUnmount                     : modules.portfolio.onUnmount,\n        is_dark_theme                 : ui.is_dark_mode_on,\n        is_positions_drawer_on        : ui.is_positions_drawer_on,\n        toggleDrawer                  : ui.togglePositionsDrawer,\n        toggleUnsupportedContractModal: ui.toggleUnsupportedContractModal,\n    })\n)(PositionsDrawer);\n","import React        from 'react';\nimport { localize } from 'App/i18n';\nimport Localize     from './localize.jsx';\nimport Button       from '../Form/button.jsx';\n\nconst toggleFade = ({ node, opacity, direction, color }) => {\n    const sub_or_add = direction === -1 && opacity > 0.1 ? -1 : 1;\n    let reduction = 0.05;\n    if (opacity < 0.3 && opacity > 0.1) {\n        reduction = 0.01;\n    }\n    const new_opacity = parseFloat(Number(opacity + (sub_or_add * reduction)).toFixed(2));\n\n    node.style.backgroundColor = color.replace(`${opacity})`, `${Number(new_opacity).toFixed(2)})`);\n\n    const stopId = requestAnimationFrame(toggleFade.bind(this,\n        {\n            node,\n            opacity  : new_opacity,\n            direction: sub_or_add,\n            color    : node.style.backgroundColor,\n        },\n    ));\n    if (new_opacity >= 1) {\n        cancelAnimationFrame(stopId);\n        // Set the initial value to follow CSS\n        node.querySelectorAll('div')\n            .forEach(element => {\n                element.style.backgroundColor = '';\n            });\n        node.style.backgroundColor = '';\n    }\n};\n\nconst startAnimation = (node) => {\n    const children_background_color = getComputedStyle(node.firstElementChild).getPropertyValue('background-color');\n    const converted_rgba = children_background_color.startsWith('rgba') ?\n        children_background_color :\n        `rgba(${children_background_color\n            .replace('rgb(', '')\n            .replace(')', '')\n            .split(', ')\n            .join(',')},1)`;\n\n    // Set initial value for individual rows\n    node.querySelectorAll('div')\n        .forEach(element => {\n            element.style.backgroundColor = 'transparent';\n        });\n    node.style.backgroundColor = converted_rgba; // compensate for removal background of individual rows\n\n    const direction            = -1; // lower the opacity\n    requestAnimationFrame(toggleFade.bind(this,\n        {\n            node,\n            opacity: 1,\n            direction,\n            color  : converted_rgba,\n        },\n    ));\n};\n\n/**\n * Handle animation for dropdown, this is imperative, with DOM manipulation.\n */\nconst onClick = () => {\n    const dropdown = document.querySelector('.cq-menu-dropdown');\n    if (dropdown.classList.contains('open')) return;\n    document.querySelector('.cq-symbol-select-btn').click();\n    const left_panel = document.querySelector('.cq-filter-panel');\n    left_panel.querySelector('.ic-volidx').parentNode.click();\n\n    const node = document\n        .querySelector('.category-volidx')\n        .querySelector('.category-content');\n    setTimeout(startAnimation.bind(this, node), 600);\n};\n\nconst MarketIsClosedOverlay = () => (\n    <div className='market-is-closed-overlay'>\n        <p><Localize i18n_default_text='Market is closed.' /></p>\n        <p><Localize i18n_default_text='Try Volatility Indices which simulate real-world market volatility and are open 24/7.' /></p>\n        <Button\n            className='market-is-closed-overlay__button'\n            classNameSpan='market-is-closed-overlay__button--span'\n            onClick={onClick}\n            text={localize('Try Volatility Indices')}\n        />\n    </div>\n);\n\nexport default MarketIsClosedOverlay;\n","import { toJS }    from 'mobx';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nclass Test extends React.Component {\n    state         = { is_visible: false };\n    setVisibility = this.stateVisibility.bind(this);\n    styles        = {\n        container: {\n            fontSize  : '10px',\n            lineHeight: '15px',\n            position  : 'absolute',\n            zIndex    : 1,\n            background: 'rgba(0, 0, 0, 0.8)',\n            color     : '#ccc',\n            padding   : '10px',\n            marginTop : '-10px',\n            display   : 'none',\n            overflowY : 'auto',\n            height    : '100%',\n        },\n        prop_name: {\n            color: 'yellowgreen',\n        },\n    };\n\n    componentDidMount = () => {\n        document.addEventListener('keyup', this.setVisibility, false);\n    };\n\n    componentWillUnmount = () => {\n        document.removeEventListener('keyup', this.setVisibility);\n    };\n\n    stateVisibility(e) {\n        if (e.ctrlKey && e.keyCode === 83) { // Ctrl + S\n            this.setState({ is_visible: !this.state.is_visible });\n        }\n    }\n\n    render() {\n        return (\n            <code id='state_info' style={Object.assign({}, this.styles.container, { display: this.state.is_visible ? 'block' : 'none' })}>\n                {this.props.entries.sort().map(([k, v]) => k !== 'root_store' && typeof v !== 'function' && <div key={k}><span style={this.styles.prop_name}>{k}:</span> {v && typeof v === 'object' ? JSON.stringify(toJS(v), null, 1) : v}</div>)}\n            </code>\n        );\n    }\n}\n\nTest.propTypes = {\n    entries: PropTypes.array,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        entries: Object.entries(modules.trade),\n    })\n)(Test);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport UILoader     from 'App/Components/Elements/ui-loader.jsx';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\nimport ContractType from '../../Containers/contract-type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\nimport TradeParams  from '../../Containers/trade-params.jsx';\n\nconst ScreenLarge = ({ is_contract_visible, is_trade_enabled, is_blurred }) => (\n    <div className={classNames('sidebar__items', {\n        'sidebar__items--blur': is_contract_visible || is_blurred,\n    })}\n    >\n        {!is_trade_enabled && !is_contract_visible ?\n            <UILoader />\n            :\n            <React.Fragment>\n                <Fieldset className='trade-container__fieldset trade-types'>\n                    <ContractType />\n                </Fieldset>\n                <TradeParams />\n                <div className='purchase-container'>\n                    <Purchase />\n                </div>\n            </React.Fragment>\n        }\n    </div>\n);\n\nScreenLarge.propTypes = {\n    is_blurred         : PropTypes.bool,\n    is_contract_visible: PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default ScreenLarge;\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport Lazy        from 'App/Containers/Lazy';\nimport ScreenLarge from './screen-large.jsx';\n\nconst FormLayout = ({\n    is_contract_visible,\n    is_blurred,\n    is_mobile,\n    is_trade_enabled,\n}) => (\n    is_mobile ?\n        <Lazy\n            ctor={() => import(/* webpackChunkName: \"screen-small\" */'./screen-small.jsx')}\n            should_load={is_mobile}\n            is_trade_enabled={is_trade_enabled}\n        />\n        :\n        <ScreenLarge\n            is_contract_visible={is_contract_visible}\n            is_trade_enabled={is_trade_enabled}\n            is_blurred={is_blurred}\n        />\n);\n\nFormLayout.propTypes = {\n    is_blurred         : PropTypes.bool,\n    is_contract_visible: PropTypes.bool,\n    is_mobile          : PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default FormLayout;\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport ChartLoader           from 'App/Components/Elements/chart-loader.jsx';\nimport UILoader              from 'App/Components/Elements/ui-loader.jsx';\nimport { connect }           from 'Stores/connect';\nimport PositionsDrawer       from 'App/Components/Elements/PositionsDrawer';\nimport MarketIsClosedOverlay from 'App/Components/Elements/market-is-closed-overlay.jsx';\nimport Lazy                  from 'App/Containers/Lazy';\nimport Test                  from './test.jsx';\nimport FormLayout            from '../Components/Form/form-layout.jsx';\nimport { isDigitTradeType }  from '../Helpers/digits';\n\nconst SmartChart = React.lazy(() => import(/* webpackChunkName: \"smart_chart\" */'../../SmartChart'));\n\nclass Trade extends React.Component {\n    componentDidMount() {\n        this.props.showPositions();\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.hidePositions();\n        if (this.props.is_contract_mode) {\n            this.props.onCloseContract();\n        }\n        this.props.onUnmount();\n    }\n\n    render() {\n        const form_wrapper_class           = this.props.is_mobile ? 'mobile-wrapper' : 'sidebar__container desktop-only';\n        const should_show_bottom_widgets   = this.props.is_digit_contract && this.props.is_contract_mode;\n        const should_show_last_digit_stats = isDigitTradeType(this.props.contract_type) && !this.props.is_contract_mode;\n        const is_chart_visible             = (this.props.is_chart_loading || !this.props.is_chart_ready);\n\n        return (\n            <div id='trade_container' className='trade-container'>\n                <PositionsDrawer />\n                <div className='chart-container'>\n                    <Lazy\n                        ctor={() => import(/* webpackChunkName: \"notification-messages\" */'App/Containers/notification-messages.jsx')}\n                        has_progress={false}\n                        should_load={true}\n                    />\n                    { this.props.symbol &&\n                        <React.Suspense fallback={<UILoader />} >\n                            <ChartLoader is_visible={is_chart_visible} />\n                            <SmartChart\n                                chart_id={this.props.chart_id}\n                                chart_type={this.props.chart_type}\n                                Digits={\n                                    <Lazy\n                                        ctor={() => import(/* webpackChunkName: \"digits\", webpackPrefetch: true */'Modules/Contract/Components/Digits')}\n                                        should_load={this.props.is_digit_contract}\n                                        is_trade_page\n                                        contract_info={this.props.contract_info}\n                                        digits_info={this.props.digits_info}\n                                        display_status={this.props.display_status}\n                                        is_digit_contract={this.props.is_digit_contract}\n                                        is_ended={this.props.is_ended}\n                                    />\n                                }\n                                InfoBox={\n                                    <Lazy\n                                        ctor={() => import(/* webpackChunkName: \"info-box\", webpackPrefetch: true */'Modules/Contract/Components/InfoBox')}\n                                        should_load={true}\n                                        has_progress={false}\n                                        is_trade_page\n                                        contract_info={this.props.contract_info}\n                                        error_message={this.props.error_message}\n                                        is_contract_mode={this.props.is_contract_mode}\n                                        removeError={this.props.removeError}\n                                        onClose={this.props.onCloseContract}\n                                    />\n                                }\n                                end_epoch={this.props.end_epoch}\n                                granularity={this.props.granularity}\n                                is_trade_page\n                                is_static_chart={this.props.is_static_chart}\n                                onSymbolChange={this.props.onSymbolChange}\n                                scroll_to_epoch={this.props.scroll_to_epoch}\n                                start_epoch={this.props.start_epoch}\n                                should_show_bottom_widgets={should_show_bottom_widgets}\n                                should_show_last_digit_stats={should_show_last_digit_stats}\n                                symbol={this.props.symbol}\n                            />\n                        </React.Suspense>\n                    }\n                    {/* Remove Test component for debugging below for production release */}\n                    <Test />\n                </div>\n                <div\n                    className={form_wrapper_class}\n                    onClick={this.props.is_contract_mode ? () => {\n                        this.props.onCloseContract();\n                    } : null}\n                    style={{ cursor: this.props.is_contract_mode ? 'pointer' : 'initial' }}\n                >\n                    { this.props.is_market_closed && <MarketIsClosedOverlay />}\n                    <FormLayout\n                        is_mobile={this.props.is_mobile}\n                        is_contract_visible={this.props.is_contract_mode}\n                        is_trade_enabled={this.props.is_trade_enabled}\n                        is_blurred={this.props.is_market_closed}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nTrade.propTypes = {\n    chart_id         : PropTypes.string,\n    chart_type       : PropTypes.string,\n    contract_info    : PropTypes.object,\n    contract_type    : PropTypes.string,\n    digits_info      : PropTypes.object,\n    display_status   : PropTypes.string,\n    end_epoch        : PropTypes.number,\n    granularity      : PropTypes.number,\n    hidePositions    : PropTypes.func,\n    is_chart_loading : PropTypes.bool,\n    is_chart_ready   : PropTypes.bool,\n    is_contract_mode : PropTypes.bool,\n    is_digit_contract: PropTypes.bool,\n    is_ended         : PropTypes.bool,\n    is_market_closed : PropTypes.bool,\n    is_mobile        : PropTypes.bool,\n    is_static_chart  : PropTypes.bool,\n    is_trade_enabled : PropTypes.bool,\n    onClickNewTrade  : PropTypes.func,\n    onCloseContract  : PropTypes.func,\n    onMount          : PropTypes.func,\n    onSymbolChange   : PropTypes.func,\n    onUnmount        : PropTypes.func,\n    purchase_info    : PropTypes.object,\n    scroll_to_epoch  : PropTypes.number,\n    showPositions    : PropTypes.func,\n    start_epoch      : PropTypes.number,\n    symbol           : PropTypes.string,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        contract_info                      : modules.contract_trade.contract_info,\n        digits_info                        : modules.contract_trade.digits_info,\n        display_status                     : modules.contract_trade.display_status,\n        error_message                      : modules.contract_trade.error_message,\n        is_ended                           : modules.contract_trade.is_ended,\n        is_digit_contract                  : modules.contract_trade.is_digit_contract,\n        onCloseContract                    : modules.contract_trade.onCloseContract,\n        removeError                        : modules.contract_trade.removeErrorMessage,\n        chart_id                           : modules.smart_chart.chart_id,\n        chart_type                         : modules.smart_chart.chart_type,\n        scroll_to_epoch                    : modules.smart_chart.scroll_to_left_epoch,\n        granularity                        : modules.smart_chart.granularity,\n        end_epoch                          : modules.smart_chart.end_epoch,\n        start_epoch                        : modules.smart_chart.start_epoch,\n        is_chart_loading                   : modules.smart_chart.is_chart_loading,\n        is_chart_ready                     : modules.smart_chart.is_chart_ready,\n        is_contract_mode                   : modules.smart_chart.is_contract_mode,\n        is_static_chart                    : modules.smart_chart.is_static_chart,\n        contract_type                      : modules.trade.contract_type,\n        is_market_closed                   : modules.trade.is_market_closed,\n        is_trade_enabled                   : modules.trade.is_trade_enabled,\n        onClickNewTrade                    : modules.trade.onClickNewTrade,\n        onMount                            : modules.trade.onMount,\n        onSymbolChange                     : modules.trade.onChange,\n        onUnmount                          : modules.trade.onUnmount,\n        purchase_info                      : modules.trade.purchase_info,\n        symbol                             : modules.trade.symbol,\n        hidePositions                      : ui.hidePositionsFooterToggle,\n        showPositions                      : ui.showPositionsFooterToggle,\n        has_only_forward_starting_contracts: ui.has_only_forward_starting_contracts,\n        is_mobile                          : ui.is_mobile,\n        setHasOnlyForwardingContracts      : ui.setHasOnlyForwardingContracts,\n    })\n)(Trade);\n","import { lazy }                       from 'react';\nimport { Redirect as RouterRedirect } from 'react-router-dom';\nimport { Redirect }                   from 'App/Containers/Redirect';\nimport { localize }                   from 'App/i18n';\nimport { routes }                     from 'Constants';\n\nimport Trade from 'Modules/Trading';\n\nconst ContractDetails = lazy(() => import(/* webpackChunkName: \"contract\" */  'Modules/Contract'));\n\n// Reports Routes\nconst Reports       = lazy(() => import(/* webpackChunkName: \"reports\" */        'Modules/Reports'));\nconst OpenPositions = lazy(() => import(/* webpackChunkName: \"open_positions\" */ 'Modules/Reports/Containers/open-positions.jsx'));\nconst ProfitTable   = lazy(() => import(/* webpackChunkName: \"profit_table\" */   'Modules/Reports/Containers/profit-table.jsx'));\nconst Statement     = lazy(() => import(/* webpackChunkName: \"statement\" */      'Modules/Reports/Containers/statement.jsx'));\n\n// Error Routes\nconst Page404 = lazy(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404'));\n\nconst initRoutesConfig = () => ([\n    { path: routes.contract,  component: ContractDetails, title: localize('Contract Details'),  is_authenticated: true },\n    { path: routes.index,     component: RouterRedirect,  title: '',                            to: routes.trade },\n    {\n        path            : routes.reports,\n        component       : Reports,\n        is_authenticated: true,\n        title           : localize('Reports'),\n        routes          : [\n            { path: routes.positions, component: OpenPositions, title: localize('Open Positions'), icon_component: 'IconOpenPositions', default: true },\n            { path: routes.profit,    component: ProfitTable,   title: localize('Profit Table'),   icon_component: 'IconProfitTable' },\n            { path: routes.statement, component: Statement,     title: localize('Statement'),      icon_component: 'IconStatement' },\n        ],\n    },\n    { path: routes.trade,     component: Trade,           title: localize('Trade'),    exact: true },\n    { path: routes.error404,  component: Page404,         title: localize('Error 404') },\n    { path: routes.redirect,  component: Redirect,        title: localize('Redirect') },\n]);\n\nlet routesConfig;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default  = { component: Page404, title: localize('Error 404') };\n\nconst getRoutesConfig = () => {\n    if (!routesConfig) {\n        routesConfig = initRoutesConfig();\n    }\n    routesConfig.push(route_default);\n    return routesConfig;\n};\n\nexport default getRoutesConfig;\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { NavLink }     from 'react-router-dom';\nimport {\n    findRouteByPath,\n    normalizePath }    from './helpers';\nimport getRoutesConfig from '../../Constants/routes-config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ active_class, to, children, ...props }) => {\n    const path  = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig());\n\n    if (!route) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return (\n        to ?\n            <NavLink to={path} activeClassName={active_class || 'active'} exact={route.exact} {...props}>\n                {children}\n            </NavLink>\n            :\n            <a href='javascript:;' {...props}>\n                {children}\n            </a>\n    );\n};\n\nBinaryLink.propTypes = {\n    active_class: PropTypes.string,\n    children    : PropTypes.object,\n    to          : PropTypes.string,\n};\n\nexport default BinaryLink;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { urlFor }   from '_common/url';\nimport PageError    from 'Modules/PageError';\nimport Localize     from './localize.jsx';\n\nconst LoginPrompt = ({\n    onLogin,\n    onSignup,\n    page_title,\n}) => (\n    <PageError\n        header={\n            <Localize\n                i18n_default_text='{{page_title}} page is only<0 />available for existing clients.'\n                values={{ page_title: page_title || 'This' }}\n                components={[ <br key={0} /> ]}\n            />\n        }\n        messages={[\n            <Localize\n                key={0}\n                i18n_default_text='If you have an active account, please <0>Log in</0> for full access. Otherwise, please <1>Sign up</1> to start trading.'\n                components={[\n                    <a key={0} className='link' href='javascript:;' onClick={onLogin} />,\n                    <a key={1} className='link' href='javascript:;' onClick={onSignup} />,\n                ]}\n            />,\n        ]}\n    />\n);\n\nLoginPrompt.propTypes = {\n    onLogin   : PropTypes.func,\n    onSignup  : PropTypes.func,\n    page_title: PropTypes.string,\n};\n\n// TODO - Remove this default setting once sign-up has been integrated to app 2\nLoginPrompt.defaultProps = {\n    onSignup: () => { window.open(urlFor('new-account', undefined, undefined, true)); },\n};\n\nexport default LoginPrompt;\n\n","import React               from 'react';\nimport {\n    Redirect,\n    Route }                from 'react-router-dom';\nimport { redirectToLogin } from '_common/base/login';\nimport BinarySocket        from '_common/base/socket_base';\nimport Language            from '_common/language';\nimport routes              from 'Constants/routes';\nimport { connect }         from 'Stores/connect';\nimport LoginPrompt         from '../Elements/login-prompt.jsx';\nimport { default_title }   from '../../Constants/app-config';\n\nconst RouteWithSubRoutes = route => {\n    const renderFactory = props => {\n        let result = null;\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else {\n            result = (\n                (route.is_authenticated && !route.is_logged_in) ?\n                    <LoginPrompt onLogin={redirectToLogin} page_title={route.title} />\n                    :\n                    <route.component {...props} routes={route.routes} />\n            );\n        }\n\n        Language.setCookie();\n        const title = route.title ? `${route.title} | ` : '';\n        document.title = `${ title }${ default_title }`;\n        BinarySocket.wait('website_status').then(() => {\n            route.pushDataLayer({ event: 'page_load' });\n        });\n        return result;\n    };\n\n    return <Route\n        exact={route.exact}\n        path={route.path}\n        render={renderFactory}\n    />;\n};\n\nexport { RouteWithSubRoutes as RouteWithSubRoutesRender }; // For tests\n\nexport default connect(({ gtm }) => ({\n    pushDataLayer: gtm.pushDataLayer,\n}))(RouteWithSubRoutes);\n","import React              from 'react';\nimport { Switch }         from 'react-router-dom';\nimport getRoutesConfig    from 'App/Constants/routes-config';\nimport RouteWithSubRoutes from './route-with-sub-routes.jsx';\n\nconst BinaryRoutes = (props) => (\n    <React.Suspense fallback={<div />}>\n        <Switch>\n            {\n                getRoutesConfig().map((route, idx) => (\n                    <RouteWithSubRoutes key={idx} {...route} {...props} />\n                ))\n            }\n        </Switch>\n    </React.Suspense>\n\n);\n\nexport default BinaryRoutes;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ButtonLink   from 'App/Components/Routes/button-link.jsx';\nimport Localize     from 'App/Components/Elements/localize.jsx';\n\nconst PageError = ({\n    buttonOnClick,\n    error_code,\n    messages,\n    header,\n    redirect_label,\n    redirect_url,\n}) => (\n    <div className='page-error__container'>\n        <div className='page-error__box'>\n            <h3 className='page-error__header'>\n                {header}\n            </h3>\n            <div className='page-error__message-wrapper'>\n                <span className='page-error__message'>\n                    { messages.map((message, index) => (\n                        message.has_html ?\n                            <p key={index} dangerouslySetInnerHTML={{ __html: message.message }} />\n                            :\n                            <p key={index}>{ message }</p>\n                    ))}\n                    { error_code &&\n                    <React.Fragment>\n                        <br />\n                        <p className='page-error__code'><Localize i18n_default_text={'Error Code: {{error_code}}'} values={{ error_code }} /></p>\n                    </React.Fragment>\n                    }\n                </span>\n            </div>\n            { redirect_label &&\n            <ButtonLink\n                className='page-error__btn btn--primary btn--primary--orange'\n                to={redirect_url}\n                onClick={buttonOnClick}\n            >\n                <span className='page-error__btn-text btn__text'>\n                    {redirect_label}\n                </span>\n            </ButtonLink>\n            }\n        </div>\n    </div>\n);\n\nPageError.propTypes = {\n    buttonOnClick : PropTypes.func,\n    error_code    : PropTypes.number,\n    header        : PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    messages      : PropTypes.array,\n    redirect_label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    redirect_url  : PropTypes.string,\n};\n\nexport default PageError;\n","const digitTypesMap = [ 'even_odd', 'match_diff', 'over_under' ];\n\nexport const isDigitTradeType = (contract_type) => digitTypesMap.includes(contract_type);\n","const Shortcode = (() => {\n    const extractInfoFromShortcode = (shortcode) => {\n        const info_from_shortcode = {\n            category  : '',\n            underlying: '',\n            barrier_1 : '',\n        };\n\n        const pattern = new RegExp('^([A-Z]+)_((OTC_[A-Z0-9]+)|R_[\\\\d]{2,3}|[A-Z]+)'); // Used to get market name from shortcode\n        const extracted = pattern.exec(shortcode);\n        if (extracted !== null) {\n            info_from_shortcode.category   = extracted[1].toLowerCase();\n            info_from_shortcode.underlying = extracted[2];\n\n            if (/^(CALL|PUT)$/i.test(info_from_shortcode.category)) {\n                info_from_shortcode.barrier_1 = shortcode.split('_').slice(-2)[0];\n            }\n        }\n\n        return info_from_shortcode;\n    };\n\n    const isHighLow = ({ shortcode = '', shortcode_info = '' }) => {\n        const info_from_shortcode = shortcode ? extractInfoFromShortcode(shortcode) : shortcode_info;\n        return (info_from_shortcode && info_from_shortcode.barrier_1) ? !/^S0P$/.test(info_from_shortcode.barrier_1) : false;\n    };\n\n    return {\n        extractInfoFromShortcode,\n        isHighLow,\n    };\n})();\n\nmodule.exports = Shortcode;\n","export const website_domain = 'Deriv.app';\nexport const website_name   = 'Deriv';\nexport const default_title  = website_name;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport Icon              from 'Assets/icon.jsx';\n\nclass Tooltip extends React.PureComponent {\n    state = {\n        show_tooltip_balloon_icon: false,\n    }\n\n    onMouseEnter = () => {\n        this.setState({ show_tooltip_balloon_icon: true });\n    }\n\n    onMouseLeave = () => {\n        this.setState({ show_tooltip_balloon_icon: false });\n    }\n\n    render() {\n        const {\n            alignment,\n            children,\n            className,\n            classNameIcon,\n            has_error,\n            icon, // only question or info accepted\n            message,\n        } = this.props;\n\n        const icon_class = classNames(classNameIcon, icon);\n        return (\n            <span\n                className={classNames(className, 'tooltip', { 'tooltip--error': has_error })}\n                data-tooltip={message || undefined}\n                data-tooltip-pos={alignment}\n            >\n                {icon === 'info' &&\n                    <React.Fragment>\n                        <Icon\n                            icon='IconInfoOutline'\n                            className={icon_class}\n                            onMouseEnter={this.onMouseEnter}\n                            onMouseLeave={this.onMouseLeave}\n                        />\n                        <Icon\n                            icon='IconInfoBlue'\n                            className={classNames(`${classNameIcon}-balloon-icon`, 'tooltip__balloon-icon', {\n                                'tooltip__balloon-icon--show': this.state.show_tooltip_balloon_icon,\n                            })}\n                        />\n                    </React.Fragment>\n                }\n                {icon === 'question' && <Icon icon='IconQuestion' className={icon_class} />}\n                {icon === 'dot'      && <Icon icon='IconRedDot' className={icon_class} />}\n                {children}\n            </span>\n        );\n    }\n}\n\nTooltip.propTypes = {\n    alignment    : PropTypes.string,\n    children     : PropTypes.node,\n    className    : PropTypes.string,\n    classNameIcon: PropTypes.string,\n    has_error    : PropTypes.bool,\n    icon         : PropTypes.string,\n    message      : PropTypes.string,\n};\n\nexport default Tooltip;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport Icon      from 'Assets/icon.jsx';\nimport Button    from '../button.jsx';\n\nconst IncrementButtons = ({\n    decrementValue,\n    incrementValue,\n    max_is_disabled,\n    min_is_disabled,\n}) => (\n    <React.Fragment>\n        <Button\n            className={'input-wrapper__button input-wrapper__button--increment'}\n            is_disabled={max_is_disabled}\n            onClick={incrementValue}\n            tabIndex='-1'\n        >\n            <Icon icon='IconPlus' className={'input-wrapper__icon input-wrapper__icon--plus' } is_disabled={max_is_disabled} />\n        </Button>\n        <Button\n            className={'input-wrapper__button input-wrapper__button--decrement'}\n            is_disabled={min_is_disabled}\n            onClick={decrementValue}\n            tabIndex='-1'\n        >\n            <Icon icon='IconMinus' className={'input-wrapper__icon input-wrapper__icon--minus'} is_disabled={min_is_disabled} />\n        </Button>\n    </React.Fragment>\n);\n\nIncrementButtons.propTypes = {\n    decrementValue : PropTypes.func,\n    incrementValue : PropTypes.func,\n    max_is_disabled: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n    min_is_disabled: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n};\n\nexport default IncrementButtons;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst Input = ({\n    changeValue,\n    checked,\n    className,\n    classNameInlinePrefix,\n    data_value,\n    data_tip,\n    display_value,\n    fractional_digits,\n    id,\n    inline_prefix,\n    is_autocomplete_disabled,\n    is_disabled,\n    is_hj_whitelisted,\n    is_incrementable,\n    is_read_only,\n    max_length,\n    name,\n    onClick,\n    onKeyPressed,\n    placeholder,\n    required,\n    type,\n}) => {\n    const onChange = (e) => {\n        /**\n         * fix for Safari\n         * we have to keep track of the current cursor position, update the value in store,\n         * then reset the cursor position to the current cursor position\n         */\n        // TODO: find better ways to target browsers\n        if (navigator.userAgent.indexOf('Safari') !== -1 && type !== 'checkbox') {\n            const cursor = e.target.selectionStart;\n            changeValue(e, (evt) => {\n                evt.target.selectionEnd = cursor; // reset the cursor position in callback\n            });\n        } else {\n            changeValue(e);\n        }\n    };\n\n    return (\n        <React.Fragment>\n            {!!inline_prefix &&\n            <div className={classNameInlinePrefix}>\n                <span className={classNames(classNameInlinePrefix ? `${classNameInlinePrefix}--symbol` : '', 'symbols', `symbols--${inline_prefix.toLowerCase()}`)} />\n            </div>\n            }\n            <input\n                autoComplete={is_autocomplete_disabled ? 'off' : undefined}\n                checked={checked}\n                className={classNames(className)}\n                data-for={`error_tooltip_${name}`}\n                data-hj-whitelist={is_hj_whitelisted}\n                data-tip={data_tip}\n                data-value={data_value}\n                disabled={is_disabled}\n                id={id}\n                maxLength={fractional_digits ? max_length + fractional_digits + 1 : max_length}\n                name={name}\n                onChange={onChange}\n                onClick={onClick}\n                onKeyDown={is_incrementable ? onKeyPressed : undefined}\n                placeholder={placeholder || undefined}\n                readOnly={is_read_only}\n                required={required || undefined}\n                type={type === 'number' ? 'text' : type}\n                value={display_value || ''}\n            />\n        </React.Fragment>\n    );\n};\n\nInput.propTypes = {\n    changeValue: PropTypes.func,\n    checked    : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className            : PropTypes.string,\n    classNameInlinePrefix: PropTypes.string,\n    data_tip             : PropTypes.string,\n    data_value           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    display_value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    fractional_digits       : PropTypes.number,\n    id                      : PropTypes.string,\n    inline_prefix           : PropTypes.string,\n    is_autocomplete_disabled: PropTypes.bool,\n    is_disabled             : PropTypes.string,\n    is_hj_whitelisted       : PropTypes.bool,\n    is_incrementable        : PropTypes.bool,\n    is_read_only            : PropTypes.bool,\n    max_length              : PropTypes.number,\n    name                    : PropTypes.string,\n    onClick                 : PropTypes.func,\n    onKeyPressed            : PropTypes.func,\n    placeholder             : PropTypes.string,\n    required                : PropTypes.bool,\n    type                    : PropTypes.string,\n    value                   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Input;\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport { isCryptocurrency }      from '_common/base/currency_base';\nimport Tooltip                   from 'App/Components/Elements/tooltip.jsx';\nimport IncrementButtons          from './increment-buttons.jsx';\nimport Input                     from './input.jsx';\n\nclass InputField extends React.Component {\n    render () {\n        const {\n            checked,\n            className,\n            classNameInlinePrefix,\n            classNameInput,\n            classNamePrefix,\n            currency,\n            data_tip,\n            data_value,\n            error_messages,\n            fractional_digits,\n            helper,\n            id,\n            inline_prefix,\n            is_autocomplete_disabled,\n            is_disabled,\n            is_float,\n            is_hj_whitelisted = false,\n            is_incrementable,\n            is_negative_disabled,\n            is_read_only = false,\n            is_signed = false,\n            is_unit_at_right = false,\n            label,\n            max_length,\n            max_value,\n            min_value,\n            name,\n            onChange,\n            onClick,\n            placeholder,\n            prefix,\n            required,\n            type,\n            unit,\n            value,\n        } = this.props;\n        const Icon = this.props.icon;\n        const has_error       = error_messages && !!error_messages.length;\n        let has_valid_length  = true;\n        const max_is_disabled = max_value && +value >= +max_value;\n        const min_is_disabled = min_value && +value <= +min_value;\n\n        const changeValue = (e, callback) => {\n            if (unit) {\n                e.target.value = e.target.value.replace(unit, '').trim();\n            }\n\n            if (e.target.value === value && type !== 'checkbox') {\n                return;\n            }\n\n            if (type === 'number' || type === 'tel') {\n                const is_empty = !e.target.value || e.target.value === '' || e.target.value === '  ';\n                const signed_regex = is_signed ? '^([+-.0-9])' : '^';\n\n                const is_number = new RegExp(`${signed_regex}(\\\\d*)?${is_float ? '(\\\\.\\\\d+)?' : ''}$`)\n                    .test(e.target.value);\n\n                const is_not_completed_number = is_float && new RegExp(`${signed_regex}(\\\\.|\\\\d+\\\\.)?$`)\n                    .test(e.target.value);\n                // This regex check whether there is any zero at the end of fractional part or not.\n                const has_zero_at_end = new RegExp(`${signed_regex}(\\\\d+)?\\\\.(\\\\d+)?[0]+$`)\n                    .test(e.target.value);\n\n                const is_scientific_notation = /e/.test(`${+e.target.value}`);\n\n                if (max_length && fractional_digits) {\n                    has_valid_length = new RegExp(`${signed_regex}(\\\\d{0,${max_length}})(\\\\.\\\\d{0,${fractional_digits}})?$`)\n                        .test(e.target.value);\n                }\n\n                if (((is_number) || is_empty) && has_valid_length) {\n                    e.target.value = is_empty || is_signed || has_zero_at_end || is_scientific_notation || type === 'tel'\n                        ? e.target.value\n                        : +e.target.value;\n                } else if (!is_not_completed_number) {\n                    e.target.value = value;\n                    return;\n                }\n            }\n\n            onChange(e);\n            if (callback) {\n                callback(e);\n            }\n        };\n\n        const getDecimals = (val) => {\n            const array_value = typeof val === 'string' ? val.split('.') : val.toString().split('.');\n            return array_value && array_value.length > 1 ? array_value[1].length : 0;\n        };\n\n        const incrementValue = () => {\n            if (max_is_disabled) return;\n            let increment_value;\n\n            const decimal_places = value ? getDecimals(value) : 0;\n            const is_crypto      = !!currency && isCryptocurrency(currency);\n\n            if (is_crypto || (!currency && is_float)) {\n                const new_value = parseFloat(+value) + parseFloat(1 * 10 ** (0 - decimal_places));\n                increment_value = parseFloat(new_value).toFixed(decimal_places);\n            } else {\n                increment_value = parseFloat((+value) + 1).toFixed(decimal_places);\n            }\n            onChange({ target: { value: increment_value, name } });\n        };\n\n        const calculateDecrementedValue = () => {\n            let decrement_value;\n\n            const decimal_places = value ? getDecimals(value) : 0;\n            const is_crypto      = !!currency && isCryptocurrency(currency);\n\n            if (is_crypto || (!currency && is_float)) {\n                const new_value = parseFloat(+value) - parseFloat(1 * 10 ** (0 - decimal_places));\n                decrement_value = parseFloat(new_value).toFixed(decimal_places);\n            } else {\n                decrement_value = parseFloat((+value) - 1).toFixed(decimal_places);\n            }\n            return decrement_value;\n        };\n\n        const decrementValue = () => {\n            if (!value || min_is_disabled) return;\n            const decrement_value = calculateDecrementedValue();\n            if (is_negative_disabled && decrement_value < 0) return;\n            onChange({ target: { value: decrement_value, name } });\n        };\n\n        const onKeyPressed = (e) => {\n            if (e.keyCode === 38) incrementValue(); // up-arrow pressed\n            if (e.keyCode === 40) decrementValue(); // down-arrow pressed\n        };\n\n        let display_value = value;\n\n        if (unit) {\n            display_value = is_unit_at_right ? `${value} ${unit}` : `${unit} ${value}`;\n        }\n\n        const is_increment_input = is_incrementable && (type === 'number' || type === 'tel');\n\n        const input =\n            <Input\n                changeValue={changeValue}\n                checked={checked}\n                className={classNames(is_increment_input ? 'input-wrapper__input' : '', inline_prefix ? 'input--has-inline-prefix' : '', 'input', { 'input--error': has_error }, classNameInput)}\n                classNameInlinePrefix={classNameInlinePrefix}\n                data_tip={data_tip}\n                data_value={data_value}\n                display_value={display_value}\n                fractional_digits={fractional_digits}\n                has_error={has_error}\n                id={id}\n                inline_prefix={inline_prefix}\n                is_autocomplete_disabled={is_autocomplete_disabled}\n                is_disabled={is_disabled}\n                is_hj_whitelisted={is_hj_whitelisted}\n                is_incrementable={is_increment_input}\n                is_read_only={is_read_only}\n                max_length={max_length}\n                name={name}\n                onClick={onClick}\n                onKeyPressed={onKeyPressed}\n                placeholder={placeholder}\n                required={required}\n                type={type}\n            />;\n\n        const increment_buttons =\n            <IncrementButtons\n                max_is_disabled={max_is_disabled}\n                incrementValue={incrementValue}\n                min_is_disabled={min_is_disabled || (is_negative_disabled && calculateDecrementedValue() < 0)}\n                decrementValue={decrementValue}\n            />;\n\n        const input_tooltip =\n            <Tooltip\n                className={classNames('', { 'tooltip--with-label': label })}\n                alignment='left'\n                message={has_error ? error_messages[0] : null}\n                has_error={has_error}\n            >\n                {!!label &&\n                <label htmlFor={name} className='input-field__label'>{label}</label>\n                }\n                {!!helper &&\n                <span className='input-field__helper'>{helper}</span>\n                }\n                {is_increment_input ?\n                    <div className='input-wrapper'>\n                        {increment_buttons}\n                        {input}\n                    </div>\n                    :\n                    input\n                }\n            </Tooltip>;\n\n        return (\n            <React.Fragment>\n                {!!prefix &&\n                <div className={classNamePrefix}>\n                    <span className={classNames(`${classNamePrefix}--symbol`, 'symbols', `symbols--${prefix.toLowerCase()}`)} />\n                </div>\n                }\n                <div\n                    className={classNames('input-field', className)}\n                >\n                    {this.props.icon &&\n                    <Icon onClick={onClick} />\n                    }\n                    {input_tooltip}\n                </div>\n            </React.Fragment>\n        );\n\n    }\n}\n\n// ToDo: Refactor input_field\n// supports more than two different types of 'value' as a prop.\n// Quick Solution - Pass two different props to input field.\nInputField.propTypes = {\n    checked: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className            : PropTypes.string,\n    classNameInlinePrefix: PropTypes.string,\n    classNameInput       : PropTypes.string,\n    classNamePrefix      : PropTypes.string,\n    currency             : PropTypes.string,\n    error_messages       : MobxPropTypes.arrayOrObservableArray,\n    fractional_digits    : PropTypes.number,\n    helper               : PropTypes.string,\n    icon                 : PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.node,\n    ]),\n    id                      : PropTypes.string,\n    inline_prefix           : PropTypes.string,\n    is_autocomplete_disabled: PropTypes.bool,\n    is_disabled             : PropTypes.string,\n    is_float                : PropTypes.bool,\n    is_hj_whitelisted       : PropTypes.bool,\n    is_incrementable        : PropTypes.bool,\n    is_negative_disabled    : PropTypes.bool,\n    is_read_only            : PropTypes.bool,\n    is_signed               : PropTypes.bool,\n    is_unit_at_right        : PropTypes.bool,\n    label                   : PropTypes.string,\n    max_length              : PropTypes.number,\n    name                    : PropTypes.string,\n    onChange                : PropTypes.func,\n    onClick                 : PropTypes.func,\n    placeholder             : PropTypes.string,\n    prefix                  : PropTypes.string,\n    required                : PropTypes.bool,\n    type                    : PropTypes.string,\n    unit                    : PropTypes.string,\n    value                   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(InputField);\n","import classNames                      from 'classnames';\nimport PropTypes                       from 'prop-types';\nimport React                           from 'react';\nimport { VerticalTabContentContainer } from './vertical-tab-content-container.jsx';\nimport { VerticalTabHeaders }          from './vertical-tab-headers.jsx';\n\nclass VerticalTab extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        if (props.is_routed) {\n            const applicable_routes = props.list.filter(item => (\n                item.path === props.current_path || item.default\n            ));\n            const selected = applicable_routes.length > 1\n                ? applicable_routes[applicable_routes.length - 1]\n                : applicable_routes[0];\n\n            this.state = {\n                selected,\n            };\n        } else {\n            this.state = {\n                selected: props.list[props.selected_index || 0],\n            };\n        }\n    }\n\n    changeSelected = (e) => {\n        this.setState({\n            selected: e,\n        });\n    };\n\n    render() {\n        return (\n            <div\n                className={classNames('vertical-tab', {\n                    'vertical-tab--full-screen': this.props.is_full_width,\n                })}\n            >\n                <VerticalTabHeaders\n                    items={this.props.list}\n                    onChange={this.changeSelected}\n                    selected={this.state.selected}\n                    is_routed={this.props.is_routed}\n                    header_title={this.props.header_title}\n                />\n                <VerticalTabContentContainer\n                    action_bar={this.props.action_bar}\n                    action_bar_classname={this.props.action_bar_classname}\n                    items={this.props.list}\n                    selected={this.state.selected}\n                    is_routed={this.props.is_routed}\n                />\n            </div>\n        );\n    }\n}\n\nVerticalTab.propTypes = {\n    action_bar: PropTypes.arrayOf(\n        PropTypes.shape({\n            component: PropTypes.func,\n            icon     : PropTypes.string,\n            onClick  : PropTypes.func,\n            title    : PropTypes.string,\n        })\n    ),\n    action_bar_classname: PropTypes.string,\n    current_path        : PropTypes.string,\n    header_title        : PropTypes.string,\n    is_full_width       : PropTypes.bool,\n    is_routed           : PropTypes.bool,\n    list                : PropTypes.arrayOf(\n        PropTypes.shape({\n            default: PropTypes.bool,\n            icon   : PropTypes.string,\n            label  : PropTypes.string,\n            path   : PropTypes.string,\n            value  : PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n        })\n    ).isRequired,\n    selected_index: PropTypes.number,\n};\n\nexport default VerticalTab;\n","import React from 'react';\n\nconst Loading = ({ is_invisible, theme, id }) => (\n    <div id={id} className={`barspinner barspinner--${ theme || 'dark'}${is_invisible ? ' invisible' : ''}`}>\n        { Array.from(new Array(5)).map((x, inx) => (\n            <div key={inx} className={`barspinner__rect barspinner__rect--${inx + 1} rect${inx + 1}`} />\n        ))}\n    </div>\n);\n\nexport default Loading;\n","import classNames from 'classnames';\nimport React      from 'react';\n\nconst UnderlyingIcon = ({ market }) => (\n    <div\n        className={classNames(\n            'icons-underlying',\n            `icons-underlying__ic-${market ? market.toUpperCase() : 'unknown'}`\n        )}\n    />\n);\n\nexport { UnderlyingIcon };\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Localize     from 'App/Components/Elements/localize.jsx';\n\nconst ProgressTicks = ({\n    current_tick,\n    ticks_count,\n}) => {\n    const arr_ticks   = [...Array(ticks_count).keys()];\n    return (\n        <div className='progress-slider__ticks'>\n            <span className='progress-slider__ticks-caption'>\n                <Localize i18n_default_text='Tick {{current_tick}}' values={{ current_tick: current_tick.toString() }} />\n            </span>\n            <div className='progress-slider__ticks-wrapper'>\n                {arr_ticks.map(idx =>\n                    <div\n                        key={idx}\n                        className={classNames('progress-slider__ticks-step', {\n                            'progress-slider__ticks-step--marked': (idx + 1) <= parseInt(current_tick),\n                        })}\n                    />\n                )}\n            </div>\n        </div>\n    );\n};\n\nProgressTicks.propTypes = {\n    current_tick: PropTypes.number,\n    ticks_count : PropTypes.number,\n};\n\nexport default ProgressTicks;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport {\n    formatDuration,\n    getDiffDuration } from 'Utils/Date';\n\nconst RemainingTime = ({\n    end_time = null,\n    start_time,\n}) => {\n    if (!+end_time || start_time.unix() > +end_time) {\n        return '';\n    }\n\n    const remaining_time = formatDuration(getDiffDuration(start_time.unix(), end_time));\n\n    return (\n        <div className='remaining-time'>{remaining_time}</div>\n    );\n};\n\nRemainingTime.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        start_time: common.server_time,\n    })\n)(RemainingTime);\n","import classNames            from 'classnames';\nimport PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { connect }           from 'Stores/connect';\nimport ProgressTicks         from './positions-progress-ticks.jsx';\nimport { getTimePercentage } from '../helpers';\nimport RemainingTime         from '../../../../Containers/remaining-time.jsx';\n\nconst ProgressSlider = ({\n    className,\n    current_tick,\n    is_loading,\n    start_time,\n    expiry_time,\n    server_time,\n    ticks_count,\n}) => {\n    const percentage = getTimePercentage(server_time, start_time, expiry_time);\n    return (\n        <div className={classNames('progress-slider', className)}>\n            {(ticks_count) ?\n                <ProgressTicks\n                    current_tick={current_tick}\n                    ticks_count={ticks_count}\n                />\n                :\n                <React.Fragment>\n                    <span className='positions-drawer-card__remaining-time'>\n                        <RemainingTime end_time={expiry_time} />\n                    </span>\n                    {(is_loading || (percentage < 1)) ?\n                        <div className='progress-slider__infinite-loader'>\n                            <div className='progress-slider__infinite-loader--indeterminate' />\n                        </div>\n                        :\n                        /* Calculate line width based on percentage of time left */\n                        <div className='progress-slider__track'>\n                            <div\n                                className={classNames('progress-slider__line', {\n                                    'progress-slider__line--green' : (percentage >= 50),\n                                    'progress-slider__line--orange': (percentage < 50 && percentage >= 20),\n                                    'progress-slider__line--red'   : (percentage < 20),\n                                })}\n                                style={{ width: `${percentage}%` }}\n                            />\n                        </div>\n                    }\n                </React.Fragment>\n            }\n        </div>\n    );\n};\n// Keypress events do not trigger on Safari due to the way it handles input type='range' elements, using focus on the input element also doesn't work for Safari.\n\nProgressSlider.propTypes = {\n    className   : PropTypes.string,\n    current_tick: PropTypes.number,\n    expiry_time : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    is_loading : PropTypes.bool,\n    server_time: PropTypes.object,\n    start_time : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    ticks_count: PropTypes.number,\n};\n\nexport default connect(({ common }) => ({\n    server_time: common.server_time,\n}))(ProgressSlider);\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { Trans }        from 'react-i18next';\n\nconst Localize = ({ i18n_default_text, values, components }) => (\n    <Trans defaults={i18n_default_text} values={values} components={components} />\n);\n\nLocalize.propTypes = {\n    components       : PropTypes.arrayOf(PropTypes.node),\n    i18n_default_text: PropTypes.string,\n    values           : PropTypes.object,\n};\n\nexport default Localize;\n","import moment            from 'moment';\nimport { isEmptyObject } from '_common/utility';\nimport ServerTime        from '_common/base/server_time';\n\nexport const getChartConfig = (\n    contract_info,\n    is_digit_contract,\n    is_from_purchase,\n) => {\n    if (isEmptyObject(contract_info)) return null;\n    const start       = contract_info.date_start;\n    const end         = getEndTime(contract_info);\n    const granularity = getChartGranularity(start, end || null);\n    const chart_type  = getChartType(start, end || null);\n\n    return {\n        chart_type                : contract_info.tick_count ? 'mountain' : chart_type,\n        granularity               : contract_info.tick_count ? 0 : granularity,\n        end_epoch                 : end,\n        start_epoch               : !is_from_purchase ? start : null,\n        scroll_to_epoch           : contract_info.purchase_time,\n        should_show_bottom_widgets: is_digit_contract,\n    };\n};\n\nconst hour_to_granularity_map = [\n    [1      , 0],\n    [2      , 120],\n    [6      , 600],\n    [24     , 900],\n    [5 * 24 , 3600],\n    [30 * 24, 14400],\n];\n\nconst getExpiryTime = (time) => time || ServerTime.get().unix();\n\nexport const getChartType = (start_time, expiry_time) => {\n    const duration = moment.duration(moment.unix(getExpiryTime(expiry_time)).diff(moment.unix(start_time))).asHours();\n    // use line chart if duration is equal or less than 1 hour\n    return (duration <= 1) ? 'mountain' : 'candle';\n};\n\nexport const getChartGranularity = (start_time, expiry_time) =>\n    calculateGranularity(getExpiryTime(expiry_time) - start_time);\n\nexport const calculateGranularity = (duration) =>\n    (hour_to_granularity_map.find(m => duration <= m[0] * 3600) || [null, 86400])[1];\n\nexport const getDisplayStatus = (contract_info) => {\n    let status = 'purchased';\n    if (isEnded(contract_info)) {\n        status = contract_info.profit >= 0 ? 'won' : 'lost';\n    }\n    return status;\n};\n\nexport const getFinalPrice = (contract_info) => (\n    +(contract_info.sell_price || contract_info.bid_price)\n);\n\nexport const getIndicativePrice = (contract_info) => (\n    getFinalPrice(contract_info) && isEnded(contract_info) ?\n        getFinalPrice(contract_info) :\n        (+contract_info.bid_price || null)\n);\n\nexport const getLastTickFromTickStream = (tick_stream = []) => (\n    tick_stream[tick_stream.length - 1] || {}\n);\n\nexport const isEnded = (contract_info) => !!(\n    (contract_info.status && contract_info.status !== 'open') ||\n    contract_info.is_expired        ||\n    contract_info.is_settleable\n);\n\nexport const isSoldBeforeStart = (contract_info) => (\n    contract_info.sell_time && +contract_info.sell_time < +contract_info.date_start\n);\n\nexport const isStarted = (contract_info) => (\n    !contract_info.is_forward_starting || contract_info.current_spot_time > contract_info.date_start\n);\n\nexport const isUserSold = (contract_info) => (\n    contract_info.status === 'sold'\n);\n\nexport const isValidToSell = (contract_info) => (\n    !isEnded(contract_info) && !isUserSold(contract_info) && +contract_info.is_valid_to_sell === 1\n);\n\nexport const getEndTime = (contract_info) => {\n    const {\n        exit_tick_time,\n        date_expiry,\n        is_expired,\n        is_path_dependent,\n        sell_time,\n        status,\n        tick_count: is_tick_contract,\n    } = contract_info;\n\n    const is_finished = is_expired && (status !== 'open');\n\n    if (!is_finished && !isUserSold(contract_info)) return undefined;\n\n    if (isUserSold(contract_info)) {\n        return (sell_time > date_expiry) ?\n            date_expiry : sell_time;\n    } else if (!is_tick_contract && (sell_time > date_expiry)) {\n        return date_expiry;\n    }\n\n    return (date_expiry > exit_tick_time && !(+is_path_dependent)) ? date_expiry : exit_tick_time;\n};\n","const Cookies          = require('js-cookie');\nconst getPropertyValue = require('./utility').getPropertyValue;\nconst isEmptyObject    = require('./utility').isEmptyObject;\nconst isProduction     = require('../config').isProduction;\n\nconst getObject = function (key) {\n    return JSON.parse(this.getItem(key) || '{}');\n};\n\nconst setObject = function (key, value) {\n    if (value && value instanceof Object) {\n        try {\n            this.setItem(key, JSON.stringify(value));\n        } catch (e) { /* do nothing */ }\n    }\n};\n\nif (typeof Storage !== 'undefined') {\n    Storage.prototype.getObject = getObject;\n    Storage.prototype.setObject = setObject;\n}\n\nconst isStorageSupported = (storage) => {\n    if (typeof storage === 'undefined') {\n        return false;\n    }\n\n    const test_key = 'test';\n    try {\n        storage.setItem(test_key, '1');\n        storage.removeItem(test_key);\n        return true;\n    } catch (e) {\n        return false;\n    }\n};\n\nconst Store = function (storage) {\n    this.storage           = storage;\n    this.storage.getObject = getObject;\n    this.storage.setObject = setObject;\n};\n\nStore.prototype = {\n    get(key) {\n        return this.storage.getItem(key) || undefined;\n    },\n    set(key, value) {\n        if (typeof value !== 'undefined') {\n            this.storage.setItem(key, value);\n        }\n    },\n    getObject(key) {\n        return typeof this.storage.getObject === 'function' // Prevent runtime error in IE\n            ? this.storage.getObject(key)\n            : JSON.parse(this.storage.getItem(key) || '{}');\n    },\n    setObject(key, value) {\n        if (typeof this.storage.setObject === 'function') { // Prevent runtime error in IE\n            this.storage.setObject(key, value);\n        } else {\n            this.storage.setItem(key, JSON.stringify(value));\n        }\n    },\n    remove(key) { this.storage.removeItem(key); },\n    clear()     { this.storage.clear(); },\n};\n\nconst InScriptStore = function (object) {\n    this.store = typeof object !== 'undefined' ? object : {};\n};\n\nInScriptStore.prototype = {\n    get(key) {\n        return getPropertyValue(this.store, key);\n    },\n    set(k, value, obj = this.store) {\n        let key = k;\n        if (!Array.isArray(key)) key = [key];\n        if (key.length > 1) {\n            if (!(key[0] in obj) || isEmptyObject(obj[key[0]])) obj[key[0]] = {};\n            this.set(key.slice(1), value, obj[key[0]]);\n        } else {\n            obj[key[0]] = value;\n        }\n    },\n    getObject(key) {\n        return JSON.parse(this.get(key) || '{}');\n    },\n    setObject(key, value) {\n        this.set(key, JSON.stringify(value));\n    },\n    remove(...keys) {\n        keys.forEach((key) => { delete this.store[key]; });\n    },\n    clear()   { this.store = {}; },\n    has(key)  { return this.get(key) !== undefined; },\n    keys()    { return Object.keys(this.store); },\n    call(key) { if (typeof this.get(key) === 'function') this.get(key)(); },\n};\n\nconst State     = new InScriptStore();\nState.prototype = InScriptStore.prototype;\n/**\n * Shorthand function to get values from response object of State\n *\n * @param {String} pathname\n *     e.g. getResponse('authorize.currency') == get(['response', 'authorize', 'authorize', 'currency'])\n */\nState.prototype.getResponse = function (pathname) {\n    let path = pathname;\n    if (typeof path === 'string') {\n        const keys = path.split('.');\n        path = ['response', keys[0]].concat(keys);\n    }\n    return this.get(path);\n};\nState.set('response', {});\n\nconst CookieStorage = function (cookie_name, cookie_domain) {\n    const hostname = window.location.hostname;\n\n    this.initialized = false;\n    this.cookie_name = cookie_name;\n    this.domain      = cookie_domain || (isProduction() ? `.${hostname.split('.').slice(-2).join('.')}` : hostname);\n    this.path        = '/';\n    this.expires     = new Date('Thu, 1 Jan 2037 12:00:00 GMT');\n    this.value       = {};\n};\n\nCookieStorage.prototype = {\n    read() {\n        const cookie_value = Cookies.get(this.cookie_name);\n        try {\n            this.value = cookie_value ? JSON.parse(cookie_value) : {};\n        } catch (e) {\n            this.value = {};\n        }\n        this.initialized = true;\n    },\n    write(val, expireDate, isSecure) {\n        if (!this.initialized) this.read();\n        this.value = val;\n        if (expireDate) this.expires = expireDate;\n        Cookies.set(this.cookie_name, this.value, {\n            expires: this.expires,\n            path   : this.path,\n            domain : this.domain,\n            secure : !!isSecure,\n        });\n    },\n    get(key) {\n        if (!this.initialized) this.read();\n        return this.value[key];\n    },\n    set(key, val) {\n        if (!this.initialized) this.read();\n        this.value[key] = val;\n        Cookies.set(this.cookie_name, this.value, {\n            expires: new Date(this.expires),\n            path   : this.path,\n            domain : this.domain,\n        });\n    },\n    remove() {\n        Cookies.remove(this.cookie_name, {\n            path  : this.path,\n            domain: this.domain,\n        });\n    },\n};\n\nconst removeCookies = (...cookie_names) => {\n    const domains = [\n        `.${document.domain.split('.').slice(-2).join('.')}`,\n        `.${document.domain}`,\n    ];\n\n    let parent_path = window.location.pathname.split('/', 2)[1];\n    if (parent_path !== '') {\n        parent_path = `/${parent_path}`;\n    }\n\n    cookie_names.forEach((c) => {\n        Cookies.remove(c, { path: '/', domain: domains[0] });\n        Cookies.remove(c, { path: '/', domain: domains[1] });\n        Cookies.remove(c);\n        if (new RegExp(c).test(document.cookie) && parent_path) {\n            Cookies.remove(c, { path: parent_path, domain: domains[0] });\n            Cookies.remove(c, { path: parent_path, domain: domains[1] });\n            Cookies.remove(c, { path: parent_path });\n        }\n    });\n};\n\nlet SessionStore,\n    LocalStore;\n\nif (isStorageSupported(window.localStorage)) {\n    LocalStore = new Store(window.localStorage);\n}\nif (isStorageSupported(window.sessionStorage)) {\n    SessionStore = new Store(window.sessionStorage);\n}\n\nif (!LocalStore) {\n    LocalStore = new InScriptStore();\n}\nif (!SessionStore) {\n    SessionStore = new InScriptStore();\n}\n\nmodule.exports = {\n    isStorageSupported,\n    CookieStorage,\n    removeCookies,\n    State,\n    SessionStore,\n    LocalStore,\n};\n","export const buildBarriersConfig = (contract, barriers = { count: contract.barriers }) => {\n    if (!contract.barriers) {\n        return undefined;\n    }\n\n    const obj_barrier = {};\n\n    ['barrier', 'low_barrier', 'high_barrier'].forEach((field) => {\n        if (field in contract) obj_barrier[field] = contract[field];\n    });\n\n    return Object.assign(barriers || {}, {\n        [contract.expiry_type]: obj_barrier,\n    });\n};\n","import ServerTime               from '_common/base/server_time';\nimport { localize }             from 'App/i18n';\nimport {\n    cloneObject,\n    getPropertyValue }          from '_common/utility';\nimport { WS }                   from 'Services';\nimport {\n    isTimeValid,\n    minDate,\n    toMoment }                  from 'Utils/Date';\nimport { buildBarriersConfig }  from './barrier';\nimport {\n    buildDurationConfig,\n    hasIntradayDurationUnit }   from './duration';\nimport {\n    buildForwardStartingConfig,\n    isSessionAvailable }        from './start-date';\nimport {\n    getContractCategoriesConfig,\n    getContractTypesConfig,\n    getLocalizedBasis }         from '../Constants/contract';\n\nconst ContractType = (() => {\n    let available_contract_types = {};\n    let available_categories     = {};\n    let contract_types;\n    const trading_times          = {};\n    let has_only_forward_starting_contracts = false;\n\n    const buildContractTypesConfig = (symbol) => WS.contractsFor(symbol).then(r => {\n        const has_contracts = getPropertyValue(r, ['contracts_for']);\n        has_only_forward_starting_contracts = has_contracts && !r.contracts_for.available.find((contract) => contract.start_type !== 'forward');\n        if (!has_contracts || has_only_forward_starting_contracts) return;\n        const contract_categories = getContractCategoriesConfig();\n        contract_types = getContractTypesConfig();\n\n        available_contract_types = {};\n        available_categories = cloneObject(contract_categories); // To preserve the order (will clean the extra items later in this function)\n\n        r.contracts_for.available.forEach((contract) => {\n            const type = Object.keys(contract_types).find(key => (\n                contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                (typeof contract_types[key].barrier_count === 'undefined' || +contract_types[key].barrier_count === contract.barriers) // To distinguish betweeen Rise/Fall & Higher/Lower\n            ));\n\n            if (!type) return; // ignore unsupported contract types\n\n            /*\n            add to this config if a value you are looking for does not exist yet\n            accordingly create a function to retrieve the value\n            config: {\n                has_spot: 1,\n                durations: {\n                    min_max: {\n                        spot: {\n                            tick    : { min: 5,     max: 10 },    // value in ticks, as cannot convert to seconds\n                            intraday: { min: 18000, max: 86400 }, // all values converted to seconds\n                            daily   : { min: 86400, max: 432000 },\n                        },\n                        forward: {\n                            intraday: { min: 18000, max: 86400 },\n                        },\n                    },\n                    units_display: {\n                        spot: [\n                            { text: 'ticks',   value: 't' },\n                            { text: 'seconds', value: 's' },\n                            { text: 'minutes', value: 'm' },\n                            { text: 'hours',   value: 'h' },\n                            { text: 'days',    value: 'd' },\n                        ],\n                        forward: [\n                            { text: 'days',    value: 'd' },\n                        ],\n                    },\n                },\n                forward_starting_dates: [\n                    { text: 'Mon - 19 Mar, 2018', value: 1517356800, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Tue - 20 Mar, 2018', value: 1517443200, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Wed - 21 Mar, 2018', value: 1517529600, sessions: [{ open: obj_moment, close: obj_moment }] },\n                ],\n                trade_types: {\n                    'CALL': 'Higher',\n                    'PUT' : 'Lower',\n                },\n                barriers: {\n                    count   : 2,\n                    tick    : { high_barrier: '+1.12', low_barrier : '-1.12' },\n                    intraday: { high_barrier: '+2.12', low_barrier : '-2.12' },\n                    daily   : { high_barrier: 1111,    low_barrier : 1093 },\n                },\n            }\n            */\n\n            if (!available_contract_types[type]) {\n                // extend contract_categories to include what is needed to create the contract list\n                const sub_cats = available_categories[Object.keys(available_categories)\n                    .find(key => available_categories[key].indexOf(type) !== -1)];\n\n                if (!sub_cats) return;\n\n                sub_cats[sub_cats.indexOf(type)] = { value: type, text: contract_types[type].title };\n\n                // populate available contract types\n                available_contract_types[type] = cloneObject(contract_types[type]);\n            }\n            const config = available_contract_types[type].config || {};\n\n            // set config values\n            config.has_spot               = config.has_spot || contract.start_type === 'spot';\n            config.durations              = buildDurationConfig(contract, config.durations);\n            config.trade_types            = buildTradeTypesConfig(contract, config.trade_types);\n            config.barriers               = buildBarriersConfig(contract, config.barriers);\n            config.forward_starting_dates = buildForwardStartingConfig(contract, config.forward_starting_dates);\n\n            available_contract_types[type].config = config;\n        });\n\n        // cleanup categories\n        Object.keys(available_categories).forEach((key) => {\n            available_categories[key] = available_categories[key].filter(item => typeof item === 'object');\n            if (available_categories[key].length === 0) {\n                delete available_categories[key];\n            }\n        });\n    });\n\n    const buildTradeTypesConfig = (contract, trade_types = {}) => {\n        trade_types[contract.contract_type] = contract.contract_display;\n        return trade_types;\n    };\n\n    const getArrayDefaultValue = (arr_new_values, value) => (\n        arr_new_values.indexOf(value) !== -1 ? value : arr_new_values[0]\n    );\n\n    const getContractValues = (store) => {\n        const { contract_expiry_type, contract_type, basis, duration_unit, start_date } = store;\n        const form_components   = getComponents(contract_type);\n        const obj_basis         = getBasis(contract_type, basis);\n        const obj_trade_types   = getTradeTypes(contract_type);\n        const obj_start_dates   = getStartDates(contract_type, start_date);\n        const obj_start_type    = getStartType(obj_start_dates.start_date);\n        const obj_barrier       = getBarriers(contract_type, contract_expiry_type);\n        const obj_duration_unit = getDurationUnit(duration_unit, contract_type, obj_start_type.contract_start_type);\n\n        const obj_duration_units_list    = getDurationUnitsList(contract_type, obj_start_type.contract_start_type);\n        const obj_duration_units_min_max = getDurationMinMax(contract_type, obj_start_type.contract_start_type);\n\n        return {\n            ...form_components,\n            ...obj_basis,\n            ...obj_trade_types,\n            ...obj_start_dates,\n            ...obj_start_type,\n            ...obj_barrier,\n            ...obj_duration_unit,\n            ...obj_duration_units_list,\n            ...obj_duration_units_min_max,\n        };\n    };\n\n    const getContractType = (list, contract_type) => {\n        const arr_list = Object.keys(list || {})\n            .reduce((k, l) => ([...k, ...list[l].map(ct => ct.value)]), []);\n        return {\n            contract_type: getArrayDefaultValue(arr_list, contract_type),\n        };\n    };\n\n    const getComponents = (c_type) => ({ form_components: ['duration', 'amount', ...contract_types[c_type].components] });\n\n    const getDurationUnitsList = (contract_type, contract_start_type) => ({\n        duration_units_list: getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [],\n    });\n\n    const getDurationUnit = (duration_unit, contract_type, contract_start_type) => {\n        const duration_units = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [];\n        const arr_units = [];\n        duration_units.forEach(obj => {\n            arr_units.push(obj.value);\n        });\n\n        return {\n            duration_unit: getArrayDefaultValue(arr_units, duration_unit),\n        };\n    };\n\n    const getDurationMinMax = (contract_type, contract_start_type, contract_expiry_type) => {\n        let duration_min_max = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'min_max', contract_start_type]) || {};\n\n        if (contract_expiry_type) {\n            duration_min_max = duration_min_max[contract_expiry_type] || {};\n        }\n\n        return { duration_min_max };\n    };\n\n    const getFullContractTypes = () => available_contract_types;\n\n    const getStartType = (start_date) => ({\n        // Number(0) refers to 'now'\n        contract_start_type: start_date === Number(0) ? 'spot' : 'forward',\n    });\n\n    const getStartDates = (contract_type, current_start_date) => {\n        const config           = getPropertyValue(available_contract_types, [contract_type, 'config']);\n        const start_dates_list = [];\n\n        if (config.has_spot) {\n            // Number(0) refers to 'now'\n            start_dates_list.push({ text: localize('Now'), value: Number(0) });\n        }\n        if (config.forward_starting_dates) {\n            start_dates_list.push(...config.forward_starting_dates);\n        }\n\n        const start_date = start_dates_list.find(item => item.value === current_start_date) ?\n            current_start_date : start_dates_list[0].value;\n\n        return { start_date, start_dates_list };\n    };\n\n    const getSessions = (contract_type, start_date) => {\n        const config   = getPropertyValue(available_contract_types, [contract_type, 'config']) || {};\n        const sessions =\n                  ((config.forward_starting_dates || []).find(option => option.value === start_date) || {}).sessions;\n        return { sessions };\n    };\n\n    const hours   = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const getValidTime = (sessions, compare_moment, start_moment) => {\n        if (sessions && !isSessionAvailable(sessions, compare_moment)) {\n            // first see if changing the minute brings it to the right session\n            compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            // if not, also change the hour\n            if (!isSessionAvailable(sessions, compare_moment)) {\n                compare_moment.minute(0);\n                compare_moment.hour(hours.find(h => isSessionAvailable(sessions, compare_moment.hour(h), start_moment, true)) || compare_moment.format('HH'));\n                compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            }\n        }\n        return compare_moment.format('HH:mm');\n    };\n\n    const buildMoment = (date, time) => {\n        const [ hour, minute ] = isTimeValid(time) ? time.split(':') : [0, 0];\n        return toMoment(date || ServerTime.get()).hour(hour).minute(minute);\n    };\n\n    const getStartTime = (sessions, start_date, start_time) => ({\n        start_time: start_date ? getValidTime(sessions, buildMoment(start_date, start_time)) : null,\n    });\n\n    const getTradingTimes = async (date, underlying = null) => {\n        if (!date) {\n            return [];\n        }\n\n        if (!(date in trading_times)) {\n            const trading_times_response = await WS.getTradingTimes(date);\n\n            if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n                for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                    const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                    if (submarkets) {\n                        for (let j = 0; j < submarkets.length; j++) {\n                            const symbols = submarkets[j].symbols;\n                            if (symbols) {\n                                for (let k = 0; k < symbols.length; k++) {\n                                    const symbol = symbols[k];\n                                    if (!trading_times[trading_times_response.echo_req.trading_times]) {\n                                        trading_times[trading_times_response.echo_req.trading_times] = {};\n                                    }\n                                    trading_times[trading_times_response.echo_req.trading_times][symbol.symbol] = {\n                                        'open' : symbol.times.open,\n                                        'close': symbol.times.close,\n                                    };\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return underlying ? trading_times[date][underlying] : trading_times[date];\n    };\n\n    const getExpiryType = (duration_units_list, expiry_type) => {\n        if (duration_units_list && duration_units_list.length === 1 && duration_units_list[0].value === 't') {\n            return { expiry_type: 'duration' };\n        }\n\n        return { expiry_type };\n    };\n\n    const getExpiryDate = (duration_units_list, expiry_date, expiry_type, start_date) => {\n        let proper_expiry_date = null;\n\n        if (expiry_type === 'endtime') {\n            const moment_start  = toMoment(start_date);\n            const moment_expiry = toMoment(expiry_date);\n\n            if (!hasIntradayDurationUnit(duration_units_list)) {\n                const is_invalid = moment_expiry.isSameOrBefore(moment_start, 'day');\n                proper_expiry_date = (is_invalid ? moment_start.clone().add(1, 'day') : moment_expiry).format('YYYY-MM-DD');\n            } else {\n                // forward starting contracts should only show today and tomorrow as expiry date\n                const is_invalid =\n                    moment_expiry.isBefore(moment_start, 'day') || (start_date && moment_expiry.isAfter(moment_start.clone().add(1, 'day')));\n                proper_expiry_date = (is_invalid ? moment_start : moment_expiry).format('YYYY-MM-DD');\n            }\n        }\n\n        return { expiry_date: proper_expiry_date };\n    };\n\n    // It has to follow the correct order of checks:\n    // first check if end time is within available sessions\n    // then confirm that end time is at least 5 minute after start time\n    const getExpiryTime = (\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    ) => {\n        let end_time = null;\n\n        if (expiry_type === 'endtime') {\n            let market_close_time = '23:59:59';\n\n            if (market_close_times && market_close_times.length && market_close_times[0] !== '--') {\n                // Some of underlyings (e.g. Australian Index) have two close time during a day so we always select the further one as the end time of the contract.\n                market_close_time = market_close_times.slice(-1)[0];\n            }\n\n            // For contracts with a duration of more that 24 hours must set the expiry_time to the market's close time on the expiry date.\n            if (!start_date && ServerTime.get().isBefore(buildMoment(expiry_date), 'day')) {\n                end_time = market_close_time;\n            } else {\n                const start_moment = start_date ? buildMoment(start_date, start_time) : ServerTime.get();\n                const end_moment   = buildMoment(expiry_date, expiry_time);\n\n                end_time = end_moment.format('HH:mm');\n                // When the contract is forwarding, and the duration is endtime, users can purchase the contract within 24 hours.\n                const expiry_sessions = [{\n                    open : start_moment.clone().add(5, 'minute'), // expiry time should be at least 5 minute after start_time\n                    close: minDate(start_moment.clone().add(24, 'hour'), buildMoment(expiry_date, market_close_time)),\n                }];\n\n                if (!isSessionAvailable(expiry_sessions, end_moment)) {\n                    end_time = getValidTime(expiry_sessions, end_moment.clone(), start_moment.clone());\n                }\n                if (end_moment.isSameOrBefore(start_moment) || end_moment.diff(start_moment, 'minute') < 5) {\n                    const is_end_of_day     = start_moment.get('hours') === 23 && start_moment.get('minute') >= 55;\n                    const is_end_of_session = sessions && !isSessionAvailable(sessions, start_moment.clone().add(5, 'minutes'));\n                    end_time = start_moment.clone().add((is_end_of_day || is_end_of_session) ? 0 : 5, 'minutes');\n                    // Set the end_time to be multiple of 5 to be equal as the SELECTED_TIME that shown to the client.\n                    end_time = setMinuteMultipleByFive(end_time).format('HH:mm');\n                }\n                // Set the expiry_time to 5 minute less than start_time for forwading contracts when the expiry_time is null and the expiry_date is tomorrow.\n                if (end_time === '00:00' && start_moment.isBefore(end_moment, 'day')) {\n                    end_time = start_moment.clone().subtract(5, 'minute').format('HH:mm');\n                }\n            }\n        }\n        return { expiry_time: end_time };\n    };\n\n    const setMinuteMultipleByFive = (moment_obj) => (\n        moment_obj.minute((Math.ceil(moment_obj.minute() / 5) * 5))\n    );\n\n    const getTradeTypes = (contract_type) => ({\n        trade_types: getPropertyValue(available_contract_types, [contract_type, 'config', 'trade_types']),\n    });\n\n    const getBarriers = (contract_type, expiry_type) => {\n        const barriers       = getPropertyValue(available_contract_types, [contract_type, 'config', 'barriers']) || {};\n        const barrier_values = barriers[expiry_type] || {};\n        const barrier_1      = barrier_values.barrier || barrier_values.high_barrier || '';\n        const barrier_2      = barrier_values.low_barrier || '';\n        return {\n            barrier_count: barriers.count || 0,\n            barrier_1    : barrier_1.toString(),\n            barrier_2    : barrier_2.toString(),\n        };\n    };\n\n    const getBasis = (contract_type, basis) => {\n        const arr_basis  = getPropertyValue(available_contract_types, [contract_type, 'basis']) || {};\n        const localized_basis = getLocalizedBasis();\n        const basis_list = arr_basis.reduce((cur, bas) => (\n            [...cur, { text: localized_basis[bas], value: bas }]\n        ), []);\n\n        return {\n            basis_list,\n            basis: getArrayDefaultValue(arr_basis, basis),\n        };\n    };\n\n    return {\n        buildContractTypesConfig,\n        getBarriers,\n        getContractType,\n        getContractValues,\n        getDurationMinMax,\n        getDurationUnit,\n        getDurationUnitsList,\n        getFullContractTypes,\n        getExpiryDate,\n        getExpiryTime,\n        getExpiryType,\n        getSessions,\n        getStartTime,\n        getStartType,\n        getTradingTimes,\n        getContractCategories: () => ({\n            contract_types_list: available_categories,\n            has_only_forward_starting_contracts,\n        }),\n    };\n})();\n\nexport default ContractType;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport Loading   from '../../../templates/_common/components/loading.jsx';\n\nconst ChartLoader = ({ is_visible }) => (\n    is_visible &&\n    <div className='chart-container__loader'>\n        <Loading theme='chart-loader' />\n    </div>\n);\n\nChartLoader.propTypes = {\n    is_visible: PropTypes.bool,\n};\n\nexport default ChartLoader;\n","import React                      from 'react';\nimport PropTypes                  from 'prop-types';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport Icon                       from 'Assets/icon.jsx';\n\nconst ContractTypeCell = ({ type, is_high_low }) => (\n    <div className='contract-type'>\n        <div className='contract-type__type-wrapper'>\n            <Icon\n                icon='IconTradeType'\n                type={(is_high_low) ? `${type.toLowerCase()}_barrier` : type.toLowerCase()}\n                className='category-type'\n            />\n        </div>\n        <span className='contract-type__type-label'>\n            {getContractTypeDisplay(type, is_high_low) || ''}\n        </span>\n    </div>\n);\n\nContractTypeCell.propTypes = {\n    type: PropTypes.string,\n};\n\nexport default ContractTypeCell;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Icon         from 'Assets/icon.jsx';\nimport { localize } from 'App/i18n';\n\nconst FooterIcon = (use_icon) => use_icon || 'IconCalendarToday';\n\nconst CalendarFooter = ({\n    footer,\n    has_today_btn,\n    has_range_selection,\n    duration_date,\n    is_minimum,\n    onClick,\n    use_icon,\n}) => (\n    <React.Fragment>\n        { (has_today_btn || footer || has_range_selection) &&\n            <div className='calendar__footer'>\n                { footer && <span className='calendar__text'>{footer}</span>}\n                { has_range_selection && <span className='calendar__text'>{ `${!is_minimum ? localize('Duration: ') : ''}${duration_date}` }</span> }\n                { has_today_btn &&\n                    <Icon\n                        icon={FooterIcon(use_icon)}\n                        className='calendar__icon'\n                        onClick={onClick}\n                    />\n                }\n            </div>\n        }\n    </React.Fragment>\n);\n\nCalendarFooter.propTypes = {\n    duration_date      : PropTypes.string,\n    footer             : PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    has_today_btn      : PropTypes.bool,\n    is_minimum         : PropTypes.bool,\n    onClick            : PropTypes.func,\n    use_icon           : PropTypes.string,\n};\n\nexport default CalendarFooter;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst Highlight = ({ left, width }) => {\n    const border_radius_size = '4px';\n    const left_offset        = (left < 110) ? 0 : left;\n    const width_offset       = (width < 110) ? 111 : width;\n    const highlight_style = {\n        width                    : width_offset,\n        left                     : 0,\n        transform                : `translate3d(${left_offset}px, 0, 0)`,\n        'borderTopLeftRadius'    : (left_offset === 0) ? border_radius_size : 0,\n        'borderTopRightRadius'   : (left_offset === 0) ? 0 : border_radius_size ,\n        'borderBottomLeftRadius' : (left_offset === 0) ? border_radius_size  : 0,\n        'borderBottomRightRadius': (left_offset === 0) ? 0 : border_radius_size ,\n    };\n\n    return (\n        <span style={highlight_style} className='button-menu--highlight' />\n    );\n};\n\nHighlight.propTypes = {\n    left : PropTypes.number,\n    width: PropTypes.number,\n};\n\nexport { Highlight };\n","import classnames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { Highlight } from './button-highlight.jsx';\n\nclass HighlightWrapper extends React.PureComponent {\n    state = {\n        left : 0,\n        width: 0,\n    }\n\n    componentDidMount() {\n        const active_button_el = [...this.node.getElementsByClassName('button-menu__button--active')][0];\n        if (!this.node) return;\n        this.updateHighlightPosition(active_button_el);\n    }\n\n    componentDidUpdate() {\n        const active_button_el = [...this.node.getElementsByClassName('button-menu__button--active')][0];\n        if (active_button_el) {\n            this.updateHighlightPosition(active_button_el);\n        } else if (this.state.left !== 0 || this.state.width !== 0) {\n            this.resetHighlight(); // clear highlight when active element doesn't exist\n        }\n    }\n\n    componentWillUnMount() {\n        this.resetHighlight();\n    }\n\n    onClick = (e, buttonClick) => {\n        if (!e.target) return;\n        this.updateHighlightPosition(e.target.closest('button'));\n        if (typeof buttonClick  === 'function') {\n            buttonClick();\n        }\n    };\n\n    resetHighlight = () => {\n        this.setState({\n            left : 0,\n            width: 0,\n        });\n    };\n\n    updateHighlightPosition = (el) => {\n        if (!el) return;\n        const { offsetLeft: left, offsetWidth: width } = el;\n        if (this.state.width !== width) {\n            this.setState({ width });\n        }\n        if (this.state.left !== left) {\n            this.setState({ left });\n        }\n    };\n\n    render() {\n        const { className, ...other_props } = this.props;\n        const props = {\n            className: classnames('button-menu__wrapper', className),\n            ...other_props,\n        };\n\n        return (\n            <div ref={(node) => this.node = node} {...props}>\n                {\n                    React.Children.map(this.props.children, child => (\n                        React.cloneElement(child, {\n                            onClick: (e) => this.onClick(e, child.props.onClick),\n                        })\n                    ))\n                }\n                <Highlight left={this.state.left} width={this.state.width} />\n            </div>\n        );\n    }\n}\n\nHighlightWrapper.propTypes = {\n    children : PropTypes.array,\n    className: PropTypes.string,\n    timeout  : PropTypes.number,\n};\n\nexport default HighlightWrapper;\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport Button           from 'App/Components/Form/button.jsx';\nimport HighlightWrapper from './button-highlight-wrapper.jsx';\n\nconst ButtonToggleMenu = ({\n    buttons_arr,\n    is_animated,\n    name,\n    onChange,\n    value,\n}) => {\n    const changeValue = (selected_value) => {\n        if (value === selected_value) return;\n        onChange({ target: { value: selected_value, name } });\n    };\n    const menu = buttons_arr.map((val, idx) => {\n        const className = classNames('button-menu__button', {\n            'button-menu__button--active': val.value === value,\n        });\n        return (\n            <Button\n                key={idx}\n                text={`${val.text.charAt(0).toUpperCase()}${val.text.slice(1)}`}\n                onClick={() => changeValue(val.value)}\n                className={className}\n            />\n        );\n    });\n    return (\n        <div className='button-menu'>\n            {is_animated ?\n                <HighlightWrapper>\n                    {menu}\n                </HighlightWrapper>\n                :\n                <React.Fragment>\n                    {menu}\n                </React.Fragment>\n            }\n        </div>\n    );\n};\n\nButtonToggleMenu.propTypes = {\n    buttons_arr: PropTypes.array,\n    is_animated: PropTypes.bool,\n    name       : PropTypes.string,\n    onChange   : PropTypes.func,\n    value      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default ButtonToggleMenu;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { Popover }         from 'App/Components/Elements/Popover';\nimport { getCurrencyName } from '_common/base/currency_base';\n\nconst Items = ({\n    index,\n    handleSelect,\n    has_symbol,\n    items,\n    name,\n    value,\n}) =>  items.map((item, idx) => {\n    const symbol_type_class_name = item.text ? `symbols--${(item.text).toLowerCase()}` : '';\n    return (\n        <div\n            className={classNames(\n                'list__item',\n                { 'list__item--highlighted': idx === index },\n                { 'list__item--selected': value === item.value },\n                { 'list__item--disabled': item.disabled }\n            )}\n            name={name}\n            value={item.value}\n            onClick={item.disabled ? null : handleSelect.bind(null, item)}\n            key={idx}\n        >\n            {!!has_symbol && item.has_tooltip &&\n                <Popover\n                    alignment='left'\n                    message={getCurrencyName(item.value)}\n                >\n                    <span\n                        className={classNames(\n                            'symbols',\n                            'list__item-symbol',\n                            symbol_type_class_name\n                        )}\n                    />\n                </Popover>\n            }\n\n            {!!has_symbol && !item.has_tooltip &&\n                <span\n                    className={classNames(\n                        'symbols',\n                        'list__item-text',\n                        symbol_type_class_name,\n                    )}\n                />\n            }\n\n            {!has_symbol &&\n                <span className='list__item-text'>{item.text}</span>\n            }\n        </div>\n    );\n});\n\nItems.propTypes = {\n    handleSelect: PropTypes.func,\n    has_symbol  : PropTypes.bool,\n    name        : PropTypes.string,\n    value       : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Items;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst NativeSelect = ({\n    name,\n    list,\n    value,\n    onChange,\n}) => (\n    <div className='native-select native-select__wrapper'>\n        <select className='select native-select__select' name={name} value={value} onChange={onChange}>\n            {Array.isArray(list) ?\n                list.map((item, idx) => (\n                    <option key={idx} value={item.value}>{item.text}</option>\n                ))\n                :\n                Object.keys(list).map(key => (\n                    <React.Fragment key={key}>\n                        <optgroup label={key}>\n                            {list[key].map((item, idx) => (\n                                <option key={idx} value={item.value}>{item.text}</option>\n                            ))}\n                        </optgroup>\n                    </React.Fragment>\n                ))}\n        </select>\n    </div>\n);\n\nNativeSelect.propTypes = {\n    list: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.array,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default NativeSelect;\n","import { isArrayLike } from 'mobx';\n\nexport const getDisplayText = (list, value) => {\n    const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n    let text = '';\n    if (isArrayLike(list)) {\n        text = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            text = findInArray(list[key]);\n            return text;\n        });\n    }\n    return text;\n};\n\nexport const getItemFromValue = (list, value) => {\n    const findInArray = (arr_list) => arr_list.findIndex(item => item.value === value);\n    let item = {};\n    if (isArrayLike(list)) {\n        item = { number: findInArray(list), length: list.length };\n    } else {\n        Object.keys(list).some(key => {\n            item = { number: findInArray(list[key]), length: list[key].length };\n            return item;\n        });\n    }\n    return item;\n};\n\nexport const getValueFromIndex = (list, index) => {\n    const findInArray = (arr_list) => arr_list[index];\n    let result;\n    if (isArrayLike(list)) {\n        result = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            result = findInArray(list[key]);\n            return result.value;\n        });\n    }\n    return result.value;\n};\n\nexport const getPrevIndex = (index, length) => {\n    const prev_index = (index - 1) < 0 ? (length - 1) : index - 1;\n    return prev_index;\n};\n\nexport const getNextIndex = (index, length) => {\n    const next_index = (index + 1) === length ? 0 : index + 1;\n    return next_index;\n};\n","import classNames        from 'classnames';\nimport { isArrayLike }   from 'mobx';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Scrollbars }    from 'tt-react-custom-scrollbars';\nimport Icon              from 'Assets/icon.jsx';\nimport Items             from './items.jsx';\nimport NativeSelect      from './native-select.jsx';\nimport {\n    getDisplayText,\n    getItemFromValue,\n    getValueFromIndex,\n    getPrevIndex,\n    getNextIndex }       from './helpers';\n\nclass Dropdown extends React.PureComponent {\n    list_ref = React.createRef();\n    state = {\n        curr_index     : getItemFromValue(this.props.list, this.props.value).number,\n        is_list_visible: false,\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    }\n\n    setWrapperRef = (node) => this.wrapper_ref = node;\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_list_visible) {\n            this.setState({ is_list_visible: false });\n        }\n    }\n\n    handleVisibility = () => {\n        this.setState((state) =>({  is_list_visible: !state.is_list_visible }));\n    }\n\n    onKeyPressed = (event) => {\n        if (this.is_single_option) return;\n        if (event.keyCode === 9) { // Tab is pressed\n            if (this.state.is_list_visible) {\n                this.handleVisibility();\n            }\n            return;\n        }\n        event.preventDefault();\n        const index = getItemFromValue(this.props.list, this.props.value);\n        const value = getValueFromIndex(this.props.list, this.state.curr_index);\n        const handleToggle = () => {\n            if (this.state.is_list_visible && this.props.value !== value) {\n                this.props.onChange({ target: { name: this.props.name, value } });\n            }\n            this.handleVisibility();\n        };\n        switch (event.keyCode) {\n            case 13: // Enter is pressed\n            case 32: // Space is pressed\n                handleToggle();\n                break;\n            case 38: // Up Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const prev_index = getPrevIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: prev_index });\n                }\n                break;\n            case 40: // Down Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const next_index = getNextIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: next_index });\n                } else if (!this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            case 37: // Left arrow is pressed\n                if (!this.state.is_list_visible && this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            case 39: // Right Arrow is pressed\n                if (this.state.is_list_visible && this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            default:\n        }\n\n        // For char presses, we do a search for the item:\n        if (event.key.length === 1) {\n            const char = event.key.toLowerCase();\n            const firstChars = this.props.list.map(x => x.text[0].toLowerCase());\n            let idx;\n            // Tapping the same character again jumps to the next match:\n            if (this.state.curr_index) {\n                idx = firstChars.indexOf(char, this.state.curr_index + 1);\n            }\n            if (idx === undefined || idx === -1) {\n                idx = firstChars.indexOf(char);\n            }\n            if (idx >= 0) {\n                this.setState({ curr_index: idx });\n            }\n        }\n    }\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <NativeSelect\n                    name={this.props.name}\n                    value={this.props.value}\n                    list={this.props.list}\n                    onChange={this.props.onChange}\n                />\n            );\n        }\n\n        // we are calculating the offset for the dropdown list based on it's width here\n        const left_alignment_style = {\n            transform: `translate3d(calc(-${this.state.list_width}px - 12px), 0, 0px)`,\n        };\n\n        // upon render via css transition group, we use this as a callback to set the width of the dropdown list in the state\n        const setListWidth = () => this.setState({ list_width: this.list_ref.current.offsetWidth });\n\n        const is_single_option = isArrayLike(this.props.list) ?\n            !!(this.props.list.length < 2)\n            :\n            !!(Object.keys(this.props.list).length < 2);\n\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={classNames('dropdown-container', this.props.className, {\n                    'dropdown--left'    : this.props.is_alignment_left,\n                    'dropdown--show'    : this.state.is_list_visible,\n                    'dropdown--disabled': is_single_option,\n                })}\n            >\n                <div\n                    className={classNames('dropdown__display', this.props.classNameDisplay, {\n                        'dropdown__display--clicked'   : this.state.is_list_visible,\n                        'dropdown__display--has-symbol': this.props.has_symbol,\n                    })}\n                    tabIndex={is_single_option ? '-1' : '0'}\n                    onClick={this.handleVisibility}\n                    onKeyDown={this.onKeyPressed}\n                >\n                    {this.props.has_symbol &&\n                    <span name={this.props.name} value={this.props.value} className={`symbols dropdown__display-symbol symbols--${(this.props.value || '').toLowerCase()}`} />\n                    }\n                    {!this.props.has_symbol &&\n                    <span name={this.props.name} value={this.props.value} className='dropdown__display-text'>\n                        {getDisplayText(this.props.list, this.props.value)}\n                    </span>\n                    }\n                </div>\n                {\n                    !is_single_option && <Icon\n                        icon='IconArrow'\n                        className={classNames('dropdown__select-arrow', {\n                            'dropdown__select-arrow--left': this.props.is_alignment_left,\n                        })}\n                    />\n                }\n                <CSSTransition\n                    in={this.state.is_list_visible}\n                    timeout={100}\n                    classNames={{\n                        enter    : `dropdown__list--enter ${this.props.is_alignment_left ? 'dropdown__list--left--enter' : ''}`,\n                        enterDone: `dropdown__list--enter-done ${this.props.is_alignment_left ? 'dropdown__list--left--enter-done' : ''}`,\n                        exit     : `dropdown__list--exit ${this.props.is_alignment_left ? 'dropdown__list--left--exit' : ''}`,\n                    }}\n                    onEntered={setListWidth}\n                    unmountOnExit\n                >\n                    <div className={classNames('dropdown__list', {\n                        'dropdown__list--left': this.props.is_alignment_left,\n                    })}\n                    >\n                        <div\n                            className={classNames('list', {\n                                'list--left': this.props.is_alignment_left,\n                            })}\n                            ref={this.list_ref}\n                            style={this.props.is_alignment_left ? left_alignment_style : undefined}\n                        >\n                            <Scrollbars\n                                autoHeight\n                                autoHide\n                                autoHeightMax={200}\n                                renderTrackHorizontal={props => <div {...props} className='track-horizontal' style={{ display: 'none' }} />}\n                                renderThumbHorizontal={props => <div {...props} className='thumb-horizontal' style={{ display: 'none' }} />}\n                            >\n                                {isArrayLike(this.props.list) ?\n                                    <Items\n                                        index={this.state.curr_index}\n                                        handleSelect={this.handleSelect}\n                                        has_symbol={this.props.has_symbol}\n                                        items={this.props.list}\n                                        name={this.props.name}\n                                        value={this.props.value}\n                                    /> :\n                                    Object.keys(this.props.list).map(key => (\n                                        <React.Fragment key={key}>\n                                            <div className='list__label'>{key}</div>\n                                            <Items\n                                                index={this.state.curr_index}\n                                                handleSelect={this.handleSelect}\n                                                has_symbol={this.props.has_symbol}\n                                                items={this.props.list[key]}\n                                                name={this.props.name}\n                                                value={this.props.value}\n                                            />\n                                        </React.Fragment>\n                                    ))\n                                }\n                            </Scrollbars>\n                        </div>\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nDropdown.propTypes = {\n    className        : PropTypes.string,\n    classNameDisplay : PropTypes.string,\n    has_symbol       : PropTypes.bool,\n    is_alignment_left: PropTypes.bool,\n    is_nativepicker  : PropTypes.bool,\n    list             : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Dropdown;\n","import { getPropertyValue } from '_common/utility';\nimport ContractType         from './contract-type';\n\nexport const hasCallPutEqual = (contract_type_list) => {\n    if (!contract_type_list) return false;\n\n    return getPropertyValue(contract_type_list, 'Up/Down')\n        .some(contract => contract.value === 'rise_fall_equal');\n};\n\nexport const hasDurationForCallPutEqual = (contract_type_list, duration_unit, contract_start_type) => {\n    if (!contract_type_list || !duration_unit || !contract_start_type) return false;\n\n    const contract_list = Object.keys(contract_type_list || {})\n        .reduce((key, list) => ([...key, ...contract_type_list[list].map(contract => contract.value)]), []);\n\n    const contract_duration_list = contract_list\n        .map(list => ({ [list]: getPropertyValue(ContractType.getFullContractTypes(), [list, 'config', 'durations', 'units_display', contract_start_type]) }));\n\n    // Check whether rise fall equal is exists and has the current store duration unit\n    return hasCallPutEqual(contract_type_list) ? contract_duration_list\n        .filter(contract => contract.rise_fall_equal)[0].rise_fall_equal\n        .some(duration => duration.value === duration_unit) : false;\n};\n\nexport const isRiseFallEqual = (contract_type) => /^(rise_fall|rise_fall_equal)$/.test(contract_type);\n","import React                    from 'react';\nimport PropTypes                from 'prop-types';\nimport { localize }             from 'App/i18n';\nimport { Popover }              from 'App/Components/Elements/Popover';\nimport InputField               from 'App/Components/Form/InputField';\nimport {\n    hasCallPutEqual,\n    hasDurationForCallPutEqual,\n    isRiseFallEqual }           from 'Stores/Modules/Trading/Helpers/allow-equals';\n\nconst AllowEquals = ({\n    contract_start_type,\n    contract_type,\n    contract_types_list,\n    duration_unit,\n    expiry_type,\n    onChange,\n    value,\n}) => {\n    const has_callputequal_duration = hasDurationForCallPutEqual(contract_types_list,\n        duration_unit, contract_start_type);\n    const has_callputequal          = hasCallPutEqual(contract_types_list);\n\n    const has_allow_equals = isRiseFallEqual(contract_type) &&\n            ((has_callputequal_duration || expiry_type === 'endtime') && has_callputequal);\n\n    const changeValue = (e) => {\n        const { name, checked } = e.target;\n        onChange({ target: { name, value: Number(checked) } });\n    };\n\n    return (\n        has_allow_equals &&\n            <div className='allow-equals'>\n                <InputField\n                    className='allow-equals__input-field'\n                    classNameInput='allow-equals__input trade-container__input'\n                    checked={value}\n                    id='allow_equals'\n                    name='is_equal'\n                    onChange={changeValue}\n                    type='checkbox'\n                    value={value}\n                />\n                <label className='allow-equals__label' htmlFor='allow_equals'>{localize('Allow equals')}</label>\n                <Popover\n                    alignment='left'\n                    classNameTarget='allow-equals__tooltip'\n                    icon='info'\n                    message={localize('Win payout if exit spot is also equal to entry spot.')}\n                    margin={113}\n                />\n            </div>\n    );\n};\n\nAllowEquals.propTypes = {\n    contract_start_type: PropTypes.string,\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    duration_unit      : PropTypes.string,\n    expiry_type        : PropTypes.string,\n    onChange           : PropTypes.func,\n    value              : PropTypes.number,\n};\n\nexport default AllowEquals;\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport {\n    addComma,\n    getDecimalPlaces }                from '_common/base/currency_base';\nimport ButtonToggleMenu               from 'App/Components/Form/ButtonToggleMenu';\nimport Dropdown                       from 'App/Components/Form/DropDown';\nimport Fieldset                       from 'App/Components/Form/fieldset.jsx';\nimport InputField                     from 'App/Components/Form/InputField';\nimport { connect }                    from 'Stores/connect';\nimport AllowEquals                    from './allow-equals.jsx';\n\nconst Amount = ({\n    amount,\n    basis,\n    basis_list,\n    contract_start_type,\n    contract_type,\n    contract_types_list,\n    currencies_list,\n    currency,\n    duration_unit,\n    expiry_type,\n    is_equal,\n    is_minimized,\n    is_nativepicker,\n    is_single_currency,\n    onChange,\n    validation_errors,\n}) => {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized fieldset-minimized__amount'>\n                <span className='fieldset-minimized__basis'>{(basis_list.find(o => o.value === basis) || {}).text}</span>\n                &nbsp;\n                <i><span className={classNames('fieldset-minimized__currency', 'symbols', { [`symbols--${(currency || '').toLowerCase()}`]: currency })} /></i>\n                {addComma(amount, 2)}\n            </div>\n        );\n    }\n\n    const input =\n        <InputField\n            className='trade-container__amount'\n            classNameInlinePrefix='trade-container__currency'\n            classNameInput='trade-container__input'\n            currency={currency}\n            error_messages={validation_errors.amount}\n            fractional_digits={getDecimalPlaces(currency)}\n            id='amount'\n            inline_prefix={is_single_currency ? currency : null}\n            is_autocomplete_disabled\n            is_float\n            is_hj_whitelisted\n            is_incrementable\n            is_nativepicker={is_nativepicker}\n            is_negative_disabled\n            max_length={10}\n            name='amount'\n            onChange={onChange}\n            type='tel'\n            value={amount}\n        />;\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            <ButtonToggleMenu\n                buttons_arr={basis_list}\n                className='dropdown--no-margin'\n                is_animated={true}\n                name='basis'\n                onChange={onChange}\n                value={basis}\n            />\n            {!is_single_currency ?\n                <div className='trade-container__currency-options'>\n                    <Dropdown\n                        className={classNames({ 'trade-container__currency-options-dropdown': !is_single_currency })}\n                        classNameDisplay='trade-container__currency-options--display'\n                        has_symbol\n                        is_alignment_left\n                        is_nativepicker={false}\n                        list={currencies_list}\n                        name='currency'\n                        value={currency}\n                        onChange={onChange}\n                    />\n                    {input}\n                </div>\n                :\n                input\n\n            }\n            <AllowEquals\n                contract_start_type={contract_start_type}\n                contract_type={contract_type}\n                contract_types_list={contract_types_list}\n                duration_unit={duration_unit}\n                expiry_type={expiry_type}\n                onChange={onChange}\n                value={parseInt(is_equal)}\n            />\n        </Fieldset>\n    );\n};\n\nAmount.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    basis              : PropTypes.string,\n    basis_list         : MobxPropTypes.arrayOrObservableArray,\n    contract_start_type: PropTypes.string,\n    contract_type      : PropTypes.string,\n    contract_types_list: MobxPropTypes.observableObject,\n    currencies_list    : MobxPropTypes.observableObject,\n    currency           : PropTypes.string,\n    duration_unit      : PropTypes.string,\n    expiry_type        : PropTypes.string,\n    is_equal           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    is_minimized      : PropTypes.bool,\n    is_nativepicker   : PropTypes.bool,\n    is_single_currency: PropTypes.bool,\n    onChange          : PropTypes.func,\n    validation_errors : PropTypes.object,\n};\n\nexport default connect(({ modules, client }) => ({\n    amount             : modules.trade.amount,\n    basis              : modules.trade.basis,\n    basis_list         : modules.trade.basis_list,\n    contract_start_type: modules.trade.contract_start_type,\n    contract_type      : modules.trade.contract_type,\n    contract_types_list: modules.trade.contract_types_list,\n    currencies_list    : client.currencies_list,\n    currency           : modules.trade.currency,\n    duration_unit      : modules.trade.duration_unit,\n    expiry_type        : modules.trade.expiry_type,\n    is_equal           : modules.trade.is_equal,\n    is_single_currency : client.is_single_currency,\n    onChange           : modules.trade.onChange,\n    validation_errors  : modules.trade.validation_errors,\n}))(Amount);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Icon         from 'Assets/icon.jsx';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\nimport InputField   from 'App/Components/Form/InputField';\nimport { connect }  from 'Stores/connect';\nimport { localize } from 'App/i18n';\n\nconst Barrier = ({\n    barrier_1,\n    barrier_2,\n    barrier_count,\n    is_minimized,\n    onChange,\n    validation_errors,\n}) =>  {\n    const barrier_title = barrier_count === 1 ? localize('Barrier') : localize('Barriers');\n\n    if (is_minimized) {\n        return barrier_count !== 2 ? (\n            <div className='fieldset-minimized fieldset-minimized__barrier1'>\n                {barrier_1}\n            </div>\n        ) : (\n            <React.Fragment>\n                <div className='fieldset-minimized fieldset-minimized__barrier1'>\n                    {barrier_1}\n                </div>\n                <div className='fieldset-minimized fieldset-minimized__barrier2'>\n                    {barrier_2}\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    const input_class = barrier_count === 2 ? 'multiple' : 'single';\n    return (\n        <Fieldset\n            className='trade-container__fieldset trade-container__barriers'\n            header={barrier_title}\n            is_center\n        >\n            <div>\n                <InputField\n                    type='number'\n                    name='barrier_1'\n                    value={barrier_1}\n                    className={`trade-container__barriers-${input_class}`}\n                    classNameInput={classNames('trade-container__input', 'trade-container__barriers-input', `trade-container__barriers-${input_class}-input`)}\n                    onChange={onChange}\n                    error_messages={validation_errors.barrier_1 || []}\n                    is_float\n                    is_signed\n                />\n\n                {barrier_count === 2 &&\n                    <React.Fragment>\n                        <InputField\n                            type='number'\n                            name='barrier_2'\n                            value={barrier_2}\n                            className='multiple'\n                            classNameInput='trade-container__input'\n                            onChange={onChange}\n                            error_messages={validation_errors.barrier_2}\n                            is_float\n                            is_signed\n                        />\n                        <Icon icon='IconBarrierUp'   className='trade-container__barriers--up' />\n                        <Icon icon='IconBarrierDown' className='trade-container__barriers--down' />\n                    </React.Fragment>\n                }\n            </div>\n        </Fieldset>\n    );\n};\n\nBarrier.propTypes = {\n    barrier_1        : PropTypes.string,\n    barrier_2        : PropTypes.string,\n    barrier_count    : PropTypes.number,\n    is_minimized     : PropTypes.bool,\n    onChange         : PropTypes.func,\n    validation_errors: PropTypes.object,\n};\n\nexport default connect(({ modules }) => (\n    {\n        barrier_1        : modules.trade.barrier_1,\n        barrier_2        : modules.trade.barrier_2,\n        barrier_count    : modules.trade.barrier_count,\n        onChange         : modules.trade.onChange,\n        validation_errors: modules.trade.validation_errors,\n    }\n))(Barrier);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst TickSteps = ({\n    hover_value,\n    max_value,\n    min_value,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    value,\n}) => {\n    const arr_ticks = [...Array((max_value - min_value) + 1).keys()];\n\n    const isActive = (idx) => (idx + min_value) === value;\n    const isMarked = (idx) => (idx + min_value) < value;\n    const isMarkedOnHover = (idx) => (isMarked(idx)) ? false : (idx + min_value) <= hover_value;\n\n    return (\n        <React.Fragment>\n            {arr_ticks.map(idx =>\n                <span\n                    key={idx}\n                    className={classNames('range-slider__ticks-step', {\n                        'range-slider__ticks-step--active'      : isActive(idx),\n                        'range-slider__ticks-step--marked'      : isMarked(idx),\n                        'range-slider__ticks-step--marked-hover': isMarkedOnHover(idx),\n                    })}\n                    onClick={() => onClick(idx + min_value)}\n                    onMouseEnter={() => onMouseEnter(idx + min_value)}\n                    onMouseLeave={onMouseLeave}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nTickSteps.propTypes = {\n    hover_value : PropTypes.number,\n    max_value   : PropTypes.number,\n    min_value   : PropTypes.number,\n    onClick     : PropTypes.func,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    value       : PropTypes.number,\n};\n\nexport default TickSteps;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from 'App/i18n';\nimport TickSteps    from './tick-steps.jsx';\n\nclass RangeSlider extends React.PureComponent {\n    state = {\n        hover_value: 0,\n    }\n\n    handleChange = (e) => {\n        // e.target.value returns string, we need to convert them to number\n        const value = +e.target.value;\n        if (value !== this.props.value) {\n            this.resetOnHover();\n            this.props.onChange({ target: { name: this.props.name, value } });\n        }\n    };\n\n    handleClick = (index) => {\n        if (index !== this.props.value) {\n            this.resetOnHover();\n            this.props.onChange({ target: { name: this.props.name, value: index } });\n        }\n    };\n\n    onMouseEnter = (index) => {\n        if (index) {\n            this.setState({ hover_value: index });\n            this.rangeSliderTrack.style.width = this.getRangeSliderTrackWidth(index, true);\n        }\n    };\n\n    onMouseLeave = (e) => {\n        const { offsetX, offsetY } = e.nativeEvent;\n        if (offsetY <= -3 || offsetY >= 3 || offsetX < -3 || offsetX > 3) {\n            this.resetOnHover();\n        }\n    };\n\n    getRangeSliderTrackWidth = (value, is_hover) => {\n        const width = (value - this.props.min_value) * (10 / (this.props.max_value - this.props.min_value));\n        return `${(width * 2) + (is_hover ? 0.8 : 1.4)}em`;\n    };\n\n    resetOnHover = () => {\n        if (this.state.hover_value) {\n            this.setState({ hover_value: 0 });\n            this.rangeSliderTrack.style.width = 0;\n        }\n    };\n\n    render() {\n        const {\n            className,\n            max_value,\n            min_value,\n            name,\n            value,\n        } = this.props;\n\n        const display_value = this.state.hover_value || value;\n        return (\n            <div className={classNames('range-slider', className, { 'range-slider__error': ((value < min_value) || (value > max_value)) })}>\n                <label className='range-slider__label' htmlFor='range'>\n                    <input\n                        className='input trade-container__input range-slider__track'\n                        id='range'\n                        max={max_value}\n                        max_value={max_value}\n                        min={min_value}\n                        min_value={min_value}\n                        name={name}\n                        onChange={this.handleChange}\n                        tabIndex='0'\n                        type='range'\n                        steps={max_value - min_value}\n                        value={value}\n                    />\n                    {/* this element to be placed before <TickSteps /> to prevent overlapping colors */}\n                    <span\n                        ref={node => this.rangeSliderTrack = node}\n                        className='range-slider__line range-slider__line--fill'\n                        onMouseLeave={this.onMouseLeave}\n                    />\n                    <div className='range-slider__ticks'>\n                        <TickSteps\n                            hover_value={this.state.hover_value}\n                            max_value={max_value}\n                            min_value={min_value}\n                            onClick={this.handleClick}\n                            onMouseLeave={this.onMouseLeave}\n                            onMouseEnter={this.onMouseEnter}\n                            value={value}\n                        />\n                    </div>\n                    {/* Calculate line width based on active value and size of range thumb */}\n                    <div\n                        className='range-slider__line'\n                        style={{ width: `${this.getRangeSliderTrackWidth(value)}` }}\n                    />\n                </label>\n                <div className='range-slider__caption'>\n                    {\n                        !!display_value &&\n                        <span className='range-slider__caption-title'>\n                            {display_value === 1 && localize('{{display_value}} Tick', { display_value })}\n                            {display_value > 1 && localize('{{display_value}} Ticks', { display_value })}\n                        </span>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n// Keypress events do not trigger on Safari due to the way it handles input type='range' elements, using focus on the input element also doesn't work for Safari.\n\nRangeSlider.propTypes = {\n    className: PropTypes.string,\n    max_value: PropTypes.number,\n    min_value: PropTypes.number,\n    name     : PropTypes.string,\n    onChange : PropTypes.func,\n    value    : PropTypes.number,\n};\n\nexport default RangeSlider;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React, { Fragment } from 'react';\nimport Icon                from 'Assets/icon.jsx';\n\nconst DurationToggle = ({\n    name,\n    onChange,\n    value,\n}) => {\n    const toggle = () => {\n        onChange({ target: { value: !value, name } });\n    };\n    const icon_className = classNames(\n        'advanced-simple-toggle__icon',\n        'select-arrow',\n        { 'advanced-simple-toggle__icon--active': value },\n    );\n    return (\n        <Fragment>\n            <button className='advanced-simple-toggle' onClick={toggle}>\n                <Icon icon='IconArrow' className={icon_className} classNamePath={'advanced-simple-toggle__icon-path'} />\n            </button>\n        </Fragment>);\n};\n\nDurationToggle.propTypes = {\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.bool,\n};\n\nexport default DurationToggle;\n","\nimport { WS }               from 'Services';\nimport { getPropertyValue } from '_common/utility';\n\nconst trading_events = {};\nexport const getTradingEvents = async (date, underlying = null) => {\n    if (!date) {\n        return [];\n    }\n\n    if (!(date in trading_events)) {\n        const trading_times_response = await WS.getTradingTimes(date);\n\n        if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n            for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                if (submarkets) {\n                    for (let j = 0; j < submarkets.length; j++) {\n                        const symbols = submarkets[j].symbols;\n                        if (symbols) {\n                            for (let k = 0; k < symbols.length; k++) {\n                                const symbol = symbols[k];\n                                if (!trading_events[trading_times_response.echo_req.trading_times]) {\n                                    trading_events[trading_times_response.echo_req.trading_times] = {};\n                                }\n                                trading_events[trading_times_response.echo_req.trading_times][symbol.symbol] =\n                                    symbol.events;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return trading_events[date][underlying];\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    getStartOfMonth,\n    toMoment }        from 'Utils/Date';\nimport { localize }   from 'App/i18n';\nimport CalendarBody   from './calendar-body.jsx';\nimport CalendarFooter from './calendar-footer.jsx';\nimport CalendarHeader from './calendar-header.jsx';\n\nclass Calendar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        const { date_format, start_date, value } = props;\n        const current_date = toMoment(value || start_date).format(date_format);\n        this.state = {\n            calendar_date: current_date, // calendar date reference\n            selected_date: value,        // selected date\n            calendar_view: 'date',\n            hovered_date : '',\n            duration_date: '',\n        };\n    }\n\n    switchView = (view) => {\n        this.setState({ calendar_view: view });\n    };\n\n    navigateTo = (new_date) => {\n        this.setState({\n            calendar_date: toMoment(new_date).format(this.props.date_format),\n        }, () => {\n            if (this.props.onChangeCalendarMonth) {\n                const start_of_month = getStartOfMonth(new_date);\n                this.props.onChangeCalendarMonth(start_of_month);\n            }\n        });\n    };\n\n    onMouseOver = (event) => {\n        const target = event.currentTarget;\n\n        if (!target.classList.contains('calendar__cell--disabled') && !target.classList.contains('calendar__cell--hover')) {\n            target.className += ' calendar__cell--hover';\n            this.setState({\n                hovered_date : target.getAttribute('data-date'),\n                duration_date: target.getAttribute('data-duration'),\n            });\n        }\n    };\n\n    onMouseLeave = (event) => {\n        const target = event.currentTarget;\n\n        if (target.classList.contains('calendar__cell--hover')) {\n            target.classList.remove('calendar__cell--hover');\n\n            this.setState({\n                hovered_date : null,\n                duration_date: null,\n            });\n        }\n    };\n\n    updateSelectedDate = (e) => {\n        const { date_format, max_date, min_date, onSelect } = this.props;\n\n        const moment_date = toMoment(e.target.dataset.date).startOf('day');\n        const is_before   = moment_date.isBefore(toMoment(min_date));\n        const is_after    = moment_date.isAfter(toMoment(max_date));\n\n        if (is_before || is_after) {\n            return;\n        }\n\n        const formatted_date = moment_date.format(date_format);\n        this.setState({\n            calendar_date: formatted_date,\n            selected_date: formatted_date,\n        });\n\n        if (onSelect) {\n            onSelect(formatted_date);\n        }\n    };\n\n    updateSelected = (e, type) => {\n        if (e) e.stopPropagation();\n\n        if (type === 'day') {\n            this.updateSelectedDate(e);\n            return;\n        }\n\n        const view_map = {\n            month : 'date',\n            year  : 'month',\n            decade: 'year',\n        };\n        const date = toMoment(this.state.calendar_date)[type === 'decade' ? 'year' : type](e.target.dataset[type].split('-')[0]).format(this.props.date_format);\n\n        if (this.isPeriodDisabled(date, type)) return;\n\n        this.setState({\n            calendar_date: date,\n            calendar_view: view_map[type],\n        }, () => {\n            if (this.props.onChangeCalendarMonth) {\n                const start_of_month = getStartOfMonth(date);\n                this.props.onChangeCalendarMonth(start_of_month);\n            }\n        });\n    };\n\n    resetCalendar = () => {\n        const { date_format, start_date } = this.props;\n\n        const default_date = toMoment(start_date).format(date_format);\n        this.setState({\n            calendar_date: default_date,\n            selected_date: '',\n            calendar_view: 'date',\n        });\n    };\n\n    setToday = () => {\n        const { date_format, onSelect } = this.props;\n\n        const now = toMoment().format(date_format);\n        this.setState({\n            calendar_date: now,\n            selected_date: now,\n            calendar_view: 'date',\n        });\n\n        if (onSelect) {\n            onSelect(now, true);\n        }\n    };\n\n    isPeriodDisabled = (date, unit) => {\n        const { max_date, min_date } = this.props;\n\n        const start_of_period = toMoment(date).clone().startOf(unit);\n        const end_of_period   = toMoment(date).clone().endOf(unit);\n        return end_of_period.isBefore(toMoment(min_date))\n            || start_of_period.isAfter(toMoment(max_date));\n    };\n\n    render() {\n        const { date_format, duration_date, footer, has_today_btn, has_range_selection,\n            holidays, start_date, weekends } = this.props;\n        const { calendar_date, calendar_view, selected_date  } = this.state;\n        let default_message, is_minimum;\n\n        if (duration_date) {\n            default_message = `${duration_date} ${duration_date === 1 ? localize('Day') : localize('Days')}`;\n            is_minimum = false;\n        } else {\n            default_message = localize('Minimum duration is 1 day');\n            is_minimum = true;\n        }\n        \n        return (\n            <div className='calendar' data-value={selected_date}>\n                <CalendarHeader\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    navigateTo={this.navigateTo}\n                    switchView={this.switchView}\n                />\n                <CalendarBody\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    date_format={date_format}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    start_date={start_date}\n                    selected_date={selected_date}\n                    updateSelected={this.updateSelected}\n                    holidays={holidays}\n                    has_range_selection={has_range_selection}\n                    hovered_date={this.state.hovered_date}\n                    weekends={weekends}\n                    onMouseOver={this.onMouseOver}\n                    onMouseLeave={this.onMouseLeave}\n                />\n                <CalendarFooter\n                    footer={footer}\n                    duration_date={this.state.duration_date || default_message}\n                    is_minimum={is_minimum}\n                    has_today_btn={has_today_btn}\n                    has_range_selection={has_range_selection}\n                    onClick={this.setToday}\n                />\n            </div>\n        );\n    }\n}\n\nCalendar.defaultProps = {\n    date_format: 'YYYY-MM-DD',\n    min_date   : toMoment(0).format('YYYY-MM-DD'),               // by default, min_date is set to Unix Epoch (January 1st 1970)\n    max_date   : toMoment().add(120, 'y').format('YYYY-MM-DD'), // by default, max_date is set to 120 years after today\n};\n\nCalendar.propTypes = {\n    date_format  : PropTypes.string,\n    duration_date: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    footer             : PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    has_today_btn      : PropTypes.bool,\n    holidays           : PropTypes.arrayOf(\n        PropTypes.shape({\n            dates  : PropTypes.array,\n            descrip: PropTypes.string,\n        }),\n    ),\n    max_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onChangeCalendarMonth: PropTypes.func,\n    onSelect             : PropTypes.func,\n    start_date           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    value   : PropTypes.string,\n    weekends: PropTypes.arrayOf(PropTypes.number),\n};\n\nexport default Calendar;\n","import classNames           from 'classnames';\nimport { observer }         from 'mobx-react';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { CSSTransition }    from 'react-transition-group';\nimport Icon                 from 'Assets/icon.jsx';\nimport InputField           from 'App/Components/Form/InputField';\nimport {\n    addDays,\n    daysFromTodayTo,\n    formatDate,\n    getStartOfMonth,\n    isDateValid,\n    toMoment }              from 'Utils/Date';\nimport { localize }         from 'App/i18n';\nimport { getTradingEvents } from './helpers';\nimport Calendar             from '../../Elements/Calendar';\n\nclass DatePicker extends React.Component {\n    state = {\n        date_value           : '',\n        holidays             : [],\n        is_datepicker_visible: false,\n        is_clear_btn_visible : false,\n        value                : this.props.value,\n        weekends             : [],\n    };\n\n    is_mounted = false;\n\n    componentDidMount() {\n        this.is_mounted = true;\n\n        document.addEventListener('click', this.onClickOutside, true);\n        const { mode, value } = this.props;\n        const initial_value = mode === 'duration' ? formatDate(addDays(toMoment(), value || 1), 'DD MMM YYYY') : formatDate(value, 'DD MMM YYYY');\n\n        this.updateDatePickerValue(initial_value);\n\n        if (this.props.disable_trading_events) {\n            this.onChangeCalendarMonth(getStartOfMonth(this.state.value));\n        }\n    }\n\n    componentWillUnmount() {\n        this.is_mounted = false;\n        document.removeEventListener('click', this.onClickOutside, true);\n    }\n\n    handleVisibility = () => {\n        this.setState(state => ({ is_datepicker_visible: !state.is_datepicker_visible }));\n    };\n\n    onClickOutside = (e) => {\n        if (/purchase_/ig.test(e.target.id)) {\n            return;\n        }\n        if (!this.mainNode.contains(e.target) && this.state.is_datepicker_visible) {\n            this.setState({ is_datepicker_visible: false });\n            if (!!this.state.value && this.props.mode !== 'duration') {\n                this.updateDatePickerValue(formatDate(this.state.value, 'DD MMM YYYY'));\n            }\n        }\n    };\n\n    onMouseEnter = () => {\n        if (this.state.value && (('is_clearable' in this.props) || this.props.is_clearable)) {\n            this.setState({ is_clear_btn_visible: true });\n        }\n    };\n\n    onMouseLeave = () => {\n        this.setState({ is_clear_btn_visible: false });\n    };\n\n    onSelectCalendar = (selected_date, is_datepicker_visible = true) => {\n        let value = selected_date;\n        if (!isDateValid(value)) { value = ''; }\n\n        if (this.props.mode === 'duration') {\n            this.updateDatePickerValue(value);\n        } else {\n            this.updateDatePickerValue(formatDate(value, 'DD MMM YYYY'));\n        }\n        this.setState({ is_datepicker_visible });\n    };\n\n    onChangeInput = (e) => {\n        const value = e.target.value;\n        const formatted_value = formatDate(addDays(toMoment(), value), 'DD MMM YYYY');\n        this.updateDatePickerValue(formatted_value);\n        this.props.onChange(e);\n    };\n\n    clearDatePickerInput = () => {\n        this.setState({ value: null }, this.updateStore);\n        if (this.calendar) {\n            this.calendar.resetCalendar();\n        }\n    };\n\n    // TODO: handle cases where user inputs date before min_date and date after max_date\n    updateDatePickerValue = (value) => {\n        const { date_format, mode, start_date } = this.props;\n        this.setState({ value }, this.updateStore);\n\n        if (mode === 'duration') {\n            const new_value      = daysFromTodayTo(value);\n            const new_date_value = formatDate(value, 'DD MMM YYYY');\n            this.setState({ value: new_value, date_value: new_date_value }, this.updateStore);\n        }\n\n        // update Calendar\n        const new_date = (mode === 'duration') ? formatDate(value, 'DD MMM YYYY') : value;\n        if (this.calendar && (isDateValid(new_date) || !new_date)) {\n            if (!new_date) {\n                const current_date = formatDate(start_date, date_format);\n                this.calendar.setState({\n                    calendar_date: current_date,\n                    selected_date: current_date,\n                });\n            } else {\n                this.calendar.setState({\n                    calendar_date: formatDate(new_date),\n                    selected_date: formatDate(new_date),\n                });\n            }\n        }\n    };\n\n    // update MobX store\n    updateStore = () => {\n        const { name, onChange } = this.props;\n        if (onChange) {\n            onChange({ target: { name, value: this.state.value } });\n        }\n    };\n\n    async onChangeCalendarMonth(calendar_date) {\n        const trading_events = await getTradingEvents(calendar_date, this.props.underlying);\n        const holidays = [];\n        let weekends   = [];\n        trading_events.forEach(events => {\n            const dates = events.dates.split(', '); // convert dates str into array\n            const idx = dates.indexOf('Fridays');\n            if (idx !== -1) {\n                weekends = [6, 0]; // Sat, Sun\n            }\n            holidays.push({\n                dates,\n                descrip: events.descrip,\n            });\n        });\n\n        if (this.is_mounted) {\n            this.setState({\n                holidays,\n                weekends,\n            });\n        }\n    }\n\n    renderInputField = () => {\n        const { is_read_only, mode, name, label, error_messages } = this.props;\n        let { placeholder } = this.props;\n        let value, type, onChange;\n\n        switch (mode) {\n            case 'duration':\n                onChange = this.onChangeInput;\n                type = 'text';\n                value = this.state.value;\n                break;\n            default:\n                placeholder = placeholder || localize('Select a date');\n                type = 'text';\n                value = formatDate(this.props.value, 'DD MMM YYYY');\n        }\n\n        return (\n            <InputField\n                className='datepicker__input-field'\n                classNameInput='datepicker__input trade-container__input'\n                data-tip={false}\n                data-value={this.state.value}\n                error_messages={error_messages}\n                is_autocomplete_disabled={true}\n                is_hj_whitelisted\n                label={label}\n                is_read_only={is_read_only}\n                name={name}\n                onChange={onChange}\n                onClick={this.handleVisibility}\n                placeholder={placeholder}\n                type={type}\n                value={value}\n            />\n        );\n    };\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <div ref={node => { this.mainNode = node; }} className='datepicker'>\n                    <input\n                        id={this.props.name}\n                        name={this.props.name}\n                        className='input trade-container__input datepicker__input'\n                        type='date'\n                        value={this.state.value}\n                        min={this.props.min_date}\n                        max={this.props.max_date}\n                        onChange={(e) => {\n                            // fix for ios issue: clear button doesn't work\n                            // https://github.com/facebook/react/issues/8938\n                            const target = e.nativeEvent.target;\n                            function iosClearDefault() { target.defaultValue = ''; }\n                            window.setTimeout(iosClearDefault, 0);\n\n                            this.onSelectCalendar(e.target.value);\n                        }}\n                    />\n                    <label className='datepicker__native-overlay' htmlFor={this.props.name}>\n                        {this.state.value || this.props.placeholder}\n                        <Icon icon='IconArrow' className='datepicker__arrowhead' />\n                    </label>\n                </div>\n            );\n        }\n\n        return (\n            <div\n                id={this.props.id}\n                ref={node => { this.mainNode = node; }}\n                className='datepicker'\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}\n            >\n                { this.renderInputField() }\n                <Icon\n                    icon='IconCalendar'\n                    className={classNames('datepicker__icon datepicker__icon--calendar', {\n                        'datepicker__icon--is-hidden' : this.state.is_clear_btn_visible,\n                        'datepicker__icon--with-label': this.props.label,\n                    })}\n                    onClick={this.handleVisibility}\n                />\n                {this.props.is_clearable &&\n                    <Icon\n                        icon='IconClear'\n                        className={classNames('datepicker__icon datepicker__icon--clear', {\n                            'datepicker__icon--is-hidden': !this.state.is_clear_btn_visible,\n                        })}\n                        onClick={this.state.is_clear_btn_visible ? this.clearDatePickerInput : undefined}\n                    />\n                }\n                <CSSTransition\n                    in={this.state.is_datepicker_visible}\n                    timeout={100}\n                    classNames={{\n                        enter    : `datepicker__picker--enter datepicker__picker--${this.props.alignment}-enter`,\n                        enterDone: `datepicker__picker--enter-done datepicker__picker--${this.props.alignment}-enter-done`,\n                        exit     : `datepicker__picker--exit datepicker__picker--${this.props.alignment}-exit`,\n                    }}\n                    unmountOnExit\n                >\n                    <div\n                        className={classNames('datepicker__picker', {\n                            'datepicker__picker--left': this.props.alignment === 'left',\n                        })}\n                    >\n                        <Calendar\n                            ref={node => { this.calendar = node; }}\n                            onSelect={this.onSelectCalendar}\n                            onChangeCalendarMonth={this.props.disable_trading_events ?\n                                this.onChangeCalendarMonth.bind(this) : undefined}\n                            holidays={this.state.holidays}\n                            weekends={this.state.weekends}\n                            duration_date={this.state.value}\n                            date_format={this.props.date_format}\n                            has_today_btn={this.props.has_today_btn}\n                            has_range_selection={this.props.has_range_selection}\n                            footer={this.props.footer}\n                            max_date={this.props.max_date}\n                            min_date={this.props.min_date}\n                            start_date={this.props.start_date}\n                            value={this.props.mode === 'duration' ? this.state.date_value : this.props.value}\n                        />\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nDatePicker.defaultProps = {\n    date_format: Calendar.defaultProps.date_format,\n    mode       : 'date',\n};\n\nDatePicker.propTypes = {\n    ...Calendar.propTypes,\n    error_messages: PropTypes.array,\n    label         : PropTypes.string,\n};\n\nexport default observer(DatePicker);\n","import PropTypes                      from 'prop-types';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport React                          from 'react';\nimport DatePicker                     from 'App/Components/Form/DatePicker';\nimport { connect }                    from 'Stores/connect';\nimport { hasIntradayDurationUnit }    from 'Stores/Modules/Trading/Helpers/duration';\nimport {\n    isTimeValid,\n    setTime,\n    toMoment }                        from 'Utils/Date';\n\nconst TradingDatePicker = ({\n    duration_d,\n    duration_min_max,\n    duration_units_list,\n    expiry_date,\n    expiry_type,\n    is_24_hours_contract,\n    mode,\n    name,\n    onChange,\n    server_time,\n    start_time,\n    start_date,\n    symbol,\n    validation_errors,\n}) => {\n    let max_date_duration,\n        min_date_expiry,\n        has_today_btn,\n        is_read_only;\n    const has_intraday_unit = hasIntradayDurationUnit(duration_units_list);\n    const min_duration = has_intraday_unit ? toMoment(server_time).clone() : toMoment(server_time).clone().add(duration_min_max.daily.min, 'second');\n    const moment_contract_start_date_time =\n        setTime(toMoment(min_duration), (isTimeValid(start_time) ? start_time : server_time.format('HH:mm:ss')));\n\n    const max_daily_duration   = duration_min_max.daily ? duration_min_max.daily.max : 365 * 24 * 3600;\n    const is_duration_contract = expiry_type === 'duration';\n\n    if (is_24_hours_contract) {\n        min_date_expiry   = moment_contract_start_date_time.clone().startOf('day');\n        max_date_duration = moment_contract_start_date_time.clone().add(\n            start_date ? 24 * 3600 : (max_daily_duration), 'second');\n    } else {\n        min_date_expiry   = moment_contract_start_date_time.clone().startOf('day');\n        max_date_duration = moment_contract_start_date_time.clone().add(max_daily_duration, 'second');\n    }\n    if (is_duration_contract) {\n        if (has_intraday_unit) {\n            min_date_expiry.add(1, 'day');\n        }\n        has_today_btn = false;\n        is_read_only = false;\n    } else {\n        has_today_btn = true;\n        is_read_only = true;\n    }\n\n    const error_messages = is_duration_contract ? validation_errors.duration : validation_errors.expiry_date;\n    const date_value = is_duration_contract ? (duration_d || '').toString() : expiry_date;\n\n    return (\n        <DatePicker\n            alignment='left'\n            disable_year_selector\n            disable_trading_events\n            error_messages={error_messages || []}\n            has_today_btn={has_today_btn}\n            has_range_selection={mode === 'duration'}\n            is_nativepicker={false}\n            is_read_only={is_read_only}\n            label={duration_units_list.length === 1 ? duration_units_list[0].text : null}\n            mode={mode}\n            name={name}\n            onChange={onChange}\n            min_date={min_date_expiry}\n            max_date={max_date_duration}\n            start_date={start_date}\n            underlying={symbol}\n            value={date_value}\n        />\n    );\n};\n\nTradingDatePicker.propTypes = {\n    duration: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    duration_min_max   : PropTypes.object,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_type         : PropTypes.string,\n    is_24_hours_contract: PropTypes.bool,\n    mode                : PropTypes.string,\n    name                : PropTypes.string,\n    onChange            : PropTypes.func,\n    server_time         : PropTypes.object,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    symbol           : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, common, ui }) => ({\n        duration_min_max   : modules.trade.duration_min_max,\n        duration_units_list: modules.trade.duration_units_list,\n        expiry_date        : modules.trade.expiry_date,\n        expiry_type        : modules.trade.expiry_type,\n        onChange           : modules.trade.onChange,\n        server_time        : common.server_time,\n        start_date         : modules.trade.start_date,\n        start_time         : modules.trade.start_time,\n        symbol             : modules.trade.symbol,\n        validation_errors  : modules.trade.validation_errors,\n        duration_d         : ui.duration_d,\n    })\n)(TradingDatePicker);\n","import PropTypes    from 'prop-types';\nimport classNames   from 'classnames';\nimport React        from 'react';\nimport { localize } from 'App/i18n';\nimport { toMoment } from 'Utils/Date';\n\nconst Dialog = ({\n    preClass,\n    selected_time,\n    end_time,\n    start_time,\n    onChange,\n    className,\n}) => {\n    const start_time_moment     = start_time\n        ? toMoment(start_time)\n        : toMoment();\n    const end_time_moment       = end_time\n        ? toMoment(end_time)\n        : toMoment().hour('23').minute('59').seconds('59').milliseconds('999');\n    const to_compare_moment     = toMoment();\n    const [ hour, minute ]      = selected_time.split(':');\n    const hours    = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes  = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const selectOption = (type, current_value, prev_value, is_enabled = true) => {\n        if (is_enabled && prev_value) {\n            const [ prev_hour, prev_minute ] = prev_value.split(':');\n            if ((type === 'h' && current_value !== prev_hour) || (type === 'm' && current_value !== prev_minute)) {\n                onChange(`${type === 'h' ? current_value : prev_hour}:${type === 'm' ? current_value : prev_minute}`);\n            }\n        }\n    };\n\n    return (\n        <div className={classNames(`${preClass}__dialog`, `${className}`)}>\n            <div className={`${preClass}__selector`}>\n                <div className={`${preClass}__selector--hours`}>\n                    <div className={classNames(`${preClass}__selector-list-title`, 'center-text')}><strong>{localize('Hour')}</strong></div>\n                    <div>\n                        {hours.map((h, key) => {\n                            to_compare_moment.hour(h);\n                            const start_time_reset_minute = start_time_moment.clone().minute(0);\n                            const is_hour_enabled = to_compare_moment.isBetween(\n                                start_time_reset_minute,\n                                end_time_moment);\n                            const is_minute_enabled = to_compare_moment.isBetween(\n                                start_time_moment,\n                                end_time_moment,\n                                'minute');\n                            // The minute number after which the last block/interval of `Minutes` selection will be disabled\n                            const last_interval_of_hour = 52;\n                            const is_enabled = to_compare_moment.minutes() > last_interval_of_hour\n                                ? is_hour_enabled && is_minute_enabled\n                                : is_hour_enabled;\n                            return (\n                                <div\n                                    className={classNames(`${preClass}__selector-list-item`,\n                                        { [`${preClass}__selector-list-item--selected`]: (hour === h) },\n                                        { [`${preClass}__selector-list-item--disabled`]: !is_enabled })}\n                                    key={key}\n                                    onClick={() => { selectOption('h', h, selected_time, is_enabled); }}\n                                >\n                                    {h}\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n                <div className={`${preClass}__selector--minutes`}>\n                    <div className={classNames(`${preClass}__selector-list-title`, 'center-text')}><strong>{localize('Minute')}</strong></div>\n                    <div>\n                        {minutes.map((mm, key) => {\n                            to_compare_moment.hour(hour).minute(mm);\n                            const is_enabled = to_compare_moment.isBetween(start_time_moment, end_time_moment, 'minute');\n                            return (\n                                <div\n                                    className={classNames(`${preClass}__selector-list-item`,\n                                        { [`${preClass}__selector-list-item--selected`]: (minute === mm) },\n                                        { [`${preClass}__selector-list-item--disabled`]: !is_enabled })}\n                                    key={key}\n                                    onClick={() => { selectOption('m', mm, selected_time, is_enabled); }}\n                                >\n                                    {mm}\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDialog.propTypes = {\n    className: PropTypes.string,\n    end_time : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    onChange     : PropTypes.func,\n    preClass     : PropTypes.string,\n    selected_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    start_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n};\n\nexport default Dialog;\n","import classNames        from 'classnames';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport Icon              from 'Assets/icon.jsx';\nimport Dialog            from './dialog.jsx';\nimport InputField        from '../InputField';\n\nclass TimePicker extends React.Component {\n    state = { is_open: false };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    toggleDropDown = () => {\n        this.setState((state) => ({ is_open: !state.is_open }));\n    };\n\n    handleChange = (arg) => {\n        // To handle nativepicker;\n        const value = typeof arg === 'object' ? arg.target.selected_time : arg;\n\n        if (value !== this.props.selected_time) {\n            this.props.onChange({ target: { name: this.props.name, value } });\n        }\n    };\n\n    saveRef = (node) => {\n        if (!node) return;\n        if (node.nodeName === 'INPUT') {\n            this.target_element = node;\n            return;\n        }\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)) {\n            if (this.state.is_open) {\n                this.setState({ is_open: false });\n            }\n        }\n    };\n\n    render() {\n        const prefix_class = 'time-picker';\n        const {\n            selected_time,\n            name,\n            is_nativepicker,\n            placeholder,\n            end_time,\n            start_time,\n            validation_errors,\n        } = this.props;\n        return (\n            <div\n                ref={this.saveRef}\n                className={classNames(prefix_class,\n                    { [`${prefix_class}--padding`]: this.props.padding })}\n            >\n                {\n                    is_nativepicker\n                        ? <input\n                            type='time'\n                            id={`${prefix_class}-input`}\n                            value={selected_time}\n                            onChange={this.handleChange}\n                            name={name}\n                            min={start_time}\n                            max={end_time}\n                        />\n                        : (\n                            <React.Fragment>\n                                <InputField\n                                    error_messages={validation_errors}\n                                    type='text'\n                                    is_hj_whitelisted\n                                    is_read_only\n                                    id={`${prefix_class}-input`}\n                                    className={classNames(`${prefix_class}-input`)}\n                                    value={`${selected_time} GMT`}\n                                    onClick={this.toggleDropDown}\n                                    name={name}\n                                    placeholder={placeholder}\n                                />\n                                <Icon icon='IconClock' className={`${prefix_class}__icon`} />\n                                <CSSTransition\n                                    in={ this.state.is_open }\n                                    classNames={{\n                                        enter    : 'time-picker__dialog--enter',\n                                        enterDone: 'time-picker__dialog--enter-done',\n                                        exit     : 'time-picker__dialog--exit',\n                                    }}\n                                    timeout={100}\n                                    unmountOnExit\n                                >\n                                    <Dialog\n                                        end_time={end_time}\n                                        start_time={start_time}\n                                        className={'from-left'}\n                                        onChange={this.handleChange}\n                                        preClass={prefix_class}\n                                        selected_time={selected_time}\n                                    />\n                                </CSSTransition>\n                            </React.Fragment>\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nTimePicker.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    is_clearable   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    padding        : PropTypes.string,\n    placeholder    : PropTypes.string,\n    selected_time  : PropTypes.string,\n    start_time     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n};\n\nexport default observer(TimePicker);\n","const getClosestTime = (\n    time,\n    interval,\n) => time.minute((Math.ceil(time.minute() / interval) * interval));\n\nexport const getSelectedTime = (\n    server_time,\n    selected_time,\n    market_open_time,\n) => {\n    if (selected_time.isAfter(market_open_time)) {\n        return getClosestTime(selected_time, 5).format('HH:mm');\n    }\n    if (market_open_time.isAfter(server_time)) {\n        return getClosestTime(market_open_time, 5).format('HH:mm');\n    }\n\n    return getClosestTime(server_time, 5).format('HH:mm');\n};\n\nexport const getBoundaries = (\n    server_time,\n    market_open_time,\n    market_close_time,\n) => {\n    const boundaries = {\n        start: server_time.isBefore(market_open_time)\n            ? market_open_time\n            : server_time,\n        end: market_close_time,\n    };\n\n    boundaries.start = getClosestTime(boundaries.start, 5);\n    return boundaries;\n};\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport {\n    setTime,\n    toMoment }     from 'Utils/Date';\nimport TimePicker  from 'App/Components/Form/TimePicker';\nimport {\n    getSelectedTime,\n    getBoundaries } from 'Stores/Modules/Trading/Helpers/end-time';\n\nconst TradingTimePicker = ({\n    expiry_date,\n    expiry_time,\n    market_close_times,\n    market_open_times,\n    onChange,\n    server_time,\n}) => {\n    const moment_expiry_date = toMoment(expiry_date);\n    const market_open_datetime = setTime(moment_expiry_date.clone(), market_open_times.slice(-1)[0]);\n    const market_close_datetime = setTime(moment_expiry_date.clone(), market_close_times.slice(-1)[0]);\n    const expiry_datetime = setTime(moment_expiry_date.clone(), expiry_time);\n    const server_datetime = toMoment(server_time);\n\n    const boundaries = getBoundaries(\n        server_datetime.clone(),\n        market_open_datetime.clone(),\n        market_close_datetime);\n    const selected_time = getSelectedTime(\n        server_datetime.clone(),\n        expiry_datetime,\n        market_open_datetime);\n    return (\n        <TimePicker\n            end_time={boundaries.end}\n            onChange={onChange}\n            name='expiry_time'\n            placeholder='12:00'\n            start_time={boundaries.start}\n            selected_time={selected_time}\n        />\n    );\n};\n\nTradingTimePicker.propTypes = {\n    expiry_date: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time       : PropTypes.string,\n    market_close_times: PropTypes.array,\n    name              : PropTypes.string,\n    onChange          : PropTypes.func,\n    server_time       : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, common }) => ({\n        duration_units_list: modules.trade.duration_units_list,\n        expiry_time        : modules.trade.expiry_time,\n        expiry_date        : modules.trade.expiry_date,\n        market_close_times : modules.trade.market_close_times,\n        market_open_times  : modules.trade.market_open_times,\n        onChange           : modules.trade.onChange,\n        server_time        : common.server_time,\n    })\n)(TradingTimePicker);\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport Dropdown                       from 'App/Components/Form/DropDown';\nimport ButtonToggleMenu               from 'App/Components/Form/ButtonToggleMenu';\nimport InputField                     from 'App/Components/Form/InputField';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { connect }                    from 'Stores/connect';\nimport { hasIntradayDurationUnit }    from 'Stores/Modules/Trading/Helpers/duration';\nimport { toMoment }                   from 'Utils/Date';\nimport TradingDatePicker              from '../../DatePicker';\nimport TradingTimePicker              from '../../TimePicker';\n\nconst AdvancedDuration = ({\n    advanced_duration_unit,\n    advanced_expiry_type,\n    duration_units_list,\n    duration_t,\n    changeDurationUnit,\n    getDurationFromUnit,\n    expiry_date,\n    expiry_list,\n    expiry_type,\n    number_input_props,\n    onChange,\n    onChangeUiStore,\n    server_time,\n    shared_input_props,\n    start_date,\n    validation_errors,\n}) => {\n    let is_24_hours_contract = false;\n\n    if (expiry_type === 'endtime') {\n        const has_intraday_duration_unit = hasIntradayDurationUnit(duration_units_list);\n        is_24_hours_contract = (!!start_date || toMoment(expiry_date || server_time).isSame(toMoment(server_time), 'day')) && has_intraday_duration_unit;\n    }\n\n    const endtime_container_class = classNames('endtime-container', {\n        'has-time': is_24_hours_contract,\n    });\n\n    const changeExpiry = ({ target }) => {\n        const { name, value } = target;\n\n        onChange({ target: { name: 'expiry_type', value } });\n        onChangeUiStore({ name, value });\n    };\n\n    return (\n        <Fragment>\n            { expiry_list.length > 1 &&\n                <ButtonToggleMenu\n                    buttons_arr={expiry_list}\n                    name='advanced_expiry_type'\n                    is_animated={true}\n                    onChange={changeExpiry}\n                    value={advanced_expiry_type}\n                />\n            }\n            { expiry_type === 'duration' ?\n                <Fragment>\n                    <div className='duration-container'>\n                        { duration_units_list.length > 1 &&\n                            <Dropdown\n                                is_alignment_left\n                                is_nativepicker={false}\n                                list={duration_units_list}\n                                name='advanced_duration_unit'\n                                onChange={changeDurationUnit}\n                                value={advanced_duration_unit}\n                            />\n                        }\n                        { advanced_duration_unit === 't' &&\n                            <RangeSlider\n                                name='duration'\n                                ticks={10}\n                                value={duration_t}\n                                {...shared_input_props}\n                            />\n                        }\n                        { advanced_duration_unit === 'd' &&\n                            <TradingDatePicker\n                                mode='duration'\n                                name='duration'\n                                is_24_hours_contract={is_24_hours_contract}\n                            />\n                        }\n                        { (advanced_duration_unit !== 't' && advanced_duration_unit !== 'd') &&\n                            <InputField\n                                classNameInput='trade-container__input'\n                                error_messages={validation_errors.duration}\n                                label={duration_units_list.length === 1 ? duration_units_list[0].text : null}\n                                name='duration'\n                                value={getDurationFromUnit(advanced_duration_unit)}\n                                {...number_input_props}\n                                {...shared_input_props}\n                            />\n                        }\n                    </div>\n                </Fragment> :\n                <Fragment>\n                    <div className={endtime_container_class}>\n                        <TradingDatePicker\n                            name='expiry_date'\n                            is_24_hours_contract={is_24_hours_contract}\n                        />\n                        {is_24_hours_contract &&\n                            <TradingTimePicker />\n                            // validation_errors={validation_errors.end_time} TODO: add validation_errors for end time\n                        }\n                    </div>\n                </Fragment>\n            }\n        </Fragment>\n    );\n};\n\nAdvancedDuration.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    changeDurationUnit    : PropTypes.func,\n    duration_t            : PropTypes.number,\n    duration_units_list   : MobxPropTypes.arrayOrObservableArray,\n    expiry_date           : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_list        : PropTypes.array,\n    expiry_type        : PropTypes.string,\n    getDurationFromUnit: PropTypes.func,\n    number_input_props : PropTypes.object,\n    onChange           : PropTypes.func,\n    onChangeUiStore    : PropTypes.func,\n    server_time        : PropTypes.object,\n    shared_input_props : PropTypes.object,\n    start_date         : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    validation_errors: PropTypes.object,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        validation_errors: modules.trade.validation_errors,\n    })\n)(AdvancedDuration);\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport ButtonToggleMenu               from 'App/Components/Form/ButtonToggleMenu';\nimport InputField                     from 'App/Components/Form/InputField';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { connect }                    from 'Stores/connect';\nimport TradingDatePicker              from '../../DatePicker';\n\nconst SimpleDuration = ({\n    changeDurationUnit,\n    duration_t,\n    duration_units_list,\n    getDurationFromUnit,\n    number_input_props,\n    shared_input_props,\n    simple_duration_unit,\n    validation_errors,\n}) => {\n    const filterMinutesAndTicks = (arr) => {\n        const filtered_arr = arr.filter(du => du.value === 't' || du.value === 'm');\n        if (filtered_arr.length <= 1) return [];\n\n        return filtered_arr;\n    };\n    const has_label = !duration_units_list.some(du => du.value === 't');\n\n    return (\n        <Fragment>\n            { duration_units_list.length > 1 &&\n                <ButtonToggleMenu\n                    buttons_arr={filterMinutesAndTicks(duration_units_list)}\n                    is_animated={true}\n                    name='simple_duration_unit'\n                    onChange={changeDurationUnit}\n                    value={simple_duration_unit}\n                />\n            }\n            { simple_duration_unit === 't' &&\n                <RangeSlider\n                    name='duration'\n                    value={duration_t}\n                    ticks={10}\n                    {...shared_input_props}\n                />\n            }\n            { simple_duration_unit === 'd' &&\n                <TradingDatePicker\n                    alignment='left'\n                    mode='duration'\n                    name='duration'\n                />\n            }\n            { (simple_duration_unit !== 't' && simple_duration_unit !== 'd') &&\n                <InputField\n                    classNameInput='trade-container__input'\n                    error_messages={validation_errors.duration}\n                    name='duration'\n                    label={has_label ? duration_units_list[0].text : null}\n                    value={getDurationFromUnit(simple_duration_unit)}\n                    {...number_input_props}\n                    {...shared_input_props}\n                />\n            }\n        </Fragment>\n    );\n};\n\nSimpleDuration.propTypes = {\n    changeDurationUnit  : PropTypes.func,\n    duration_t          : PropTypes.number,\n    duration_units_list : MobxPropTypes.arrayOrObservableArray,\n    getDurationFromUnit : PropTypes.func,\n    number_input_props  : PropTypes.object,\n    shared_input_props  : PropTypes.object,\n    simple_duration_unit: PropTypes.string,\n    validation_errors   : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        validation_errors: modules.trade.validation_errors,\n    })\n)(SimpleDuration);\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport { localize }                   from 'App/i18n';\nimport Fieldset                       from 'App/Components/Form/fieldset.jsx';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { toMoment }                   from 'Utils/Date';\nimport DurationToggle                 from './duration-toggle.jsx';\nimport AdvancedDuration               from './advanced-duration.jsx';\nimport SimpleDuration                 from './simple-duration.jsx';\n\nconst Duration = ({\n    advanced_duration_unit,\n    advanced_expiry_type,\n    duration,\n    duration_unit,\n    duration_units_list,\n    duration_t,\n    expiry_date,\n    expiry_time,\n    expiry_type,\n    getDurationFromUnit,\n    hasDurationUnit,\n    is_advanced_duration,\n    is_minimized,\n    min_value,\n    max_value,\n    onChange,\n    onChangeUiStore,\n    onChangeMultiple,\n    simple_duration_unit,\n    server_time,\n    start_date,\n    market_open_times,\n}) => {\n    const expiry_list = [\n        { text: localize('Duration'), value: 'duration' },\n    ];\n\n    const has_end_time = expiry_list.find(expiry => expiry.value === 'endtime');\n    if (duration_units_list.length === 1 && duration_unit === 't') {\n        if (has_end_time) {\n            expiry_list.pop(); // remove end time for contracts with only tick duration\n        }\n    } else if (!has_end_time) {\n        expiry_list.push({ text: localize('End time'), value: 'endtime' });\n    }\n\n    if (is_minimized) {\n        const moment_expiry = toMoment(expiry_date);\n        const duration_unit_text = (duration_units_list.find(o => o.value === duration_unit) || {}).text;\n        return (\n            <div className='fieldset-minimized fieldset-minimized__duration'>\n                {expiry_type === 'duration'\n                    ? `${duration} ${duration_unit_text}`\n                    : `${moment_expiry.format('ddd - DD MMM, YYYY')}\\n${expiry_time}`\n                }\n            </div>\n        );\n    }\n\n    const changeDurationUnit = ({ target }) => {\n        const { name, value } = target;\n        const duration_value  = getDurationFromUnit(value);\n\n        onChangeUiStore({ name, value });\n        onChangeMultiple({\n            duration_unit: value,\n            duration     : duration_value,\n        });\n    };\n\n    const changeDurationValue = ({ target }) => {\n        const { name, value } = target;\n        const duration_name   = `duration_${is_advanced_duration ? advanced_duration_unit : simple_duration_unit}`;\n\n        // e.target.value returns string, we need to convert them to number\n        onChangeUiStore({ name: duration_name, value: +value });\n        onChange({ target: { name, value: +value } });\n    };\n\n    const onToggleDurationType = ({ target }) => {\n        const { name, value } = target;\n        onChangeUiStore({ name, value });\n\n        // replace selected duration unit and duration if the contract doesn't have that duration unit\n        let current_duration_unit = value ? advanced_duration_unit : simple_duration_unit;\n        if (!hasDurationUnit(current_duration_unit)) {\n            current_duration_unit = duration_units_list[0].value;\n            onChangeUiStore({ name: `${value ? 'advanced' : 'simple'}_duration_unit`, value: current_duration_unit });\n        }\n\n        const duration_value         = getDurationFromUnit(current_duration_unit);\n        const new_trade_store_values = {\n            duration_unit: current_duration_unit,\n            duration     : duration_value,\n        };\n\n        // simple only has expiry type of duration\n        if (!value && expiry_type !== 'duration') {\n            new_trade_store_values.expiry_type = 'duration';\n        }\n\n        if (value && expiry_type !== advanced_expiry_type) {\n            new_trade_store_values.expiry_type = advanced_expiry_type;\n        }\n\n        onChangeMultiple({ ...new_trade_store_values });\n    };\n\n    const props = {\n        shared_input: {\n            is_hj_whitelisted: true,\n            onChange         : changeDurationValue,\n            max_value,\n            min_value,\n        },\n        number_input: {\n            type            : 'number',\n            is_incrementable: true,\n        },\n    };\n\n    // e.g. digit contracts only has range slider - does not have toggle between advanced / simple\n    const has_toggle = expiry_list.length > 1 || duration_units_list.length > 1;\n\n    return (\n        <Fieldset className={classNames('trade-container__fieldset', {\n            'trade-container__fieldset--advanced': is_advanced_duration,\n        })}\n        >\n            { !has_toggle &&\n                <RangeSlider\n                    name='duration'\n                    value={duration_t}\n                    {...props.shared_input}\n                />\n            }\n            { has_toggle &&\n                <Fragment>\n                    { is_advanced_duration &&\n                        <AdvancedDuration\n                            advanced_expiry_type={advanced_expiry_type}\n                            advanced_duration_unit={advanced_duration_unit}\n                            changeDurationUnit={changeDurationUnit}\n                            duration_t={duration_t}\n                            duration_units_list={duration_units_list}\n                            expiry_date={expiry_date}\n                            expiry_list={expiry_list}\n                            expiry_type={expiry_type}\n                            getDurationFromUnit={getDurationFromUnit}\n                            market_open_times={market_open_times}\n                            number_input_props={props.number_input}\n                            onChange={onChange}\n                            onChangeUiStore={onChangeUiStore}\n                            server_time={server_time}\n                            shared_input_props={props.shared_input}\n                            start_date={start_date}\n                        /> }\n                    { !is_advanced_duration &&\n                        <SimpleDuration\n                            getDurationFromUnit={getDurationFromUnit}\n                            changeDurationUnit={changeDurationUnit}\n                            duration_t={duration_t}\n                            duration_units_list={duration_units_list}\n                            number_input_props={props.number_input}\n                            shared_input_props={props.shared_input}\n                            simple_duration_unit={simple_duration_unit}\n                        /> }\n                    <DurationToggle\n                        name={'is_advanced_duration'}\n                        onChange={onToggleDurationType}\n                        value={is_advanced_duration}\n                    />\n                </Fragment>\n            }\n        </Fieldset>\n    );\n};\n\nDuration.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    duration              : PropTypes.number,\n    duration_t            : PropTypes.number,\n    duration_unit         : PropTypes.string,\n    duration_units_list   : MobxPropTypes.arrayOrObservableArray,\n    expiry_date           : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time         : PropTypes.string,\n    expiry_type         : PropTypes.string,\n    getDurationFromUnit : PropTypes.func,\n    hasDurationUnit     : PropTypes.func,\n    is_advanced_duration: PropTypes.bool,\n    is_minimized        : PropTypes.bool,\n    market_open_times   : PropTypes.array,\n    max_value           : PropTypes.number,\n    min_value           : PropTypes.number,\n    onChange            : PropTypes.func,\n    onChangeUiStore     : PropTypes.func,\n    server_time         : PropTypes.object,\n    simple_duration_unit: PropTypes.string,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    validation_errors: PropTypes.object,\n};\n\nexport default Duration;\n","import PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport { connect }                    from 'Stores/connect';\nimport { convertDurationLimit }       from 'Stores/Modules/Trading/Helpers/duration';\nimport Duration                       from './duration.jsx';\n\nclass DurationWrapper extends React.Component {\n    hasDurationUnit = (duration_unit) => {\n        let duration_list = [...this.props.duration_units_list];\n\n        if (this.props.duration_units_list.length > 1 && !this.props.is_advanced_duration) {\n            duration_list = duration_list.filter(du => du.value === 'm' || du.value === 't');\n        }\n        return duration_list.some(du => du.value === duration_unit);\n    };\n\n    setDurationUnit() {\n        const new_duration_unit  = this.props.duration_units_list[0].value;\n        const new_duration_value = this.props.getDurationFromUnit(new_duration_unit);\n\n        this.props.onChangeUiStore({ name: `${this.props.is_advanced_duration ? 'advanced' : 'simple'}_duration_unit`, value: new_duration_unit });\n        this.props.onChangeMultiple({\n            duration_unit: new_duration_unit,\n            duration     : +new_duration_value,\n        });\n    }\n\n    advancedHasWrongExpiry = () => (this.props.is_advanced_duration\n        && this.props.expiry_type !== this.props.advanced_expiry_type);\n\n    handleEndTime = () => {\n        const symbol_has_endtime = this.props.duration_units_list.length > 1  || this.props.is_advanced_duration;\n\n        if (symbol_has_endtime) {\n            // simple duration does not have endtime\n            if (!this.props.is_advanced_duration) this.props.onChangeUiStore({ name: 'is_advanced_duration', value: true });\n\n            this.props.onChangeUiStore({ name: 'advanced_expiry_type', value: 'endtime' });\n        } else {\n            // If query string contains endtime but contract type does not e.g. digits (only ticks contracts)\n            this.props.onChange({ target: { name: 'expiry_type', value: 'duration' } });\n        }\n    };\n\n    getDurationMinMaxValues = (duration_min_max, contract_expiry_type, duration_unit) => {\n        const max_value = convertDurationLimit(+duration_min_max[contract_expiry_type].max, duration_unit);\n        const min_value = convertDurationLimit(+duration_min_max[contract_expiry_type].min, duration_unit);\n\n        return [min_value, max_value];\n    };\n\n    componentDidMount() {\n        const {\n            advanced_duration_unit,\n            advanced_expiry_type,\n            contract_expiry_type,\n            duration,\n            duration_min_max,\n            duration_unit,\n            expiry_type,\n            getDurationFromUnit,\n            is_advanced_duration,\n            onChange,\n            onChangeUiStore,\n            simple_duration_unit,\n        } = this.props;\n\n        const current_unit = is_advanced_duration ? advanced_duration_unit : simple_duration_unit;\n        const current_duration = getDurationFromUnit(current_unit);\n        const [min_value, max_value] =\n            this.getDurationMinMaxValues(duration_min_max, contract_expiry_type, duration_unit);\n\n        if (duration_unit !== current_unit) {\n            onChangeUiStore({ name: `${is_advanced_duration ? 'advanced' : 'simple'}_duration_unit`, value: duration_unit });\n        }\n\n        if (+duration !== +current_duration) {\n            onChangeUiStore({ name: `duration_${duration_unit}`, value: duration });\n        }\n\n        if (expiry_type === 'endtime') this.handleEndTime();\n\n        if (this.advancedHasWrongExpiry()) {\n            onChange({ target: { name: 'expiry_type', value: advanced_expiry_type } });\n        }\n\n        if (current_duration < min_value) {\n            onChangeUiStore({ name: `duration_${duration_unit}`, value: min_value });\n            onChange({ target: { name: 'duration', value: min_value } });\n        } else if (current_duration > max_value) {\n            onChangeUiStore({ name: `duration_${duration_unit}`, value: max_value });\n            onChange({ target: { name: 'duration', value: max_value } });\n        }\n    }\n\n    // intercept changes to contract duration and check that trade_store and ui_store are aligned.\n    componentWillReact() {\n        const {\n            advanced_expiry_type,\n            duration,\n            duration_unit,\n            expiry_type,\n            getDurationFromUnit,\n            is_advanced_duration,\n            onChange,\n            onChangeUiStore,\n        } = this.props;\n\n        const current_duration            = getDurationFromUnit(duration_unit);\n        const simple_is_not_type_duration = (!is_advanced_duration && expiry_type !== 'duration');\n\n        // simple only has expiry type duration\n        if (simple_is_not_type_duration) {\n            onChange({ target: { name: 'expiry_type', value: 'duration' } });\n        }\n\n        if (this.advancedHasWrongExpiry()) {\n            onChange({ target: { name: 'expiry_type', value: advanced_expiry_type } });\n        }\n\n        if (duration !== current_duration) {\n            onChangeUiStore({ name: `duration_${duration_unit}`, value: duration });\n        }\n    }\n\n    render() {\n        const {\n            advanced_duration_unit,\n            contract_expiry_type,\n            duration_min_max,\n            duration_unit,\n            duration_units_list,\n            is_advanced_duration,\n            simple_duration_unit,\n        } = this.props;\n\n        const current_duration_unit           = (is_advanced_duration ? advanced_duration_unit : simple_duration_unit);\n        const has_missing_duration_unit       = !this.hasDurationUnit(current_duration_unit);\n        const simple_is_missing_duration_unit =\n            (!is_advanced_duration && simple_duration_unit === 'd' && duration_units_list.length === 4);\n        const [min_value, max_value]          =\n            this.getDurationMinMaxValues(duration_min_max, contract_expiry_type, duration_unit);\n\n        if (has_missing_duration_unit || simple_is_missing_duration_unit) {\n            this.setDurationUnit();\n        }\n\n        return (\n            <Duration\n                hasDurationUnit={this.hasDurationUnit}\n                max_value={max_value}\n                min_value={min_value}\n                {...this.props}\n            />\n        );\n    }\n}\n\nDurationWrapper.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    contract_expiry_type  : PropTypes.string,\n    duration              : PropTypes.number,\n    duration_d            : PropTypes.number,\n    duration_h            : PropTypes.number,\n    duration_m            : PropTypes.number,\n    duration_min_max      : PropTypes.object,\n    duration_s            : PropTypes.number,\n    duration_t            : PropTypes.number,\n    duration_unit         : PropTypes.string,\n    duration_units_list   : MobxPropTypes.arrayOrObservableArray,\n    expiry_date           : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time         : PropTypes.string,\n    expiry_type         : PropTypes.string,\n    getDurationFromUnit : PropTypes.func,\n    is_advanced_duration: PropTypes.bool,\n    is_minimized        : PropTypes.bool,\n    market_open_times   : PropTypes.array,\n    onChange            : PropTypes.func,\n    onChangeMultiple    : PropTypes.func,\n    onChangeUiStore     : PropTypes.func,\n    sessions            : MobxPropTypes.arrayOrObservableArray,\n    simple_duration_unit: PropTypes.string,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time: PropTypes.string,\n    symbol    : PropTypes.string,\n};\n\nexport default connect(({ modules, ui }) => ({\n    advanced_duration_unit: ui.advanced_duration_unit,\n    advanced_expiry_type  : ui.advanced_expiry_type,\n    contract_expiry_type  : modules.trade.contract_expiry_type,\n    duration              : modules.trade.duration,\n    duration_unit         : modules.trade.duration_unit,\n    duration_units_list   : modules.trade.duration_units_list,\n    duration_min_max      : modules.trade.duration_min_max,\n    duration_t            : ui.duration_t,\n    expiry_date           : modules.trade.expiry_date,\n    expiry_time           : modules.trade.expiry_time,\n    expiry_type           : modules.trade.expiry_type,\n    getDurationFromUnit   : ui.getDurationFromUnit,\n    is_advanced_duration  : ui.is_advanced_duration,\n    onChange              : modules.trade.onChange,\n    onChangeUiStore       : ui.onChangeUiStore,\n    onChangeMultiple      : modules.trade.onChangeMultiple,\n    simple_duration_unit  : ui.simple_duration_unit,\n    start_date            : modules.trade.start_date,\n    market_open_times     : modules.trade.market_open_times,\n}))(DurationWrapper);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\n// arr_arr_numbers is an array of arrays where each nested array indicates one row\n// for example [[1, 2, 3]] will be a single row of these three numbers\n// but [[1, 2, 3], [4, 5, 6]] will be two rows:\n// first row with the first three numbers and second row with the last three numbers\nconst NumberSelector = ({\n    arr_arr_numbers,\n    name,\n    onChange,\n    selected_number,\n}) => {\n    const handleSelect = (item) => {\n        if (+item.target.getAttribute('data-value') !== selected_number) {\n            onChange({ target: { name, value: +item.target.getAttribute('data-value') } });\n        }\n    };\n\n    return (\n        <div className='number-selector'>\n            {arr_arr_numbers.map((arr_numbers, idx) =>\n                <div className='number-selector__row' key={idx}>\n                    {arr_numbers.map(i =>\n                        <span\n                            key={i}\n                            className={classNames('number-selector__selection', { 'number-selector__selection--selected': selected_number === i })}\n                            data-value={i}\n                            onClick={handleSelect}\n                        >\n                            {i}\n                        </span>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nNumberSelector.propTypes = {\n    arr_arr_numbers: PropTypes.arrayOf(PropTypes.array),\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    selected_number: PropTypes.number,\n};\n\nexport default NumberSelector;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from 'App/i18n';\nimport NumberSelector from 'App/Components/Form/number-selector.jsx';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\nimport { connect }    from 'Stores/connect';\n\nconst LastDigit = ({\n    is_minimized,\n    last_digit,\n    onChange,\n}) =>  {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized'>\n                {`${localize('Last Digit')}: ${last_digit}`}\n            </div>\n        );\n    }\n    const arr_five = [...Array(5).keys()];\n    return (\n        <Fieldset\n            className='trade-container__fieldset'\n            header={localize('Last Digit Prediction')}\n            is_center\n        >\n            <NumberSelector\n                arr_arr_numbers={[arr_five, arr_five.map(i => i + 5)]}\n                name='last_digit'\n                onChange={onChange}\n                selected_number={+last_digit}\n            />\n        </Fieldset>\n    );\n};\n\nLastDigit.propTypes = {\n    is_minimized: PropTypes.bool,\n    last_digit  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    onChange: PropTypes.func,\n};\n\nexport default connect(({ modules }) => ({\n    last_digit: modules.trade.last_digit,\n    onChange  : modules.trade.onChange,\n}))(LastDigit);\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport Amount                         from 'Modules/Trading/Components/Form/TradeParams/amount.jsx';\nimport Barrier                        from 'Modules/Trading/Components/Form/TradeParams/barrier.jsx';\nimport Duration                       from 'Modules/Trading/Components/Form/TradeParams/Duration';\nimport LastDigit                      from 'Modules/Trading/Components/Form/TradeParams/last-digit.jsx';\nimport { connect }                    from 'Stores/connect';\n\nclass TradeParams extends React.Component {\n    isVisible(component_key) {\n        return this.props.form_components.includes(component_key);\n    }\n\n    render () {\n        const { is_minimized } = this.props;\n        return (\n            <React.Fragment>\n                {\n                    this.isVisible('duration') &&\n                    <Duration key={'duration'} is_minimized={is_minimized} />\n                }\n                {\n                    this.isVisible('barrier') &&\n                    <Barrier key={'barrier'} is_minimized={is_minimized} />\n                }\n                {\n                    this.isVisible('last_digit') &&\n                    <LastDigit key={'last_digit'} is_minimized={is_minimized} />\n                }\n                {\n                    this.isVisible('amount') &&\n                    <Amount key={'amount'} is_minimized={is_minimized} />\n                }\n            </React.Fragment>\n        );\n    }\n}\nTradeParams.propTypes = {\n    form_components: MobxPropTypes.arrayOrObservableArray,\n    is_minimized   : PropTypes.bool,\n};\n\nexport default connect(({ modules }) => ({\n    form_components: modules.trade.form_components,\n}))(TradeParams);\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full-screen-dialog.jsx';\n\nconst ContractTypeDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n}) => (\n    is_mobile ?\n        <React.Fragment>\n            <span className='contract-type-widget__select-arrow' />\n            <FullScreenDialog\n                title='Select Trading Type'\n                visible={open}\n                onClose={onClose}\n            >\n                {children}\n            </FullScreenDialog>\n        </React.Fragment>\n        :\n        <CSSTransition\n            in={open}\n            timeout={100}\n            classNames={{\n                enter    : 'contracts-type-dialog--enter',\n                enterDone: 'contracts-type-dialog--enterDone',\n                exit     : 'contracts-type-dialog--exit',\n            }}\n            unmountOnExit\n        >\n            <div className='contracts-type-dialog'>\n                <div className='contracts-type-dialog__list-wrapper'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nContractTypeDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n};\n\nexport default ContractTypeDialog;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport classNames                     from 'classnames';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport Icon                           from 'Assets/icon.jsx';\n\nconst ContractTypeItem = ({\n    contracts,\n    name,\n    value,\n    is_equal,\n    handleInfoClick,\n    handleSelect,\n}) => (\n    contracts.map((contract, idx) => (\n        <div\n            key={idx}\n            className={classNames('contract-type-item', {\n                'contract-type-item--selected' : value === contract.value,\n                'contract-type-item--invisible': (contract.value === 'rise_fall' && is_equal) || (contract.value === 'rise_fall_equal' && !is_equal),\n            })}\n            name={name}\n            value={contract.value}\n            onClick={(e) => handleSelect(contract, e)}\n        >\n            <Icon icon='IconTradeCategory' category={contract.value} className='contract-type-item__icon-wrapper' />\n            <span className='contract-type-item__title'>\n                {contract.text}\n            </span>\n            <div id='info-icon' className='contract-type-item__icon' onClick={() => handleInfoClick(contract)}>\n                <Icon icon='IconInfoOutline' />\n            </div>\n        </div>\n    ))\n);\n\nContractTypeItem.propTypes = {\n    contracts      : MobxPropTypes.arrayOrObservableArray,\n    handleInfoClick: PropTypes.func,\n    handleSelect   : PropTypes.func,\n    is_equal       : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    name : PropTypes.string,\n    value: PropTypes.string,\n};\n\nexport default ContractTypeItem;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport ContractTypeItem               from './contract-type-item.jsx';\n\nconst ContractTypeList = ({\n    handleInfoClick,\n    handleSelect,\n    is_equal,\n    list,\n    name,\n    value,\n}) =>\n    (\n        Object.keys(list).map(key => (\n            // TODO: Remove this line after other contracts are ready to be served\n            !['In/Out', 'Asians'].includes(key) &&\n            <React.Fragment key={key}>\n                <div className='contract-type-list'>\n                    <div className='contract-type-list__label'><span>{key}</span></div>\n                    <div className='contract-type-list__contracts-wrapper'>\n                        <ContractTypeItem\n                            contracts={list[key]}\n                            name={name}\n                            value={value}\n                            handleSelect={handleSelect}\n                            handleInfoClick={handleInfoClick}\n                            is_equal={is_equal}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        ))\n    );\n\nContractTypeList.propTypes = {\n    handleInfoClick: PropTypes.func,\n    handleSelect   : PropTypes.func,\n    is_equal       : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    list : MobxPropTypes.objectOrObservableObject,\n    name : PropTypes.string,\n    value: PropTypes.string,\n};\n\nexport default ContractTypeList;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full-screen-dialog.jsx';\n\nconst TradeTypeInfoDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n    title,\n}) => (\n    is_mobile ?\n        <FullScreenDialog\n            visible={open}\n            onClose={onClose}\n            title={title}\n            wrapperClassName='trade-type-info-modal'\n        >\n            {children}\n        </FullScreenDialog>\n        :\n        <CSSTransition\n            classNames={{\n                enter    : 'trade-type-info-dialog--enter',\n                enterDone: 'trade-type-info-dialog--enterDone',\n                exit     : 'trade-type-info-dialog--exit',\n            }}\n            in={open}\n            timeout={100}\n            unmountOnExit\n        >\n            <div className='trade-type-info-dialog'>\n                <div className='trade-type-info-dialog__info-wrapper'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nTradeTypeInfoDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n    title    : PropTypes.string,\n};\n\nexport default TradeTypeInfoDialog;\n","import classNames         from 'classnames';\nimport PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { Scrollbars }     from 'tt-react-custom-scrollbars';\nimport Icon               from 'Assets/icon.jsx';\nimport Button             from 'App/Components/Form/button.jsx';\nimport { localize }       from 'App/i18n';\n\nconst TradeTypeInfoItem = ({\n    handleNavigationClick,\n    handleNextClick,\n    handlePrevClick,\n    is_dark_theme,\n    is_mobile,\n    item,\n    item_index,\n    itemList,\n    onBackButtonClick,\n    onSubmitButtonClick,\n}) => (\n    <React.Fragment>\n        {!is_mobile &&\n        <div className='trade-type-info-dialog__header'>\n            <span onClick={() => onBackButtonClick()}>\n                <Icon icon='IconBack' />\n            </span>\n            <span className='title'>{item.text}</span>\n        </div>\n        }\n        <div className='trade-type-info-dialog__body'>\n            <div\n                className='trade-type-info-dialog__card-wrapper'\n                // total calculated below is from 258px and 16px horizontal margin set in trade-info-dialog css\n                style={{ 'transform': `translate3d(-${(274 * item_index)}px, 0, 0)`  }}\n            >\n                {\n                    itemList.map((type, idx) => (\n                        <div className='trade-type-info-dialog__card' key={idx}>\n                            <div className='trade-type-info-dialog__gif'>\n                                <Icon\n                                    icon='TradeCategoriesGIF'\n                                    category={type.value}\n                                    className='trade-type-info-dialog__gif-image'\n                                    is_dark_theme={is_dark_theme}\n                                />\n                            </div>\n                            <div className='trade-type-info-dialog__content'>\n                                <Scrollbars\n                                    autoHide\n                                    style={{ height: '100%' }}\n                                >\n                                    <Icon icon='TradeCategories' category={type.value} />\n                                </Scrollbars>\n                            </div>\n                            <div>\n                                <Button\n                                    className='btn--primary--orange trade-type-info-dialog__choose-button'\n                                    onClick={() => onSubmitButtonClick(type)}\n                                    text={localize('Choose')}\n                                />\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n        <div className='trade-type-info-navigation'>\n            <div className='trade-type-info-navigation__icon' onClick={() => handlePrevClick(itemList)} >\n                <Icon icon='IconChevronLeft' />\n            </div>\n            <div className='trade-type-info-navigation__list'>\n                <i\n                    className={classNames(\n                        'trade-type-info-navigation__circle-button',\n                        'trade-type-info-navigation__circle-button--active')}\n                    style={{ 'transform': `translate3d(${16 * item_index}px, 0, 0)` }}\n                />\n                {\n                    itemList.map((contract, idx) => (\n                        <React.Fragment key={idx}>\n                            <div\n                                className='trade-type-info-navigation__circle-button'\n                                onClick={() => handleNavigationClick(contract)}\n                            />\n                        </React.Fragment>\n                    ))\n                }\n            </div>\n            <div className='trade-type-info-navigation__icon' onClick={() => handleNextClick(itemList)} >\n                <Icon icon='IconChevronRight' />\n            </div>\n        </div>\n    </React.Fragment>\n);\n\nTradeTypeInfoItem.propTypes = {\n    handleNavigationClick: PropTypes.func,\n    handleNextClick      : PropTypes.func,\n    handlePrevClick      : PropTypes.func,\n    is_dark_theme        : PropTypes.bool,\n    is_mobile            : PropTypes.bool,\n    item                 : PropTypes.object,\n    item_index           : PropTypes.number,\n    itemList             : PropTypes.array,\n    onBackButtonClick    : PropTypes.func,\n    onSubmitButtonClick  : PropTypes.func,\n};\n\nexport default TradeTypeInfoItem;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport Icon                from 'Assets/icon.jsx';\nimport ContractTypeDialog  from './contract-type-dialog.jsx';\nimport ContractTypeList    from './contract-type-list.jsx';\nimport TradeTypeInfoDialog from '../TradeTypeInfo/trade-type-info-dialog.jsx';\nimport TradeTypeInfoItem   from '../TradeTypeInfo/trade-type-info-item.jsx';\n\nclass ContractTypeWidget extends React.PureComponent {\n    state = {\n        is_dialog_open     : false,\n        is_info_dialog_open: false,\n        item               : {},\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item, e) => {\n        if (item.value !== this.props.value && e.target.id !== 'info-icon') {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    };\n\n    onSubmitButtonClick = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleInfoVisibility();\n    };\n\n    handleInfoClick = (item) => {\n        this.setState({ item });\n        this.handleInfoVisibility();\n        this.handleVisibility();\n    };\n\n    handleNavigationClick = (item) => {\n        this.setState({ item });\n    };\n\n    handleNextClick = (itemList) => {\n        const navigationLength = itemList.length;\n        const item = this.state.item;\n        const currentIndex = itemList.findIndex((list_item) => list_item.value === item.value);\n        const nextIndex = currentIndex + 1;\n        if (nextIndex < navigationLength) {\n            this.handleNavigationClick(itemList[nextIndex]);\n        } else {\n            this.handleNavigationClick(itemList[0]);\n        }\n    };\n\n    handlePrevClick = (itemList) => {\n        const navigationLength = itemList.length;\n        const item = this.state.item;\n        const currentIndex = itemList.findIndex((list_item) => list_item.value === item.value);\n        const prevIndex = currentIndex - 1;\n        if (prevIndex > -1) {\n            this.handleNavigationClick(itemList[prevIndex]);\n        } else {\n            this.handleNavigationClick(itemList[navigationLength - 1]);\n        }\n    };\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_dialog_open) {\n            this.setState({ is_dialog_open: false });\n        } else if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_info_dialog_open) {\n            this.setState({\n                is_dialog_open     : false,\n                is_info_dialog_open: false,\n            });\n        }\n    };\n\n    handleInfoVisibility = () => {\n        this.setState((state) => ({\n            is_info_dialog_open: !state.is_info_dialog_open,\n        }));\n    };\n\n    handleVisibility = () => {\n        this.setState({ is_dialog_open: !this.state.is_dialog_open });\n    };\n\n    onWidgetClick = () => {\n        this.setState((state) => ({ is_dialog_open: !state.is_dialog_open, is_info_dialog_open: false }));\n    };\n\n    onBackButtonClick = () => {\n        this.setState((state) => ({ is_dialog_open: !state.is_dialog_open, is_info_dialog_open: false }));\n    };\n\n    getDisplayText = () => {\n        const { list, value } = this.props;\n        const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n        let text = '';\n        if (list) {\n            Object.keys(list).some(key => {\n                text = findInArray(list[key]);\n                return text;\n            });\n        }\n        return text;\n    };\n\n    getItemIndex = (curr_item, itemList) => itemList.findIndex((list_item) => list_item.value === curr_item.value);\n\n    getItemList = () => {\n        const itemList = [];\n        const list = this.props.list;\n        /* eslint-disable */\n        Object.keys(list).map(key => {\n            !['In/Out', 'Asians'].includes(key) && list[key].map(contract => {\n                (contract.value !== 'rise_fall_equal') && itemList.push(contract);\n            });\n        });\n        /* eslint-disable */\n        return itemList;\n    };\n\n    render() {\n        const { is_dark_theme, is_equal, is_mobile, list, name, value } = this.props;\n        const { is_dialog_open, is_info_dialog_open, item }             = this.state;\n        const item_index = this.getItemIndex(item, this.getItemList());\n        return (\n            <div\n                className='contract-type-widget dropdown--left'\n                ref={this.setWrapperRef}\n                tabIndex='0'\n            >\n                <div\n                    className={classNames('contract-type-widget__display', {\n                        'contract-type-widget__display--clicked': (is_dialog_open || is_info_dialog_open),\n                    })}\n                    onClick={this.onWidgetClick}\n                >\n                    <Icon\n                        icon='IconTradeCategory'\n                        category={value}\n                        className='contract-type-widget__icon-wrapper'\n                    />\n                    <span name={name} value={value}>\n                        {this.getDisplayText()}\n                    </span>\n                    <Icon\n                        icon='IconArrow'\n                        className={classNames(\n                          'contract-type-widget__select-arrow',\n                          'contract-type-widget__select-arrow--left')}\n                    />\n                </div>\n\n                <ContractTypeDialog\n                    is_mobile={is_mobile}\n                    onClose={this.handleVisibility}\n                    open={is_dialog_open}\n                >\n                    <ContractTypeList\n                        handleInfoClick={this.handleInfoClick}\n                        handleSelect={this.handleSelect}\n                        is_equal={is_equal}\n                        list={list}\n                        name={name}\n                        value={value}\n                    />\n                </ContractTypeDialog>\n                <TradeTypeInfoDialog\n                    is_mobile={is_mobile}\n                    onClose={this.handleInfoClick}\n                    open={is_info_dialog_open}\n                    title={item.text}\n                >\n                    <TradeTypeInfoItem\n                        handleNavigationClick={this.handleNavigationClick}\n                        handleNextClick={this.handleNextClick}\n                        handlePrevClick={this.handlePrevClick}\n                        is_dark_theme={is_dark_theme}\n                        is_mobile={is_mobile}\n                        item={item}\n                        item_index={item_index < 0 ? undefined : item_index}\n                        itemList={this.getItemList()}\n                        onBackButtonClick={this.onBackButtonClick}\n                        onSubmitButtonClick={this.onSubmitButtonClick}\n                    />\n                </TradeTypeInfoDialog>\n            </div>\n        );\n    }\n}\n\nContractTypeWidget.propTypes = {\n    is_dark_theme: PropTypes.bool,\n    is_equal           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    is_mobile: PropTypes.bool,\n    list     : PropTypes.object,\n    name     : PropTypes.string,\n    onChange : PropTypes.func,\n    value    : PropTypes.string,\n};\n\nexport default ContractTypeWidget;\n","import PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { connect }        from 'Stores/connect';\nimport ContractTypeWidget from '../Components/Form/ContractType/contract-type-widget.jsx';\n\nconst Contract = ({\n    contract_type,\n    contract_types_list,\n    is_dark_theme,\n    is_equal,\n    is_mobile,\n    onChange,\n}) => (\n    <ContractTypeWidget\n        is_dark_theme={is_dark_theme}\n        is_equal={is_equal}\n        is_mobile={is_mobile}\n        list={contract_types_list}\n        name='contract_type'\n        onChange={onChange}\n        value={contract_type}\n    />\n);\n\nContract.propTypes = {\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    is_equal           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    is_mobile: PropTypes.bool,\n    onChange : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        contract_type      : modules.trade.contract_type,\n        contract_types_list: modules.trade.contract_types_list,\n        is_equal           : modules.trade.is_equal,\n        onChange           : modules.trade.onChange,\n        is_dark_theme      : ui.is_dark_mode_on,\n        is_mobile          : ui.is_mobile,\n    })\n)(Contract);\n","import PropTypes from 'prop-types';\n\nexport const CommonPropTypes = {\n    calendar_date: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    isPeriodDisabled: PropTypes.func,\n    selected_date   : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    updateSelected: PropTypes.func,\n};\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { padLeft }         from '_common/string_util';\nimport { localize }        from 'App/i18n';\nimport { Popover }         from 'App/Components/Elements/Popover';\nimport {\n    getDaysOfTheWeek,\n    week_headers_abbr }    from 'Constants/date-time';\nimport {\n    addDays,\n    addMonths,\n    daysFromTodayTo,\n    epochToMoment,\n    subDays,\n    subMonths,\n    toMoment }             from 'Utils/Date';\nimport { CommonPropTypes } from './types';\n\nconst getDays = ({\n    calendar_date,\n    date_format,\n    has_range_selection,\n    hide_others,\n    holidays,\n    hovered_date,\n    isPeriodDisabled,\n    start_date,\n    selected_date,\n    updateSelected,\n    weekends,\n    onMouseOver,\n    onMouseLeave,\n}) => {\n    // adjust Calendar week by 1 day so that Calendar week starts on Monday\n    // change to zero to set Calendar week to start on Sunday\n    const day_offset = 1;\n\n    const dates = [];\n    const days  = [];\n    const moment_today       = toMoment().startOf('day');\n    const moment_cur_date    = toMoment(calendar_date);\n    const num_of_days        = moment_cur_date.daysInMonth() + 1;\n    const moment_month_start = moment_cur_date.clone().startOf('month');\n    const moment_month_end   = moment_cur_date.clone().endOf('month');\n    const moment_selected    = typeof selected_date === 'number' ? epochToMoment(selected_date).startOf('day') : toMoment(selected_date).startOf('day');\n\n    // populate previous months' dates\n    const end_of_prev_month = subMonths(moment_cur_date, 1).endOf('month').day();\n    for (let i = end_of_prev_month; i > 0; i--) {\n        dates.push(subDays(moment_month_start, i).format(date_format));\n    }\n    // populate current months' dates\n    for (let idx = 1; idx < num_of_days; idx += 1) {\n        dates.push(moment_cur_date.clone().format(date_format.replace('DD', padLeft(idx, 2, '0'))));\n    }\n    // populate next months' dates\n    const start_of_next_month = addMonths(moment_cur_date, 1).startOf('month').day();\n    if (start_of_next_month - day_offset > 0 || dates.length <= 28) {\n        // if start_of_next_month doesn't falls on Monday, append rest of the week\n        for (let i = 1; i <= 7 - start_of_next_month + day_offset; i++) {\n            dates.push(addDays(moment_month_end, i, 'day').format(date_format));\n        }\n    } else if (!start_of_next_month) {\n        // if start_of_next_month falls on Sunday, append 1 day\n        dates.push(addDays(moment_month_end, 1).format(date_format));\n    }\n\n    const moment_start_date = toMoment(start_date).startOf('day');\n\n    dates.map((date) => {\n        const moment_date    = toMoment(date).startOf('day');\n        const moment_hovered = toMoment(hovered_date).startOf('day');\n        const is_active      = selected_date && moment_date.isSame(moment_selected);\n        const is_today       = moment_date.isSame(moment_today, 'day');\n\n        const events          = holidays.filter(event =>\n            // filter by date or day of the week\n            event.dates.find(d => d === date || getDaysOfTheWeek(d) === toMoment(date).day()));\n        const has_events           = !!events.length;\n        const is_closes_early      = events.map(event => !!event.descrip.match(/Closes early|Opens late/))[0];\n        const message              = events.map(event => event.descrip)[0] || '';\n        const duration_from_today  = daysFromTodayTo(date);\n        const is_between           = moment_date.isBetween(moment_today, moment_selected);\n        const is_between_hover     = moment_date.isBetween(moment_today, moment_hovered);\n        const is_before_min_or_after_max_date = isPeriodDisabled(moment_date, 'day');\n        const is_disabled =\n            // check if date is before min_date or after_max_date\n            is_before_min_or_after_max_date\n            // for forward starting accounts, only show same day as start date and the day after\n            || ((start_date && (moment_date.isBefore(moment_start_date))))\n            // check if weekends are disabled\n            || weekends.some(day => toMoment(date).day() === day)\n            // check if date falls on holidays, and doesn't close early or opens late\n            || has_events && !is_closes_early;\n\n        // show 'disabled' style for dates that is not in the same calendar month, it should still be clickable\n        const is_other_month = moment_date.month() !== moment_cur_date.month();\n\n        days.push(\n            <span\n                key={date}\n                className={classNames('calendar__cell', {\n                    'calendar__cell--active'         : is_active,\n                    'calendar__cell--today'          : is_today,\n                    'calendar__cell--active-duration': is_active && has_range_selection && !is_today,\n                    'calendar__cell--today-duration' : is_today && has_range_selection,\n                    'calendar__cell--disabled'       : is_disabled,\n                    'calendar__cell--is-hidden'      : is_other_month && hide_others,\n                    'calendar__cell--other'          : is_other_month,\n                    'calendar__cell--between-hover'  : is_between_hover && has_range_selection,\n                    'calendar__cell--between'        : is_between && has_range_selection,\n                })}\n                onClick={is_disabled ? undefined : (e) => updateSelected(e, 'day')}\n                data-date={date}\n                data-duration={`${duration_from_today} ${ duration_from_today === 1 ? localize('Day') : localize('Days') }`}\n                onMouseOver={onMouseOver}\n                onMouseLeave={onMouseLeave}\n            >\n                {((has_events || is_closes_early) && !is_other_month && !is_before_min_or_after_max_date) &&\n                    <Popover\n                        alignment='top'\n                        classNameTarget='calendar__cell-tooltip'\n                        classNameTargetIcon='calendar__cell-tooltip-icon'\n                        icon='dot'\n                        message={message}\n                    />\n                }\n                {moment_date.date()}\n            </span>\n        );\n    });\n\n    return days;\n};\n\nexport const CalendarDays = (props) => {\n    const days = getDays(props).map(day => day);\n\n    return (\n        <div className='calendar__body calendar__body--date'>\n            { Object.keys(week_headers_abbr)\n                .map((item, idx) => (\n                    <span key={idx} className='calendar__text calendar__text--bold'>{week_headers_abbr[item]}</span>\n                ))\n            }\n            { days }\n        </div>\n    );\n};\n\nCalendarDays.defaultProps = {\n    holidays: [],\n    weekends: [],\n};\n\nCalendarDays.propTypes = {\n    ...CommonPropTypes,\n    date_format        : PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    holidays           : PropTypes.arrayOf(\n        PropTypes.shape({\n            dates  : PropTypes.array,\n            descrip: PropTypes.string,\n        }),\n    ),\n    hovered_date: PropTypes.string,\n    onMouseLeave: PropTypes.func,\n    onMouseOver : PropTypes.func,\n    start_date  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    weekends: PropTypes.arrayOf(PropTypes.number),\n};\n","import classNames        from 'classnames';\nimport React             from 'react';\nimport { month_headers } from 'Constants/date-time';\nimport { toMoment }      from 'Utils/Date';\nimport { CommonPropTypes }   from './types';\n\nexport const CalendarMonths = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_date          = toMoment(calendar_date);\n    const moment_selected_date = toMoment(selected_date);\n\n    return (\n        <div className='calendar__body calendar__body--month'>\n            { Object.keys(month_headers).map((month, idx) => {\n                const is_active   = month === moment_selected_date.clone().format('MMM') && moment_selected_date.isSame(moment_date, 'year');\n                const is_disabled = isPeriodDisabled(moment_date.clone().month(month), 'month');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'month')}\n                        data-month={month}\n                    >\n                        {month_headers[month]}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarMonths.propTypes = { ...CommonPropTypes };\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport { toMoment }    from 'Utils/Date';\nimport { CommonPropTypes } from './types';\nimport { getDecade }   from '../helper';\n\nexport const CalendarYears = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const [start_of_decade, end_of_decade] = getDecade(moment_date).split('-');\n\n    const years = [];\n    for (let year = +start_of_decade - 1; year <= +end_of_decade + 1; year++) {\n        years.push(year);\n    }\n    return (\n        <div className='calendar__body calendar__body--year'>\n            { years.map((year, idx) => {\n                const is_other_decade = idx === 0 || idx === 11;\n                const is_disabled     = isPeriodDisabled(moment_date.clone().year(year), 'year');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : year === moment_selected.year(),\n                            'calendar__cell--other'   : is_other_decade,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'year')}\n                        data-year={year}\n                    >\n                        {year}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarYears.propTypes = { ...CommonPropTypes };\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport { toMoment }    from 'Utils/Date';\nimport { CommonPropTypes } from './types';\nimport {\n    getCentury,\n    getDecade }        from '../helper';\n\nexport const CalendarDecades = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const start_year      = getCentury(moment_date).split('-')[0];\n\n    const decades = [];\n    let min_year = +start_year - 10;\n    for (let i = 0; i < 12; i++) {\n        const decade = getDecade(toMoment().year(min_year));\n        decades.push(decade);\n        min_year = +decade.split('-')[1] + 1;\n    }\n    return (\n        <div className='calendar__body calendar__body--decade'>\n            { decades.map((decade, idx) => {\n                const [start_of_decade, end_of_decade] = decade.split('-');\n                const is_active    = +start_of_decade === moment_selected.year();\n                const is_disabled  = isPeriodDisabled(moment_date.clone().year(start_of_decade), 'year') &&\n                    isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year');\n                const is_other_century = idx === 0 || idx === 11;\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                            'calendar__cell--other'   : is_other_century,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'decade')}\n                        data-decade={decade}\n                    >\n                        {decade}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarDecades.propTypes = { ...CommonPropTypes };\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    CalendarDays,\n    CalendarMonths,\n    CalendarYears,\n    CalendarDecades } from './panels';\n\nconst CalendarBody = (props) => {\n    const calendar_body = {\n        date  : <CalendarDays    {...props} />,\n        month : <CalendarMonths  {...props} />,\n        year  : <CalendarYears   {...props} />,\n        decade: <CalendarDecades {...props} />,\n    };\n\n    return (\n        <React.Fragment>\n            { calendar_body[props.calendar_view] }\n        </React.Fragment>\n    );\n};\n\nCalendarBody.propTypes = {\n    calendar_view: PropTypes.string,\n};\n\nexport default CalendarBody;\n","import classNames            from 'classnames';\nimport PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { getLocalizedBasis } from 'Stores/Modules/Trading/Constants/contract';\nimport { localize }          from 'App/i18n';\nimport Money                 from 'App/Components/Elements/money.jsx';\nimport { Popover }           from 'App/Components/Elements/Popover';\nimport Icon                  from 'Assets/icon.jsx';\n\nconst ContractInfo = ({\n    basis,\n    currency,\n    has_increased,\n    is_loading,\n    should_fade,\n    is_visible,\n    proposal_info,\n}) => {\n    const localized_basis = getLocalizedBasis();\n    const stakeOrPayout = () => {\n        switch (basis) {\n            case 'stake':\n                return localized_basis.payout;\n            case 'payout':\n                return localized_basis.stake;\n            default:\n                return basis;\n        }\n    };\n\n    const has_error_or_not_loaded = proposal_info.has_error || !proposal_info.id;\n    return (\n        <div className='trade-container__price'>\n            <div className={classNames(\n                'trade-container__price-info',\n                {\n                    'trade-container__price-info--disabled': has_error_or_not_loaded,\n                    'trade-container__price-info--slide'   : is_loading && !should_fade,\n                    'trade-container__price-info--fade'    : is_loading && should_fade,\n                })}\n            >\n                <div className='trade-container__price-info-basis'>\n                    {has_error_or_not_loaded\n                        ? stakeOrPayout()\n                        : localize('{{value}}', { value: proposal_info.obj_contract_basis.text })\n                    }\n                </div>\n                <div className='trade-container__price-info-value'>\n                    {!has_error_or_not_loaded &&\n                    <Money amount={proposal_info.obj_contract_basis.value} className='trade-container__price-info-currency' currency={currency} />\n                    }\n                </div>\n                {is_visible &&\n                <div className='trade-container__price-info-movement'>\n                    {(!has_error_or_not_loaded && has_increased !== null) &&\n                        <Icon icon='IconPriceMove' type={has_increased ? 'profit' : 'loss'} />\n                    }\n                </div>\n                }\n            </div>\n            <Popover\n                alignment='left'\n                icon='info'\n                margin={210}\n                message={has_error_or_not_loaded ? '' : proposal_info.message }\n            />\n        </div>\n    );\n};\nContractInfo.propTypes = {\n    basis        : PropTypes.string,\n    currency     : PropTypes.string,\n    has_increased: PropTypes.bool,\n    is_loading   : PropTypes.bool,\n    is_visible   : PropTypes.bool,\n    proposal_info: PropTypes.object,\n};\n\nexport default ContractInfo;\n","import classNames                 from 'classnames';\nimport PropTypes                  from 'prop-types';\nimport React                      from 'react';\nimport { localize }               from 'App/i18n';\nimport Button                     from 'App/Components/Form/button.jsx';\nimport Icon                       from 'Assets/icon.jsx';\nimport { getContractTypeDisplay } from 'Constants/contract';\n\nconst PurchaseButton = ({\n    buy_info,\n    index,\n    info,\n    is_contract_mode,\n    is_disabled,\n    is_high_low,\n    is_loading,\n    is_proposal_empty,\n    purchased_states_arr,\n    setPurchaseState,\n    should_fade,\n    onClickPurchase,\n    type,\n}) => {\n    const getIconType = () => {\n        if (!should_fade && is_loading) return '';\n        return (is_high_low) ? `${type.toLowerCase()}_barrier` : type.toLowerCase();\n    };\n    const is_button_disabled = ((is_contract_mode || is_disabled) && !is_loading) || is_proposal_empty;\n\n    return (\n        <Button\n            is_disabled={is_contract_mode || is_disabled}\n            id={`purchase_${type}`}\n            className={classNames(\n                'btn-purchase',\n                {\n                    'btn-purchase--disabled'       : is_button_disabled || !!(buy_info.error),\n                    'btn-purchase--animated--slide': is_loading && !should_fade,\n                    'btn-purchase--animated--fade' : is_loading && should_fade,\n                    'btn-purchase--swoosh'         : !!(purchased_states_arr[index]),\n                })}\n            onClick={() => {\n                setPurchaseState(index);\n                onClickPurchase(info.id, info.stake, type);\n            }}\n        >\n            <React.Fragment>\n                <div className='btn-purchase__info btn-purchase__info--left'>\n                    <div className='btn-purchase__type-wrapper'>\n                        <div className='btn-purchase__icon_wrapper'>\n                            <Icon\n                                icon='IconTradeType'\n                                className='btn-purchase__icon'\n                                type={getIconType()}\n                            />\n                        </div>\n                        <div className='btn-purchase__text_wrapper'>\n                            <span className='btn-purchase__text'>\n                                {(!should_fade && is_loading) ? '' : localize('{{value}}', { value: getContractTypeDisplay(type, is_high_low) })}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                <div className='btn-purchase__effect-detail' />\n                <div className='btn-purchase__effect-detail--arrow' />\n                <div className='btn-purchase__info btn-purchase__info--right'>\n                    <div className='btn-purchase__text_wrapper'>\n                        <span className='btn-purchase__text'>{!(is_loading || is_disabled) ? info.returns : ''}</span>\n                    </div>\n                </div>\n            </React.Fragment>\n        </Button>\n    );\n};\n\nPurchaseButton.propTypes = {\n    buy_info            : PropTypes.object,\n    currency            : PropTypes.string,\n    index               : PropTypes.number,\n    info                : PropTypes.object,\n    is_contract_mode    : PropTypes.bool,\n    is_disabled         : PropTypes.bool,\n    is_high_low         : PropTypes.bool,\n    is_loading          : PropTypes.bool,\n    is_proposal_empty   : PropTypes.bool,\n    onClickPurchase     : PropTypes.func,\n    purchased_states_arr: PropTypes.array,\n    setPurchaseState    : PropTypes.func,\n    type                : PropTypes.string,\n};\n\nexport default PurchaseButton;\n","import classNames     from 'classnames';\nimport React          from 'react';\nimport PropTypes      from 'prop-types';\n// import { localize }   from 'App/i18n';\n// import { PopConfirm } from 'App/Components/Elements/PopConfirm';\nimport { Popover }    from 'App/Components/Elements/Popover';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\nimport ContractInfo   from 'Modules/Trading/Components/Form/Purchase/contract-info.jsx';\n// import PurchaseLock   from 'Modules/Trading/Components/Form/Purchase/PurchaseLock';\nimport PurchaseButton from 'Modules/Trading/Components/Elements/purchase-button.jsx';\n\nclass PurchaseFieldset extends React.PureComponent {\n    state = { should_fade: false };\n\n    componentDidMount() {\n        this.setState({ should_fade: true });\n    }\n\n    render() {\n        const {\n            basis,\n            buy_info,\n            currency,\n            // index,\n            info,\n            index,\n            is_contract_mode,\n            is_disabled,\n            is_high_low,\n            is_loading,\n            is_proposal_empty,\n            is_proposal_error,\n            purchased_states_arr,\n            // is_purchase_confirm_on,\n            // is_purchase_locked,\n            onClickPurchase,\n            onHoverPurchase,\n            // togglePurchaseLock,\n            setPurchaseState,\n            type,\n        } = this.props;\n\n        const purchase_button = (\n            <PurchaseButton\n                buy_info={buy_info}\n                currency={currency}\n                info={info}\n                index={index}\n                is_contract_mode={is_contract_mode}\n                is_disabled={is_disabled}\n                is_high_low={is_high_low}\n                is_loading={is_loading}\n                is_proposal_empty={is_proposal_empty}\n                purchased_states_arr={purchased_states_arr}\n                onClickPurchase={onClickPurchase}\n                setPurchaseState={setPurchaseState}\n                should_fade={this.state.should_fade}\n                type={type}\n            />\n        );\n\n        return (\n            <Fieldset\n                className='trade-container__fieldset purchase-container__option'\n            >\n                {/* {(is_purchase_locked && index === 0) && */}\n                {/* <PurchaseLock onClick={togglePurchaseLock} /> */}\n                {/* } */}\n                <React.Fragment>\n                    <ContractInfo\n                        basis={basis}\n                        currency={currency}\n                        proposal_info={info}\n                        has_increased={info.has_increased}\n                        is_loading={is_loading}\n                        should_fade={this.state.should_fade}\n                        is_visible={!is_contract_mode}\n                    />\n                    <div\n                        className={classNames(\n                            'btn-purchase__shadow-wrapper', {\n                                'btn-purchase__shadow-wrapper--disabled': (is_proposal_error || is_disabled),\n                            },\n                        )}\n                        onMouseEnter={() => {\n                            if (!is_disabled) {\n                                onHoverPurchase(true, type);\n                            }\n                        }}\n                        onMouseLeave={() => {\n                            if (!is_disabled) {\n                                onHoverPurchase(false);\n                            }\n                        }}\n                    >\n                        <div className='btn-purchase__box-shadow' />\n                        {(is_proposal_error) ?\n                            <Popover\n                                alignment='left'\n                                classNameBubble='purchase-container__popover-bubble'\n                                message={info.message}\n                            >\n                                { purchase_button }\n                            </Popover>\n                            :\n                            purchase_button\n                        }\n                        {\n                            // is_purchase_confirm_on ?\n                            //     <PopConfirm\n                            //         alignment='left'\n                            //         cancel_text={localize('Cancel')}\n                            //         confirm_text={localize('Purchase')}\n                            //         message={localize('Are you sure you want to purchase this contract?')}\n                            //     >\n                            //         {purchase_button}\n                            //     </PopConfirm>\n                            //     :\n                            //     purchase_button\n                        }\n                    </div>\n                </React.Fragment>\n            </Fieldset>\n        );\n    }\n}\n\nPurchaseFieldset.propTypes = {\n    basis               : PropTypes.string,\n    buy_info            : PropTypes.object,\n    currency            : PropTypes.string,\n    index               : PropTypes.number,\n    info                : PropTypes.object,\n    is_contract_mode    : PropTypes.bool,\n    is_disabled         : PropTypes.bool,\n    is_high_low         : PropTypes.bool,\n    is_loading          : PropTypes.bool,\n    is_proposal_empty   : PropTypes.bool,\n    is_proposal_error   : PropTypes.bool,\n    onClickPurchase     : PropTypes.func,\n    // is_purchase_confirm_on: PropTypes.bool,\n    // is_purchase_locked    : PropTypes.bool,\n    onHoverPurchase     : PropTypes.func,\n    purchased_states_arr: PropTypes.array,\n    // togglePurchaseLock    : PropTypes.func,\n    setPurchaseState    : PropTypes.func,\n    type                : PropTypes.string,\n};\n\nexport default PurchaseFieldset;\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport { isEmptyObject }           from '_common/utility';\nimport PurchaseFieldset            from 'Modules/Trading/Components/Elements/purchase-fieldset.jsx';\nimport { getContractTypePosition } from 'Constants/contract';\nimport { connect }                 from 'Stores/connect';\n\nconst Purchase = ({\n    basis,\n    contract_type,\n    currency,\n    is_contract_mode,\n    is_client_allowed_to_visit,\n    // is_purchase_confirm_on,\n    purchased_states_arr,\n    // is_purchase_locked,\n    is_trade_enabled,\n    onClickPurchase,\n    onHoverPurchase,\n    // togglePurchaseLock,\n    purchase_info,\n    proposal_info,\n    setPurchaseState,\n    trade_types,\n    validation_errors,\n}) => {\n    const is_high_low = /high_low/.test(contract_type.toLowerCase());\n    const isLoading = info => {\n        const has_validation_error = Object.values(validation_errors).some(e => e.length);\n        return !has_validation_error && !info.has_error && !info.id;\n    };\n    const is_proposal_empty = isEmptyObject(proposal_info);\n\n    const components = [];\n    Object.keys(trade_types).map((type, index) => {\n        const getSortedIndex = () => {\n            if (getContractTypePosition(type) === 'top') return 0;\n            if (getContractTypePosition(type) === 'bottom') return 1;\n            return index;\n        };\n        const info              = proposal_info[type] || {};\n        const is_disabled       = is_contract_mode\n            || !is_trade_enabled || !info.id || !is_client_allowed_to_visit;\n        const is_proposal_error = info.has_error && !info.has_error_details;\n        const purchase_fieldset = (\n            <PurchaseFieldset\n                basis={basis}\n                buy_info={purchase_info}\n                currency={currency}\n                info={info}\n                key={index}\n                index={getSortedIndex()}\n                is_contract_mode={is_contract_mode}\n                is_disabled={is_disabled}\n                is_high_low={is_high_low}\n                is_loading={isLoading(info)}\n                // is_purchase_confirm_on={is_purchase_confirm_on}\n                is_proposal_empty={is_proposal_empty}\n                is_proposal_error={is_proposal_error}\n                purchased_states_arr={purchased_states_arr}\n                // is_purchase_locked={is_purchase_locked}\n                // togglePurchaseLock={togglePurchaseLock}\n                onHoverPurchase={onHoverPurchase}\n                onClickPurchase={onClickPurchase}\n                setPurchaseState={setPurchaseState}\n                type={type}\n            />\n        );\n\n        switch (getContractTypePosition(type)) {\n            case 'top':\n                components.unshift(purchase_fieldset);\n                break;\n            case 'bottom':\n                components.push(purchase_fieldset);\n                break;\n            default:\n                components.push(purchase_fieldset);\n                break;\n        }\n    });\n\n    return components;\n};\n\nPurchase.propTypes = {\n    basis                     : PropTypes.string,\n    currency                  : PropTypes.string,\n    is_client_allowed_to_visit: PropTypes.bool,\n    is_contract_mode          : PropTypes.bool,\n    // is_purchase_confirm_on    : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    is_trade_enabled          : PropTypes.bool,\n    onClickPurchase           : PropTypes.func,\n    onHoverPurchase           : PropTypes.func,\n    proposal_info             : PropTypes.object,\n    purchase_info             : PropTypes.object,\n    purchased_states_arr      : PropTypes.array,\n    setPurchaseState          : PropTypes.func,\n    // togglePurchaseLock        : PropTypes.func,\n    trade_types               : PropTypes.object,\n    validation_errors         : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, modules, ui }) => ({\n        currency                  : client.currency,\n        is_client_allowed_to_visit: client.is_client_allowed_to_visit,\n        is_contract_mode          : modules.smart_chart.is_contract_mode,\n        basis                     : modules.trade.basis,\n        contract_type             : modules.trade.contract_type,\n        is_trade_enabled          : modules.trade.is_trade_enabled,\n        onClickPurchase           : modules.trade.onPurchase,\n        onHoverPurchase           : modules.trade.onHoverPurchase,\n        proposal_info             : modules.trade.proposal_info,\n        purchase_info             : modules.trade.purchase_info,\n        trade_types               : modules.trade.trade_types,\n        validation_errors         : modules.trade.validation_errors,\n        purchased_states_arr      : ui.purchase_states,\n        setPurchaseState          : ui.setPurchaseState,\n        // is_purchase_confirm_on    : ui.is_purchase_confirm_on,\n        // is_purchase_locked        : ui.is_purchase_lock_on,\n        // togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(Purchase);\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CloseButton = ({ onClick, className }) => (\n    <button\n        className={className}\n        type='button'\n        onClick={onClick}\n    />\n);\n\nCloseButton.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func.isRequired,\n};\n\nexport default CloseButton;\n","export const default_delay = 3000;\n\nexport const max_display_notifications = 3;\n\nexport const types = {\n    danger       : 'notification--danger',\n    info         : 'notification--info',\n    success      : 'notification--success',\n    warning      : 'notification--warning',\n    contract_sold: 'notification--info',\n};\n\nexport const sortNotifications = (() => {\n    const notification_order = {\n        contract_sold: 1,\n        danger       : 2,\n        warning      : 3,\n        info         : 4,\n        success      : 5,\n    };\n\n    return (a, b) => notification_order[a.type] - notification_order[b.type];\n})();\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport classNames  from 'classnames';\nimport Icon        from 'Assets/icon.jsx';\nimport CloseButton from './close-button.jsx';\nimport {\n    default_delay,\n    types }        from './constants';\n\nconst Notification = ({\n    data,\n    removeNotification,\n}) => {\n    const destroy = (is_closed_by_user) => {\n        removeNotification(data);\n\n        if (data.closeOnClick) {\n            data.closeOnClick(data, is_closed_by_user);\n        }\n    };\n\n    const onClick = () => destroy(true);\n\n    if (data.is_auto_close) {\n        setTimeout(destroy, data.delay || default_delay);\n    }\n\n    return (\n        <div className={\n            classNames('notification', types[data.type], {\n                'notification--small': (data.size === 'small'),\n            })}\n        >\n            <div className='notification__icon'>\n                { data.type === 'danger'  && <Icon icon='IconDanger' className='notification__icon-type' /> }\n                { (data.type === 'info' || data.type === 'contract_sold')\n                    && <Icon icon='IconInformation' className='notification__icon-type' /> }\n                { data.type === 'success' && <Icon icon='IconSuccess' className='notification__icon-type' /> }\n                { data.type === 'warning' && <Icon icon='IconWarning' className='notification__icon-type' /> }\n            </div>\n            <div className='notification__text-container'>\n                <h4 className='notification__header'>{data.header}</h4>\n                <p className='notification__text-body'> {data.message}</p>\n            </div>\n            { data.should_hide_close_btn ? undefined : <CloseButton onClick={onClick} className='notification__close-button' />}\n        </div>\n    );\n};\n\nNotification.propTypes = {\n    data: PropTypes.shape({\n        closeOnClick         : PropTypes.func,\n        delay                : PropTypes.number,\n        header               : PropTypes.string,\n        is_auto_close        : PropTypes.bool,\n        message              : PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n        should_hide_close_btn: PropTypes.bool,\n        size                 : PropTypes.oneOf(['small']),\n        type                 : PropTypes.oneOf(['warning', 'info', 'success', 'danger', 'contract_sold']).isRequired,\n    }),\n    removeNotification: PropTypes.func,\n};\n\nexport default Notification;\n","import moment       from 'moment';\nimport { localize } from 'App/i18n';\n\nexport const addCommaToNumber = (num, decimal_places) => {\n    if (!num || isNaN(num)) {\n        return num;\n    }\n    const n = String(decimal_places ? (+num).toFixed(decimal_places) : num);\n    const p = n.indexOf('.');\n    return n.replace(\n        /\\d(?=(?:\\d{3})+(?:\\.|$))/g,\n        (m, i) => p <= 0 || i < p ? `${m},` : m\n    );\n};\n\nexport const getTimePercentage = (server_time, start_time, expiry_time) => {\n    const duration_from_purchase = moment.duration(moment.unix(expiry_time).diff(moment.unix(start_time)));\n    const duration_from_now = moment.duration(moment.unix(expiry_time).diff(server_time));\n    let percentage = (duration_from_now.asMilliseconds() / duration_from_purchase.asMilliseconds()) * 100;\n\n    if (percentage < 0.5) {\n        percentage = 0;\n    } else if (percentage > 100) {\n        percentage = 100;\n    }\n\n    return Math.round(percentage);\n};\n\nexport const getBarrierLabel = (contract_info) => {\n    if (isDigitType(contract_info.contract_type)) {\n        return localize('Target');\n    }\n    return localize('Barrier');\n};\n\nexport const getBarrierValue = (contract_info) => {\n    if (isDigitType(contract_info.contract_type)) {\n        return digitTypeMap(contract_info)[contract_info.contract_type];\n    }\n    return addCommaToNumber(contract_info.barrier);\n};\n\nexport const isDigitType = (contract_type) => (/digit/.test(contract_type.toLowerCase()));\n\nconst digitTypeMap = (contract_info) => ({\n    DIGITDIFF : localize('Not {{barrier}}', { barrier: contract_info.barrier }),\n    DIGITEVEN : localize('Even'),\n    DIGITMATCH: localize('Equals {{barrier}}', { barrier: contract_info.barrier }),\n    DIGITODD  : localize('Odd'),\n    DIGITOVER : localize('Over {{barrier}}', { barrier: contract_info.barrier }),\n    DIGITUNDER: localize('Under {{barrier}}', { barrier: contract_info.barrier }),\n});\n","export * from './positions-helper';\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport PageError     from 'Modules/PageError';\nimport { routes }    from 'Constants/index';\nimport Localize      from '../localize.jsx';\n\nconst ErrorComponent = ({\n    header,\n    message,\n    redirect_label,\n    redirectOnClick,\n    should_show_refresh = true,\n}) => {\n    const refresh_message = should_show_refresh ? <Localize i18n_default_text='Please refresh this page to continue.' /> : '';\n\n    return (\n        <PageError\n            header={header || <Localize i18n_default_text='Oops, something went wrong.' />}\n            messages={\n                message\n                    ? [\n                        message,\n                        refresh_message,\n                    ]\n                    : [\n                        <Localize key={0} i18n_default_text='Sorry, an error occured while processing your request.' />,\n                        refresh_message,\n                    ]}\n            redirect_url={routes.trade}\n            redirect_label={redirect_label || <Localize i18n_default_text='Refresh' />}\n            buttonOnClick={redirectOnClick || (() => location.reload())}\n        />\n    );\n};\n\nErrorComponent.propTypes = {\n    message: PropTypes.oneOfType([\n        PropTypes.node,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    type: PropTypes.string,\n};\n\nexport default ErrorComponent;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport ReactDOM          from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport Icon              from 'Assets/icon.jsx';\nimport VerticalTab       from 'App/Components/Elements/VerticalTabs';\n\nclass ModalElement extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.el = document.createElement('div');\n        this.state = {\n            modal_root: document.getElementById('modal_root'),\n        };\n    }\n\n    componentDidMount = () => {\n        document.addEventListener('mousedown', this.handleClickOutside);\n        this.el.classList.add('modal');\n        this.props.showFullBlur();\n        this.state.modal_root.appendChild(this.el);\n    };\n\n    componentWillUnmount = () => {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n        this.state.modal_root.removeChild(this.el);\n        this.props.hideFullBlur();\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.props.is_open) {\n            this.props.hideFullBlur();\n            this.props.toggleModal();\n        }\n    };\n\n    render() {\n        return ReactDOM.createPortal(\n            <div ref={this.setWrapperRef} className={classNames('modal__container', this.props.className && `modal__${this.props.className}`)}>\n                <div className='modal-header'>\n                    <h3 className='modal-header__sidebar'>{this.props.title}</h3>\n                    <div className='modal-header__main'>\n                        { this.props.header &&\n                            <div className='modal-header__section'>\n                                {this.props.header}\n                            </div>\n                        }\n                        <div className='modal-header__close' onClick={this.props.toggleModal}>\n                            <Icon icon='ModalIconClose' />\n                        </div>\n                    </div>\n                </div>\n                <VerticalTab\n                    alignment='center'\n                    classNameHeader='modal__tab-header'\n                    list={this.props.modal_content}\n                    selected_index={this.props.selected_index}\n                />\n            </div>,\n            this.el\n        );\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n}\n\nModalElement.propTypes = {\n    className     : PropTypes.string,\n    header        : PropTypes.node,\n    hideFullBlur  : PropTypes.func,\n    is_open       : PropTypes.bool,\n    modal_content : PropTypes.array,\n    selected_index: PropTypes.number,\n    showFullBlur  : PropTypes.func,\n    title         : PropTypes.string,\n    toggleModal   : PropTypes.func,\n};\n\nconst Modal = ({\n    className,\n    header,\n    hideFullBlur,\n    is_open,\n    modal_content,\n    selected_index,\n    showFullBlur,\n    title,\n    toggleModal,\n}) => (\n    <CSSTransition\n        appear\n        in={is_open}\n        timeout={250}\n        classNames={{\n            appear   : 'modal__container--enter',\n            enter    : 'modal__container--enter',\n            enterDone: 'modal__container--enter-done',\n            exit     : 'modal__container--exit',\n        }}\n        unmountOnExit\n    >\n        <ModalElement\n            className={className}\n            header={header}\n            hideFullBlur={hideFullBlur}\n            is_open={is_open}\n            modal_content={modal_content}\n            selected_index={selected_index}\n            showFullBlur={showFullBlur}\n            title={title}\n            toggleModal={toggleModal}\n        />\n    </CSSTransition>\n);\n\nModal.propTypes = {\n    className     : PropTypes.string,\n    header        : PropTypes.node,\n    hideFullBlur  : PropTypes.func,\n    is_open       : PropTypes.bool,\n    modal_content : PropTypes.array,\n    selected_index: PropTypes.number,\n    showFullBlur  : PropTypes.func,\n    title         : PropTypes.string,\n    toggleModal   : PropTypes.func,\n};\n\nexport {\n    Modal,\n    ModalElement,\n};\n","import { get, getAll, urlFor } from '_common/language';\n\nexport const currentLanguage = get();\n\nexport const getAllowedLanguages = () => {\n    const exclude_languages = [\n        'ACH',\n    ];\n    // TODO Change language_list to const when design is ready.\n    let language_list = Object.keys(getAll())\n        .filter(key => !(exclude_languages.includes(key)))\n        .reduce((obj, key) => {\n            obj[key] = getAll()[key];\n            return obj;\n        }, {});\n\n    // TODO Remove this one line below when design is ready.\n    language_list = { EN: 'English' };\n    return language_list;\n};\n\nexport const getURL = lang => urlFor(lang);\n","export * from './language';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CalendarButton = ({\n    children,\n    className,\n    is_hidden,\n    label,\n    onClick,\n}) => (\n    <React.Fragment>\n        { !is_hidden &&\n            <div\n                className={className}\n                onClick={onClick}\n            >\n                {label}\n                {children}\n            </div>\n        }\n    </React.Fragment>\n);\n\nCalendarButton.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    className: PropTypes.string,\n    is_hidden: PropTypes.bool,\n    label    : PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport default CalendarButton;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport Icon              from 'Assets/icon.jsx';\nimport { month_headers } from 'Constants/date-time';\nimport {\n    addMonths,\n    addYears,\n    subMonths,\n    subYears,\n    toMoment }           from 'Utils/Date';\nimport CalendarButton    from './calendar-button.jsx';\nimport {\n    getCentury,\n    getDecade }          from './helper';\n\nconst CalendarHeader = ({\n    calendar_date,\n    calendar_view,\n    disable_month_selector,\n    disable_year_selector,\n    hide_disabled_periods,\n    isPeriodDisabled,\n    navigateTo,\n    switchView,\n}) => {\n    const is_date_view   = calendar_view === 'date';\n    const is_month_view  = calendar_view === 'month';\n    const is_year_view   = calendar_view === 'year';\n    const is_decade_view = calendar_view === 'decade';\n    const moment_date    = toMoment(calendar_date);\n\n    let num_of_years = 1;\n    if (is_year_view)   num_of_years = 10;\n    if (is_decade_view) num_of_years = 100;\n\n    const century = getCentury(moment_date.clone());\n    const decade  = getDecade(moment_date.clone());\n    const end_of_decade = (is_year_view ? decade : century).split('-')[1];\n\n    const is_prev_month_disabled  = isPeriodDisabled(subMonths(moment_date, 1), 'month');\n    const is_prev_year_disabled   = isPeriodDisabled(subYears(moment_date, num_of_years), 'month');\n    const is_next_month_disabled  = isPeriodDisabled(addMonths(moment_date, 1), 'month');\n    const is_next_year_disabled   = isPeriodDisabled(addYears(moment_date, num_of_years), 'month');\n    const is_select_year_disabled = isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year') || disable_year_selector;\n    const should_hide_next_month  = is_next_month_disabled && hide_disabled_periods;\n    const should_hide_prev_month  = is_prev_month_disabled && hide_disabled_periods;\n    const should_hide_prev_year   = is_prev_year_disabled && hide_disabled_periods;\n    const should_hide_next_year   = is_next_year_disabled && hide_disabled_periods;\n\n    const onClickPrevYear = !(is_prev_year_disabled || should_hide_prev_year) ?\n        () => navigateTo(subYears(calendar_date, num_of_years)) :\n        undefined;\n\n    const onClickNextYear = !(is_next_year_disabled || should_hide_next_year) ?\n        () => navigateTo(addYears(calendar_date, num_of_years)) :\n        undefined;\n\n    const onClickPrevMonth = !(is_prev_month_disabled || should_hide_prev_month) ?\n        () => navigateTo(subMonths(calendar_date, 1)) :\n        undefined;\n\n    const onClickNextMonth = !(is_next_month_disabled || should_hide_next_month) ?\n        () => navigateTo(addMonths(calendar_date, 1)) :\n        undefined;\n\n    return (\n        <div className='calendar__header'>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-year', {\n                    'calendar__nav--disabled' : is_prev_year_disabled,\n                    'calendar__nav--is-hidden': should_hide_prev_year,\n                })}\n                onClick={onClickPrevYear}\n            >\n                <Icon icon='IconChevronDoubleLeft' className='calendar__icon' />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-month', {\n                    'calendar__nav--disabled' : is_prev_month_disabled,\n                    'calendar__nav--is-hidden': should_hide_prev_month,\n                })}\n                is_hidden={!is_date_view}\n                onClick={onClickPrevMonth}\n            >\n                <Icon icon='IconChevronLeft' className='calendar__icon' />\n            </CalendarButton>\n\n            <React.Fragment>\n                { is_date_view &&\n                    <CalendarButton\n                        className='calendar__btn calendar__btn--select'\n                        is_hidden={!is_date_view}\n                        label={month_headers[moment_date.format('MMM')]}\n                        onClick={() => disable_month_selector ? undefined : switchView('month')}\n                    />\n                }\n                { (is_date_view || is_month_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        label={moment_date.format('YYYY')}\n                        onClick={() => is_select_year_disabled ? undefined : switchView('year')}\n                    />\n                }\n                { (is_year_view || is_decade_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        onClick={is_select_year_disabled ? undefined : () => switchView('decade')}\n                    >\n                        { is_year_view   && `${decade}`  }\n                        { is_decade_view && `${century}` }\n                    </CalendarButton>\n                }\n            </React.Fragment>\n\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-month', {\n                    'calendar__nav--disabled' : is_next_month_disabled,\n                    'calendar__nav--is-hidden': should_hide_next_month,\n                })}\n                is_hidden={!is_date_view}\n                onClick={onClickNextMonth}\n            >\n                <Icon icon='IconChevronRight' className='calendar__icon' />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-year', {\n                    'calendar__nav--disabled' : is_next_year_disabled,\n                    'calendar__nav--is-hidden': should_hide_next_year,\n                })}\n                onClick={onClickNextYear}\n            >\n                <Icon icon='IconChevronDoubleRight' className='calendar__icon' />\n            </CalendarButton>\n        </div>\n    );\n};\n\nCalendarHeader.propTypes = {\n    calendar_date: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.object,\n        PropTypes.number,\n    ]),\n    calendar_view         : PropTypes.string,\n    disable_month_selector: PropTypes.bool,\n    disable_year_selector : PropTypes.bool,\n    hide_disabled_periods : PropTypes.bool,\n    isPeriodDisabled      : PropTypes.func,\n    navigateTo            : PropTypes.func,\n    switchView            : PropTypes.func,\n};\n\nexport default CalendarHeader;\n","import ContentLoader from 'react-content-loader';\nimport React         from 'react';\nimport PropTypes     from 'prop-types';\n\nconst PositionsCardLoader = ({ is_dark_theme, speed }) => (\n    <ContentLoader\n        height={173}\n        width={218}\n        speed={speed}\n        primaryColor={is_dark_theme ? 'rgba(127, 131, 151, 0.16)' : '#f4f4f6'}\n        secondaryColor={is_dark_theme ? '#303342' : '#eaeaec'}\n    >\n        <rect x='43'  y='19'  rx='0' ry='0' width='56'  height='8' />\n        <rect x='147' y='19'  rx='0' ry='0' width='56'  height='8' />\n        <rect x='12'  y='50'  rx='0' ry='0' width='44'  height='8' />\n        <rect x='13'  y='68'  rx='0' ry='0' width='192' height='8' />\n        <rect x='5'   y='89'  rx='0' ry='0' width='208' height='1' />\n        <rect x='12'  y='104' rx='0' ry='0' width='44'  height='8' />\n        <rect x='12'  y='9'   rx='0' ry='0' width='24'  height='24' />\n        <rect x='116' y='11'  rx='0' ry='0' width='24'  height='24' />\n        <rect x='12'  y='118' rx='0' ry='0' width='88'  height='8' />\n        <rect x='116' y='104' rx='0' ry='0' width='44'  height='8' />\n        <rect x='116' y='118' rx='0' ry='0' width='88'  height='8' />\n        <rect x='12'  y='139' rx='0' ry='0' width='44'  height='8' />\n        <rect x='12'  y='153' rx='0' ry='0' width='88'  height='8' />\n        <rect x='116' y='139' rx='0' ry='0' width='44'  height='8' />\n        <rect x='116' y='153' rx='0' ry='0' width='88'  height='8' />\n    </ContentLoader>\n);\n\nPositionsCardLoader.propTypes = {\n    is_dark_theme: PropTypes.bool,\n    speed        : PropTypes.number,\n};\n\nexport { PositionsCardLoader };\n","export * from './positions-card.jsx';\n","const BinarySocket = require('./socket_base');\nconst localize     = require('../../App/i18n').localize;\n\n/*\n * Monitors the network status and initialises the WebSocket connection\n * 1. online : check the WS status (init/send: blink after timeout, open/message: online)\n * 2. offline: it is offline\n */\nconst NetworkMonitorBase = (() => {\n    const StatusConfig = (() => {\n        let status_config;\n\n        const initStatusConfig = () => ({\n            online  : { class: 'online',  tooltip: localize('Online') },\n            offline : { class: 'offline', tooltip: localize('Offline') },\n            blinking: { class: 'blinker', tooltip: localize('Connecting to server') },\n        });\n\n        return {\n            get: (status) => {\n                if (!status_config) {\n                    status_config = initStatusConfig();\n                }\n                return status_config[status];\n            },\n        };\n    })();\n\n    const pendings = {};\n    const pending_keys = {\n        ws_init   : 'ws_init',\n        ws_request: 'ws_request',\n    };\n    const pending_timeouts = {\n        [pending_keys.ws_init]   : 5000,\n        [pending_keys.ws_request]: 10000,\n    };\n\n    let ws_config,\n        network_status,\n        updateUI;\n\n    const init = (socket_general_functions, fncUpdateUI) => {\n        updateUI  = fncUpdateUI;\n        ws_config = Object.assign({ wsEvent, isOnline }, socket_general_functions);\n\n        if ('onLine' in navigator) {\n            window.addEventListener('online',  setStatus);\n            window.addEventListener('offline', setStatus);\n        } else { // if not supported, default to online and fallback to WS checks\n            navigator.onLine = true;\n        }\n\n        if (isOnline()) {\n            BinarySocket.init(ws_config);\n        }\n\n        setStatus(isOnline() ? 'online' : 'offline');\n    };\n\n    const isOnline = () => navigator.onLine;\n\n    const wsReconnect = () => {\n        if (isOnline() && BinarySocket.hasReadyState(2, 3)) { // CLOSING or CLOSED\n            BinarySocket.init(ws_config);\n        } else {\n            BinarySocket.send({ ping: 1 }); // trigger a request to get stable status sooner\n        }\n    };\n\n    const setStatus = (status) => {\n        if (!isOnline()) {\n            network_status = 'offline';\n        } else if (pending_keys[status] || network_status === 'offline') {\n            network_status = 'blinking';\n            wsReconnect();\n        } else {\n            network_status = 'online';\n        }\n\n        if (typeof updateUI === 'function') {\n            updateUI(StatusConfig.get(network_status), isOnline());\n        }\n    };\n\n    const ws_events_map = {\n        init   : () => setPending(pending_keys.ws_init),\n        open   : () => clearPendings(pending_keys.ws_init),\n        send   : () => setPending(pending_keys.ws_request),\n        message: () => clearPendings(),\n        close  : () => setPending(pending_keys.ws_init),\n    };\n\n    const wsEvent = (event) => {\n        if (typeof ws_events_map[event] === 'function') {\n            ws_events_map[event]();\n        }\n    };\n\n    const setPending = (key) => {\n        if (!pendings[key]) {\n            pendings[key] = setTimeout(() => {\n                pendings[key] = undefined;\n                setStatus(key);\n            }, pending_timeouts[key]);\n        }\n    };\n\n    const clearPendings = (key) => {\n        const clear = (k) => {\n            clearTimeout(pendings[k]);\n            pendings[k] = undefined;\n            if (k === pending_keys.ws_request) {\n                setStatus('online');\n            }\n        };\n\n        if (key) {\n            clear(key);\n        } else {\n            Object.keys(pendings).forEach(clear);\n        }\n    };\n\n    return {\n        init,\n        wsEvent,\n    };\n})();\n\nmodule.exports = NetworkMonitorBase;\n","const urlForLanguage             = require('./language').urlFor;\nconst getLanguage                = require('./language').get;\nconst getCurrentProductionDomain = require('../config').getCurrentProductionDomain;\nrequire('url-polyfill');\n\nconst Url = (() => {\n    let location_url,\n        static_host;\n\n    const reset = () => {\n        location_url = window ? window.location : location_url;\n    };\n\n    const params = (href) => {\n        const arr_params = [];\n        const parsed     = ((href ? new URL(href) : location_url).search || '').substr(1).split('&');\n        let p_l          = parsed.length;\n        while (p_l--) {\n            const param = parsed[p_l].split('=');\n            arr_params.push(param);\n        }\n        return arr_params;\n    };\n\n    const paramsHash = (href) => {\n        const param_hash = {};\n        const arr_params = params(href);\n        let param        = arr_params.length;\n        while (param--) {\n            if (arr_params[param][0]) {\n                param_hash[arr_params[param][0]] = arr_params[param][1] || '';\n            }\n        }\n        return param_hash;\n    };\n\n    const normalizePath = path => (path ? path.replace(/(^\\/|\\/$|[^a-zA-Z0-9-_/])/g, '') : '');\n\n    const urlFor = (path, pars, language, should_change_to_legacy = false) => {\n        const lang = (language || getLanguage()).toLowerCase();\n        let domain = `https://${window.location.hostname}/`;\n        if (should_change_to_legacy) {\n            if (/localhost|binary\\.sx/.test(domain)) {\n                domain = `https://binary.com/${lang || 'en'}/`;\n            } else {\n                domain = domain.replace(/deriv\\.app/, `binary.com/${lang || 'en'}`);\n            }\n        }\n        const new_url = `${domain}${(normalizePath(path) || 'home')}.html${(pars ? `?${pars}` : '')}`;\n        // replace old lang with new lang\n        return urlForLanguage(lang, new_url);\n    };\n\n    const default_domain = 'binary.com';\n    const host_map = { // the exceptions regarding updating the URLs\n        'bot.binary.com'       : 'www.binary.bot',\n        'developers.binary.com': 'developers.binary.com', // same, shouldn't change\n        'academy.binary.com'   : 'academy.binary.com',\n        'tech.binary.com'      : 'tech.binary.com',\n        'blog.binary.com'      : 'blog.binary.com',\n    };\n\n    const urlForCurrentDomain = (href) => {\n        const current_domain = getCurrentProductionDomain();\n\n        if (!current_domain) {\n            return href; // don't change when domain is not supported\n        }\n\n        const url_object = new URL(href);\n        if (Object.keys(host_map).includes(url_object.hostname)) {\n            url_object.hostname = host_map[url_object.hostname];\n        } else if (url_object.hostname.indexOf(default_domain) !== -1) {\n            // to keep all non-Binary links unchanged, we use default domain for all Binary links in the codebase (javascript and templates)\n            url_object.hostname = url_object.hostname.replace(new RegExp(`\\\\.${default_domain}`, 'i'), `.${current_domain}`);\n        } else {\n            return href;\n        }\n\n        return url_object.href;\n    };\n\n    const urlForStatic = (path = '') => {\n        if (!static_host || static_host.length === 0) {\n            static_host = document.querySelector('script[src*=\"vendor.min.js\"]');\n            if (static_host) {\n                static_host = static_host.getAttribute('src');\n            }\n\n            if (static_host && static_host.length > 0) {\n                static_host = static_host.substr(0, static_host.indexOf('/js/') + 1);\n            } else {\n                static_host = Url.websiteUrl();\n            }\n        }\n\n        return static_host + path.replace(/(^\\/)/g, '');\n    };\n\n    const getUrlBase = (path = '') => {\n        const l = window.location;\n\n        if (!/^\\/br_/.test(l.pathname)) return path;\n\n        return `/${l.pathname.split('/')[1]}${/^\\//.test(path) ? path : `/${path}`}`;\n    };\n\n    return {\n        getUrlBase,\n        reset,\n        paramsHash,\n        urlFor,\n        urlForCurrentDomain,\n        urlForStatic,\n\n        param          : name => paramsHash()[name],\n        websiteUrl     : () => `${location.protocol}//${location.hostname}/`,\n        getHostMap     : () => host_map,\n        resetStaticHost: () => { static_host = undefined; },\n    };\n})();\n\nmodule.exports = Url;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Button = ({\n    children,\n    className = '',\n    classNameSpan,\n    has_effect,\n    id,\n    is_disabled,\n    onClick,\n    tabIndex,\n    text,\n    wrapperClassName,\n}) => {\n    const classes = classNames('btn', { effect: has_effect }, className);\n    const button = (\n        <button\n            id={id}\n            className={classes}\n            onClick={onClick || undefined}\n            disabled={is_disabled}\n            tabIndex={tabIndex || '0'}\n        >\n            { text &&\n                <span className={classNames('btn__text', classNameSpan)}>\n                    {text}\n                </span>\n            }\n            {children}\n        </button>\n    );\n    const wrapper = (<div className={wrapperClassName}>{button}</div>);\n\n    return wrapperClassName ? wrapper : button;\n};\n\nButton.propTypes = {\n    children        : PropTypes.node,\n    className       : PropTypes.string,\n    has_effect      : PropTypes.bool,\n    id              : PropTypes.string,\n    is_disabled     : PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n    onClick         : PropTypes.func,\n    text            : PropTypes.string,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default Button;\n","import { str as crc32 }     from 'crc-32';\nimport i18n                 from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport * as messages        from 'Translations/messages.json';\n\nconst i18n_config = {\n    resources: {\n        EN: {\n            translation: {\n                ...messages,\n            },\n        },\n    },\n    react: {\n        hashTransKey(defaultValue) {\n            return crc32(defaultValue);\n        },\n    },\n    lng: window.location.search ?\n        window.location.search.includes('lang=') ?\n            window.location.search\n                .substr(1).split('&')\n                .find(query => query.includes('lang='))\n                .split('=')[1]\n                .toUpperCase()\n            : undefined\n        : undefined,\n    fallbackLng: 'EN',\n};\n\ni18n\n    .use(initReactI18next) // passes i18n down to react-i18next\n    .init(i18n_config);\n\nexport const localize = (string, values) => i18n.t(crc32(string), { defaultValue: string, ...values });\n\nexport default i18n;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport UILoader  from 'App/Components/Elements/ui-loader.jsx';\n\nconst Lazy = ({\n    should_load = true,\n    ctor,\n    has_progress,\n    ...component_props\n}) => {\n    if (!should_load) {\n        return null;\n    }\n    const LazyLoadedComponent = React.lazy(ctor);\n\n    return (\n        <React.Suspense fallback={has_progress ? <UILoader /> : <div />}>\n            <LazyLoadedComponent {...component_props} />\n        </React.Suspense>\n    );\n};\n\n// Lazy Load the component by default.\nLazy.defaultProps = {\n    should_load : true,\n    has_progress: false,\n};\n\nLazy.propTypes = {\n    ctor        : PropTypes.func.isRequired,\n    has_progress: PropTypes.bool,\n    should_load : PropTypes.bool,\n};\n\nexport default Lazy;\n","export *      from './contract';\nexport routes from './routes';\nexport *      from './ui';\n","const moment           = require('moment');\nconst isCryptocurrency = require('./currency_base').isCryptocurrency;\nconst SocketCache      = require('./socket_cache');\nconst localize         = require('../../App/i18n').localize;\nconst LocalStore       = require('../storage').LocalStore;\nconst State            = require('../storage').State;\nconst getPropertyValue = require('../utility').getPropertyValue;\nconst isEmptyObject    = require('../utility').isEmptyObject;\n\nconst ClientBase = (() => {\n    const storage_key = 'client.accounts';\n    let client_object = {};\n    let current_loginid;\n\n    const init = () => {\n        current_loginid = LocalStore.get('active_loginid');\n        client_object   = getAllAccountsObject();\n    };\n\n    const isLoggedIn = () => (\n        !isEmptyObject(getAllAccountsObject()) &&\n        get('loginid') &&\n        get('token')\n    );\n\n    const isValidLoginid = () => {\n        if (!isLoggedIn()) return true;\n        const valid_login_ids = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG)[0-9]+$', 'i');\n        return getAllLoginids().every(loginid => valid_login_ids.test(loginid));\n    };\n\n    /**\n     * Stores the client information in local variable and localStorage\n     *\n     * @param {String} key                 The property name to set\n     * @param {String|Number|Object} value The regarding value\n     * @param {String|null} loginid        The account to set the value for\n     */\n    const set = (key, value, loginid = current_loginid) => {\n        if (key === 'loginid' && value !== current_loginid) {\n            LocalStore.set('active_loginid', value);\n            current_loginid = value;\n        } else {\n            if (!(loginid in client_object)) {\n                client_object[loginid] = {};\n            }\n            client_object[loginid][key] = value;\n            LocalStore.setObject(storage_key, client_object);\n        }\n    };\n\n    /**\n     * Returns the client information\n     *\n     * @param {String|null} key     The property name to return the value from, if missing returns the account object\n     * @param {String|null} loginid The account to return the value from\n     */\n    const get = (key, loginid = current_loginid) => {\n        let value;\n        if (key === 'loginid') {\n            value = loginid || LocalStore.get('active_loginid');\n        } else {\n            const current_client = client_object[loginid] || getAllAccountsObject()[loginid] || client_object;\n\n            value = key ? current_client[key] : current_client;\n        }\n        if (!Array.isArray(value) && (+value === 1 || +value === 0 || value === 'true' || value === 'false')) {\n            value = JSON.parse(value || false);\n        }\n        return value;\n    };\n\n    const getAllAccountsObject = () => LocalStore.getObject(storage_key);\n\n    const getAllLoginids = () => Object.keys(getAllAccountsObject());\n\n    const getAccountType = (loginid = current_loginid) => {\n        let account_type;\n        if (/^VR/.test(loginid))          account_type = 'virtual';\n        else if (/^MF/.test(loginid))     account_type = 'financial';\n        else if (/^MLT|MX/.test(loginid)) account_type = 'gaming';\n        return account_type;\n    };\n\n    const isAccountOfType = (type, loginid = current_loginid, only_enabled = false) => {\n        const this_type   = getAccountType(loginid);\n        return ((\n            (type === 'virtual' && this_type === 'virtual') ||\n            (type === 'real'    && this_type !== 'virtual') ||\n            type === this_type) &&\n            (only_enabled ? !get('is_disabled', loginid) : true));\n    };\n\n    const getAccountOfType = (type, only_enabled) => {\n        const id = getAllLoginids().find(loginid => isAccountOfType(type, loginid, only_enabled));\n        return id ? Object.assign({ loginid: id }, get(null, id)) : {};\n    };\n\n    const hasAccountType = (type, only_enabled) => !isEmptyObject(getAccountOfType(type, only_enabled));\n\n    // only considers currency of real money accounts\n    // @param {String} type = crypto|fiat\n    const hasCurrencyType = (type) => {\n        const loginids = getAllLoginids();\n        if (type === 'crypto') {\n            // find if has crypto currency account\n            return loginids.find(loginid =>\n                !get('is_virtual', loginid) && isCryptocurrency(get('currency', loginid)));\n        }\n        // else find if have fiat currency account\n        return loginids.find(loginid =>\n            !get('is_virtual', loginid) && !isCryptocurrency(get('currency', loginid)));\n    };\n\n    const TypesMapConfig = (() => {\n        let types_map_config;\n\n        const initTypesMap = () => ({\n            default  : localize('Real'),\n            financial: localize('Investment'),\n            gaming   : localize('Gaming'),\n            virtual  : localize('Virtual'),\n        });\n\n        return {\n            get: () => {\n                if (!types_map_config) {\n                    types_map_config = initTypesMap();\n                }\n                return types_map_config;\n            },\n        };\n    })();\n\n    const getAccountTitle = loginid => {\n        const types_map = TypesMapConfig.get();\n        return (types_map[getAccountType(loginid)] || types_map.default);\n    };\n\n    const responseAuthorize = (response) => {\n        const authorize = response.authorize;\n        set('email',      authorize.email);\n        set('currency',   authorize.currency);\n        set('is_virtual', +authorize.is_virtual);\n        set('session_start', parseInt(moment().valueOf() / 1000));\n        set('landing_company_shortcode', authorize.landing_company_name);\n        updateAccountList(authorize.account_list);\n    };\n\n    const updateAccountList = (account_list) => {\n        account_list.forEach((account) => {\n            set('excluded_until', account.excluded_until || '', account.loginid);\n            Object.keys(account).forEach((param) => {\n                const param_to_set = param === 'country' ? 'residence' : param;\n                const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                if (param_to_set !== 'loginid') {\n                    set(param_to_set, value_to_set, account.loginid);\n                }\n            });\n        });\n    };\n\n    const shouldAcceptTnc = () => {\n        if (get('is_virtual')) return false;\n        const website_tnc_version = State.getResponse('website_status.terms_conditions_version');\n        const client_tnc_status   = State.getResponse('get_settings.client_tnc_status');\n        return typeof client_tnc_status !== 'undefined' && client_tnc_status !== website_tnc_version;\n    };\n\n    const clearAllAccounts = () => {\n        current_loginid = undefined;\n        client_object   = {};\n        LocalStore.setObject(storage_key, client_object);\n    };\n\n    const setNewAccount = (options) => {\n        if (!options.email || !options.loginid || !options.token) {\n            return false;\n        }\n\n        SocketCache.clear();\n        localStorage.setItem('GTM_new_account', '1');\n\n        set('token',      options.token,       options.loginid);\n        set('email',      options.email,       options.loginid);\n        set('is_virtual', +options.is_virtual, options.loginid);\n        set('loginid',    options.loginid);\n\n        return true;\n    };\n\n    const currentLandingCompany = () => {\n        const landing_company_response = State.getResponse('landing_company') || {};\n        const this_shortcode           = get('landing_company_shortcode');\n        const landing_company_prop     = Object.keys(landing_company_response).find((key) => (\n            this_shortcode === landing_company_response[key].shortcode\n        ));\n        return landing_company_response[landing_company_prop] || {};\n    };\n\n    const shouldCompleteTax = () => isAccountOfType('financial') &&\n        !/crs_tin_information/.test((State.getResponse('get_account_status') || {}).status);\n\n    // remove manager id or master distinction from group\n    // remove EUR or GBP distinction from group\n    const getMT5AccountType = group => (group ? group.replace('\\\\', '_').replace(/_(\\d+|master|EUR|GBP)/, '') : '');\n\n    const getBasicUpgradeInfo = () => {\n        const upgradeable_landing_companies = State.getResponse('authorize.upgradeable_landing_companies');\n\n        let can_open_multi = false;\n        let type,\n            can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            const current_landing_company = get('landing_company_shortcode');\n\n            can_open_multi = upgradeable_landing_companies.indexOf(current_landing_company) !== -1;\n\n            // only show upgrade message to landing companies other than current\n            const canUpgrade = (...landing_companies) => landing_companies.find(landing_company => (\n                landing_company !== current_landing_company &&\n                upgradeable_landing_companies.indexOf(landing_company) !== -1\n            ));\n\n            can_upgrade_to = canUpgrade('svg', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    };\n\n    const getLandingCompanyValue = (loginid, landing_company, key) => {\n        let landing_company_object;\n        if (loginid.financial || isAccountOfType('financial', loginid)) {\n            landing_company_object = getPropertyValue(landing_company, 'financial_company');\n        } else if (loginid.real || isAccountOfType('real', loginid)) {\n            landing_company_object = getPropertyValue(landing_company, 'gaming_company');\n\n            // handle accounts that don't have gaming company\n            if (!landing_company_object) {\n                landing_company_object = getPropertyValue(landing_company, 'financial_company');\n            }\n        } else {\n            const financial_company = (getPropertyValue(landing_company, 'financial_company') || {})[key] || [];\n            const gaming_company    = (getPropertyValue(landing_company, 'gaming_company') || {})[key] || [];\n            landing_company_object  = financial_company.concat(gaming_company);\n            return landing_company_object;\n        }\n        return (landing_company_object || {})[key];\n    };\n\n    const getRiskAssessment = () => {\n        const status       = State.getResponse('get_account_status.status');\n        const is_high_risk = /high/.test(State.getResponse('get_account_status.risk_classification'));\n\n        return (\n            isAccountOfType('financial') ?\n                /(financial_assessment|trading_experience)_not_complete/.test(status) :\n                (is_high_risk && /financial_assessment_not_complete/.test(status))\n        );\n    };\n\n    // API_V3: send a list of accounts the client can transfer to\n    const canTransferFunds = (account) => {\n        if (account) {\n            // this specific account can be used to transfer funds to\n            return canTransferFundsTo(account.loginid);\n        }\n        // at least one account can be used to transfer funds to\n        return Object.keys(client_object).some(loginid => canTransferFundsTo(loginid));\n    };\n\n    const canTransferFundsTo = (to_loginid) => {\n        if (to_loginid === current_loginid || get('is_virtual', to_loginid) || get('is_virtual') ||\n            get('is_disabled', to_loginid)) {\n            return false;\n        }\n        const from_currency = get('currency');\n        const to_currency   = get('currency', to_loginid);\n        if (!from_currency || !to_currency) {\n            return false;\n        }\n        // only transfer to other accounts that have the same currency as current account if one is maltainvest and one is malta\n        if (from_currency === to_currency) {\n            // these landing companies are allowed to transfer funds to each other if they have the same currency\n            const same_cur_allowed = {\n                maltainvest: 'malta',\n                malta      : 'maltainvest',\n            };\n            const from_landing_company = get('landing_company_shortcode');\n            const to_landing_company   = get('landing_company_shortcode', to_loginid);\n            // if same_cur_allowed[from_landing_company] is undefined and to_landing_company is also undefined, it will return true\n            // so we should compare '' === undefined instead\n            return (same_cur_allowed[from_landing_company] || '') === to_landing_company;\n        }\n        // or for other clients if current account is cryptocurrency it should only transfer to fiat currencies and vice versa\n        const is_from_crypto = isCryptocurrency(from_currency);\n        const is_to_crypto   = isCryptocurrency(to_currency);\n        return (is_from_crypto ? !is_to_crypto : is_to_crypto);\n    };\n\n    const hasSvgAccount = () => !!(getAllLoginids().find(loginid => /^CR/.test(loginid)));\n\n    const canChangeCurrency = (statement, mt5_login_list, is_current = true) => {\n        const currency             = get('currency');\n        const has_no_mt5           = mt5_login_list.length === 0;\n        const has_no_transaction   = (statement.count === 0 && statement.transactions.length === 0);\n        const has_account_criteria = has_no_transaction && has_no_mt5;\n\n        // Current API requirements for currently logged-in user successfully changing their account's currency:\n        // 1. User must not have made any transactions\n        // 2. User must not have any MT5 account\n        // 3. Not be a crypto account\n        // 4. Not be a virtual account\n        return is_current ? currency && !get('is_virtual') && has_account_criteria && !isCryptocurrency(currency) : has_account_criteria;\n    };\n\n    return {\n        init,\n        isLoggedIn,\n        isValidLoginid,\n        set,\n        get,\n        getAllLoginids,\n        getAccountType,\n        isAccountOfType,\n        getAccountOfType,\n        hasAccountType,\n        hasCurrencyType,\n        getAccountTitle,\n        responseAuthorize,\n        shouldAcceptTnc,\n        clearAllAccounts,\n        setNewAccount,\n        currentLandingCompany,\n        shouldCompleteTax,\n        getAllAccountsObject,\n        getMT5AccountType,\n        getBasicUpgradeInfo,\n        getLandingCompanyValue,\n        getRiskAssessment,\n        canTransferFunds,\n        hasSvgAccount,\n        canChangeCurrency,\n    };\n})();\n\nmodule.exports = ClientBase;\n","const routes = {\n    error404        : '/404',\n    account_password: '/settings/account_password',\n    apps            : '/settings/apps',\n    cashier_password: '/settings/cashier_password',\n    contract        : '/contract/:contract_id',\n    exclusion       : '/settings/exclusion',\n    financial       : '/settings/financial',\n    history         : '/settings/history',\n    index           : '/index',\n    limits          : '/settings/limits',\n    personal        : '/settings/personal',\n    positions       : '/reports/positions',\n    profit          : '/reports/profit',\n    reports         : '/reports',\n    root            : '/',\n    redirect        : '/redirect',\n    settings        : '/settings',\n    statement       : '/reports/statement',\n    token           : '/settings/token',\n    trade           : '/',\n};\n\nexport default routes;\n","const moment       = require('moment');\nconst BinarySocket = require('./socket_base');\nconst PromiseClass = require('../utility').PromiseClass;\n\nconst ServerTime = (() => {\n    let clock_started = false;\n    const pending = new PromiseClass();\n    let server_time,\n        performance_request_time,\n        get_time_interval,\n        update_time_interval,\n        onTimeUpdated;\n\n    const init = (fncTimeUpdated) => {\n        if (!clock_started) {\n            onTimeUpdated = fncTimeUpdated;\n            requestTime();\n            clearInterval(get_time_interval);\n            get_time_interval = setInterval(requestTime, 30000);\n            clock_started = true;\n        }\n    };\n\n    const requestTime = () => {\n        performance_request_time = performance.now();\n        BinarySocket.send({ time: 1 }).then(timeCounter);\n    };\n\n    const timeCounter = (response) => {\n        if (response.error) return;\n\n        if (!clock_started) {\n            init();\n            return;\n        }\n\n        clearInterval(update_time_interval);\n\n        const start_timestamp = response.time;\n        const performance_response_time = performance.now();\n        const time_taken = performance_response_time - performance_request_time;\n        const server_time_at_response = ((start_timestamp * 1000) + time_taken);\n\n        const updateTime = () => {\n            const time_since_response = performance.now() - performance_response_time;\n            server_time = moment(server_time_at_response + time_since_response).utc();\n\n            if (typeof onTimeUpdated === 'function') {\n                onTimeUpdated();\n            }\n        };\n        updateTime();\n        pending.resolve();\n        update_time_interval = setInterval(updateTime, 1000);\n    };\n\n    const get = () => server_time ? server_time.clone() : undefined;\n\n    return {\n        init,\n        get,\n        timePromise: pending.promise,\n    };\n})();\n\nmodule.exports = ServerTime;\n","import moment       from 'moment';\nimport { localize } from 'App/i18n';\nimport ServerTime   from '_common/base/server_time';\n\n// Disables moment's fallback to native Date object\n// moment will return `Invalid Date` if date cannot be parsed\nmoment.createFromInputFallback = function (config) {\n    config._d = new Date(NaN); // eslint-disable-line no-underscore-dangle\n};\n\n/**\n * Convert epoch to moment object\n * @param  {Number} epoch\n * @return {moment} the moment object of provided epoch\n */\nexport const epochToMoment = epoch => moment.unix(epoch).utc();\n\n/**\n * Convert date string or epoch to moment object\n * @param  {Number} value   the date in epoch format\n * @param  {String} value   the date in string format\n * @return {moment} the moment object of 'now' or the provided date epoch or string\n */\nexport const toMoment = value => {\n    if (!value) return ServerTime.get() || moment().utc(); // returns 'now' moment object\n    if (value instanceof moment && value.isValid() && value.isUTC()) return value; // returns if already a moment object\n    if (typeof value === 'number') return epochToMoment(value); // returns epochToMoment() if not a date\n\n    if (/invalid/i.test(moment(value))) {\n        const today_moment = moment();\n        return value > today_moment.utc().daysInMonth() ? moment.utc(today_moment.add(value, 'd'), 'DD MMM YYYY') : moment.utc(value, 'DD MMM YYYY'); // returns target date\n    }\n    return moment.utc(value);\n};\n\n/**\n * Set specified time on moment object\n * @param  {moment} moment_obj  the moment to set the time on\n * @param  {String} time        24 hours format, may or may not include seconds\n * @return {moment} a new moment object of result\n */\nexport const setTime = (moment_obj, time) => {\n    const [hour, minute, second] = time ? time.split(':') : [0, 0, 0];\n    moment_obj.hour(hour).minute(minute || 0).second(second || 0);\n    return moment_obj;\n};\n\n/**\n * return the unix value of provided epoch and time\n * @param  {Number} epoch  the date to update with provided time\n * @param  {String} time   the time to set on the date\n * @return {Number} unix value of the result\n */\nexport const convertToUnix = (epoch, time) => setTime(toMoment(epoch), time).unix();\n\nexport const toGMTFormat = (time) => moment(time || undefined).utc().format('YYYY-MM-DD HH:mm:ss [GMT]');\n\nexport const formatDate = (date, date_format = 'YYYY-MM-DD') => toMoment(date).format(date_format);\n\n/**\n * return the number of days from today to date specified\n * @param  {String} date   the date to calculate number of days from today\n * @return {Number} an integer of the number of days\n */\nexport const daysFromTodayTo = (date) => {\n    const diff = toMoment(date).startOf('day').diff(toMoment().startOf('day'), 'days');\n    return (!date || diff < 0) ? '' : diff;\n};\n\n/**\n * return the number of months between two specified dates\n */\nexport const diffInMonths = (now, then) => then.diff(now, 'month');\n/**\n * return moment duration between two dates\n * @param  {Number} epoch start time\n * @param  {Number} epoch end time\n * @return {moment.duration} moment duration between start time and end time\n */\nexport const getDiffDuration = (start_time, end_time) =>\n    moment.duration(moment.unix(end_time).diff(moment.unix(start_time)));\n\n/**\n * return formatted duration `2 days 01:23:59`\n * @param  {moment.duration} moment duration object\n * @return {String} formatted display string\n */\nexport const formatDuration = (duration) => {\n    const d = Math.floor(duration.asDays()); // duration.days() does not include months/years\n    const h = duration.hours();\n    const m = duration.minutes();\n    const s = duration.seconds();\n    let formatted_str = moment(0).hour(h).minute(m).seconds(s).format('HH:mm:ss');\n    if (d > 0) {\n        formatted_str = `${d} ${d > 1 ? localize('days') : localize('day')} ${formatted_str}`;\n    }\n    return formatted_str;\n};\n\n/**\n * return true if the time_str is in \"HH:MM\" format, else return false\n * @param {String} time_str time\n */\nexport const isTimeValid = time_str => /^([0-9]|[0-1][0-9]|2[0-3]):([0-9]|[0-5][0-9])(:([0-9]|[0-5][0-9]))?$/.test(time_str);\n\n/**\n * return true if the time_str's hour is between 0 and 23, else return false\n * @param {String} time_str time\n */\nexport const isHourValid = time_str => isTimeValid(time_str) && /^([01][0-9]|2[0-3])$/.test(time_str.split(':')[0]);\n\n/**\n * return true if the time_str's minute is between 0 and 59, else return false\n * @param {String} time_str time\n */\nexport const isMinuteValid = time_str => isTimeValid(time_str) && /^[0-5][0-9]$/.test(time_str.split(':')[1]);\n\n/**\n * return true if the date is typeof string and a valid moment date, else return false\n * @param {String|moment} date date\n */\nexport const isDateValid = date => moment(date, 'DD MMM YYYY').isValid();\n\n/**\n * add the specified number of days to the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to add\n */\nexport const addDays = (date, num_of_days) => toMoment(date).clone().add(num_of_days, 'day');\n\n/**\n * add the specified number of months to the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to add\n */\nexport const addMonths = (date, num_of_months) => toMoment(date).clone().add(num_of_months, 'month');\n\n/**\n * add the specified number of years to the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to add\n */\nexport const addYears = (date, num_of_years) => toMoment(date).clone().add(num_of_years, 'year');\n\n/**\n * subtract the specified number of days from the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to subtract\n */\nexport const subDays = (date, num_of_days) => toMoment(date).clone().subtract(num_of_days, 'day');\n\n/**\n * subtract the specified number of months from the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to subtract\n */\nexport const subMonths = (date, num_of_months) => toMoment(date).clone().subtract(num_of_months, 'month');\n\n/**\n * subtract the specified number of years from the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to subtract\n */\nexport const subYears = (date, num_of_years) => toMoment(date).clone().subtract(num_of_years, 'year');\n\n/**\n * returns the minimum moment between the two passing parameters\n * @param {moment|string|epoch} first datetime parameter\n * @param {moment|string|epoch} second datetime parameter\n */\nexport const minDate = (date_1, date_2) => moment.min(toMoment(date_1), toMoment(date_2));\n\n/**\n * returns a new date\n * @param {moment|string|epoch} date date\n */\nexport const getStartOfMonth = (date) => toMoment(date).clone().startOf('month').format('YYYY-MM-DD');\n\n/**\n * returns miliseconds into UTC formatted string\n * @param {Number} miliseconds miliseconds\n * @param {String} str_format formatting using moment e.g - YYYY-MM-DD HH:mm\n */\nexport const formatMiliseconds = (miliseconds, str_format) => moment.utc(miliseconds).format(str_format);\n","export * from './date-time';\n","import { localize } from 'App/i18n';\nimport { toMoment } from 'Utils/Date';\n\nconst getDurationMaps = () => ({\n    t: { display: localize('ticks'),   order: 1 },\n    s: { display: localize('seconds'), order: 2, to_second: 1 },\n    m: { display: localize('minutes'), order: 3, to_second: 60 },\n    h: { display: localize('hours'),   order: 4, to_second: 60 * 60 },\n    d: { display: localize('days'),    order: 5, to_second: 60 * 60 * 24 },\n});\n\nexport const buildDurationConfig = (contract, durations = { min_max: {}, units_display: {} }) => {\n    durations.min_max[contract.start_type]       = durations.min_max[contract.start_type] || {};\n    durations.units_display[contract.start_type] = durations.units_display[contract.start_type] || [];\n\n    const obj_min = getDurationFromString(contract.min_contract_duration);\n    const obj_max = getDurationFromString(contract.max_contract_duration);\n\n    durations.min_max[contract.start_type][contract.expiry_type] = {\n        min: convertDurationUnit(obj_min.duration, obj_min.unit, 's'),\n        max: convertDurationUnit(obj_max.duration, obj_max.unit, 's'),\n    };\n\n    const arr_units = [];\n    durations.units_display[contract.start_type].forEach(obj => {\n        arr_units.push(obj.value);\n    });\n\n    const duration_maps = getDurationMaps();\n\n    if (/^tick|daily$/.test(contract.expiry_type)) {\n        if (arr_units.indexOf(obj_min.unit) === -1) {\n            arr_units.push(obj_min.unit);\n        }\n    } else {\n        Object.keys(duration_maps).forEach(u => {\n            if (\n                u !== 'd' && // when the expiray_type is intraday, the supported units are seconds, minutes and hours.\n                arr_units.indexOf(u) === -1 &&\n                duration_maps[u].order >= duration_maps[obj_min.unit].order &&\n                duration_maps[u].order <= duration_maps[obj_max.unit].order) {\n                arr_units.push(u);\n            }\n        });\n    }\n\n    durations.units_display[contract.start_type] = arr_units\n        .sort((a, b) => (duration_maps[a].order > duration_maps[b].order ? 1 : -1))\n        .reduce((o, c) => (\n            [...o, { text: duration_maps[c].display, value: c }]\n        ), []);\n\n    return durations;\n};\n\nexport const convertDurationUnit = (value, from_unit, to_unit) => {\n    if (!value || !from_unit || !to_unit || isNaN(parseInt(value))) {\n        return null;\n    }\n\n    const duration_maps = getDurationMaps();\n\n    if (from_unit === to_unit || !('to_second' in duration_maps[from_unit])) {\n        return value;\n    }\n\n    return (value * duration_maps[from_unit].to_second) / duration_maps[to_unit].to_second;\n};\n\nconst getDurationFromString = (duration_string) => {\n    const duration = duration_string.toString().match(/[a-zA-Z]+|[0-9]+/g);\n    return {\n        duration: +duration[0], // converts string to numbers\n        unit    : duration[1],\n    };\n};\n\nexport const getExpiryType = (store) => {\n    const { duration_unit, expiry_date, expiry_type, duration_units_list } = store;\n    const server_time = store.root_store.common.server_time;\n\n    const duration_is_day       = expiry_type === 'duration' && duration_unit === 'd';\n    const expiry_is_after_today = expiry_type === 'endtime' && (toMoment(expiry_date).isAfter(toMoment(server_time), 'day') ||\n        !hasIntradayDurationUnit(duration_units_list));\n\n    let contract_expiry_type = 'daily';\n    if (!duration_is_day && !expiry_is_after_today) {\n        contract_expiry_type = duration_unit === 't' ? 'tick' : 'intraday';\n    }\n\n    return contract_expiry_type;\n};\n\nexport const convertDurationLimit = (value, unit) => {\n    if (!(value >= 0) || !unit || !Number.isInteger(value)) {\n        return null;\n    }\n\n    if (unit === 'm') {\n        const minute = value / 60;\n        return minute >= 1 ? Math.floor(minute) : 1;\n    } else if (unit === 'h') {\n        const hour = value / (60 * 60);\n        return hour >= 1 ? Math.floor(hour) : 1;\n    } else if (unit === 'd') {\n        const day = value / (60 * 60 * 24);\n        return day >= 1 ? Math.floor(day) : 1;\n    }\n\n    return value;\n};\n\nexport const hasIntradayDurationUnit = (duration_units_list) => (\n    duration_units_list.some(unit => ['m', 'h'].indexOf(unit.value) !== -1)\n);\n\n/**\n * On switching symbols, end_time value of volatility indices should be set to today\n *\n * @param {String} symbol\n * @param {String} expiry_type\n * @returns {*}\n */\nexport const resetEndTimeOnVolatilityIndices = (symbol, expiry_type) => (\n    (/^R_/.test(symbol) && expiry_type === 'endtime') ? toMoment(null).format('DD MMM YYYY') : null\n);\n","const Cookies       = require('js-cookie');\nconst CookieStorage = require('./storage').CookieStorage;\n\nconst Language = (() => {\n    const all_languages = {\n        ACH  : 'Translations',\n        EN   : 'English',\n        DE   : 'Deutsch',\n        ES   : 'Español',\n        FR   : 'Français',\n        ID   : 'Indonesia',\n        IT   : 'Italiano',\n        PL   : 'Polish',\n        PT   : 'Português',\n        RU   : 'Русский',\n        TH   : 'Thai',\n        VI   : 'Tiếng Việt',\n        ZH_CN: '简体中文',\n        ZH_TW: '繁體中文',\n    };\n    const default_language = 'EN';\n\n    const setCookieLanguage = (lang) => {\n        if (!Cookies.get('language') || lang) {\n            const cookie = new CookieStorage('language');\n            cookie.write((lang || getLanguage()).toUpperCase());\n        }\n    };\n\n    let url_lang = null;\n\n    const lang_regex = new RegExp(`^(${Object.keys(all_languages).join('|')})$`, 'i');\n\n    const languageFromUrl = (custom_url) => {\n        if (url_lang && !custom_url) return url_lang;\n        const url_params = (custom_url || window.location.href).split('/').slice(3);\n        const language   = (url_params.find(lang => lang_regex.test(lang)) || '');\n        if (!custom_url) {\n            url_lang = language;\n        }\n        return language;\n    };\n\n    let current_lang = null;\n\n    const getLanguage = () => {\n        if (/ach/i.test(current_lang) || /ach/i.test(languageFromUrl())) {\n            const crowdin_lang_key = 'jipt_language_code_binary-static';\n            const crowdin_lang     = localStorage.getItem(crowdin_lang_key) || Cookies.get(crowdin_lang_key); // selected language for in-context translation\n            if (crowdin_lang) {\n                current_lang = crowdin_lang.toUpperCase().replace('-', '_').toUpperCase();\n                if (document.body) {\n                    document.body.classList.add(current_lang); // set the body class removed by crowdin code\n                }\n            }\n        }\n        current_lang = (current_lang || (languageFromUrl() || Cookies.get('language') || default_language).toUpperCase());\n        return current_lang;\n    };\n\n    const urlForLanguage = (lang, url = window.location.href) =>\n        url.replace(new RegExp(`/${getLanguage()}/`, 'i'), `/${(lang || default_language).trim().toLowerCase()}/`);\n\n    return {\n        getAll   : () => all_languages,\n        setCookie: setCookieLanguage,\n        get      : getLanguage,\n        urlFor   : urlForLanguage,\n        urlLang  : languageFromUrl,\n        reset    : () => { url_lang = null; current_lang = null; },\n    };\n})();\n\nmodule.exports = Language;\n","if (window.NodeList && !NodeList.prototype.forEach) {\n    NodeList.prototype.forEach = function (callback, thisArg) {\n        thisArg = thisArg || window;\n        for (var i = 0; i < this.length; i++) {\n            callback.call(thisArg, this[i], i, this);\n        }\n    };\n}\n","if (!Element.prototype.closest) {\n    Element.prototype.closest = function(s) {\n        var el = this;\n        if (!document.documentElement.contains(el)) return null;\n        do {\n            if (el.matches(s)) return el;\n            el = el.parentElement || el.parentNode;\n        } while (el !== null && el.nodeType === 1); \n        return null;\n    };\n}\n","Element.prototype.hide = function() {\n    this.style.display = 'none';\n    return this;\n};\n\nElement.prototype.show = function() {\n    this.style.display = '';\n    return this;\n};\n\nif (!('remove' in Element.prototype)) {\n    Element.prototype.remove = function() {\n        if (this.parentNode) {\n            this.parentNode.removeChild(this);\n        }\n        return this;\n    };\n}\n\nElement.prototype.toggleClass = function(class_name, should_add) {\n    if (typeof should_add === 'undefined') { // toggle\n        should_add = !this.classList.contains(class_name);\n    }\n    this.classList[should_add ? 'add' : 'remove'](class_name);\n    return this;\n};\n\nElement.prototype.setVisibility = function(make_visible) {\n    this.toggleClass('invisible', !make_visible);\n    return this;\n};\n\n\nElement.prototype.html = function(content) {\n    if (typeof content === 'object') {\n        this.innerHTML = '';\n        this.appendChild(content);\n    } else {\n        this.innerHTML = content;\n    }\n    return this;\n};\n","import BinarySocket   from './socket_base';\nimport {\n    cloneObject,\n    getPropertyValue,\n    isDeepEqual,\n    isEmptyObject }   from '../utility';\n\n/**\n * A layer over BinarySocket to handle subscribing to streaming calls\n * in order to keep track of subscriptions, manage forget, prevent multiple subscription at the same time, ...\n *\n * structure of the the subscription object is:\n * {\n *     1: { msg_type: 'proposal', request: { ... }, stream_id: '...', subscribers: [ ... ] },\n *     2: ...\n * }\n * object keys: subscription_id that assigned to each subscription\n * msg_type   : msg_type of the request for faster filtering\n * request    : the request object, used to subscribe to the same stream when there is a new subscribe request with exactly the same values\n * stream_id  : id of the stream which stored from its response and used to forget the stream when needed\n * subscribers: an array of callbacks to dispatch the response to\n */\nconst SubscriptionManager = (() => {\n    const subscriptions    = {};\n    const forget_requested = {};\n\n    let subscription_id = 0;\n\n    /**\n     * To submit request for a new subscription\n     *\n     * @param {String}   msg_type             msg_type of the request\n     * @param {Object}   request_obj          the whole object of the request to be made\n     * @param {Function} fncCallback          callback function to pass the responses to\n     * @param {Boolean}  should_forget_first  when it's true: forgets the previous subscription, then subscribes after receiving the forget response (if any)\n     */\n    const subscribe = (msg_type, request_obj, fncCallback, should_forget_first = false) => {\n        if (should_forget_first) {\n            forget(msg_type, fncCallback).then(() => {\n                subscribe(msg_type, request_obj, fncCallback);\n            });\n            return;\n        }\n\n        let sub_id = Object.keys(subscriptions).find(id => isDeepEqual(request_obj, subscriptions[id].request));\n\n        if (!sub_id) {\n            sub_id = ++subscription_id;\n\n            subscriptions[sub_id] = {\n                msg_type,\n                request    : cloneObject(request_obj),\n                stream_id  : '',             // stream_id will be updated after receiving the response\n                subscribers: [fncCallback],\n            };\n\n            BinarySocket.send(request_obj, {\n                callback: (response) => dispatch(response, sub_id),\n            });\n        } else if (!hasCallbackFunction(sub_id, fncCallback)) {\n            // there is already an active subscription for the very same request which fncCallback is not subscribed to it yet\n            subscriptions[sub_id].subscribers.push(fncCallback);\n        }\n    };\n\n    /**\n     * Add subscription without subscribers from request\n     * E.g. open subscription to proposal_open_contract on buy request\n     * @param {String}   msg_type               msg_type of the subscription\n     * @param {Object}   send_request           the object of the request to be made\n     * @param {Object}   subscribe_request      the object of the subscription request\n     * @param {Array}    subscription_props     Array of prop strings to add to subscribe_request from initial request, e.g. contract_id\n     */\n    const addSubscriptionFromRequest = (msg_type, send_request, subscribe_request, subscription_props) =>\n        new Promise((resolve) => {\n            let sub_id;\n            let is_stream = false;\n\n            BinarySocket.send(send_request, {\n                callback: (response) => {\n                    if (response.error) {\n                        return resolve(response);\n                    }\n                    if (!is_stream) {\n                        is_stream = true;\n                        sub_id    = ++subscription_id;\n\n                        if (subscription_props && Array.isArray(subscription_props)) {\n                            subscription_props.forEach((prop) => {\n                                if (response[response.msg_type][prop]) {\n                                    subscribe_request[prop] = response[response.msg_type][prop];\n                                }\n                            });\n                        }\n\n                        subscriptions[sub_id] = {\n                            msg_type,\n                            request    : cloneObject(subscribe_request),\n                            stream_id  : '',             // stream_id will be updated after receiving the response\n                            subscribers: [],\n                        };\n                        return resolve(response);\n                    }\n                    return dispatch(response, sub_id);\n                },\n            });\n        });\n\n    // dispatches the response to subscribers of the specific subscription id (internal use only)\n    const dispatch = (response, sub_id) => {\n        const stream_id = getPropertyValue(response, [response.msg_type, 'id']) || getPropertyValue(response.subscription, ['id']);\n\n        if (!subscriptions[sub_id]) {\n            if (!forget_requested[stream_id]) {\n                forgetStream(stream_id);\n            }\n            return;\n        }\n\n        const sub_info = subscriptions[sub_id];\n        // set the stream_id\n        if (!sub_info.stream_id && stream_id) {\n            sub_info.stream_id = stream_id;\n        }\n\n        // callback subscribers\n        const subscribers = sub_info.subscribers;\n        if (subscribers.length) {\n            if (\n                // it is the first response\n                !sub_info.stream_id &&\n                    (\n                        // the first response returned error\n                        response.error\n                        || (\n                            // not a subscription (i.e. subscribed proposal_open_contract for an expired contract)\n                            // also to filter out streams with no stream id but later it will continue streaming (i.e. proposal_open_contract without contract id)\n                            !isEmptyObject(response[response.msg_type]) &&\n                            // check msg_type to filter out those calls which don't return stream `id` on first response (tick_history, ...)\n                            response.msg_type === sub_info.msg_type\n                        )\n                    )\n                ||\n                // remove when response isn't first and response has no stream_id\n                !stream_id && sub_info.stream_id\n            ) {\n                delete subscriptions[sub_id];\n            }\n            sub_info.subscribers.forEach((fnc) => {\n                fnc(response);\n            });\n        } else {\n            delete subscriptions[sub_id];\n            forgetStream(sub_info.stream_id);\n        }\n    };\n\n    /**\n     * To forget a subscription which submitted for a specific callback function\n     *\n     * @param  {String}   msg_type      msg_type to forget\n     * @param  {Function} fncCallback   the same function passed to subscribe()\n     *     (this is the way to distinguish between different subscribers of the same stream at the same time)\n     * @param  {Object}   match_values  optional, to only forget subscriptions having request that \"contains\" provided values\n     * @return {Promise}  the promise object of all possible forget requests\n     */\n    const forget = (msg_type, fncCallback, match_values) => {\n        if (typeof fncCallback !== 'function') {\n            throw new Error(`Missing callback function. To forget all subscriptions of msg_type: ${msg_type}, please call forgetAll().`);\n        }\n\n        const forgets_list = [];\n        Object.keys(subscriptions).forEach((id) => {\n            if (subscriptions[id].msg_type === msg_type) { // it's the msg_type we are looking for\n                if (!match_values || hasValues(subscriptions[id].request, match_values)) { // the value matches as well\n                    const stream_id = subscriptions[id].stream_id;\n                    if (stream_id && subscriptions[id].subscribers.length === 1) { // there is only one subscriber, so we can forget the call\n                        delete subscriptions[id];\n                        forgets_list.push(forgetStream(stream_id));\n                    } else if (hasCallbackFunction(id, fncCallback)) {\n                        // there are other subscribers, or for some reason there is no stream_id:\n                        // (i.e. returned an error, or forget() being called before the first response)\n                        subscriptions[id].subscribers.splice(subscriptions[id].subscribers.indexOf(fncCallback), 1);\n                    }\n                }\n            }\n        });\n        return Promise.all(forgets_list);\n    };\n\n    /**\n     * To forget all active subscriptions of a list of msg_types\n     *\n     * @param  {String}  msg_types  list of msg_types to forget\n     * @return {Promise} the promise object of all possible forget_all requests\n     */\n    const forgetAll = (...msg_types) => {\n        const types_to_forget = {};\n\n        msg_types.forEach((msg_type) => {\n            const sub_ids = Object.keys(subscriptions).filter(id => subscriptions[id].msg_type === msg_type);\n            if (sub_ids.length) {\n                sub_ids.forEach((id) => {\n                    delete subscriptions[id];\n                });\n                types_to_forget[msg_type] = true;\n            }\n        });\n\n        return Promise.resolve(\n            !isEmptyObject(types_to_forget) ?\n                BinarySocket.send({ forget_all: Object.keys(types_to_forget) }) :\n                {}\n        );\n    };\n\n    const forgetStream = (stream_id) => {\n        forget_requested[stream_id] = true; // to prevent forgetting multiple times\n        return Promise.resolve(\n            stream_id ?\n                BinarySocket.send({ forget: stream_id }).then(() => { delete forget_requested[stream_id]; }) :\n                {}\n        );\n    };\n\n    const hasCallbackFunction = (sub_id, fncCallback) =>\n        (subscriptions[sub_id] && subscriptions[sub_id].subscribers.indexOf(fncCallback) !== -1);\n\n    const hasValues = (request_obj, values_obj) => (\n        typeof request_obj === 'object' &&\n        typeof values_obj  === 'object' &&\n        Object.keys(values_obj).every(key => request_obj[key] === values_obj[key])\n    );\n\n    return {\n        addSubscriptionFromRequest,\n        subscribe,\n        forget,\n        forgetAll,\n        forgetStream,\n    };\n})();\n\nexport default SubscriptionManager;\n","/*\n Responses that should be ignored upon receiving errors.\n We still log them, but having an error inside of these\n will not break the queue and send them to trackjs.\n This will look for predefined `ignored_responses_in_trackjs` from GTM, if\n there is none, then it just does not filter out any response.\n*/\nconst ignored_responses_in_trackjs = window.ignored_responses_in_trackjs || [];\n\nclass ResponseQueue {\n    constructor() {\n        this.list = [];\n        this.size = 3;\n    }\n\n    add (response) {\n        this.list.unshift(response);\n    }\n\n    remove () {\n        this.list.pop();\n    }\n\n    push (response) {\n        if (this.list.length >= this.size) {\n            this.remove();\n        }\n        this.add(response);\n    }\n\n    fresh () {\n        this.list = [];\n    }\n}\n\nconst queue = new ResponseQueue();\n\n/**\n * Listen on method calls and inspect the response to see if error is thrown.\n * Handling the response status is NOT this function's responsibility\n */\nexport const ApiCallProxyHandler = {\n    get(target, prop_key, receiver) {\n        try {\n            const target_value = Reflect.get(target, prop_key, receiver);\n            if (typeof target_value === 'function') {\n                return function(...args) {\n                    const result = target_value.apply(this, args);\n                    if (result instanceof Promise) {\n                        return new Promise((resolve) => {\n                            let return_value;\n                            result.then(response => {\n                                if (response.error) {\n                                    queue.push(response);\n                                    if (window.TrackJS) window.TrackJS.console.log(queue.list);\n                                    queue.fresh();\n                                    if (\n                                        window.TrackJS &&\n                                        !ignored_responses_in_trackjs.some(item => item === response.error.code)\n                                    ) {\n                                        window.TrackJS.track(response.error.code);\n                                    }\n                                }\n                                queue.push(response);\n                                return_value = response;\n                            }).catch(error => {\n                                if (window.TrackJS) {\n                                    window.TrackJS.console.log(queue.list);\n                                    window.TrackJS.track(error.getMessage());\n                                }\n                            }).finally(() => {\n                                resolve(return_value);\n                            });\n                        });\n                    }\n                    return result;\n                }.bind(this);\n            }\n            return target_value;\n        } catch (error) {\n            throw new Error(error.getMessage());\n        }\n    },\n};\n\nexport const trackJSNetworkMonitor = (obj) => new Proxy(obj, ApiCallProxyHandler);\n","import BinarySocket              from '_common/base/socket_base';\nimport SubscriptionManager       from '_common/base/subscription_manager';\nimport { isEmptyObject }         from '_common/utility';\nimport { trackJSNetworkMonitor } from './trackjs';\n\nconst WS = (() => {\n    const activeSymbols = (options) =>\n        BinarySocket.send({ active_symbols: 'brief' }, { msg_type: 'active_symbols', ...(options && options) });\n\n    const buy = (proposal_id, price) =>\n        BinarySocket.send({ buy: proposal_id, price });\n\n    const cashier = (action, verification_code) =>\n        BinarySocket.send({ cashier: action, ...(verification_code && { verification_code }) });\n\n    const contractsFor = (symbol) =>\n        BinarySocket.send({ contracts_for: symbol });\n\n    const getAccountStatus = () =>\n        BinarySocket.send({ get_account_status: 1 });\n\n    const getSelfExclusion = () =>\n        BinarySocket.send({ get_self_exclusion: 1 });\n\n    const getSettings = () =>\n        BinarySocket.send({ get_settings: 1 });\n\n    const getTradingTimes = (date) =>\n        BinarySocket.send({ trading_times: date });\n\n    const landingCompany = (residence) =>\n        BinarySocket.send({ landing_company: residence });\n\n    const logout = () =>\n        BinarySocket.send({ logout: 1 });\n\n    const mt5LoginList = () =>\n        BinarySocket.send({ mt5_login_list: 1 });\n\n    const newAccountVirtual = (verification_code, client_password, residence) =>\n        BinarySocket.send({\n            new_account_virtual: 1,\n            verification_code,\n            client_password,\n            residence,\n        });\n\n    const oauthApps = () =>\n        BinarySocket.send({ oauth_apps: 1 });\n\n    const payoutCurrencies = () =>\n        BinarySocket.send({ payout_currencies: 1 });\n\n    const portfolio = () =>\n        BinarySocket.send({ portfolio: 1 });\n\n    const profitTable = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ profit_table: 1, description: 1, limit, offset, ...date_boundaries });\n\n    const proposalOpenContract = (contract_id) =>\n        BinarySocket.send({ proposal_open_contract: 1, contract_id });\n\n    const sell = (contract_id, price) =>\n        BinarySocket.send({ sell: contract_id, price });\n\n    const residenceList = () =>\n        BinarySocket.send({ residence_list: 1 });\n\n    const sellExpired = () =>\n        BinarySocket.send({ sell_expired: 1 });\n\n    const sendRequest = (request_object, force_request) =>\n        Promise.resolve(!isEmptyObject(request_object) ? BinarySocket.send(request_object, force_request) : {});\n\n    const statement = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ statement: 1, description: 1, limit, offset, ...date_boundaries });\n\n    const verifyEmail = (email, type) =>\n        BinarySocket.send({ verify_email: email, type });\n\n    // ----- Streaming calls -----\n    const forget = (msg_type, cb, match_values) =>\n        SubscriptionManager.forget(msg_type, cb, match_values);\n\n    const forgetAll = (...msg_types) =>\n        SubscriptionManager.forgetAll(...msg_types);\n\n    const forgetStream = (stream_id) =>\n        SubscriptionManager.forgetStream(stream_id);\n\n    const subscribeBalance = (cb, is_forced) =>\n        SubscriptionManager.subscribe('balance', { balance: 1, subscribe: 1 }, cb, is_forced);\n\n    const subscribeProposal = (req, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal', req, cb, should_forget_first);\n\n    const subscribeProposalOpenContract = (contract_id = null, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal_open_contract', { proposal_open_contract: 1, subscribe: 1, ...(contract_id && { contract_id }) }, cb, should_forget_first);\n\n    const subscribeProposalOpenContractOnBuy = (buy_request) =>\n        SubscriptionManager.addSubscriptionFromRequest(\n            'proposal_open_contract',\n            { ...buy_request, subscribe: 1 },\n            { proposal_open_contract: 1, subscribe: 1 },\n            ['contract_id'],\n        );\n\n    const subscribeTicks = (symbol, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks', { ticks: symbol, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeTicksHistory = (request_object, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks_history', request_object, cb, should_forget_first);\n\n    const subscribeTransaction = (cb, should_forget_first) =>\n        SubscriptionManager.subscribe('transaction', { transaction: 1, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeWebsiteStatus = (cb) =>\n        SubscriptionManager.subscribe('website_status', { website_status: 1, subscribe: 1 }, cb);\n\n    return {\n        activeSymbols,\n        buy,\n        cashier,\n        contractsFor,\n        getAccountStatus,\n        getSelfExclusion,\n        getSettings,\n        getTradingTimes,\n        landingCompany,\n        logout,\n        mt5LoginList,\n        newAccountVirtual,\n        oauthApps,\n        portfolio,\n        payoutCurrencies,\n        profitTable,\n        proposalOpenContract,\n        residenceList,\n        sell,\n        sellExpired,\n        sendRequest,\n        statement,\n        verifyEmail,\n\n        // streams\n        forget,\n        forgetAll,\n        forgetStream,\n        subscribeBalance,\n        subscribeProposal,\n        subscribeProposalOpenContract,\n        subscribeProposalOpenContractOnBuy,\n        subscribeTicks,\n        subscribeTicksHistory,\n        subscribeTransaction,\n        subscribeWebsiteStatus,\n    };\n})();\n\nexport default trackJSNetworkMonitor(WS);\n","if (!Element.prototype.matches) {\n    Element.prototype.matches =\n        Element.prototype.matchesSelector ||\n        Element.prototype.mozMatchesSelector ||\n        Element.prototype.msMatchesSelector ||\n        Element.prototype.oMatchesSelector ||\n        Element.prototype.webkitMatchesSelector ||\n        function(s) {\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n                i = matches.length;\n            while (--i >= 0 && matches.item(i) !== this) {}\n            return i > -1;\n        };\n}\n","const isMobile = () => /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n\nmodule.exports = {\n    isMobile,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport ErrorComponent from './index';\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch = (error, info) => {\n        if (window.TrackJS) window.TrackJS.console.log(this.props.root_store);\n\n        this.setState({\n            hasError: true,\n            error,\n            info,\n        });\n    };\n\n    render = () => this.state.hasError ? (\n        <ErrorComponent should_show_refresh={true} />\n    ) : this.props.children;\n}\n\nErrorBoundary.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default connect((store) => (\n    {\n        root_store: store,\n    }\n))(ErrorBoundary);\n","import React     from 'react';\nimport PropTypes from 'prop-types';\n\nconst Loading = ({ id, is_slow_loading, status, theme }) => (\n    <div className='initial-loader'>\n        <div id={id} className={`initial-loader__barspinner barspinner barspinner-${ theme || 'light'}`}>\n            { Array.from(new Array(5)).map((x, inx) => (\n                <div key={inx} className={`initial-loader__barspinner--rect barspinner__rect barspinner__rect--${inx + 1} rect${inx + 1}`} />\n            ))}\n        </div>\n        { is_slow_loading && status.map((text, inx) => (\n            <h3 className='initial-loader__text' key={inx}>{text}</h3>\n        ))\n        }\n    </div>\n);\n\nLoading.propTypes = {\n    id: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    is_slow_loading: PropTypes.bool,\n    status         : PropTypes.array,\n    theme          : PropTypes.string,\n};\nexport default Loading;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { Scrollbars } from 'tt-react-custom-scrollbars';\nimport { connect }    from 'Stores/connect';\nimport routes         from 'Constants/routes';\n// import InstallPWA     from './install-pwa.jsx';\nimport Loading        from '../../../templates/app/components/loading.jsx';\n\nconst AppContents = ({\n    // addNotificationBar,\n    children,\n    is_app_blurred,\n    is_contract_mode,\n    is_dark_mode,\n    is_fully_blurred,\n    is_loading,\n    is_logged_in,\n    is_positions_drawer_on,\n    is_slow_loading,\n    location,\n    slow_loading_status,\n    // setPWAPromptEvent,\n}) => {\n    if (is_logged_in) {\n        // TODO: uncomment these after the issues with showing the prompt too often and in the app are fixed\n        // window.addEventListener('beforeinstallprompt', e => {\n        //     console.log('Going to show the installation prompt'); // eslint-disable-line no-console\n        //\n        //     e.preventDefault();\n        //\n        //     setPWAPromptEvent(e);\n        //     addNotificationBar({\n        //         content : <InstallPWA />,\n        //         autoShow: 10000, // show after 10 secs\n        //         msg_type: 'pwa',\n        //     });\n        // });\n    }\n\n    return (\n        <React.Fragment>\n            { is_loading && location.pathname === routes.trade &&\n                <Loading status={slow_loading_status} is_slow_loading={is_slow_loading} theme={is_dark_mode ? 'dark' : 'light'} />\n            }\n            <div\n                id='app_contents'\n                className={classNames('app-contents', {\n                    'app-contents--show-positions-drawer': is_positions_drawer_on,\n                    'app-contents--contract-mode'        : is_contract_mode,\n                    'app-contents--is-blurred'           : (is_fully_blurred || is_app_blurred),\n                })}\n            >\n                {/* Calculate height of user screen and offset height of header and footer */}\n                <Scrollbars\n                    autoHide\n                    style={{ height: 'calc(100vh - 83px)' }}\n                >\n                    {children}\n                </Scrollbars>\n            </div>\n        </React.Fragment>\n    );\n};\n\nAppContents.propTypes = {\n    addNotificationBar    : PropTypes.func,\n    children              : PropTypes.any,\n    is_app_blurred        : PropTypes.bool,\n    is_contract_mode      : PropTypes.bool,\n    is_dark_mode          : PropTypes.bool,\n    is_fully_blurred      : PropTypes.bool,\n    is_loading            : PropTypes.bool,\n    is_logged_in          : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    is_slow_loading       : PropTypes.bool,\n    pwa_prompt_event      : PropTypes.object,\n    setPWAPromptEvent     : PropTypes.func,\n    slow_loading_status   : PropTypes.array,\n};\n\nexport default withRouter(connect(\n    ({ client, modules, ui }) => ({\n        // addNotificationBar    : ui.addNotificationBar,\n        is_app_blurred        : ui.is_app_blurred,\n        is_contract_mode      : modules.smart_chart.is_contract_mode,\n        is_dark_mode          : ui.is_dark_mode_on,\n        is_fully_blurred      : ui.is_fully_blurred,\n        is_loading            : ui.is_loading,\n        is_logged_in          : client.is_logged_in,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        is_slow_loading       : ui.is_slow_loading,\n        pwa_prompt_event      : ui.pwa_prompt_event,\n        slow_loading_status   : ui.slow_loading_status,\n        // setPWAPromptEvent     : ui.setPWAPromptEvent,\n    })\n)(AppContents));\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { connect }     from 'Stores/connect';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst ServerTime = ({ server_time }) => {\n    const gmt_time = toGMTFormat(server_time);\n\n    return (\n        <div className='server-time'>{gmt_time}</div>\n    );\n};\n\nServerTime.propTypes = {\n    server_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        server_time: common.server_time,\n    })\n)(ServerTime);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from 'App/i18n';\nimport { connect }  from 'Stores/connect';\nimport { Popover }  from 'App/Components/Elements/Popover';\n\nconst NetworkStatus = ({ status }) => (\n    <div className='network-status__wrapper'>\n        <Popover\n            classNameBubble='network-status__tooltip'\n            alignment='top'\n            message={localize('Network status: {{status}}', { status: (status.tooltip || localize('Connecting to server')) })}\n        >\n            <div className={classNames(\n                'network-status__circle', {\n                    'network-status__circle--offline': (status.class === 'offline'),\n                    'network-status__circle--online' : (status.class === 'online'),\n                    'network-status__circle--blinker': (status.class === 'blinker'),\n                })}\n            />\n        </Popover>\n    </div>\n);\n\nNetworkStatus.propTypes = {\n    status: PropTypes.object,\n};\n\nexport { NetworkStatus };\n\nexport default connect(\n    ({ common }) => ({\n        status: common.network_status,\n    })\n)(NetworkStatus);\n","import classNames from 'classnames';\nimport React      from 'react';\nimport Icon       from 'Assets/icon.jsx';\n\nclass ToggleFullScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_full_screen: false,\n        };\n        this.fullscreen_map = {\n            event    : ['fullscreenchange',  'webkitfullscreenchange',  'mozfullscreenchange',  'MSFullscreenChange'],\n            element  : ['fullscreenElement', 'webkitFullscreenElement', 'mozFullScreenElement', 'msFullscreenElement'],\n            fnc_enter: ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'],\n            fnc_exit : ['exitFullscreen',    'webkitExitFullscreen',    'mozCancelFullScreen',  'msExitFullscreen'],\n        };\n\n    }\n\n    componentDidMount() {\n        this.fullscreen_map.event.forEach((event) => {\n            document.addEventListener(event, this.onFullScreen, false);\n        });\n    }\n\n    onFullScreen = () => {\n        const is_full_screen = this.fullscreen_map.element.some(el => document[el]);\n        this.setState({ is_full_screen });\n    };\n\n    toggleFullScreen = (e) => {\n        e.stopPropagation();\n\n        const to_exit   = this.state.is_full_screen;\n        const el        = to_exit ? document : document.documentElement;\n        const fncToCall = this.fullscreen_map[to_exit ? 'fnc_exit' : 'fnc_enter'].find(fnc => el[fnc]);\n\n        if (fncToCall) {\n            el[fncToCall]();\n        } else {\n            this.setState({ is_full_screen: false }); // fullscreen API is not enabled\n        }\n    }\n\n    render() {\n        const full_screen_icon_class = classNames('ic-fullscreen', 'footer__link', {\n            'ic-fullscreen--active': this.state.is_full_screen,\n        });\n        return (\n            <a\n                href='javascript:;'\n                className={full_screen_icon_class}\n                onClick={this.toggleFullScreen}\n            >\n                <Icon icon='IconMaximize' className='footer__icon' />\n            </a>\n        );\n    }\n}\n\nexport { ToggleFullScreen };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Icon       from 'Assets/icon.jsx';\n\nconst TogglePositions = ({\n    positions_count,\n    is_positions_drawer_on,\n    togglePositionsDrawer,\n}) => {\n    const toggle_positions_class = classNames(\n        'ic-positions',\n        'footer__link', {\n            'ic-positions--active'   : is_positions_drawer_on,\n            'ic-positions--has-count': (positions_count > 0),\n        }\n    );\n    return (\n        <a\n            href='javascript:;'\n            className={toggle_positions_class}\n            onClick={togglePositionsDrawer}\n            data-count={positions_count}\n        >\n            <Icon icon='IconPositions' className='footer__icon ic-positions__icon' />\n        </a>\n    );\n};\n\nTogglePositions.propTypes = {\n    is_positions_drawer_on: PropTypes.bool,\n    positions_count       : PropTypes.number,\n    togglePositionsDrawer : PropTypes.func,\n};\n\nexport { TogglePositions };\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { Modal }    from 'App/Components/Elements/modal.jsx';\nimport UILoader     from 'App/Components/Elements/ui-loader.jsx';\nimport { localize } from 'App/i18n';\nimport Icon         from 'Assets/icon.jsx';\nimport 'Sass/app/modules/settings.scss';\n\nconst modal_content = [\n    {\n        icon : 'IconTheme',\n        label: localize('Themes'),\n        value: React.lazy(() => import(/* webpackChunkName: \"settings-theme\", webpackPrefetch: true */'App/Containers/SettingsModal/settings-theme.jsx')),\n    }, {\n        icon : 'IconLanguage',\n        label: localize('Language'),\n        value: React.lazy(() => import(/* webpackChunkName: \"settings-language\", webpackPrefetch: true */'App/Containers/SettingsModal/settings-language.jsx')),\n    }, {\n        icon : 'IconCharts',\n        label: localize('Charts'),\n        value: React.lazy(() => import(/* webpackChunkName: \"settings-chart\", webpackPrefetch: true */'App/Containers/SettingsModal/settings-chart.jsx')), // uncomment below lines to bring back purchase lock and purchase confirmation\n        // }, {\n        //     icon : IconPurchase,\n        //     label: localize('Purchase'),\n        //     value: PurchaseSettings,\n    },\n];\n\nconst ToggleSettings = ({\n    hideFullBlur,\n    is_settings_visible,\n    showFullBlur,\n    toggleSettings,\n}) => {\n    const toggle_settings_class = classNames('ic-settings', 'footer__link', {\n        'ic-settings--active': is_settings_visible,\n    });\n    return (\n        <React.Fragment>\n            <a\n                href='javascript:;'\n                onClick={toggleSettings}\n                className={toggle_settings_class}\n            >\n                <Icon icon='IconSettings' className='footer__icon ic-settings__icon' />\n            </a>\n            <React.Suspense fallback={<UILoader />}>\n                <Modal\n                    modal_content={modal_content}\n                    hideFullBlur={hideFullBlur}\n                    is_open={is_settings_visible}\n                    showFullBlur={showFullBlur}\n                    title={localize('Platform settings')}\n                    toggleModal={toggleSettings}\n                />\n            </React.Suspense>\n        </React.Fragment>\n    );\n};\n\nToggleSettings.propTypes = {\n    hideFullBlur       : PropTypes.func,\n    is_settings_visible: PropTypes.bool,\n    showFullBlur       : PropTypes.func,\n    toggleSettings     : PropTypes.func,\n};\n\nexport { ToggleSettings };\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport { withRouter }                 from 'react-router';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport routes                         from 'Constants/routes';\nimport { connect }                    from 'Stores/connect';\nimport ServerTime                     from '../server-time.jsx';\nimport {\n    NetworkStatus,\n    ToggleFullScreen,\n    TogglePositions,\n    ToggleSettings }                  from '../../Components/Layout/Footer';\n\nconst Footer = ({\n    active_positions,\n    hideFullBlur,\n    is_fully_blurred,\n    is_loading,\n    is_logged_in,\n    is_positions_drawer_on,\n    is_route_blurred,\n    is_settings_modal_on,\n    location,\n    showFullBlur,\n    show_positions_toggle,\n    togglePositionsDrawer,\n    toggleSettingsModal,\n}) => (\n    <React.Fragment>\n        { (!is_loading || location.pathname !== routes.trade) &&\n            <footer className={classNames('footer', {\n                'footer--is-blurred': (is_fully_blurred || is_route_blurred),\n            })}\n            >\n                <div className='footer__links footer__links--left'>\n                    {\n                        (is_logged_in && show_positions_toggle) &&\n                        <TogglePositions\n                            is_positions_drawer_on={is_positions_drawer_on}\n                            togglePositionsDrawer={togglePositionsDrawer}\n                            positions_count={active_positions.length || 0}\n                        />\n                    }\n                </div>\n                <NetworkStatus />\n                <ServerTime />\n                <div className='footer__links'>\n                    <ToggleSettings\n                        is_settings_visible={is_settings_modal_on}\n                        toggleSettings={toggleSettingsModal}\n                        showFullBlur={showFullBlur}\n                        hideFullBlur={hideFullBlur}\n                    />\n                    <ToggleFullScreen />\n                </div>\n            </footer>\n        }\n    </React.Fragment>\n);\n\nFooter.propTypes = {\n    active_positions      : MobxPropTypes.arrayOrObservableArray,\n    is_fully_blurred      : PropTypes.bool,\n    is_logged_in          : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    is_route_blurred      : PropTypes.bool,\n    is_settings_modal_on  : PropTypes.bool,\n    location              : PropTypes.object,\n    show_positions_toggle : PropTypes.bool,\n    togglePositionsDrawer : PropTypes.func,\n    toggleSettingsModal   : PropTypes.func,\n};\n\nexport default withRouter(connect(\n    ({ client, modules, ui }) => ({\n        active_positions      : modules.portfolio.active_positions,\n        hideFullBlur          : ui.hideFullBlur,\n        is_fully_blurred      : ui.is_fully_blurred,\n        is_route_blurred      : ui.is_route_blurred,\n        is_logged_in          : client.is_logged_in,\n        is_loading            : ui.is_loading,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        is_settings_modal_on  : ui.is_settings_modal_on,\n        showFullBlur          : ui.showFullBlur,\n        show_positions_toggle : ui.show_positions_toggle,\n        togglePositionsDrawer : ui.togglePositionsDrawer,\n        toggleSettingsModal   : ui.toggleSettingsModal,\n    })\n)(Footer));\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { BinaryLink } from '../../Routes';\n\nconst MenuLinks = ({ is_logged_in, items }) => (\n    <React.Fragment>\n        {!!items.length &&\n        <div className='header__menu-links'>\n            {\n                items.map((item, idx) => (\n                    (item.login_only && (item.login_only !== is_logged_in)) ?\n                        null\n                        :\n                        <BinaryLink key={idx} to={item.link_to} className='header__menu-link' active_class='header__menu-link--active'>\n                            <React.Fragment>\n                                {item.text &&\n                                    <span title={item.text} className='header__menu-link-text'>{item.icon}{item.text}{item.logo}</span>\n                                }\n                                {item.image &&\n                                    <span className='header__menu-link-text'>{item.image}{item.logo}</span>\n                                }\n                            </React.Fragment>\n                        </BinaryLink>\n                ))\n            }\n        </div>\n        }\n    </React.Fragment>\n);\n\nMenuLinks.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        icon: PropTypes.shape({\n            className: PropTypes.string,\n        }),\n        is_logged_in: PropTypes.bool,\n        link_to     : PropTypes.string,\n        text        : PropTypes.string,\n    })),\n};\n\nexport { MenuLinks };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from 'App/i18n';\nimport Button              from '../../Form/button.jsx';\n\nconst LoginButton = ({ className }) => (\n    <Button\n        className={classNames(className, 'btn--secondary btn--secondary--orange')}\n        has_effect\n        text={localize('Log in')}\n        onClick={redirectToLogin}\n    />\n);\n\nLoginButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { LoginButton };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { localize }        from 'App/i18n';\nimport { urlFor }          from '_common/url';\nimport Button              from '../../Form/button.jsx';\n\nconst SignupButton = ({ className }) => (\n    <Button\n        className={classNames(className, 'btn--primary btn--primary--orange')}\n        has_effect\n        text={localize('Sign up')}\n        onClick={() => { window.open(urlFor('new-account', undefined, undefined, true)); }}\n    />\n);\n\nSignupButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { SignupButton };\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from 'App/i18n';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst UpgradeButton = ({ className, onClick }) => (\n    <Button\n        id='acc-balance-btn'\n        className={classNames(className, 'btn--primary btn--primary--orange')}\n        has_effect\n        text={localize('Upgrade')}\n        onClick={onClick}\n    />\n);\n\nUpgradeButton.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { UpgradeButton };\n","import * as PropTypes       from 'prop-types';\nimport React, { Component } from 'react';\nimport { formatMoney }      from '_common/base/currency_base';\nimport { urlFor }           from '_common/url';\nimport Button               from 'App/Components/Form/button.jsx';\nimport Lazy                 from 'App/Containers/Lazy';\nimport { localize }         from 'App/i18n';\nimport { LoginButton }      from './login-button.jsx';\nimport { SignupButton }     from './signup-button.jsx';\nimport { UpgradeButton }    from './upgrade-button.jsx';\nimport 'Sass/app/_common/components/account-switcher.scss';\n\nconst should_show_deposit = false; // TODO remove this and all commented props when Deposit is ready\n\nexport class AccountActions extends Component {\n    shouldComponentUpdate(nextProps) {\n        return (\n            // nextProps.active_cashier_tab !== this.props.active_cashier_tab ||\n            nextProps.balance !== this.props.balance ||\n            nextProps.can_upgrade !== this.props.can_upgrade ||\n            nextProps.can_upgrade_to !== this.props.can_upgrade_to ||\n            nextProps.currency !== this.props.currency ||\n            nextProps.is_acc_switcher_on !== this.props.is_acc_switcher_on ||\n            // nextProps.is_cashier_modal_on !== this.props.is_cashier_modal_on ||\n            nextProps.is_logged_in !== this.props.is_logged_in ||\n            nextProps.is_virtual !== this.props.is_virtual ||\n            nextProps.loginid !== this.props.loginid\n        );\n    }\n\n    render() {\n        const {\n            // active_cashier_tab,\n            balance,\n            can_upgrade,\n            can_upgrade_to,\n            currency,\n            // hideFullBlur,\n            is_acc_switcher_on,\n            // is_cashier_modal_on,\n            is_logged_in,\n            is_virtual,\n            loginid,\n            onClickUpgrade,\n            toggleAccountsDialog,\n            // toggleCashierModal,\n            // showFullBlur,\n        } = this.props;\n        if (is_logged_in) {\n            return (\n                <React.Fragment>\n                    <Lazy\n                        ctor={() => import(/* webpackChunkName: \"account-info\", webpackPreload: true */'App/Components/Layout/Header/account-info.jsx')}\n                        should_load={true}\n                        has_progress={false}\n                        balance={formatMoney(currency, balance, true)}\n                        is_upgrade_enabled={can_upgrade}\n                        is_virtual={is_virtual}\n                        onClickUpgrade={onClickUpgrade}\n                        currency={currency}\n                        loginid={loginid}\n                        is_dialog_on={is_acc_switcher_on}\n                        toggleDialog={toggleAccountsDialog}\n                    />\n                    {!!(\n                        can_upgrade_to && is_virtual\n                    ) && <UpgradeButton\n                        className='acc-info__button'\n                        onClick={() => {\n                            window.open(urlFor('user/accounts', undefined, undefined, true));\n                        }}\n                    />}\n                    { should_show_deposit &&\n                    <Lazy\n                        ctor={() => import(/* webpackChunkName: \"toggle-cashier\", webpackPrefetch: true */'App/Components/Layout/Header/toggle-cashier.jsx')}\n                        should_load={!is_virtual} // remove false when cashier is ready.\n                        // active_tab={active_cashier_tab}\n                        className='acc-info__button'\n                        // toggleCashier={toggleCashierModal}\n                        // is_cashier_visible={is_cashier_modal_on}\n                        // showFullBlur={showFullBlur}\n                        // hideFullBlur={hideFullBlur}\n                    />\n                    }\n                    {!(\n                        is_virtual\n                    ) && // TODO: remove this when cashier pop up is ready\n                    <Button\n                        className='btn--primary btn--primary--orange acc-info__button'\n                        has_effect\n                        text={localize('Deposit')}\n                        onClick={() => {\n                            window.open(urlFor('cashier', undefined, undefined, true),\n                                '_blank',\n                                'noopener',\n                                'noreferrer',\n                            );\n                        }}\n                    />}\n                </React.Fragment>\n            );\n        }\n        return (\n            <React.Fragment>\n                <LoginButton className='acc-info__button' />\n                <SignupButton className='acc-info__button' />\n            </React.Fragment>\n        );\n    }\n}\n\nAccountActions.propTypes = {\n    active_cashier_tab  : PropTypes.any,\n    balance             : PropTypes.any,\n    can_upgrade         : PropTypes.any,\n    can_upgrade_to      : PropTypes.any,\n    currency            : PropTypes.any,\n    hideFullBlur        : PropTypes.any,\n    is_acc_switcher_on  : PropTypes.any,\n    is_cashier_modal_on : PropTypes.any,\n    is_logged_in        : PropTypes.any,\n    is_virtual          : PropTypes.any,\n    loginid             : PropTypes.any,\n    onClickUpgrade      : PropTypes.any,\n    showFullBlur        : PropTypes.any,\n    toggleAccountsDialog: PropTypes.any,\n    toggleCashierModal  : PropTypes.any,\n};\n","import React           from 'react';\nimport { localize }    from 'App/i18n';\nimport Icon            from 'Assets/icon.jsx';\nimport { routes }      from 'Constants/index';\n\nconst header_links = [\n    {\n        logo   : <div className='header__logo'>{localize('BETA')}</div>,\n        image  : <Icon icon='IconDeriv' className='header__icon' />,\n        link_to: routes.trade,\n    },\n    {\n        icon      : <Icon icon='IconReports' className='header__icon' />,\n        text      : localize('Reports'),\n        link_to   : routes.reports,\n        login_only: true,\n    },\n];\n\nexport default header_links;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport {\n    AccountActions,\n    MenuLinks,\n    // ToggleCashier,\n}                     from 'App/Components/Layout/Header';\nimport header_links   from 'App/Constants/header-links';\nimport Lazy           from 'App/Containers/Lazy';\nimport routes         from 'Constants/routes';\nimport { connect }    from 'Stores/connect';\n\nconst Header = ({\n    // active_cashier_tab,\n    balance,\n    can_upgrade,\n    can_upgrade_to,\n    currency,\n    // hideFullBlur,\n    is_acc_switcher_on,\n    // is_cashier_modal_on,\n    is_fully_blurred,\n    is_loading,\n    is_logged_in,\n    is_mobile,\n    is_route_blurred,\n    is_virtual,\n    location,\n    loginid,\n    onClickUpgrade,\n    // showFullBlur,\n    toggleAccountsDialog,\n    // toggleCashierModal,\n}) => (\n    <React.Fragment>\n        {(!is_loading || location.pathname !== routes.trade) &&\n            <header className={classNames('header', {\n                'header--is-blurred': (is_fully_blurred || is_route_blurred),\n            })}\n            >\n                <div className='header__menu-items'>\n                    <div className='header__menu-left'>\n                        <Lazy\n                            has_progress={false}\n                            ctor={() => import(/* webpackChunkName: \"toggle-menu-drawer\", webpackPreload: true */'App/Components/Layout/Header/toggle-menu-drawer.jsx')}\n                            should_load={is_mobile}\n                        />\n                        <MenuLinks\n                            is_logged_in={is_logged_in}\n                            items={header_links}\n                        />\n                    </div>\n                    <div className='header__menu-right'>\n                        <div className='acc-info__container'>\n                            <AccountActions\n                                // active_cashier_tab={active_cashier_tab}\n                                balance={balance}\n                                can_upgrade_to={can_upgrade_to}\n                                currency={currency}\n                                can_upgrade={can_upgrade}\n                                // hideFullBlur={hideFullBlur}\n                                is_acc_switcher_on={is_acc_switcher_on}\n                                // is_cashier_modal_on={is_cashier_modal_on}\n                                is_logged_in={is_logged_in}\n                                is_virtual={is_virtual}\n                                loginid={loginid}\n                                onClickUpgrade={onClickUpgrade}\n                                toggleAccountsDialog={toggleAccountsDialog}\n                                // toggleCashierModal={toggleCashierModal}\n                                // showFullBlur={showFullBlur}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </header>\n        }\n    </React.Fragment>\n);\n\nHeader.propTypes = {\n    // active_cashier_tab  : PropTypes.string,\n    balance             : PropTypes.string,\n    can_upgrade         : PropTypes.bool,\n    can_upgrade_to      : PropTypes.string,\n    currency            : PropTypes.string,\n    // hideFullBlur        : PropTypes.func,\n    is_acc_switcher_on  : PropTypes.bool,\n    // is_cashier_modal_on : PropTypes.bool,\n    is_dark_mode        : PropTypes.bool,\n    is_fully_blurred    : PropTypes.bool,\n    is_loading          : PropTypes.bool,\n    is_logged_in        : PropTypes.bool,\n    is_mobile           : PropTypes.bool,\n    is_route_blurred    : PropTypes.bool,\n    is_virtual          : PropTypes.bool,\n    location            : PropTypes.object,\n    loginid             : PropTypes.string,\n    onClickUpgrade      : PropTypes.func,\n    // showFullBlur        : PropTypes.func,\n    toggleAccountsDialog: PropTypes.func,\n    // toggleCashierModal  : PropTypes.func,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <MenuLinks /> from being blocked\nexport default withRouter(connect(\n    ({ client, ui }) => ({\n        // active_cashier_tab  : ui.active_cashier_tab,\n        balance             : client.balance,\n        can_upgrade         : client.can_upgrade,\n        can_upgrade_to      : client.can_upgrade_to,\n        currency            : client.currency,\n        // hideFullBlur        : ui.hideFullBlur,\n        is_loading          : ui.is_loading,\n        is_logged_in        : client.is_logged_in,\n        is_virtual          : client.is_virtual,\n        loginid             : client.loginid,\n        is_acc_switcher_on  : ui.is_accounts_switcher_on,\n        // is_cashier_modal_on : ui.is_cashier_modal_on,\n        is_dark_mode        : ui.is_dark_mode_on,\n        is_fully_blurred    : ui.is_fully_blurred,\n        is_route_blurred    : ui.is_route_blurred,\n        is_mobile           : ui.is_mobile,\n        // showFullBlur        : ui.showFullBlur,\n        toggleAccountsDialog: ui.toggleAccountsDialog,\n        // toggleCashierModal  : ui.toggleCashierModal,\n    })\n)(Header));\n","import React       from 'react';\nimport { connect } from 'Stores/connect';\nimport { urlFor }  from '_common/url';\nimport Lazy        from '../Lazy';\nimport 'Sass/app/modules/modals.scss';\n\n// const AccountSignupModal       = React.lazy(() => import(/* webpackChunkName: \"AccountSignupModal\" */'./Containers/AccountSignupModal'));\n\nconst Modals = ({\n    clearPurchaseInfo,\n    is_initial_idle,\n    is_denial_of_service_modal_visible,\n    is_unsupported_contract_modal_visible,\n    is_market_unavailable_visible,\n    is_services_error_visible,\n    toggleUnsupportedContractModal,\n    setHasOnlyForwardingContracts,\n    resetPreviousSymbol,\n    toggleServicesErrorModal,\n    resetPurchase,\n    services_error,\n    switchAccount,\n    virtual_account_loginid,\n}) => {\n    const denialOfServiceOnCancel = () => {\n        window.open(urlFor('trading', undefined, undefined, true));\n    };\n\n    const denialOfServiceOnConfirm = async () => {\n        await switchAccount(virtual_account_loginid);\n    };\n\n    const marketUnavailableOnConfirm = () => {\n        setHasOnlyForwardingContracts(false);\n        resetPreviousSymbol();\n    };\n\n    const marketUnavailableOnCancel = () => window.open(urlFor('trading', undefined, undefined, true)) &&\n        setHasOnlyForwardingContracts(false);\n\n    const servicesErrorModalOnConfirm = () => {\n        toggleServicesErrorModal(false);\n        if (services_error.type === 'buy') {\n            clearPurchaseInfo();\n            resetPurchase();\n        }\n    };\n\n    const unsupportedContractOnConfirm = () => {\n        window.open(urlFor('user/portfoliows', undefined, undefined, true), '_blank');\n        unsupportedContractOnClose();\n    };\n\n    const unsupportedContractOnClose = () => {\n        toggleUnsupportedContractModal(false);\n    };\n\n    return (\n        <React.Fragment>\n            <Lazy\n                ctor={() => import(/* webpackChunkName: \"UnsupportedContractModal\" */'App/Components/Elements/Modals/UnsupportedContractModal')}\n                should_load={is_initial_idle && is_unsupported_contract_modal_visible}\n                onConfirm={unsupportedContractOnConfirm}\n                onClose={unsupportedContractOnClose}\n                is_visible={is_unsupported_contract_modal_visible}\n            />\n            <Lazy\n                ctor={() => import(/* webpackChunkName: \"DenialOfServiceModal\" */'App/Components/Elements/Modals/DenialOfServiceModal')}\n                should_load={is_initial_idle && is_denial_of_service_modal_visible}\n                onConfirm={denialOfServiceOnConfirm}\n                onCancel={denialOfServiceOnCancel}\n                is_visible={is_denial_of_service_modal_visible}\n            />\n            <Lazy\n                ctor={() => import(/* webpackChunkName: \"MarketUnavailableModal\" */'App/Components/Elements/Modals/MarketUnavailableModal')}\n                should_load={is_initial_idle && is_market_unavailable_visible}\n                onConfirm={marketUnavailableOnConfirm}\n                onCancel={marketUnavailableOnCancel}\n                is_visible={is_market_unavailable_visible}\n            />\n            <Lazy\n                ctor={() => import(/* webpackChunkName: \"ServicesErrorModal\" */'App/Components/Elements/Modals/ServicesErrorModal')}\n                should_load={is_initial_idle && is_services_error_visible}\n                onConfirm={servicesErrorModalOnConfirm}\n                services_error={services_error}\n                is_visible={is_services_error_visible}\n            />\n            {/* TODO: Enable AccountSignupModal once its UI component is ready */}\n            {/* <AccountSignupModal /> */}\n        </React.Fragment>\n    );\n};\n\nexport default connect(({ ui, client, modules, common }) => ({\n    is_initial_idle                      : !ui.is_loading,\n    is_denial_of_service_modal_visible   : !client.is_client_allowed_to_visit,\n    is_market_unavailable_visible        : ui.has_only_forward_starting_contracts,\n    is_services_error_visible            : ui.is_services_error_visible,\n    is_unsupported_contract_modal_visible: ui.is_unsupported_contract_modal_visible,\n    proposal_info                        : modules.trade.proposal_info,\n    purchase_info                        : modules.trade.purchase_info,\n    resetPreviousSymbol                  : modules.trade.resetPreviousSymbol,\n    clearPurchaseInfo                    : modules.trade.clearPurchaseInfo,\n    resetPurchase                        : modules.trade.requestProposal,\n    services_error                       : common.services_error,\n    switchAccount                        : client.switchAccount,\n    setHasOnlyForwardingContracts        : ui.setHasOnlyForwardingContracts,\n    toggleServicesErrorModal             : ui.toggleServicesErrorModal,\n    virtual_account_loginid              : client.virtual_account_loginid,\n}))(Modals);\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { withRouter }                 from 'react-router';\nimport BinaryRoutes                   from 'App/Components/Routes';\nimport Lazy                           from 'App/Containers/Lazy';\nimport { connect }                    from 'Stores/connect';\n\nconst Routes = (props) => {\n    if (props.has_error) {\n        return (\n            <Lazy\n                ctor={() => import(/* webpackChunkName: \"error-component\" */'App/Components/Elements/Errors')}\n                should_load={props.has_error}\n                has_progress={true}\n                {...props.error}\n            />\n        );\n    }\n\n    return <BinaryRoutes is_logged_in={props.is_logged_in} />;\n};\n\nRoutes.propTypes = {\n    error       : MobxPropTypes.objectOrObservableObject,\n    has_error   : PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <BinaryRoutes /> from being blocked\nexport default withRouter(connect(\n    ({ client, common }) => ({\n        is_logged_in: client.is_logged_in,\n        error       : common.error,\n        has_error   : common.has_error,\n    })\n)(Routes));\n","import { action }              from 'mobx';\nimport NetworkMonitorBase      from '_common/base/network_monitor_base'; // eslint-disable-line import/order\nimport { BinarySocketGeneral } from './index';\n\nlet common_store;\n\nconst NetworkMonitor = (() => {\n    const init = (store) => {\n        NetworkMonitorBase.init(BinarySocketGeneral.init(store), updateStore);\n        common_store = store.common;\n    };\n\n    const updateStore = action((status, is_online) => {\n        if (common_store) {\n            common_store.setNetworkStatus(status, is_online);\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default NetworkMonitor;\n","import { action }   from 'mobx';\nimport { localize } from 'App/i18n';\n\nlet common_store;\n\nconst OutdatedBrowser = (() => {\n    const init = (store) => {\n        common_store = store.common;\n\n        const src = '//browser-update.org/update.min.js';\n        if (document.querySelector(`script[src*=\"${src}\"]`)) return;\n        window.$buoop = {\n            vs       : { i: 11, f: -4, o: -4, s: 9, c: -4 },\n            api      : 4,\n            url      : 'https://whatbrowser.org/',\n            noclose  : true, // Do not show the 'ignore' button to close the notification\n            reminder : 0, // show all the time\n            onshow   : updateStore,\n            nomessage: true,\n            insecure : true,\n        };\n        if (document.body) {\n            const script = document.createElement('script');\n            script.setAttribute('src', src);\n            document.body.appendChild(script);\n        }\n    };\n\n    const updateStore = action('showError', () => {\n        if (common_store) { // TODO: i18n_issue\n            common_store.showError({\n                message: localize('Your web browser is out of date and may affect your trading experience. Please {{opening_tag}}update your browser{{closing_tag}}.', {\n                    opening_tag  : '<a href=\"http://outdatedbrowser.com\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"link\">',\n                    closing_tag  : '</a>',\n                    interpolation: { escapeValue: false },\n                }),\n                has_html: true,\n            });\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default OutdatedBrowser;\n","import React            from 'react';\nimport { formatDate }   from 'Utils/Date';\nimport { WS }           from 'Services';\nimport { getRiskAssessment,\n    isAccountOfType,\n    shouldAcceptTnc,\n    shouldCompleteTax } from '_common/base/client_base';\nimport { localize }     from 'App/i18n';\nimport {\n    LocalStore,\n    State }             from '_common/storage';\nimport { urlFor }       from '_common/url';\nimport Localize         from '../../App/Components/Elements/localize.jsx';\n\n// TODO: Update links to app_2 links when components are done.\n/* eslint-disable react/jsx-no-target-blank */\nconst client_notifications = {\n    currency: {\n        header : localize('Set Currency'),\n        message: (\n            <Localize\n                i18n_default_text='Please set the <0>currency</0> of your account to enable trading.'\n                components={[<a key={0} className='link link--white' target='_blank' href={urlFor('user/set-currency', undefined, undefined, true)} />]}\n            />\n        ),\n        type: 'danger',\n    },\n    self_exclusion: (excluded_until) => ({\n        header : localize('Self-exclusion Detected'),\n        message: (\n            <Localize\n                i18n_default_text='You have opted to be excluded from Binary.com until {{exclusion_end}}. Please <0>contact us</0> for assistance.'\n                values={{ exclusion_end: formatDate(excluded_until, 'DD/MM/YYYY'), interpolation: { escapeValue: false } }}\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('contact', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    }),\n    authenticate: {\n        header : localize('Account Authentication'),\n        message: (\n            <Localize\n                i18n_default_text='<0>Authenticate your account</0> now to take full advantage of all payment methods available.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/authenticate', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'info',\n    },\n    cashier_locked: {\n        header : localize('Cashier Disabled'),\n        message: localize('Deposits and withdrawals have been disabled on your account. Please check your email for more details.'),\n        type   : 'warning',\n    },\n    withdrawal_locked: {\n        header : localize('Withdrawal Disabled'),\n        message: localize('Withdrawals have been disabled on your account. Please check your email for more details.'),\n        type   : 'warning',\n    },\n    mt5_withdrawal_locked: {\n        header : localize('MT5 Withdrawal Disabled'),\n        message: localize('MT5 withdrawals have been disabled on your account. Please check your email for more details.'),\n        type   : 'warning',\n    },\n    document_needs_action: {\n        header : localize('Authentication Failed'),\n        message: (\n            <Localize\n                i18n_default_text='<0>Your Proof of Identity or Proof of Address</0> did not meet our requirements. Please check your email for further instructions.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/authenticate', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'warning',\n    },\n    unwelcome: {\n        header : localize('Trading and Deposits Disabled'),\n        message: (\n            <Localize\n                i18n_default_text='Trading and deposits have been disabled on your account. Kindly contact <0>customer support</0> for assistance.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('contact', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n    mf_retail: {\n        header : localize('Binary Options Trading Disabled'),\n        message: (\n            <Localize\n                i18n_default_text='Binary Options Trading has been disabled on your account. Kindly contact <0>customer support</0> for assistance.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('contact', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n    financial_limit: {\n        header : localize('Remove Deposit Limits'),\n        message: (\n            <Localize\n                i18n_default_text='Please set your <0>30-day turnover limit</0> to remove deposit limits.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/security/self_exclusionws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'warning',\n    },\n    risk: {\n        header : localize('Withdrawal and Trading Limits'),\n        message: (\n            <Localize\n                i18n_default_text='Please complete the <0>Financial Assessment form</0> to lift your withdrawal and trading limits.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/settings/assessmentws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'info',\n    },\n    tax: {\n        header : localize('Complete your personal details'),\n        message: (\n            <Localize\n                i18n_default_text='Please complete your <0>Personal Details</0> before you proceed.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/settings/detailsws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n    tnc: {\n        header : localize('Terms & Conditions Updated'),\n        message: (\n            <Localize\n                i18n_default_text='Please <0>accept the updated Terms and Conditions</0> to enable deposit and trading.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/tnc_approvalws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n    required_fields: {\n        header : localize('Complete your personal details'),\n        message: (\n            <Localize\n                i18n_default_text='Please complete your <0>Personal Details</0> before you proceed.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/settings/detailsws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n};\n\nconst hasMissingRequiredField = (response, client) => {\n    if (!response.get_settings) return false;\n\n    const { landing_company_shortcode } = client;\n    const is_svg = (landing_company_shortcode === 'svg' || landing_company_shortcode === 'costarica');\n\n    let required_fields;\n    if (is_svg) {\n        required_fields = getSVGRequiredFields();\n    } else {\n        required_fields = getRequiredFields();\n    }\n\n    const get_settings = response.get_settings;\n    return required_fields.some(field => !get_settings[field]);\n\n    function getSVGRequiredFields() {\n        const necessary_withdrawal_fields = State.getResponse('landing_company.financial_company.requirements.withdrawal');\n        const necessary_signup_fields     = State.getResponse('landing_company.financial_company.requirements.signup')\n            .map(field => (field === 'residence' ? 'country' : field));\n\n        return [...necessary_withdrawal_fields, ...necessary_signup_fields];\n    }\n\n    function getRequiredFields() {\n        if (!isAccountOfType('financial')) return [];\n        const { residence } = client;\n\n        const required_settings_fields = [\n            'account_opening_reason',\n            'address_line_1',\n            'address_city',\n            'phone',\n            'tax_identification_number',\n            'tax_residence'];\n        const address_postcode_is_required = (residence === 'gb' || landing_company_shortcode === 'iom');\n        if (address_postcode_is_required) required_settings_fields.push('address_postcode');\n\n        return [...required_settings_fields];\n    }\n};\n\nconst checkAccountStatus = (response, client, addNotification, loginid) => {\n    if (!response.get_account_status) return;\n    if (loginid !== LocalStore.get('active_loginid')) return;\n\n    const { prompt_client_to_authenticate, status } = response.get_account_status;\n\n    const {\n        document_under_review,\n        cashier_locked,\n        withdrawal_locked,\n        mt5_withdrawal_locked,\n        document_needs_action,\n        unwelcome,\n        ukrts_max_turnover_limit_not_set,\n        professional,\n    } = getStatusValidations(status);\n    const is_mf_retail = client.landing_company_shortcode === 'maltainvest' && !professional;\n\n    if (cashier_locked)        addNotification(client_notifications.cashier_locked);\n    if (withdrawal_locked)     addNotification(client_notifications.withdrawal_locked);\n    if (mt5_withdrawal_locked) addNotification(client_notifications.mt5_withdrawal_locked);\n    if (document_needs_action) addNotification(client_notifications.document_needs_action);\n    if (unwelcome)             addNotification(client_notifications.unwelcome);\n    if (is_mf_retail)          addNotification(client_notifications.mf_retail);\n    if (ukrts_max_turnover_limit_not_set) {\n        addNotification(client_notifications.financial_limit);\n    }\n    if (getRiskAssessment()) addNotification(client_notifications.risk);\n    if (shouldCompleteTax()) addNotification(client_notifications.tax);\n\n    if ((+prompt_client_to_authenticate) && !(document_under_review || document_needs_action)) {\n        addNotification(client_notifications.authenticate);\n    }\n\n    function getStatusValidations(status_arr) {\n        return status_arr.reduce((validations, account_status) => {\n            validations[account_status] = true;\n            return validations;\n        }, {});\n    }\n};\n\nexport const handleClientNotifications = (client, addNotification, loginid) => {\n    const { currency, excluded_until } = client;\n    if (!currency)         addNotification(client_notifications.currency);\n    if (excluded_until)    addNotification(client_notifications.self_exclusion(excluded_until));\n\n    WS.getAccountStatus().then((response) => checkAccountStatus(response, client, addNotification, loginid));\n\n    WS.sendRequest({ get_settings: 1 }, { forced: true }).then((response) => {\n        if (loginid !== LocalStore.get('active_loginid')) return;\n\n        if (shouldAcceptTnc()) addNotification(client_notifications.tnc);\n\n        if (hasMissingRequiredField(response, client)) {\n            addNotification(client_notifications.required_fields);\n        }\n    });\n};\n","import Client                    from '_common/base/client_base';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport { getElementById }        from '_common/common_functions';\nimport { localize }              from 'App/i18n';\nimport { compareBigUnsignedInt } from '_common/string_util';\nimport { cloneObject }           from '_common/utility';\n\n// ------------------------------\n// ----- Validation Methods -----\n// ------------------------------\nconst validRequired     = (value/* , options, field */) => {\n    if (value === undefined || value === null) {\n        return false;\n    }\n\n    const str = String(value).replace(/\\s/g, '');\n    return str.length > 0;\n};\nconst validEmail        = value => /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,63}$/.test(value);\nconst validPassword     = value => /(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]+/.test(value);\nconst validLetterSymbol = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><,|\\d]+/.test(value);\nconst validGeneral      = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><|]+/.test(value);\nconst validAddress      = value => !/[`~!$%^&*_=+[}{\\]\\\\\"?><|]+/.test(value);\nconst validPostCode     = value => /^[a-zA-Z\\d-\\s]*$/.test(value);\nconst validPhone        = value => /^\\+?[0-9\\s]*$/.test(value);\nconst validRegular      = (value, options) => options.regex.test(value);\nconst validEmailToken   = value => value.trim().length === 8;\nconst validTaxID        = value => /^[a-zA-Z0-9]*[\\w-]*$/.test(value);\nconst validBarrier      = value => /^[+-]?\\d+\\.?\\d*$/.test(value);\n\nconst validCompare  = (value, options) => value === getElementById(options.to.substr(1)).value;\nconst validNotEqual = (value, options) => value !== getElementById(options.to.substr(1)).value;\nconst validMin      = (value, options) => (options.min ? value.length >= options.min : true);\nconst validLength   = (value, options) => (\n    (options.min ? value.length >= options.min : true) &&\n    (options.max ? value.length <= options.max : true)\n);\n\nconst validNumber = (value, opts) => {\n    const options = cloneObject(opts);\n    let message = null;\n    if (options.allow_empty && value.length === 0) {\n        return true;\n    }\n\n    let is_ok = true;\n    if ('min' in options && typeof options.min === 'function') {\n        options.min = options.min();\n    }\n    if ('max' in options && typeof options.max === 'function') {\n        options.max = options.max();\n    }\n\n    if (!(options.type === 'float' ? /^\\d*(\\.\\d+)?$/ : /^\\d+$/).test(value) || isNaN(value)) {\n        is_ok   = false;\n        message = localize('Should be a valid number.');\n    } else if (options.type === 'float' && options.decimals &&\n        !(new RegExp(`^\\\\d+(\\\\.\\\\d{0,${options.decimals}})?$`).test(value))) {\n        is_ok   = false;\n        message = localize('Up to {{decimal_count}} decimal places are allowed.', { decimal_count: options.decimals });\n    } else if ('min' in options && 'max' in options && +options.min === +options.max && +value !== +options.min) {\n        is_ok   = false;\n        message = localize('Should be {{value}}', { value: addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined) });\n    } else if ('min' in options && 'max' in options && (+value < +options.min || isMoreThanMax(value, options))) {\n        is_ok   = false;\n        message = localize(\n            'Should be between {{min_value}} and {{max_value}}',\n            {\n                min_value: addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined),\n                max_value: addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined),\n            }\n        );\n    } else if ('min' in options && +value < +options.min) {\n        is_ok   = false;\n        message = localize('Should be more than {{min_value}}', { min_value: addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined) });\n    } else if ('max' in options && isMoreThanMax(value, options)) {\n        is_ok   = false;\n        message = localize('Should be less than {{max_value}}', { max_value: addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined) });\n    }\n\n    getPreBuildDVRs().number.message = message;\n    return is_ok;\n};\n\nconst isMoreThanMax = (value, options) =>\n    (options.type === 'float' ? +value > +options.max : compareBigUnsignedInt(value, options.max) === 1);\n\nconst initPreBuildDVRs = () => ({\n    address      : { func: validAddress,      message: localize('Only letters, numbers, space, and these special characters are allowed: {{permitted_characters}}', { permitted_characters: '- . \\' # ; : ( ) , @ /' }) },\n    barrier      : { func: validBarrier,      message: localize('Only numbers and these special characters are allowed: {{permitted_characters}}', { permitted_characters: '+ - .' }) },\n    compare      : { func: validCompare,      message: localize('The two passwords that you entered do not match.') },\n    email        : { func: validEmail,        message: localize('Invalid email address.') },\n    general      : { func: validGeneral,      message: localize('Only letters, numbers, space, hyphen, period, and apostrophe are allowed.') },\n    length       : { func: validLength,       message: localize('You should enter {{value}} characters.', { value: '{{value}}' }) },\n    letter_symbol: { func: validLetterSymbol, message: localize('Only letters, space, hyphen, period, and apostrophe are allowed.') },\n    min          : { func: validMin,          message: localize('Minimum of {{value}} characters required.', { value: '{{value}}' }) },\n    not_equal    : { func: validNotEqual,     message: localize('{{value_one}} and {{value_two}} cannot be the same.', { value_one: '{{value_one}}', value_two: '{{value_two}}' }) },\n    number       : { func: validNumber,       message: '' }, // TODO: i18n_issue\n    password     : { func: validPassword,     message: localize('Password should have lower and uppercase letters with numbers.') },\n    phone        : { func: validPhone,        message: localize('Only numbers and spaces are allowed.') },\n    postcode     : { func: validPostCode,     message: localize('Only letters, numbers, space, and hyphen are allowed.') },\n    regular      : { func: validRegular,      message: '' },\n    req          : { func: validRequired,     message: '' },\n    signup_token : { func: validEmailToken,   message: localize('The length of token should be 8.') },\n    tax_id       : { func: validTaxID,        message: localize('Should start with letter or number, and may contain hyphen and underscore.') },\n});\n\nlet pre_build_dvrs;\nexport const getPreBuildDVRs = () => {\n    if (!pre_build_dvrs) {\n        pre_build_dvrs = initPreBuildDVRs();\n    }\n    return pre_build_dvrs;\n};\n\nexport const getPasswordLengthConfig = type => ({ min: (/^mt$/.test(type) ? 8 : 6), max: 25 });\n","class Errors {\n    constructor() {\n        this.errors = {};\n    }\n\n    add(attribute, message) {\n        if (!this.has(attribute)) {\n            this.errors[attribute] = [];\n        }\n\n        if (this.errors[attribute].indexOf(message) === -1) {\n            this.errors[attribute].push(message);\n        }\n    }\n\n    all() {\n        return this.errors;\n    }\n\n    first(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute][0];\n        }\n        return null;\n    }\n\n    get(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute];\n        }\n\n        return [];\n    }\n\n    has(attribute) {\n        return Object.prototype.hasOwnProperty.call(this.errors, attribute);\n    }\n}\n\nexport default Errors;\n","import { template }        from '_common/utility';\nimport { getPreBuildDVRs } from './declarative-validation-rules';\nimport Error               from './errors';\n\nclass Validator {\n    constructor(input, rules, store = null) {\n        this.input  = input;\n        this.rules  = rules;\n        this.store  = store;\n        this.errors = new Error();\n\n        this.error_count = 0;\n    }\n\n    /**\n     * Add failure and error message for given rule\n     *\n     * @param {string} attribute\n     * @param {object} rule\n     */\n    addFailure(attribute, rule) {\n        let message = rule.options.message || getPreBuildDVRs()[rule.name].message;\n        if (rule.name === 'length') {\n            message = template(message, [rule.options.min === rule.options.max ? rule.options.min : `${rule.options.min}-${rule.options.max}`]);\n        } else if (rule.name === 'min') {\n            message = template(message, [rule.options.min]);\n        } else if (rule.name === 'not_equal') {\n            message = template(message, [rule.options.name1, rule.options.name2]);\n        }\n        this.errors.add(attribute, message);\n        this.error_count++;\n    }\n\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n    check() {\n        Object.keys(this.input).forEach(attribute => {\n            if (!Object.prototype.hasOwnProperty.call(this.rules, attribute)) {\n                return;\n            }\n\n            this.rules[attribute].forEach(rule => {\n                const ruleObject = Validator.getRuleObject(rule);\n\n                if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n                    return;\n                }\n\n                if (ruleObject.options.condition && !ruleObject.options.condition(this.store)) {\n                    return;\n                }\n\n                if (this.input[attribute] === '' && ruleObject.name !== 'req') {\n                    return;\n                }\n\n                const is_valid = ruleObject.validator(\n                    this.input[attribute],\n                    ruleObject.options,\n                    this.store,\n                    this.input\n                );\n\n                if (!is_valid) {\n                    this.addFailure(attribute, ruleObject);\n                }\n            });\n        });\n        return !this.error_count;\n    }\n\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n    isPassed() {\n        return this.check();\n    }\n\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n    static getRuleObject(rule) {\n        const is_rule_string = typeof rule === 'string';\n        const rule_object = {\n            name   : is_rule_string ? rule : rule[0],\n            options: is_rule_string ? {} : rule[1] || {},\n        };\n\n        rule_object.validator = rule_object.name === 'custom' ? rule[1].func : getPreBuildDVRs()[rule_object.name].func;\n\n        return rule_object;\n    }\n}\n\nexport default Validator;\n","import {\n    action,\n    intercept,\n    observable,\n    reaction,\n    toJS,\n    when }               from 'mobx';\nimport BinarySocket      from '_common/base/socket_base';\nimport { isEmptyObject } from '_common/utility';\nimport Validator         from 'Utils/Validator';\nimport { isProduction }  from '../config';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE  : Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    @observable\n    validation_errors = {};\n\n    @observable\n    validation_rules = {};\n\n    switchAccountDisposer = null;\n    switch_account_listener = null;\n\n    @observable partial_fetch_time = 0;\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     *     @property {String}   store_name - Explicit store name for browser application storage (to bypass minification)\n     */\n    constructor(options = {}) {\n        const {\n            root_store,\n            local_storage_properties,\n            session_storage_properties,\n            validation_rules,\n            store_name,\n        } = options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n\n        const has_local_or_session_storage = local_storage_properties && local_storage_properties.length\n            || session_storage_properties && session_storage_properties.length;\n\n        if (has_local_or_session_storage) {\n            if (!store_name) {\n                throw new Error('store_name is required for local/session storage');\n            }\n\n            Object.defineProperty(this, 'store_name', {\n                value     : store_name,\n                enumerable: false,\n                writable  : false,\n            });\n        }\n\n        this.root_store                 = root_store;\n        this.local_storage_properties   = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n        this.setValidationRules(validation_rules);\n\n        this.setupReactionForLocalStorage();\n        this.setupReactionForSessionStorage();\n        this.retrieveFromStorage();\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce(\n                (result, p) => Object.assign(result, { [p]: snapshot[p] }),\n                {},\n            );\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties), (key, value) => {\n            if (value !== null) return value;\n            return undefined;\n        });\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.store_name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.store_name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    @action\n    retrieveFromStorage() {\n        const local_storage_snapshot   = JSON.parse(localStorage.getItem(this.store_name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.store_name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach((k) => this[k] = snapshot[k]);\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param [{String}] messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    @action\n    setValidationErrorMessages(propertyName, messages) {\n        const is_different = () => !!this.validation_errors[propertyName]\n            .filter(x => !messages.includes(x))\n            .concat(messages.filter(x => !this.validation_errors[propertyName].includes(x)))\n            .length;\n        if (!this.validation_errors[propertyName] || is_different()) {\n            this.validation_errors[propertyName] = messages;\n        }\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    @action\n    setValidationRules(rules = {}) {\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    @action\n    addRule(property, rules) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    @action\n    validateProperty(property, value) {\n        const trigger          = this.validation_rules[property].trigger;\n        const inputs           = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: (this.validation_rules[property].rules || []) };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger]           = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(\n            inputs,\n            validation_rules,\n            this,\n        );\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    @action\n    validateAllProperties() {\n        const validation_rules  = Object.keys(this.validation_rules);\n        const validation_errors = Object.keys(this.validation_errors);\n\n        validation_rules.forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n\n        // Remove keys that are present in error, but not in rules:\n        validation_errors.forEach(error => {\n            if (!validation_rules.includes(error)) {\n                delete this.validation_errors[error];\n            }\n        });\n    }\n\n    @action.bound\n    onSwitchAccount(listener) {\n        this.switchAccountDisposer = when(\n            () => this.root_store.client.switch_broadcast,\n            async () => {\n                try {\n                    const result = this.switch_account_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.switchEndSignal();\n                            this.onSwitchAccount(this.switch_account_listener);\n                        });\n                    } else {\n                        throw new Error('Switching account listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            },\n        );\n        this.switch_account_listener = listener;\n    }\n\n    @action.bound\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n    }\n\n    @action.bound\n    assertHasValidCache(loginid, ...reactions) {\n        // account was changed when this was unmounted.\n        if (this.root_store.client.loginid !== loginid) {\n            reactions.forEach(act => act());\n            this.partial_fetch_time = false;\n        }\n    }\n\n    waitFor = async (...prerequisites) => {\n        await BinarySocket.wait(...prerequisites);\n    };\n}\n","import { isCryptocurrency } from '_common/base/currency_base';\nimport { localize }         from 'App/i18n';\n\nexport const buildCurrenciesList = (payout_currencies) => {\n    const fiat   = [];\n    const crypto = [];\n\n    payout_currencies.forEach((cur) => {\n        const isCrypto = isCryptocurrency(cur);\n        (isCrypto ? crypto : fiat).push({ text: cur, value: cur, has_tooltip: isCrypto });\n    });\n\n    return {\n        [localize('Fiat')]  : fiat,\n        [localize('Crypto')]: crypto,\n    };\n};\n\nexport const getDefaultCurrency = (currencies_list, currency = '') => {\n    const supported_currencies = Object.values(currencies_list).reduce((a, b) => [...a, ...b]);\n    const default_currency =\n              supported_currencies.find(c => c.value === currency) ? currency : supported_currencies[0].value;\n\n    return {\n        currency: default_currency,\n    };\n};\n","import {\n    action,\n    computed,\n    observable,\n    runInAction,\n    when,\n}                                    from 'mobx';\nimport moment                        from 'moment';\nimport {\n    requestLogout,\n    WS }                             from 'Services';\nimport { getAccountTitle }           from '_common/base/client_base';\nimport BinarySocket                  from '_common/base/socket_base';\nimport * as SocketCache              from '_common/base/socket_cache';\nimport { localize }                  from 'App/i18n';\nimport {\n    LocalStore,\n    State }                          from '_common/storage';\nimport BinarySocketGeneral           from 'Services/socket-general';\nimport { handleClientNotifications } from './Helpers/client-notifications';\nimport BaseStore                     from './base-store';\nimport { getClientAccountType }      from './Helpers/client';\nimport { buildCurrenciesList }       from './Modules/Trading/Helpers/currency';\nimport { setCurrencies }             from '../_common/base/currency_base';\n\nconst storage_key = 'client.accounts';\nexport default class ClientStore extends BaseStore {\n    @observable loginid;\n    @observable upgrade_info;\n    @observable accounts;\n    @observable email;\n    @observable switched                   = '';\n    @observable switch_broadcast           = false;\n    @observable currencies_list            = {};\n    @observable residence_list             = [];\n    @observable selected_currency          = '';\n    @observable is_populating_account_list = false;\n    @observable website_status             = {};\n    @observable verification_code          = '';\n\n    constructor(root_store) {\n        super({ root_store });\n    }\n\n    @computed\n    get balance() {\n        if (!this.accounts) return '';\n        return (this.accounts[this.loginid] && this.accounts[this.loginid].balance) ?\n            this.accounts[this.loginid].balance.toString() :\n            '';\n    }\n\n    /**\n     * Temporary property. should be removed once we are fully migrated from the old app.\n     *\n     * @returns {boolean}\n     */\n    @computed\n    get is_client_allowed_to_visit() {\n        return !!(\n            !this.is_logged_in || this.is_virtual || this.accounts[this.loginid].landing_company_shortcode === 'svg'\n        );\n    }\n\n    @computed\n    get account_list() {\n        return this.all_loginids.map(id => (\n            !this.isDisabled(id) &&\n            this.getToken(id) ?\n                this.getAccountInfo(id) :\n                undefined\n        )).filter(account => account);\n    }\n\n    @computed\n    get active_accounts() {\n        return this.accounts instanceof Object\n            ? Object.values(this.accounts).filter(account => !account.is_disabled)\n            : [];\n    }\n\n    @computed\n    get all_loginids() {\n        return this.accounts instanceof Object ? Object.keys(this.accounts) : [];\n    }\n\n    @computed\n    get account_title() {\n        return getAccountTitle(this.loginid);\n    }\n\n    @computed\n    get currency() {\n        if (this.selected_currency.length) {\n            return this.selected_currency;\n        } else if (this.is_logged_in) {\n            return this.accounts[this.loginid].currency;\n        }\n        return this.default_currency;\n\n    }\n\n    @computed\n    get default_currency() {\n        if (Object.keys(this.currencies_list).length > 0) {\n            const keys = Object.keys(this.currencies_list);\n            return Object.values(this.currencies_list[`${keys[0]}`])[0].text;\n        } return 'USD';\n    }\n\n    @computed\n    get is_valid_login() {\n        if (!this.is_logged_in) return true;\n        const valid_login_ids_regex = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG)[0-9]+$', 'i');\n        return this.all_loginids.every(id => valid_login_ids_regex.test(id));\n    }\n\n    @computed\n    get is_logged_in() {\n        return !!(\n            this.accounts instanceof Object &&\n            Object.keys(this.accounts).length > 0 &&\n            this.loginid &&\n            this.accounts[this.loginid].token\n        );\n    }\n\n    @computed\n    get is_virtual() {\n        return this.accounts && this.accounts[this.loginid] && !!this.accounts[this.loginid].is_virtual;\n    }\n\n    @computed\n    get can_upgrade() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade || this.upgrade_info.can_open_multi);\n    }\n\n    @computed\n    get can_upgrade_to() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade_to);\n    }\n\n    @computed\n    get virtual_account_loginid() {\n        return this.all_loginids\n            .find(loginid => !!this.accounts[loginid].is_virtual);\n    }\n\n    @computed\n    get is_single_currency() {\n        return Object.keys(this.currencies_list).map(type => Object.values(this.currencies_list[type]).length)\n            .reduce((acc, cur) => acc + cur, 0) === 1;\n    }\n\n    @computed\n    get account_type() {\n        return getClientAccountType(this.loginid);\n    }\n\n    /**\n     * Store Values relevant to the loginid to local storage.\n     *\n     * @param loginid\n     */\n    @action.bound\n    resetLocalStorageValues(loginid) {\n        this.accounts[loginid].accepted_bch = 0;\n        LocalStore.setObject(storage_key, this.accounts);\n        LocalStore.set('active_loginid', loginid);\n        this.loginid = loginid;\n    }\n\n    @action.bound\n    getBasicUpgradeInfo() {\n        const upgradeable_landing_companies = State.getResponse('authorize.upgradeable_landing_companies');\n        let can_open_multi                  = false;\n        let type,\n            can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            can_open_multi   = upgradeable_landing_companies.indexOf(\n                this.accounts[this.loginid].landing_company_shortcode) !== -1;\n            const canUpgrade = (...landing_companies) => landing_companies.find(landing_company => (\n                landing_company !== this.accounts[this.loginid].landing_company_shortcode &&\n                upgradeable_landing_companies.indexOf(landing_company) !== -1\n            ));\n            can_upgrade_to   = canUpgrade('svg', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    }\n\n    @action.bound\n    responsePayoutCurrencies(response) {\n        const list = response.payout_currencies || response;\n        this.currencies_list = buildCurrenciesList(list);\n        this.selectCurrency('');\n    }\n\n    @action.bound\n    responseAuthorize(response) {\n        this.accounts[this.loginid].email                     = response.authorize.email;\n        this.accounts[this.loginid].currency                  = response.authorize.currency;\n        this.accounts[this.loginid].is_virtual                = +response.authorize.is_virtual;\n        this.accounts[this.loginid].session_start             = parseInt(moment().utc().valueOf() / 1000);\n        this.accounts[this.loginid].landing_company_shortcode = response.authorize.landing_company_name;\n        this.updateAccountList(response.authorize.account_list);\n        this.upgrade_info = this.getBasicUpgradeInfo();\n        this.user_id      = response.authorize.user_id;\n    }\n\n    @action.bound\n    setWebsiteStatus(response) {\n        this.website_status = response.website_status;\n        setCurrencies(this.website_status);\n    }\n\n    @computed\n    get is_website_status_ready () {\n        return this.website_status &&\n        this.website_status.site_status === 'up';\n    }\n\n    @action.bound\n    updateAccountList(account_list) {\n        account_list.forEach((account) => {\n            if (this.accounts[account.loginid]) {\n                this.accounts[account.loginid].excluded_until = account.excluded_until || '';\n                Object.keys(account).forEach((param) => {\n                    const param_to_set = param === 'country' ? 'residence' : param;\n                    const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                    if (param_to_set !== 'loginid') {\n                        this.accounts[account.loginid][param_to_set] = value_to_set;\n                    }\n                });\n            }\n        });\n    }\n\n    /**\n     * Switch to the given loginid account.\n     *\n     * @param {string} loginid\n     */\n    @action.bound\n    switchAccount(loginid) {\n        this.root_store.ui.removeAllNotifications();\n        this.setSwitched(loginid);\n    }\n\n    @action.bound\n    switchEndSignal() {\n        this.switch_broadcast = false;\n        this.root_store.ui.is_app_blurred = false;\n    }\n\n    /**\n     * We initially fetch things from local storage, and then do everything inside the store.\n     * This will probably be the only place we are fetching data from Client_base.\n     */\n    @action.bound\n    async init() {\n        const authorize_response = await this.setUserLogin();\n        this.setLoginId(LocalStore.get('active_loginid'));\n        this.setAccounts(LocalStore.getObject(storage_key));\n        this.setSwitched('');\n        const client = this.accounts[this.loginid];\n\n        // If there is an authorize_response, it means it was the first login\n        if (authorize_response) {\n            // If this fails, it means the landing company check failed\n            if (this.loginid === authorize_response.authorize.loginid) {\n                BinarySocketGeneral.authorizeAccount(authorize_response);\n            } else { // So it will send an authorize with the accepted token, to be handled by socket-general\n                await BinarySocket.send({ authorize: client.token }, { forced: true });\n            }\n        }\n\n        if (client && !client.is_virtual) {\n            BinarySocket.wait('landing_company', 'website_status').then(() => {\n                handleClientNotifications(client, this.root_store.ui.addNotification, this.loginid);\n            });\n        }\n\n        this.selectCurrency('');\n\n        this.responsePayoutCurrencies(await WS.payoutCurrencies());\n\n        this.registerReactions();\n    }\n\n    @action.bound\n    setLoginId(loginid) {\n        this.loginid = loginid;\n    }\n\n    @action.bound\n    setAccounts(accounts) {\n        this.accounts = accounts;\n    }\n\n    @action.bound\n    setSwitched(switched) {\n        this.switched = switched;\n    }\n\n    /**\n     * Check if account is disabled or not\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    isDisabled(loginid = this.loginid) {\n        return this.getAccount(loginid).is_disabled;\n    }\n\n    /**\n     * Get accounts token from given login id.\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    getToken(loginid = this.loginid) {\n        return this.getAccount(loginid).token;\n    }\n\n    /**\n     * Get account object from given login id\n     *\n     * @param loginid\n     * @returns {object}\n     */\n    getAccount(loginid = this.loginid) {\n        return this.accounts[loginid];\n    }\n\n    /**\n     * Get information required by account switcher\n     *\n     * @param loginid\n     * @returns {{loginid: *, is_virtual: (number|number|*), icon: string, title: *}}\n     */\n    getAccountInfo(loginid = this.loginid) {\n        const account      = this.getAccount(loginid);\n        const currency     = account.currency;\n        const is_virtual   = account.is_virtual;\n        const account_type = !is_virtual && currency ? currency : getAccountTitle(loginid);\n\n        return {\n            loginid,\n            is_virtual,\n            icon : account_type.toLowerCase(), // TODO: display the icon\n            title: account_type.toLowerCase() === 'virtual' ? localize('DEMO') : account_type,\n        };\n    }\n\n    @action.bound\n    broadcastAccountChange() {\n        this.switch_broadcast = true;\n    }\n\n    @action.bound\n    async switchAccountHandler () {\n        if (!this.switched || !this.switched.length || !this.getAccount(this.switched).token) {\n            // Logout if the switched_account doesn't belong to any loginid.\n            if (!this.all_loginids.some(id => id !== this.switched) || this.switched === this.loginid) {\n                this.root_store.ui.addNotification({\n                    message: localize('Could not switch to default account.'),\n                    type   : 'danger',\n                });\n                // request a logout\n                requestLogout();\n                this.root_store.modules.trade.clearContract();\n                return;\n            }\n\n            this.root_store.modules.portfolio.clearTable();\n            // Send a toast message to let the user know we can't switch his account.\n            this.root_store.ui.addNotification({\n                message: localize('Switching to default account.'),\n                type   : 'info',\n            });\n\n            // switch to default account.\n            this.switchAccount(this.all_loginids[0]);\n            await this.switchAccountHandler();\n            return;\n        }\n        sessionStorage.setItem('active_tab', '1');\n        // set local storage\n        this.root_store.gtm.setLoginFlag();\n        this.resetLocalStorageValues(this.switched);\n        SocketCache.clear();\n        await BinarySocket.send({ 'authorize': this.getToken() }, { forced: true });\n        await this.init();\n        this.broadcastAccountChange();\n    }\n\n    @action.bound\n    registerReactions() {\n        // Switch account reactions.\n        when(\n            () => this.switched,\n            this.switchAccountHandler\n        );\n    }\n\n    @action.bound\n    setBalance(balance) {\n        this.accounts[this.loginid].balance = balance;\n    }\n\n    @action.bound\n    selectCurrency(value) {\n        this.selected_currency = value;\n    }\n\n    @action.bound\n    setResidence(residence) {\n        this.accounts[this.loginid].residence = residence;\n    }\n\n    @action.bound\n    setEmail(email) {\n        this.accounts[this.loginid].email = email;\n        this.email = email;\n    }\n\n    @action.bound\n    cleanUp() {\n        this.root_store.gtm.pushDataLayer({ event: 'log_out' });\n        this.loginid = null;\n        this.upgrade_info = undefined;\n        this.accounts = [];\n        this.currencies_list  = {};\n        this.selected_currency = '';\n        this.root_store.modules.smart_chart.should_refresh_active_symbols = true;\n        return new Promise(async (resolve) => {\n            await this.root_store.modules.trade.clearContract();\n            await this.root_store.modules.trade.resetErrorServices();\n            await this.root_store.ui.removeAllNotifications();\n            await this.root_store.modules.trade.refresh();\n            return resolve(this.root_store.modules.trade.debouncedProposal());\n        });\n    }\n\n    /* eslint-disable */\n    @action.bound\n    storeClientAccounts(obj_params, account_list) {\n        // store consistent names with other API calls\n        // API_V4: send consistent names\n        const map_names = {\n            country             : 'residence',\n            landing_company_name: 'landing_company_shortcode',\n        };\n        const client_object = {};\n        let active_loginid;\n\n        let is_allowed_real = true;\n        // Performs check to avoid login of landing companies that are currently not supported in app\n        account_list.forEach(function(account) {\n            if (!/^virtual|svg$/.test(account.landing_company_name)) {\n                is_allowed_real = false;\n            }\n        });\n\n        account_list.forEach(function(account) {\n            Object.keys(account).forEach(function(param) {\n                if (param === 'loginid') {\n                    if (!active_loginid && !account.is_disabled) {\n                        if (is_allowed_real && !account.is_virtual) {\n                            active_loginid = account[param];\n                        } else if (account.is_virtual) { // TODO: [only_virtual] remove this to stop logging non-SVG clients into virtual\n                            active_loginid = account[param];\n                        }\n                    }\n                } else {\n                    const param_to_set = map_names[param] || param;\n                    const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                    if (!(account.loginid in client_object)) {\n                        client_object[account.loginid] = {};\n                    }\n                    client_object[account.loginid][param_to_set] = value_to_set;\n                }\n            });\n        });\n\n        let i = 1;\n        while (obj_params[`acct${  i}`]) {\n            const loginid = obj_params[`acct${  i}`];\n            const token   = obj_params[`token${  i}`];\n            if (loginid && token) {\n                client_object[loginid].token = token;\n            }\n            i++;\n        }\n\n        // if didn't find any login ID that matched the above condition\n        // or the selected one doesn't have a token, set the first one\n        if (!active_loginid || !client_object[active_loginid].token) {\n            active_loginid = obj_params.acct1;\n        }\n\n        // TODO: send login flag to GTM if needed\n\n        if (active_loginid && Object.keys(client_object).length) {\n            localStorage.setItem('active_loginid', active_loginid);\n            localStorage.setItem('client.accounts', JSON.stringify(client_object));\n        }\n    }\n\n    @action.bound\n    async setUserLogin() {\n        const obj_params = {};\n        const search     = window.location.search;\n        if (search) {\n            const arr_params = window.location.search.substr(1).split('&');\n            arr_params.forEach(function(param) {\n                if (param) {\n                    const param_value = param.split('=');\n                    if (param_value) {\n                        obj_params[param_value[0]] = param_value[1];\n                    }\n                }\n            });\n        }\n        const is_client_logging_in = obj_params.token1;\n\n        if (is_client_logging_in) {\n            window.history.replaceState({}, document.title, '/');\n\n            // is_populating_account_list is used for socket general to know not to filter the first-time logins\n            this.is_populating_account_list = true;\n            const authorize_response = await BinarySocket.send({ authorize: obj_params.token1 });\n            this.is_populating_account_list = false;\n            runInAction(() => {\n                const account_list = (authorize_response.authorize || {}).account_list;\n                if (account_list && !this.accounts) {\n                    this.storeClientAccounts(obj_params, account_list);\n                }\n            });\n            return authorize_response;\n        }\n    }\n\n    @action.bound\n    setVerificationCode(code) {\n        this.verification_code = code;\n        if (code) {\n            LocalStore.set('verification_code', code);\n        } else {\n            LocalStore.remove('verification_code');\n        }\n        // TODO: add await if error handling needs to happen before AccountSignup is initialised\n        // this.fetchResidenceList(); // Prefetch for use in account signup process\n    }\n\n    @action.bound\n    onSignup({ password, residence }) {\n        if (!this.verification_code || !password || !residence) return;\n\n        // Currently the code doesn't reach here and the console log is needed for debugging.\n        // TODO: remove console log when AccountSignup component and validation are ready\n        WS.newAccountVirtual(this.verification_code, password, residence).then(response => console.log(response));\n    }\n\n    fetchResidenceList() {\n        WS.residenceList().then(response => {\n            runInAction(() => {\n                this.residence_list = response.residence_list || [];\n            })\n        });\n    }\n}\n/* eslint-enable */\n","// TODO: [move-to-shared] - Remove the implementation in ClientBase and add this to shared utils\nexport const getClientAccountType = (loginid) => {\n    let account_type;\n    if (/^VR/.test(loginid))          account_type = 'virtual';\n    else if (/^MF/.test(loginid))     account_type = 'financial';\n    else if (/^MLT|MX/.test(loginid)) account_type = 'gaming';\n    return account_type;\n};\n\n// TODO: [move-to-shared] - Remove the implementation in ClientBase and add this to shared utils\nexport const getMT5AccountType = group => (group ? group.replace('\\\\', '_').replace(/_(\\d+|master|EUR|GBP)/, '') : '');\n","import {\n    action,\n    observable }           from 'mobx';\nimport moment              from 'moment';\nimport { currentLanguage } from 'Utils/Language/index';\nimport BaseStore           from './base-store';\n\nexport default class CommonStore extends BaseStore {\n    @observable server_time      = moment.utc();\n    @observable current_language = currentLanguage;\n    @observable has_error        = false;\n\n    @observable error = {\n        type   : 'info',\n        message: '',\n    };\n\n    @observable network_status    = {};\n    @observable is_network_online = false;\n    @observable is_socket_opened  = false;\n\n    @observable services_error = {};\n\n    @observable deposit_url = '';\n    @observable withdraw_url = '';\n\n    @action.bound\n    setIsSocketOpened(is_socket_opened) {\n        this.is_socket_opened = is_socket_opened;\n    }\n\n    @action.bound\n    setNetworkStatus(status, is_online) {\n        if (this.network_status.class) {\n            this.network_status.class   = status.class;\n            this.network_status.tooltip = status.tooltip;\n        } else {\n            this.network_status = status;\n        }\n        this.is_network_online = is_online;\n    }\n\n    @action.bound\n    setError(has_error, error) {\n        this.has_error = has_error;\n        this.error     = {\n            type: error ? error.type : 'info',\n            ...(error && {\n                header             : error.header,\n                message            : error.message,\n                redirect_label     : error.redirect_label,\n                redirectOnClick    : error.redirectOnClick,\n                should_show_refresh: error.should_show_refresh,\n            }),\n        };\n    }\n\n    @action.bound\n    showError(message, header, redirect_label, redirectOnClick, should_show_refresh) {\n        this.setError(true, {\n            header,\n            message,\n            redirect_label,\n            redirectOnClick,\n            should_show_refresh,\n            type: 'error',\n        });\n    }\n\n    @action.bound\n    setDepositURL(deposit_url) {\n        this.deposit_url = deposit_url;\n    }\n\n    @action.bound\n    setWithdrawURL(withdraw_url) {\n        this.withdraw_url = withdraw_url;\n    }\n}\n","import * as Cookies           from 'js-cookie';\nimport {\n    action,\n    computed }                from 'mobx';\nimport BinarySocket           from '_common/base/socket_base';\nimport { isLoginPages }       from '_common/base/login';\nimport { get as getLanguage } from '_common/language';\nimport {\n    toMoment,\n    epochToMoment }           from 'Utils/Date';\nimport BaseStore              from './base-store';\nimport { getMT5AccountType }  from './Helpers/client';\nimport { getAppId }           from '../config';\n\nexport default class GTMStore extends BaseStore {\n    is_gtm_applicable = /^(16303|16929)$/.test(getAppId());\n\n    constructor(root_store) {\n        super({ root_store });\n\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    @computed\n    get visitorId() {\n        return this.root_store.client.loginid;\n    }\n\n    /**\n     * Contains common data that will be passed to GTM on each datalayer push\n     *\n     * @returns {object}\n     */\n    @computed\n    get common_variables() {\n        return {\n            language: getLanguage(),\n            ...this.root_store.client.is_logged_in && {\n                visitorId: this.visitorId,\n                currency : this.root_store.client.currency,\n                userId   : this.root_store.client.user_id,\n            },\n            ...this.root_store.ui.is_dark_mode_on && {\n                theme: this.root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n            },\n        };\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => resolve(this.pushDataLayer({ event: 'account switch' })));\n    }\n\n    /**\n     * Pushes provided data as GTM DataLayer\n     *\n     * @param {object} data\n     */\n    @action.bound\n    async pushDataLayer(data) {\n        if (this.is_gtm_applicable && !isLoginPages()) {\n            BinarySocket.wait('authorize').then(() => {\n                dataLayer.push({\n                    ...this.common_variables,\n                    ...data,\n                });\n            });\n        }\n    }\n\n    @action.bound\n    pushPurchaseData(contract_data) {\n        const data = {\n            event   : 'buy_contract',\n            bom_ui  : 'new',\n            contract: {\n                amount       : contract_data.amount,\n                barrier1     : contract_data.barrier,\n                barrier2     : contract_data.barrier2,\n                basis        : contract_data.basis,\n                buy_price    : contract_data.buy_price,\n                contract_type: contract_data.contract_type,\n                currency     : contract_data.currency,\n                date_expiry  : contract_data.date_expiry,\n                date_start   : contract_data.date_start,\n                duration     : contract_data.duration,\n                duration_unit: contract_data.duration_unit,\n                payout       : contract_data.payout,\n                symbol       : contract_data.symbol,\n            },\n            settings: {\n                theme           : this.root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n                positions_drawer: this.root_store.ui.is_positions_drawer_on ? 'open' : 'closed',\n                // purchase_confirm: this.root_store.ui.is_purchase_confirm_on ? 'enabled' : 'disabled',\n                chart           : {\n                    toolbar_position: this.root_store.ui.is_chart_layout_default ? 'bottom' : 'left',\n                    chart_asset_info: this.root_store.ui.is_chart_asset_info_visible ? 'visible' : 'hidden',\n                    chart_type      : this.root_store.modules.smart_chart.chart_type,\n                    granularity     : this.root_store.modules.smart_chart.granularity,\n                },\n            },\n        };\n        this.pushDataLayer(data);\n    }\n\n    /**\n     * Pushes deposit & withdrawal data from transaction-stream to GTM\n     *\n     * @param {object} response\n     * @param {object} extra_data\n     */\n    @action.bound\n    pushTransactionData(response, extra_data = {}) {\n        if (!this.is_gtm_applicable || this.root_store.client.is_virtual) return;\n        if (!response.transaction || !response.transaction.action) return;\n        if (!['deposit', 'withdrawal'].includes(response.transaction.action)) return;\n\n        const moment_now  = toMoment();\n        const storage_key = 'GTM_transactions';\n\n        // Remove values from prev days so localStorage doesn't grow to infinity\n        let gtm_transactions = JSON.parse(localStorage.getItem(storage_key)) || {};\n        if (Object.prototype.hasOwnProperty.call(gtm_transactions, 'timestamp')) {\n            if (moment_now.isAfter(epochToMoment(gtm_transactions.timestamp), 'day')) {\n                localStorage.removeItem(storage_key);\n                gtm_transactions = { timestamp: moment_now.unix() };\n            }\n        }\n        const transactions_arr = gtm_transactions.transactions || [];\n        if (!transactions_arr.includes(response.transaction.transaction_id)) {\n            const data = {\n                event           : 'transaction',\n                bom_account_type: this.root_store.client.account_type,\n                bom_today       : moment_now.unix(),\n                transaction     : {\n                    id    : response.transaction.transaction_id,\n                    type  : response.transaction.action,\n                    time  : response.transaction.transaction_time,\n                    amount: response.transaction.amount,\n                },\n            };\n            Object.assign(data, extra_data);\n            this.pushDataLayer(data);\n\n            transactions_arr.push(response.transaction.transaction_id);\n            gtm_transactions.transactions = transactions_arr;\n            gtm_transactions.timestamp    = gtm_transactions.timestamp || moment_now.unix();\n\n            localStorage.setItem(storage_key, JSON.stringify(gtm_transactions));\n        }\n    }\n\n    @action.bound\n    eventHandler(get_settings) {\n        if (!this.is_gtm_applicable) return;\n\n        const login_event       = localStorage.getItem('GTM_login');\n        const is_new_account    = localStorage.getItem('GTM_new_account') === '1';\n\n        localStorage.removeItem('GTM_login');\n        localStorage.removeItem('GTM_new_account');\n\n        const affiliate_token = Cookies.getJSON('affiliate_tracking');\n        if (affiliate_token) {\n            this.pushDataLayer({ affiliate_token: affiliate_token.t });\n        }\n\n        // Get current time (moment, set by server), else fallback to client time\n        const moment_now = toMoment();\n        const data = {\n            visitorId     : this.visitorId,\n            account_type  : this.root_store.client.account_type,\n            currency      : this.root_store.client.currency,\n            country       : get_settings.country,\n            country_abbrev: get_settings.country_code,\n            email         : get_settings.email,\n            url           : window.location.href,\n            today         : moment_now.unix(),\n        };\n\n        if (is_new_account) {\n            data.event = 'new_account';\n            data.bom_date_joined = data.bom_today;\n        }\n\n        if (login_event) {\n            data.event = login_event;\n            BinarySocket.wait('mt5_login_list').then((response) => {\n                (response.mt5_login_list || []).forEach((obj) => {\n                    const acc_type = (getMT5AccountType(obj.group) || '')\n                        .replace('real_vanuatu', 'financial').replace('vanuatu_', '').replace(/svg/, 'gaming'); // i.e. financial_cent, demo_cent, demo_gaming, real_gaming\n                    if (acc_type) {\n                        data[`mt5_${acc_type}_id`] = obj.login;\n                    }\n                });\n                this.pushDataLayer(data);\n            });\n        } else {\n            this.pushDataLayer(data);\n        }\n    }\n\n    @action.bound\n    setLoginFlag(event_name) {\n        if (this.is_gtm_applicable) {\n            localStorage.setItem('GTM_login', event_name);\n        }\n    }\n}\n","import {\n    action,\n    observable }            from 'mobx';\nimport { isCryptocurrency } from '_common/base/currency_base';\nimport { WS }               from 'Services';\nimport BaseStore            from '../../base-store';\n\nexport default class CashierStore extends BaseStore {\n    @observable is_loading       = false;\n    @observable container_height = 0;\n    @observable error_message    = '';\n\n    @observable container_urls = {\n        deposit : '',\n        withdraw: '',\n    };\n\n    @observable is_session_timeout = {\n        deposit : false,\n        withdraw: false,\n    };\n\n    @observable is_verification_button_clicked = false;\n    @observable is_verification_email_sent     = false;\n\n    containers = {\n        deposit : 'deposit',\n        withdraw: 'withdraw',\n    };\n\n    default_cashier_height = 1200;\n\n    timeout_cashier_url = {\n        deposit : '',\n        withdraw: '',\n    };\n\n    timeout_verification_button;\n\n    constructor({ root_store }) {\n        super({ root_store });\n\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    @action.bound\n    async onMount(container, verification_code) {\n        if (!['deposit', 'withdraw'].includes(container)) {\n            throw new Error('Cahshier Store onMount requires deposit or cashier as a container name');\n        }\n        this.setErrorMessage('');\n        this.setContainerHeight(0);\n        this.setLoading(true);\n\n        if (this.container_urls[container] && !this.is_session_timeout[container]) {\n            this.checkIframeLoaded();\n            return;\n        }\n\n        this.setSessionTimeout(false, this.containers[container]);\n\n        this.setContainerUrl('', this.containers[container]);\n        const response_cashier = await WS.cashier(this.containers[container], verification_code);\n\n        // TODO: uncomment this if cross origin access is allowed\n        // const xhttp = new XMLHttpRequest();\n        // const that = this;\n        // xhttp.onreadystatechange = function() {\n        //     if (this.readyState !== 4 || this.status !== 200) {\n        //         return;\n        //     }\n        //     that.setContainerUrl(this.responseText, this.containers[container]);\n        // };\n        // xhttp.open('GET', response_cashier.cashier, true);\n        // xhttp.send();\n\n        // TODO: error handling UI & custom messages\n        if (response_cashier.error) {\n            this.setLoading(false);\n            this.setErrorMessage(response_cashier.error.message);\n            if (verification_code) {\n                // clear verification code on error\n                this.clearVerification();\n            }\n        } else {\n            await this.checkIframeLoaded();\n            this.setContainerUrl(response_cashier.cashier, this.containers[container]);\n            this.setTimeoutCashierUrl(container);\n        }\n    }\n\n    @action.bound\n    async onMountDeposit() {\n        await this.onMount('deposit');\n    }\n\n    @action.bound\n    async checkIframeLoaded() {\n        window.removeEventListener('message', this.onIframeLoaded);\n        if (isCryptocurrency(this.root_store.client.currency)) {\n            this.setLoading(false);\n            this.setContainerHeight('540');\n            // crypto cashier can only be accessed once and the session expires\n            this.clearTimeoutCashierUrl(this.root_store.ui.active_cashier_tab);\n            this.setSessionTimeout(true, this.root_store.ui.active_cashier_tab);\n        } else {\n            window.addEventListener('message', this.onIframeLoaded, false);\n        }\n    }\n\n    @action.bound\n    onIframeLoaded(e) {\n        this.setLoading(false);\n        // set the height of the container after content loads so that the\n        // loading bar stays vertically centered until the end\n        this.setContainerHeight(+e.data || this.default_cashier_height);\n    }\n\n    @action.bound\n    setContainerUrl(url, container) {\n        if (this.container_urls[container] !== url) {\n            this.container_urls[container] = url;\n        }\n    }\n\n    @action.bound\n    setContainerHeight(height) {\n        this.container_height = height;\n    }\n\n    @action.bound\n    setErrorMessage(message) {\n        this.error_message = message;\n    }\n\n    @action.bound\n    setLoading(is_loading) {\n        this.is_loading = is_loading;\n    }\n\n    @action.bound\n    setSessionTimeout(is_session_time_out, container) {\n        this.is_session_timeout[container] = is_session_time_out;\n    }\n\n    @action.bound\n    setVerificationButtonClicked(is_verification_button_clicked) {\n        this.is_verification_button_clicked = is_verification_button_clicked;\n    }\n\n    @action.bound\n    setVerificationEmailSent(is_verification_email_sent) {\n        this.is_verification_email_sent = is_verification_email_sent;\n    }\n\n    clearTimeoutCashierUrl(container) {\n        if (this.timeout_cashier_url[container]) {\n            clearTimeout(this.timeout_cashier_url[container]);\n        }\n    }\n\n    // cashier session expires after one minute\n    // so we should resend the request for container (deposit|withdraw) url on next mount\n    @action.bound\n    setTimeoutCashierUrl(container) {\n        this.clearTimeoutCashierUrl(container);\n        this.timeout_cashier_url[container] = setTimeout(() => {\n            this.setSessionTimeout(true, container);\n        }, 60000);\n    }\n\n    clearTimeoutVerification() {\n        if (this.timeout_verification_button) {\n            clearTimeout(this.timeout_verification_button);\n        }\n    }\n\n    // verification token expires after one hour\n    // so we should show the verification request button again after that\n    @action.bound\n    setTimeoutVerification() {\n        this.clearTimeoutVerification();\n        this.timeout_verification_button = setTimeout(() => {\n            this.clearVerification();\n        }, 3600000);\n    }\n\n    @action.bound\n    async onMountWithdraw(verification_code) {\n        await this.onMount('withdraw', verification_code);\n    }\n\n    @action.bound\n    async sendVerificationEmail(email) {\n        if (this.is_verification_button_clicked) {\n            return;\n        }\n\n        this.setVerificationButtonClicked(true);\n        const response_verify_email = await WS.verifyEmail(email, 'payment_withdraw');\n\n        if (response_verify_email.error) {\n            this.setVerificationButtonClicked(false);\n            this.setErrorMessage(response_verify_email.error.message);\n        } else {\n            this.setVerificationEmailSent(true);\n            this.setTimeoutVerification();\n        }\n    }\n\n    clearVerification() {\n        this.clearTimeoutVerification();\n        this.setVerificationButtonClicked(false);\n        this.setVerificationEmailSent(false);\n        this.root_store.client.setVerificationCode('');\n    }\n\n    @action.bound\n    setActiveTab(container) {\n        // used to detect if old tabs with withdrawal tab open should be closed after verification token is opened in new tab\n        this.root_store.ui.setCashierActiveTab(container);\n    }\n\n    onUnmount() {\n        this.clearVerification();\n        Object.keys(this.containers).forEach((container) => {\n            this.clearTimeoutCashierUrl(container);\n            this.setSessionTimeout(true, container);\n        });\n    }\n\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => resolve(this.onUnmount()));\n    }\n}\n","export const CONTRACT_SHADES = {\n    CALL       : 'ABOVE',\n    PUT        : 'BELOW',\n    CALLE      : 'ABOVE',\n    PUTE       : 'BELOW',\n    EXPIRYRANGE: 'BETWEEN',\n    EXPIRYMISS : 'OUTSIDE',\n    RANGE      : 'BETWEEN',\n    UPORDOWN   : 'OUTSIDE',\n    ONETOUCH   : 'NONE_SINGLE', // no shade\n    NOTOUCH    : 'NONE_SINGLE', // no shade\n    ASIANU     : 'ABOVE',\n    ASIAND     : 'BELOW',\n};\n\n// Default non-shade according to number of barriers\nexport const DEFAULT_SHADES = {\n    1: 'NONE_SINGLE',\n    2: 'NONE_DOUBLE',\n};\n\nexport const BARRIER_COLORS = {\n    GREEN    : '#39b19d',\n    RED      : 'red',\n    GRAY     : '#999cac',\n    DARK_GRAY: '#555975',\n};\n\nexport const BARRIER_LINE_STYLES = {\n    DASHED: 'dashed',\n    DOTTED: 'dotted',\n    SOLID : 'solid',\n};\n","import {\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES } from '../../SmartChart/Constants/barriers';\n\nexport const createChartBarrier = (SmartChartStore, contract_info, is_dark_mode) => {\n    SmartChartStore.removeBarriers();\n\n    if (contract_info) {\n        const { contract_type, barrier, high_barrier, low_barrier } = contract_info;\n\n        if (barrier || high_barrier) { // create barrier only when it's available in response\n            SmartChartStore.createBarriers(\n                contract_type,\n                barrier || high_barrier,\n                low_barrier,\n                null,\n                {   color        : is_dark_mode ? BARRIER_COLORS.DARK_GRAY : BARRIER_COLORS.GRAY,\n                    line_style   : BARRIER_LINE_STYLES.SOLID,\n                    not_draggable: true,\n                },\n            );\n\n            SmartChartStore.updateBarrierShade(true, contract_type);\n        }\n    }\n};\n","import classNames           from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Icon         from 'Assets/icon.jsx';\n\nconst MarkerLine = ({\n    label,\n    line_style,\n    marker_config,\n    status,\n}) => {\n    // TODO: Find a more elegant solution\n    if (!marker_config) return <div />;\n    return (\n        <div className={classNames('chart-marker-line__wrapper', `chart-marker-line--${line_style}`)}>\n            { label === marker_config.LINE_END.content_config.label &&\n                <Icon\n                    icon='IconEndTime'\n                    className={classNames('chart-marker-line__icon', {\n                        'chart-marker-line__icon--won' : status === 'won',\n                        'chart-marker-line__icon--lost': status === 'lost',\n                    })}\n                />\n            }\n            { label === marker_config.LINE_START.content_config.label &&\n                <Icon\n                    icon='IconStartTime'\n                    className={classNames(\n                        'chart-marker-line__icon',\n                        'chart-marker-line__icon--time',\n                    )}\n                />\n            }\n        </div>\n    );\n};\n\nMarkerLine.propTypes = {\n    label        : PropTypes.string,\n    line_style   : PropTypes.string,\n    marker_config: PropTypes.object,\n    status       : PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerLine);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes     from 'prop-types';\nimport React        from 'react';\n\nconst MarkerSpot = ({\n    className,\n    spot_count,\n}) => (\n    <div\n        className={classNames('chart-spot', className)}\n    >{spot_count}\n    </div>\n);\n\nMarkerSpot.propTypes = {\n    className : PropTypes.string,\n    spot_count: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n};\n\nexport default observer(MarkerSpot);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { addComma } from '_common/base/currency_base';\nimport { toMoment } from 'Utils/Date';\nimport Icon         from 'Assets/icon.jsx';\nimport MarkerSpot   from './marker-spot.jsx';\n\nclass MarkerSpotLabel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show_label: !this.props.has_hover_toggle,\n        };\n    }\n\n    handleHoverToggle = () => {\n        this.setState((state) =>  ({ show_label: !state.show_label }));\n    }\n\n    render() {\n        let marker_spot =\n            <MarkerSpot\n                className={this.props.spot_className}\n                spot_count={this.props.spot_count}\n            />;\n\n        if (this.props.has_hover_toggle) {\n            marker_spot =\n                <div className='marker-hover-container' onMouseEnter={this.handleHoverToggle} onMouseLeave={this.handleHoverToggle}>\n                    { marker_spot }\n                </div>;\n        }\n\n        return (\n            <div className={'chart-spot-label'}>\n                {this.state.show_label &&\n                    <div className='chart-spot-label__info-container'>\n                        <div className={`chart-spot-label__time-value-container chart-spot-label__time-value-container--${this.props.align_label}`}>\n                            <div className='chart-spot-label__time-container'>\n                                <Icon icon='IconClock' height='10' width='10' className='chart-spot-label__time-icon' />\n                                <p className='chart-spot-label__time'>{toMoment(+this.props.spot_epoch).format('HH:mm:ss')}</p>\n                            </div>\n                            <div\n                                className={classNames('chart-spot-label__value-container', {\n                                    'chart-spot-label__value-container--won' : this.props.status === 'won',\n                                    'chart-spot-label__value-container--lost': this.props.status === 'lost',\n                                })}\n                            >\n                                <p>{addComma(this.props.spot_value)}</p>\n                            </div>\n                        </div>\n                    </div>\n                }\n                { marker_spot }\n            </div>\n        );\n    }\n}\n\nMarkerSpotLabel.defaultProps = {\n    align_label: 'top',\n};\n\nMarkerSpotLabel.propTypes = {\n    align_label     : PropTypes.oneOf(['top', 'bottom']),\n    has_hover_toggle: PropTypes.bool,\n    spot_className  : PropTypes.string,\n    spot_count      : PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    spot_epoch      : PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    spot_value      : PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    status          : PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerSpotLabel);\n","import { localize }    from 'App/i18n';\nimport MarkerLine      from 'Modules/SmartChart/Components/Markers/marker-line.jsx';\nimport MarkerSpotLabel from 'Modules/SmartChart/Components/Markers/marker-spot-label.jsx';\nimport MarkerSpot      from 'Modules/SmartChart/Components/Markers/marker-spot.jsx';\n\nexport const MARKER_TYPES_CONFIG = {\n    LINE_END: {\n        type          : 'LINE_END',\n        marker_config : {\n            ContentComponent: MarkerLine,\n            className       : 'chart-marker-line',\n        },\n        content_config: { line_style: 'dash',  label: localize('End Time') },\n    },\n    LINE_PURCHASE: {\n        type          : 'LINE_PURCHASE',\n        marker_config : {\n            ContentComponent: MarkerLine,\n            className       : 'chart-marker-line',\n        },\n        content_config: { line_style: 'solid', label: localize('Purchase Time') },\n    },\n    LINE_START: {\n        type          : 'LINE_START',\n        marker_config : {\n            ContentComponent: MarkerLine,\n            className       : 'chart-marker-line',\n        },\n        content_config: { line_style: 'solid', label: localize('Start Time') },\n    },\n    SPOT_ENTRY: {\n        type          : 'SPOT_ENTRY',\n        marker_config : {\n            ContentComponent: MarkerSpot,\n        },\n        content_config: { className: 'chart-spot__entry' },\n    },\n    SPOT_SELL: {\n        type          : 'SPOT_SELL',\n        marker_config : {\n            ContentComponent: MarkerSpot,\n        },\n        content_config: { className: 'chart-spot__sell' },\n    },\n    SPOT_EXIT: {\n        type          : 'SPOT_EXIT',\n        marker_config : {\n            ContentComponent: MarkerSpotLabel,\n        },\n        content_config: { spot_className: 'chart-spot__spot' },\n    },\n    SPOT_MIDDLE: {\n        type          : 'SPOT_MIDDLE',\n        marker_config : {\n            ContentComponent: MarkerSpotLabel,\n        },\n        content_config: { spot_className: 'chart-spot__spot' },\n    },\n};\n","import extend                  from 'extend';\nimport { isDigitContract }     from 'Stores/Modules/Contract/Helpers/digits';\nimport {\n    isUserSold,\n    getEndTime }               from 'Stores/Modules/Contract/Helpers/logic';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nconst createMarkerConfig = (marker_type, x, y, content_config) => (\n    extend(true, {}, MARKER_TYPES_CONFIG[marker_type], {\n        marker_config: {\n            x: +x,\n            y,\n        },\n        content_config,\n    })\n);\n\nexport const getSpotCount = (contract_info, spot_count) =>\n    isDigitContract(contract_info.contract_type) ? spot_count + 1 : spot_count;\n\n// -------------------- Lines --------------------\nexport const createMarkerEndTime = (contract_info) => {\n    const end_time = getEndTime(contract_info);\n    if (!end_time) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_END.type,\n        +end_time,\n        null,\n        {\n            status       : `${contract_info.profit > 0 ? 'won' : 'lost' }`,\n            marker_config: MARKER_TYPES_CONFIG,\n        },\n    );\n};\n\nexport const createMarkerPurchaseTime = (contract_info) => {\n    if (!contract_info.purchase_time || !contract_info.date_start ||\n        +contract_info.purchase_time === +contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_PURCHASE.type,\n        +contract_info.purchase_time,\n    );\n};\n\nexport const createMarkerStartTime = (contract_info) => {\n    if (!contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_START.type,\n        +contract_info.date_start,\n        null,\n        {\n            marker_config: MARKER_TYPES_CONFIG,\n        }\n    );\n};\n\n// -------------------- Spots --------------------\nexport const createMarkerSpotEntry = (contract_info) => {\n    if (!contract_info.entry_tick_time) return false;\n\n    let marker_type      = MARKER_TYPES_CONFIG.SPOT_ENTRY.type;\n    let component_props  = {};\n\n    const entry_tick = contract_info.entry_tick_display_value;\n\n    const spot_has_label = isDigitContract(contract_info.contract_type);\n    if (spot_has_label) {\n        marker_type = MARKER_TYPES_CONFIG.SPOT_MIDDLE.type;\n\n        component_props = {\n            spot_value: `${entry_tick}`,\n            spot_epoch: `${contract_info.entry_tick_time}`,\n            spot_count: 1,\n        };\n    }\n\n    return createMarkerConfig(\n        marker_type,\n        contract_info.entry_tick_time,\n        entry_tick,\n        component_props,\n    );\n};\n\nexport const createMarkerSpotExit = (contract_info, tick, idx) => {\n    if (!contract_info.exit_tick_time) return false;\n    const is_user_sold = isUserSold(contract_info);\n\n    let spot_count, align_label;\n    if (tick) {\n        spot_count = getSpotCount(contract_info, idx);\n        align_label = tick.align_label;\n    }\n\n    const exit_tick = contract_info.exit_tick_display_value;\n\n    return createMarkerConfig(\n        !is_user_sold ? MARKER_TYPES_CONFIG.SPOT_EXIT.type : MARKER_TYPES_CONFIG.SPOT_SELL.type,\n        +contract_info.exit_tick_time,\n        +exit_tick,\n        !is_user_sold ?\n            {\n                spot_value: `${exit_tick}`,\n                spot_epoch: `${contract_info.exit_tick_time}`,\n                status    : `${+contract_info.profit > 0 ? 'won' : 'lost' }`,\n                align_label,\n                spot_count,\n            } : {},\n    );\n};\n\nexport const createMarkerSpotMiddle = (contract_info, tick, idx) => {\n    const spot_count = getSpotCount(contract_info, idx);\n    const spot       = tick.tick_display_value;\n\n    const marker_config = createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_MIDDLE.type,\n        +tick.epoch,\n        +spot,\n        {\n            spot_value : `${spot}`,\n            spot_epoch : `${tick.epoch}`,\n            align_label: tick.align_label,\n            spot_count,\n        },\n    );\n    marker_config.type = `${marker_config.type}_${idx}`;\n\n    return marker_config;\n};\n","import { unique }              from '_common/utility';\nimport {\n    createMarkerEndTime,\n    createMarkerPurchaseTime,\n    createMarkerSpotEntry,\n    createMarkerSpotExit,\n    createMarkerStartTime,\n    createMarkerSpotMiddle,\n    getSpotCount }             from './chart-marker-helpers';\nimport {\n    getChartType,\n    getEndTime }               from './logic';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nexport const createChartMarkers = (SmartChartStore, contract_info) => {\n    if (contract_info) {\n        const end_time = getEndTime(contract_info);\n        const chart_type = getChartType(contract_info.date_start, end_time);\n        if (contract_info.tick_count) {\n            addTickMarker(SmartChartStore, contract_info);\n        } else if (chart_type !== 'candle') {\n            addMarker(marker_spots, SmartChartStore, contract_info);\n        }\n        addMarker(marker_lines, SmartChartStore, contract_info);\n    }\n};\n\nconst marker_spots = {\n    [MARKER_TYPES_CONFIG.SPOT_ENTRY.type]: createMarkerSpotEntry,\n    [MARKER_TYPES_CONFIG.SPOT_EXIT.type] : createMarkerSpotExit,\n};\n\nconst marker_lines = {\n    [MARKER_TYPES_CONFIG.LINE_START.type]   : createMarkerStartTime,\n    [MARKER_TYPES_CONFIG.LINE_END.type]     : createMarkerEndTime,\n    [MARKER_TYPES_CONFIG.LINE_PURCHASE.type]: createMarkerPurchaseTime,\n};\n\nconst addMarker = async (marker_obj, SmartChartStore, contract_info) => {\n    Object.keys(marker_obj).forEach(createMarker);\n\n    function createMarker(marker_type) {\n        if (marker_type in SmartChartStore.markers) return;\n\n        const marker_config = marker_obj[marker_type](contract_info);\n        if (marker_config) {\n            SmartChartStore.createMarker(marker_config);\n        }\n    }\n};\n\nconst addLabelAlignment = (tick, idx, arr) => {\n    if (idx > 0 && arr.length) {\n        const prev_tick = arr[idx - 1];\n\n        if (+tick > +prev_tick.tick) tick.align_label = 'top';\n        if (+tick.tick < +prev_tick.tick) tick.align_label = 'bottom';\n        if (+tick.tick === +prev_tick.tick) tick.align_label = prev_tick.align_label;\n    }\n\n    return tick;\n};\n\nconst addTickMarker = async (SmartChartStore, contract_info) => {\n    const tick_stream = unique(contract_info.tick_stream, 'epoch').map(addLabelAlignment);\n\n    tick_stream.forEach((tick, idx) => {\n        const is_entry_spot  = idx === 0 && +tick.epoch !== contract_info.exit_tick_time;\n        const is_middle_spot = idx > 0 && +tick.epoch !== +contract_info.exit_tick_time;\n        const is_exit_spot   = +tick.epoch === +contract_info.exit_tick_time ||\n            getSpotCount(contract_info, idx) === contract_info.tick_count;\n\n        let marker_config;\n        if (is_entry_spot) {\n            marker_config = createMarkerSpotEntry(contract_info);\n        } else if (is_middle_spot) {\n            marker_config = createMarkerSpotMiddle(contract_info, tick, idx);\n        } else if (is_exit_spot) {\n            tick.align_label = 'top'; // force exit spot label to be 'top' to avoid overlapping\n            marker_config = createMarkerSpotExit(contract_info, tick, idx);\n        }\n\n        if (marker_config) {\n            if (marker_config.type in SmartChartStore.markers) return;\n\n            SmartChartStore.createMarker(marker_config);\n        }\n    });\n};\n","import React        from 'react';\nimport { localize } from 'App/i18n';\nimport Money        from '../../../../App/Components/Elements/money.jsx';\nimport Localize     from '../../../../App/Components/Elements/localize.jsx';\n\nexport const contractSold = (currency, sold_for) => ({\n    header : localize('Contract sold'),\n    message: (\n        <Localize\n            i18n_default_text='Contract was sold for <0 />.'\n            components={[ <Money key={sold_for} amount={sold_for} currency={currency} /> ]}\n        />\n    ),\n    type                 : 'contract_sold',\n    size                 : 'small',\n    should_hide_close_btn: true,\n    is_auto_close        : true,\n});\n","import {\n    action,\n    computed,\n    extendObservable,\n    observable }              from 'mobx';\nimport { localize }           from 'App/i18n';\nimport BinarySocket           from '_common/base/socket_base';\nimport { isEmptyObject }      from '_common/utility';\nimport { WS }                 from 'Services';\nimport { createChartBarrier } from './Helpers/chart-barriers';\nimport { createChartMarkers } from './Helpers/chart-markers';\nimport {\n    getDigitInfo,\n    isDigitContract }         from './Helpers/digits';\nimport {\n    getChartConfig,\n    getDisplayStatus,\n    getEndTime,\n    isEnded }                 from './Helpers/logic';\nimport { contractSold }       from '../Portfolio/Helpers/portfolio-notifcations';\nimport BaseStore              from '../../base-store';\n\nexport default class ContractReplayStore extends BaseStore {\n    // --- Observable properties ---\n    @observable digits_info = observable.object({});\n    @observable sell_info   = observable.object({});\n\n    @observable has_error         = false;\n    @observable error_message     = '';\n    @observable is_sell_requested = false;\n\n    // ---- Replay Contract Config ----\n    @observable contract_id;\n    @observable indicative_status;\n    @observable contract_info   = observable.object({});\n    @observable is_static_chart = false;\n\n    // ---- Normal properties ---\n    chart_type          = 'mountain';\n    is_ongoing_contract = false;\n\n    // Replay Contract Indicative Movement\n    prev_indicative = 0;\n    indicative      = 0;\n\n    // Forget old proposal_open_contract stream on account switch from ErrorComponent\n    should_forget_first = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    handleSubscribeProposalOpenContract = (contract_id, cb) => {\n        const proposal_open_contract_request = [contract_id, cb, false];\n\n        if (this.should_forget_first) {\n            WS.forgetAll('proposal_open_contract').then(() => {\n                this.should_forget_first = false;\n                WS.subscribeProposalOpenContract(...proposal_open_contract_request);\n            });\n        } else {\n            WS.subscribeProposalOpenContract(...proposal_open_contract_request);\n        }\n    }\n\n    @action.bound\n    onMount(contract_id) {\n        if (contract_id) {\n            this.smart_chart = this.root_store.modules.smart_chart;\n            this.smart_chart.setContractMode(true);\n            this.contract_id = contract_id;\n            BinarySocket.wait('authorize').then(() => {\n                this.handleSubscribeProposalOpenContract(this.contract_id, this.populateConfig);\n            });\n            WS.activeSymbols({ skip_cache_update: true });\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.forgetProposalOpenContract(this.contract_id, this.populateConfig);\n        this.contract_id         = null;\n        this.digits_info         = {};\n        this.is_ongoing_contract = false;\n        this.is_static_chart     = false;\n        this.is_sell_requested   = false;\n        this.contract_info       = {};\n        this.indicative_status   = null;\n        this.prev_indicative     = 0;\n        this.indicative          = 0;\n        this.sell_info           = {};\n        this.smart_chart.setContractMode(false);\n        this.smart_chart.cleanupContractChartView();\n    }\n\n    @action.bound\n    populateConfig(response) {\n        if ('error' in response) {\n            this.has_error       = true;\n            this.smart_chart.setIsChartLoading(false);\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error           = true;\n            this.error_message       = localize('Sorry, you can\\'t view this contract because it doesn\\'t belong to this account.');\n            this.should_forget_first = true;\n            this.smart_chart.setContractMode(false);\n            this.smart_chart.setIsChartLoading(false);\n            return;\n        }\n        if (+response.proposal_open_contract.contract_id !== this.contract_id) return;\n\n        this.contract_info = response.proposal_open_contract;\n\n        // Add indicative status for contract\n        const prev_indicative  = this.prev_indicative;\n        const new_indicative   = +this.contract_info.bid_price;\n        this.indicative = new_indicative;\n        if (new_indicative > prev_indicative) {\n            this.indicative_status = 'profit';\n        } else if (new_indicative < prev_indicative) {\n            this.indicative_status = 'loss';\n        } else {\n            this.indicative_status = null;\n        }\n        this.prev_indicative = this.indicative;\n\n        const end_time = getEndTime(this.contract_info);\n\n        this.smart_chart.updateMargin(\n            (end_time || this.contract_info.date_expiry) - this.contract_info.date_start);\n\n        if (!end_time) this.is_ongoing_contract = true;\n\n        // finish contracts if end_time exists\n        if (end_time) {\n            if (!this.is_ongoing_contract) {\n                this.is_static_chart = true;\n            } else {\n                this.is_static_chart = false;\n            }\n        }\n\n        createChartBarrier(this.smart_chart, this.contract_info, this.root_store.ui.is_dark_mode_on);\n        createChartMarkers(this.smart_chart, this.contract_info);\n        this.handleDigits(this.contract_info);\n\n        this.smart_chart.setIsChartLoading(false);\n    }\n\n    @action.bound\n    handleDigits(contract_info) {\n        if (this.is_digit_contract) {\n            extendObservable(this.digits_info, getDigitInfo(this.digits_info, contract_info));\n        }\n    }\n\n    @action.bound\n    onClickSell(contract_id) {\n        const { bid_price } = this.contract_info;\n        if (contract_id && bid_price) {\n            this.is_sell_requested = true;\n            WS.sell(contract_id, bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        if (response.error) {\n            // If unable to sell due to error, give error via pop up if not in contract mode\n            this.is_sell_requested = false;\n            this.root_store.common.services_error = {\n                type: response.msg_type,\n                ...response.error,\n            };\n            this.root_store.ui.toggleServicesErrorModal(true);\n        } else if (!response.error && response.sell) {\n            this.is_sell_requested = false;\n            // update contract store sell info after sell\n            this.sell_info = {\n                sell_price    : response.sell.sold_for,\n                transaction_id: response.sell.transaction_id,\n            };\n            this.root_store.ui.addNotification(contractSold(this.root_store.client.currency, response.sell.sold_for));\n        }\n    }\n\n    forgetProposalOpenContract = (contract_id, cb) => {\n        WS.forget('proposal_open_contract', cb, { contract_id });\n    }\n\n    @action.bound\n    removeErrorMessage() {\n        delete this.error_message;\n    }\n\n    @action.bound\n    clearError() {\n        this.error_message = null;\n        this.has_error = false;\n    }\n\n    // ---------------------------\n    // ----- Computed values -----\n    // ---------------------------\n    // TODO: currently this runs on each response, even if contract_info is deep equal previous one\n\n    @computed\n    get contract_config() {\n        return getChartConfig(this.contract_info, this.is_digit_contract, false);\n    }\n\n    @computed\n    get display_status() {\n        return getDisplayStatus(this.contract_info);\n    }\n\n    @computed\n    get is_ended() {\n        return isEnded(this.contract_info);\n    }\n\n    @computed\n    get is_digit_contract() {\n        return isDigitContract(this.contract_info.contract_type);\n    }\n}\n","import {\n    action,\n    computed,\n    extendObservable,\n    observable }              from 'mobx';\nimport BinarySocket           from '_common/base/socket_base';\nimport { isEmptyObject }      from '_common/utility';\nimport { localize }           from 'App/i18n';\nimport { WS }                 from 'Services';\nimport { createChartBarrier } from './Helpers/chart-barriers';\nimport { createChartMarkers } from './Helpers/chart-markers';\nimport {\n    getDigitInfo,\n    isDigitContract }         from './Helpers/digits';\nimport {\n    getChartGranularity,\n    getChartType,\n    getDisplayStatus,\n    getEndTime,\n    isEnded }                 from './Helpers/logic';\nimport BaseStore              from '../../base-store';\n\nexport default class ContractTradeStore extends BaseStore {\n    // --- Observable properties ---\n    @observable contract_id;\n    @observable contract_info = observable.object({});\n    @observable digits_info   = observable.object({});\n\n    @observable has_error     = false;\n    @observable error_message = '';\n\n    // ---- Normal properties ---\n    is_from_positions   = false;\n    is_ongoing_contract = false;\n\n    // Forget old proposal_open_contract stream on account switch from ErrorComponent\n    should_forget_first = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    @action.bound\n    drawChart() {\n        const {\n            date_expiry,\n            date_start,\n            tick_count,\n        } = this.contract_info;\n\n        const end_time = getEndTime(this.contract_info);\n\n        if (!end_time) this.is_ongoing_contract = true;\n\n        // finish contracts if end_time exists\n        if (end_time) {\n            const is_one_tick_contract = (tick_count < 2);\n            if (!this.is_ongoing_contract && !is_one_tick_contract) {\n                // set to static chart to true for non one tick contract\n                // to avoid chart from reloading\n                this.smart_chart.setStaticChart(true);\n            } else {\n                this.smart_chart.setStaticChart(false);\n            }\n            this.smart_chart.setContractStart(date_start);\n            this.smart_chart.setContractEnd(end_time);\n\n            // Clear chart loading status once ChartListener returns ready for completed contract\n            if (!this.is_ongoing_contract) {\n                this.smart_chart.setIsChartLoading(false);\n            }\n\n        // setters for ongoing contracts, will only init once onMount after left_epoch is set\n        } else if (this.is_from_positions) {\n            this.smart_chart.setContractStart(date_start);\n        }\n\n        this.smart_chart.updateMargin((end_time || date_expiry) - date_start);\n\n        createChartBarrier(this.smart_chart, this.contract_info, this.root_store.ui.is_dark_mode_on);\n        createChartMarkers(this.smart_chart, this.contract_info);\n\n        if (this.smart_chart.is_chart_ready) {\n            this.smart_chart.setIsChartLoading(false);\n        }\n    }\n\n    handleSubscribeProposalOpenContract = (contract_id, cb) => {\n        const proposal_open_contract_request = [contract_id, cb, false];\n\n        if (this.should_forget_first) {\n            WS.forgetAll('proposal_open_contract').then(() => {\n                this.should_forget_first = false;\n                WS.subscribeProposalOpenContract(...proposal_open_contract_request);\n            });\n        } else {\n            WS.subscribeProposalOpenContract(...proposal_open_contract_request);\n        }\n    }\n\n    @action.bound\n    drawContractStartTime(date_start, longcode, contract_id) {\n        this.contract_info.longcode = longcode;\n        createChartMarkers(this.root_store.modules.smart_chart, { date_start });\n        this.onMountBuy(contract_id);\n    }\n\n    @action.bound\n    onMountBuy(contract_id) {\n        if (contract_id === this.contract_id) return;\n        this.contract_id = contract_id;\n        // clear proposal and purchase info once contract is mounted\n        this.root_store.modules.trade.proposal_info = {};\n        this.root_store.modules.trade.purchase_info = {};\n        BinarySocket.wait('authorize').then(() => {\n            this.handleSubscribeProposalOpenContract(this.contract_id, this.updateProposal);\n        });\n    }\n\n    @action.bound\n    onMount(contract_id, is_from_positions) {\n        if (contract_id === this.contract_id) return;\n        this.smart_chart       = this.root_store.modules.smart_chart;\n        const has_existing_id  = this.smart_chart.is_contract_mode && !!(this.contract_id);\n        if (has_existing_id) this.resetValues(this.smart_chart);\n        this.has_error         = false;\n        this.error_message     = '';\n        this.contract_id       = contract_id;\n        this.is_from_positions = is_from_positions;\n\n        // clear proposal and purchase info once contract is mounted\n        this.root_store.modules.trade.proposal_info = {};\n        this.root_store.modules.trade.purchase_info = {};\n\n        if (contract_id) {\n            if (this.is_from_positions) {\n                this.smart_chart.setIsChartLoading(true);\n                this.smart_chart.switchToContractMode(true, has_existing_id);\n            }\n            BinarySocket.wait('authorize').then(() => {\n                this.handleSubscribeProposalOpenContract(this.contract_id, this.updateProposal);\n            });\n        }\n    }\n\n    @action.bound\n    resetValues(SmartChartStore) {\n        this.forgetProposalOpenContract(this.contract_id, this.updateProposal);\n        this.contract_id         = null;\n        this.contract_info       = {};\n        this.digits_info         = {};\n        this.error_message       = '';\n        this.has_error           = false;\n        this.is_from_positions   = false;\n        this.is_ongoing_contract = false;\n        SmartChartStore.cleanupContractChartView();\n    }\n\n    @action.bound\n    onCloseContract() {\n        if (!this.smart_chart) this.smart_chart = this.root_store.modules.smart_chart;\n        this.resetValues(this.smart_chart);\n        this.smart_chart.applySavedTradeChartLayout();\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.onCloseContract();\n    }\n\n    @action.bound\n    updateProposal(response) {\n        if ('error' in response) {\n            this.has_error     = true;\n            this.error_message = response.error.message;\n            this.contract_info = {};\n            this.smart_chart.setIsChartLoading(false);\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error           = true;\n            this.error_message       = localize('Sorry, you can\\'t view this contract because it doesn\\'t belong to this account.');\n            this.should_forget_first = true;\n            this.contract_info       = {};\n            this.contract_id         = null;\n            this.smart_chart.setContractMode(false);\n            this.smart_chart.setIsChartLoading(false);\n            return;\n        }\n        if (+response.proposal_open_contract.contract_id !== this.contract_id) return;\n\n        this.contract_info = response.proposal_open_contract;\n\n        // Set chart granularity and chart_type\n        this.handleChartType(this.contract_info.date_start, getEndTime(this.contract_info) || null);\n\n        // Set chart view to date_start\n        if (this.is_from_positions) {\n            if (this.smart_chart.granularity !== 0) {\n                this.smart_chart.setChartView(this.contract_info.date_start);\n            }\n        }\n\n        // Set contract symbol if trade_symbol and contract_symbol don't match\n        if (this.root_store.modules.trade.symbol !== this.contract_info.underlying) {\n            this.root_store.modules.trade.symbol = this.contract_info.underlying;\n        }\n\n        this.drawChart(this.contract_info);\n\n        this.handleDigits(this.contract_info);\n    }\n\n    @action.bound\n    handleDigits(contract_info) {\n        if (this.is_digit_contract) {\n            extendObservable(this.digits_info, getDigitInfo(this.digits_info, contract_info));\n        }\n    }\n\n    handleChartType(start, expiry) {\n        if (!this.smart_chart) {\n            this.smart_chart = this.root_store.modules.smart_chart;\n        }\n\n        const chart_type  = getChartType(start, expiry);\n        const granularity = getChartGranularity(start, expiry);\n\n        this.smart_chart.updateChartType(chart_type);\n        this.smart_chart.updateGranularity(granularity);\n    }\n\n    forgetProposalOpenContract = (contract_id, cb) => {\n        WS.forget('proposal_open_contract', cb, { contract_id });\n    }\n\n    @action.bound\n    removeErrorMessage() {\n        delete this.error_message;\n    }\n\n    @action.bound\n    clearError() {\n        this.error_message = null;\n        this.has_error = false;\n    }\n\n    @action.bound\n    setIsDigitContract(contract_type) {\n        this.contract_info.contract_type = contract_type;\n    }\n    // ---------------------------\n    // ----- Computed values -----\n    // ---------------------------\n    // TODO: currently this runs on each response, even if contract_info is deep equal previous one\n\n    @computed\n    get display_status() {\n        return getDisplayStatus(this.contract_info);\n    }\n\n    @computed\n    get is_ended() {\n        return isEnded(this.contract_info);\n    }\n\n    @computed\n    get is_digit_contract() {\n        return isDigitContract(this.contract_info.contract_type);\n    }\n}\n","import { flow }            from 'mobx';\nimport BinarySocket        from '_common/base/socket_base';\nimport { localize }        from 'App/i18n';\nimport { LocalStore }      from '_common/storage';\nimport { redirectToLogin } from '_common/base/login';\nimport { WS }              from 'Services';\n\nexport const showUnavailableLocationError = flow(function* (showError) {\n    const website_status = yield BinarySocket.wait('website_status');\n    const residence_list = yield WS.residenceList();\n\n    const clients_country_code = website_status.website_status.clients_country;\n    const clients_country_text =\n        (residence_list.residence_list.find(obj_country =>\n            obj_country.value === clients_country_code) || {}).text;\n\n    showError(\n        localize('If you have an account, log in to continue.'),\n        (clients_country_text ? localize('Sorry, this app is unavailable in {{clients_country}}.', { clients_country: clients_country_text }) : localize('Sorry, this app is unavailable in your current location.')),\n        localize('Log in'),\n        redirectToLogin,\n        false,\n    );\n});\n\nexport const isMarketClosed = (active_symbols = [], symbol) => {\n    if (!active_symbols.length) return false;\n    return (active_symbols.filter(x => x.symbol === symbol)[0]) ?\n        !active_symbols.filter(symbol_info => symbol_info.symbol === symbol)[0].exchange_is_open\n        :\n        false;\n};\n\nexport const pickDefaultSymbol = (active_symbols = []) => {\n    if (!active_symbols.length) return '';\n    return getFavoriteOpenSymbol(active_symbols) || getFirstOpenSymbol(active_symbols);\n};\n\nconst getFavoriteOpenSymbol = (active_symbols) => {\n    const chart_favorites = LocalStore.get('cq-favorites');\n    if (!chart_favorites) return undefined;\n    const client_favorite_markets = JSON.parse(chart_favorites)['chartTitle&Comparison'];\n\n    const client_favorite_list = client_favorite_markets\n        .map(client_fav_symbol => active_symbols\n            .find(symbol_info => symbol_info.symbol === client_fav_symbol));\n    if (client_favorite_list) {\n        const client_first_open_symbol = client_favorite_list\n            .filter(symbol => symbol).find(isSymbolOpen);\n        if (client_first_open_symbol) return client_first_open_symbol.symbol;\n    }\n    return undefined;\n};\n\nconst getFirstOpenSymbol = (active_symbols) => {\n    const first_open_symbol = active_symbols\n        .filter(symbol_info => /major_pairs|random_index/.test(symbol_info.submarket))\n        .find(isSymbolOpen);\n    if (first_open_symbol) return first_open_symbol.symbol;\n    return active_symbols.find(symbol_info => symbol_info.submarket === 'major_pairs').symbol;\n};\n\nconst isSymbolOpen = (symbol) => (\n    symbol.exchange_is_open === 1\n);\n\nexport const getSymbolDisplayName = (active_symbols = [], symbol) => (\n    (active_symbols.find(symbol_info => symbol_info.symbol.toUpperCase() === symbol.toUpperCase()) || { display_name: '' })\n        .display_name\n);\n","import { getUnsupportedContracts } from 'Constants';\nimport { getSymbolDisplayName }    from '../../Trading/Helpers/active-symbols';\nimport { getMarketInformation }    from '../../../../Modules/Reports/Helpers/market-underlying';\n\nexport const formatPortfolioPosition = (portfolio_pos, active_symbols = []) => {\n    const purchase     = parseFloat(portfolio_pos.buy_price);\n    const payout       = parseFloat(portfolio_pos.payout);\n    const display_name = getSymbolDisplayName(\n        active_symbols,\n        getMarketInformation(portfolio_pos.shortcode).underlying\n    );\n\n    return {\n        contract_info : portfolio_pos,\n        details       : portfolio_pos.longcode.replace(/\\n/g, '<br />'),\n        display_name,\n        id            : portfolio_pos.contract_id,\n        indicative    : 0,\n        payout,\n        purchase,\n        reference     : +portfolio_pos.transaction_id,\n        type          : portfolio_pos.contract_type,\n        is_unsupported: !!getUnsupportedContracts()[portfolio_pos.contract_type],\n    };\n};\n","import {\n    action,\n    computed,\n    observable,\n    reaction }                     from 'mobx';\nimport { createTransformer }       from 'mobx-utils';\nimport { WS }                      from 'Services';\nimport { formatPortfolioPosition } from './Helpers/format-response';\nimport { contractSold }            from './Helpers/portfolio-notifcations';\nimport {\n    getCurrentTick,\n    getDurationPeriod,\n    getDurationTime,\n    getDurationUnitText }          from './Helpers/details';\nimport {\n    getDisplayStatus,\n    getEndTime,\n    isEnded,\n    isUserSold,\n    isValidToSell }                from '../Contract/Helpers/logic';\nimport BaseStore                   from '../../base-store';\n\nexport default class PortfolioStore extends BaseStore {\n    @observable positions  = [];\n    @observable is_loading = false;\n    @observable error      = '';\n    getPositionById        = createTransformer((id) => this.positions.find((position) => +position.id === +id));\n\n    @action.bound\n    initializePortfolio = async () => {\n        this.is_loading = true;\n        await this.waitFor('authorize');\n        WS.portfolio().then(this.portfolioHandler);\n        WS.subscribeProposalOpenContract(null, this.proposalOpenContractHandler, false);\n        WS.subscribeTransaction(this.transactionHandler, false);\n    };\n\n    @action.bound\n    clearTable() {\n        this.positions  = [];\n        this.is_loading = false;\n        this.error      = '';\n    }\n\n    @action.bound\n    portfolioHandler(response) {\n        this.is_loading = false;\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n        this.error = '';\n        if (response.portfolio.contracts) {\n            this.positions = response.portfolio.contracts\n                .map(pos => formatPortfolioPosition(pos, this.root_store.modules.trade.active_symbols))\n                .sort((pos1, pos2) => pos2.reference - pos1.reference); // new contracts first\n        }\n    }\n\n    @action.bound\n    async transactionHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n        }\n        if (!response.transaction) return;\n        const { contract_id, action: act } = response.transaction;\n\n        if (act === 'buy') {\n            const res = await WS.portfolio();\n            const new_pos = res.portfolio.contracts.find(pos => +pos.contract_id === +contract_id);\n            if (!new_pos) return;\n            this.pushNewPosition(new_pos);\n            WS.subscribeProposalOpenContract(contract_id, this.proposalOpenContractHandler, false);\n        } else if (act === 'sell') {\n            const i = this.getPositionIndexById(contract_id);\n\n            // Currently, if the contract has ended before the response is sent\n            // the Portfolio API returns an empty `contracts` array.\n            // This causes the contract to not be pushed to the `positions` property here.\n            // The statement below prevents accessing undefined values caused by the above explanation.\n            if (i === -1) return;\n\n            this.positions[i].is_loading = true;\n            WS.subscribeProposalOpenContract(contract_id, this.populateResultDetails, false);\n        }\n    }\n\n    @action.bound\n    proposalOpenContractHandler(response) {\n        if ('error' in response) return;\n\n        const proposal = response.proposal_open_contract;\n        const portfolio_position = this.positions.find((position) => +position.id === +proposal.contract_id);\n\n        if (!portfolio_position) return;\n\n        const prev_indicative = portfolio_position.indicative;\n        const new_indicative  = +proposal.bid_price;\n        const profit_loss     = +proposal.profit;\n\n        // fix for missing barrier and entry_spot in proposal_open_contract API response, only re-assign if valid\n        if (proposal.barrier) portfolio_position.barrier = +proposal.barrier;\n        if (proposal.entry_spot) portfolio_position.entry_spot = +proposal.entry_spot;\n\n        // store contract proposal details that require modifiers\n        portfolio_position.indicative       = new_indicative;\n        portfolio_position.profit_loss      = profit_loss;\n        portfolio_position.is_valid_to_sell = isValidToSell(proposal);\n        // store contract proposal details that do not require modifiers\n        portfolio_position.contract_info    = proposal;\n\n        // for tick contracts\n        if (proposal.tick_count) {\n            const current_tick = (portfolio_position.current_tick > getCurrentTick(proposal)) ?\n                portfolio_position.current_tick : getCurrentTick(proposal);\n            portfolio_position.current_tick = current_tick;\n        }\n\n        if (new_indicative > prev_indicative) {\n            portfolio_position.status = 'profit';\n        } else if (new_indicative < prev_indicative) {\n            portfolio_position.status = 'loss';\n        } else {\n            portfolio_position.status = null;\n        }\n    }\n\n    @action.bound\n    onClickSell(contract_id) {\n        const i = this.getPositionIndexById(contract_id);\n        const { bid_price } = this.positions[i].contract_info;\n        this.positions[i].is_sell_requested = false;\n        if (contract_id && bid_price) {\n            WS.sell(contract_id, bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        if (response.error) {\n            // If unable to sell due to error, give error via pop up if not in contract mode\n            const i = this.getPositionIndexById(response.echo_req.sell);\n            this.positions[i].is_sell_requested = false;\n            this.root_store.common.services_error = {\n                type: response.msg_type,\n                ...response.error,\n            };\n            this.root_store.ui.toggleServicesErrorModal(true);\n        } else if (!response.error && response.sell) {\n            const i = this.getPositionIndexById(response.sell.contract_id);\n            this.positions[i].is_sell_requested = false;\n            // update contract store sell info after sell\n            this.root_store.modules.contract_trade.sell_info = {\n                sell_price    : response.sell.sold_for,\n                transaction_id: response.sell.transaction_id,\n            };\n            this.root_store.ui.addNotification(contractSold(this.root_store.client.currency, response.sell.sold_for));\n        }\n    }\n\n    @action.bound\n    populateResultDetails = (response) => {\n        const contract_response = response.proposal_open_contract;\n        const i = this.getPositionIndexById(contract_response.contract_id);\n\n        this.positions[i].contract_info    = contract_response;\n        this.positions[i].duration         = getDurationTime(contract_response);\n        this.positions[i].duration_unit    = getDurationUnitText(getDurationPeriod(contract_response));\n        this.positions[i].exit_spot        = contract_response.exit_tick || contract_response.current_spot; // workaround if no exit_tick in proposal_open_contract, use latest spot\n        this.positions[i].is_valid_to_sell = isValidToSell(contract_response);\n        this.positions[i].result           = getDisplayStatus(contract_response);\n        this.positions[i].profit_loss      = +contract_response.profit;\n        this.positions[i].sell_time        = getEndTime(contract_response) || contract_response.current_spot_time; // same as exit_spot, use latest spot time if no exit_tick_time\n        this.positions[i].sell_price       = contract_response.sell_price;\n        this.positions[i].status           = 'complete';\n\n        // fix for missing barrier and entry_spot\n        if (!this.positions[i].contract_info.barrier || !this.positions[i].contract_info.entry_spot) {\n            this.positions[i].contract_info.barrier    = this.positions[i].barrier;\n            this.positions[i].contract_info.entry_spot = this.positions[i].entry_spot;\n        }\n\n        // remove exit_spot for manually sold contracts\n        if (isUserSold(contract_response)) this.positions[i].exit_spot = '-';\n\n        this.positions[i].is_loading = false;\n\n        if (isEnded(contract_response)) {\n            // also forget for buy\n            [this.populateResultDetails, this.proposalOpenContractHandler].forEach(cb => {\n                WS.forget('proposal_open_contract', cb, { contract_id: contract_response.contract_id });\n            });\n        }\n    };\n\n    @action.bound\n    pushNewPosition(new_pos) {\n        this.positions.unshift(formatPortfolioPosition(new_pos, this.root_store.modules.trade.active_symbols));\n    }\n\n    @action.bound\n    removePositionById(contract_id) {\n        const { is_contract_mode } = this.root_store.modules.smart_chart;\n        const contract_idx         = this.getPositionIndexById(contract_id);\n\n        this.positions.splice(contract_idx, 1);\n\n        // check if contract is in view in contract_mode before removing contract details from chart\n        if (is_contract_mode && (+this.root_store.modules.contract_trade.contract_id === +contract_id)) {\n            this.root_store.modules.contract_trade.onCloseContract();\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener () {\n        return new Promise(async (resolve) => {\n            await this.clearTable();\n            await WS.forgetAll('proposal_open_contract', 'transaction');\n            return resolve(this.initializePortfolio());\n        });\n    }\n\n    @action.bound\n    onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener.bind(null));\n        if (this.positions.length === 0) {\n            // TODO: Optimise the way is_logged_in changes are detected for \"logging in\" and \"already logged on\" states\n            if (this.root_store.client.is_logged_in) {\n                this.initializePortfolio();\n            } else {\n                reaction(() => this.root_store.client.is_logged_in, () => {\n                    if (this.root_store.client.is_logged_in) {\n                        this.initializePortfolio();\n                    }\n                });\n            }\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        // keep data and connections for portfolio drawer on desktop\n        if (this.root_store.ui.is_mobile) {\n            this.clearTable();\n            WS.forgetAll('proposal_open_contract', 'transaction');\n        }\n    }\n\n    getPositionIndexById(contract_id) {\n        return this.positions.findIndex(pos => +pos.id === +contract_id);\n    }\n\n    @computed\n    get totals() {\n        let indicative = 0;\n        let payout     = 0;\n        let purchase   = 0;\n\n        this.positions.forEach((portfolio_pos) => {\n            indicative += (+portfolio_pos.indicative);\n            payout     += (+portfolio_pos.payout);\n            purchase   += (+portfolio_pos.purchase);\n        });\n        return {\n            indicative,\n            payout,\n            purchase,\n        };\n    }\n\n    @computed\n    get active_positions_totals() {\n        let indicative = 0;\n        let purchase   = 0;\n\n        this.active_positions.forEach((portfolio_pos) => {\n            indicative += (+portfolio_pos.indicative);\n            purchase   += (+portfolio_pos.purchase);\n        });\n        return {\n            indicative,\n            purchase,\n        };\n    }\n\n    @computed\n    get active_positions() {\n        return this.positions.filter((portfolio_pos) => !portfolio_pos.result);\n    }\n\n    @computed\n    get all_positions() {\n        return this.positions;\n    }\n\n    @computed\n    get is_active_empty() {\n        return !this.is_loading && this.active_positions.length === 0;\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.all_positions.length === 0;\n    }\n}\n","import {\n    epochToMoment,\n    toMoment,\n} from 'Utils/Date';\n\nconst getDateTo = (partial_fetch_time, date_to) => {\n    const today = toMoment().startOf('day').unix();\n    if (date_to && today > date_to) {\n        return date_to;\n    } else if (partial_fetch_time) {\n        return epochToMoment(today).add(1, 'd').subtract(1, 's').unix();\n    }\n    return epochToMoment(today).add(1, 'd').subtract(1, 's').unix();\n};\n\nconst getDateFrom = (should_load_partially, partial_fetch_time, date_from, date_to) => {\n    const today = toMoment().startOf('day').unix();\n    if (today > date_to) {\n        return date_from;\n    }\n    return should_load_partially && partial_fetch_time ? partial_fetch_time : date_from;\n};\n\nconst shouldSendDateFrom = (date_from, should_load_partially, partial_fetch_time, date_to) => {\n    const today = toMoment().startOf('day').unix();\n    if (today > date_to) {\n        return (!!date_from || should_load_partially);\n    }\n    return should_load_partially ? (partial_fetch_time || date_from) : !!date_from || false;\n};\n\nconst getDateBoundaries = (date_from, date_to, partial_fetch_time, should_load_partially = false) => (\n    {\n        // eslint-disable-next-line max-len\n        ...(shouldSendDateFrom(date_from, should_load_partially, partial_fetch_time, date_to)) && { date_from: getDateFrom(should_load_partially, partial_fetch_time, date_from, date_to) },\n        ...(date_to || should_load_partially) && { date_to: getDateTo(partial_fetch_time, date_to) },\n    }\n);\n\nexport default getDateBoundaries;\n","import { formatMoney }          from '_common/base/currency_base';\nimport { toMoment }             from 'Utils/Date';\nimport { getMarketInformation } from '../../../../Modules/Reports/Helpers/market-underlying';\nimport { getSymbolDisplayName } from '../../Trading/Helpers/active-symbols';\n\nexport const formatProfitTableTransactions = (transaction, currency, active_symbols = []) => {\n    const format_string           = 'DD MMM YYYY HH:mm:ss';\n    const purchase_time           = `${toMoment(+transaction.purchase_time).format(format_string)}`;\n    const sell_time               = `${toMoment(+transaction.sell_time).format(format_string)}`;\n    const payout                  = parseFloat(transaction.payout);\n    const sell_price              = parseFloat(transaction.sell_price);\n    const buy_price               = parseFloat(transaction.buy_price);\n    const profit_loss             = formatMoney(currency, Number(sell_price - buy_price), true);\n    const should_exclude_currency = true;\n    const display_name            = getSymbolDisplayName(\n        active_symbols,\n        getMarketInformation(transaction.shortcode).underlying\n    );\n\n    return {\n        ...transaction,\n        ...{\n            payout    : isNaN(payout) ? '-' : formatMoney(currency, payout, should_exclude_currency),\n            sell_price: isNaN(sell_price) ? '-' : formatMoney(currency, sell_price, should_exclude_currency),\n            buy_price : isNaN(buy_price) ? '-' : formatMoney(currency, buy_price, should_exclude_currency),\n            profit_loss,\n            sell_time,\n            purchase_time,\n            display_name,\n        },\n    };\n};\n","import debounce                          from 'lodash.debounce';\nimport {\n    action,\n    computed,\n    observable,\n}                                        from 'mobx';\nimport { WS }                            from 'Services';\nimport { toMoment }                      from 'Utils/Date';\nimport getDateBoundaries                 from './Helpers/format-request';\nimport { formatProfitTableTransactions } from './Helpers/format-response';\nimport BaseStore                         from '../../base-store';\n\nconst batch_size = 50;\nconst delay_on_scroll_time = 150;\n\nexport default class ProfitTableStore extends BaseStore {\n    @observable data           = [];\n    @observable date_from      =  null;\n    @observable date_to        = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n    @observable error          = '';\n    @observable has_loaded_all = false;\n    @observable is_loading     = false;\n\n    // `client_loginid` is only used to detect if this is in sync with the client-store, don't rely on\n    // this for calculations. Use the client.currency instead.\n    @observable client_loginid = '';\n\n    @computed\n    get total_profit () {\n        return this.data.reduce((previous, current) => {\n            const buy_price  = Number(parseFloat(current.buy_price));\n            const sell_price = Number(parseFloat(current.sell_price));\n            const pl         = sell_price - buy_price;\n            return previous + pl;\n        }, 0);\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    @computed\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    shouldFetchNextBatch(should_load_partially) {\n        if (!should_load_partially && (this.has_loaded_all || this.is_loading)) return false;\n        const today = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n        if (this.date_to < today) return (!should_load_partially && this.partial_fetch_time);\n        return true;\n    }\n\n    @action.bound\n    async fetchNextBatch(should_load_partially = false) {\n        if (!this.shouldFetchNextBatch(should_load_partially)) return;\n        this.is_loading = true;\n\n        const response = await WS.profitTable(\n            batch_size,\n            !should_load_partially ? this.data.length : undefined,\n            getDateBoundaries(this.date_from, this.date_to, this.partial_fetch_time, should_load_partially)\n        );\n\n        this.profitTableResponseHandler(response, should_load_partially);\n    }\n\n    @action.bound\n    profitTableResponseHandler(response, should_load_partially = false) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.profit_table.transactions\n            .map(transaction => formatProfitTableTransactions(\n                transaction,\n                this.root_store.client.currency,\n                this.root_store.modules.trade.active_symbols,\n            ));\n\n        if (should_load_partially) {\n            this.data = [...formatted_transactions, ...this.data];\n        } else {\n            this.data = [...this.data, ...formatted_transactions];\n        }\n        this.has_loaded_all      = !should_load_partially && formatted_transactions.length < batch_size;\n        this.is_loading          = false;\n        if (formatted_transactions.length > 0) {\n            this.partial_fetch_time = toMoment().unix();\n        }\n    }\n\n    fetchOnScroll = debounce((left) => {\n        if (left < 2000) {\n            this.fetchNextBatch();\n        }\n    }, delay_on_scroll_time);\n\n    @action.bound\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll                            = scrollHeight - (scrollTop + clientHeight);\n        this.fetchOnScroll(left_to_scroll);\n    }\n\n    @action.bound\n    async onMount() {\n        this.assertHasValidCache(\n            this.client_loginid,\n            this.clearDateFilter,\n            this.clearTable,\n            WS.forgetAll.bind(null, 'proposal')\n        );\n        this.client_loginid = this.root_store.client.loginid;\n        this.onSwitchAccount(this.accountSwitcherListener);\n        await this.waitFor('authorize');\n        this.fetchNextBatch(true);\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal');\n    }\n\n    @computed\n    get totals() {\n        let profit_loss = 0;\n\n        this.data.forEach((transaction) => {\n            if (transaction.profit_loss.indexOf('-') !== -1) {\n                profit_loss -= parseFloat(transaction.profit_loss.split('-')[1]);\n            } else {\n                profit_loss += parseFloat(transaction.profit_loss);\n            }\n        });\n        return {\n            profit_loss: profit_loss.toString(),\n        };\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise((resolve) => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    @action.bound\n    clearTable() {\n        this.data           = [];\n        this.has_loaded_all = false;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    clearDateFilter() {\n        this.date_from = null;\n        this.date_to   = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n        this.partial_fetch_time = 0;\n    }\n\n    @action.bound\n    handleDateChange(date_values) {\n        Object.keys(date_values).forEach(key => {\n            this[`date_${key}`] = date_values[key];\n        });\n        this.clearTable();\n        this.fetchNextBatch();\n    }\n}\n","import { toJS }            from 'mobx';\nimport { isEmptyObject }   from '_common/utility';\nimport { CONTRACT_SHADES } from '../Constants/barriers';\n\nexport const isBarrierSupported = (contract_type) => contract_type in CONTRACT_SHADES;\n\nexport const barriersToString = (is_relative, ...barriers_list) => barriers_list\n    .filter(barrier => barrier !== undefined && barrier !== null)\n    .map(barrier => `${is_relative && !/^[+-]/.test(barrier) ? '+' : ''}${barrier}`);\n\nexport const barriersObjectToArray = (barriers, reference_array) => {\n    Object.keys(barriers).forEach(barrier => {\n        const js_object = toJS(barriers[barrier]);\n        if (!isEmptyObject(js_object)) {\n            reference_array.push(js_object);\n        }\n    });\n\n    return reference_array;\n};\n","import {\n    action,\n    computed,\n    observable }            from 'mobx';\nimport {\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES,\n    CONTRACT_SHADES,\n    DEFAULT_SHADES }        from './Constants/barriers';\nimport { barriersToString } from './Helpers/barriers';\n\nexport class ChartBarrierStore {\n    @observable color;\n    @observable lineStyle;\n    @observable shade;\n\n    @observable high;\n    @observable low;\n\n    @observable relative;\n    @observable draggable;\n    @observable hidePriceLines;\n\n    onChartBarrierChange;\n\n    constructor(\n        high_barrier,\n        low_barrier,\n        onChartBarrierChange = null,\n        { color, line_style, not_draggable } = {}\n    ) {\n        this.color     = color;\n        this.lineStyle = line_style || BARRIER_LINE_STYLES.SOLID;\n        this.onChange  = this.onBarrierChange;\n\n        // trade_store's action to process new barriers on dragged\n        this.onChartBarrierChange = typeof onChartBarrierChange === 'function' ? onChartBarrierChange.bind(this) : () => {};\n\n        this.high = +high_barrier || 0; // 0 to follow the price\n        if (low_barrier) {\n            this.low = +low_barrier;\n        }\n\n        this.shade = this.default_shade;\n\n        const has_barrier   = !!high_barrier;\n        this.relative       = !has_barrier || /^[+-]/.test(high_barrier);\n        this.draggable      = !not_draggable && has_barrier;\n        this.hidePriceLines = !has_barrier;\n    }\n\n    @action.bound\n    updateBarriers(high, low, isFromChart = false) {\n        if (!isFromChart) {\n            this.relative       = /^[+-]/.test(high);\n        }\n        this.high = +high || undefined;\n        this.low  = +low  || undefined;\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        this.shade = (should_display && CONTRACT_SHADES[contract_type]) || this.default_shade;\n    }\n\n    @action.bound\n    onBarrierChange({ high, low }) {\n        this.updateBarriers(high, low, true);\n        this.onChartBarrierChange(...barriersToString(this.relative, high, low));\n    }\n\n    @action.bound\n    updateBarrierColor(is_dark_mode) {\n        this.color = is_dark_mode ? BARRIER_COLORS.DARK_GRAY : BARRIER_COLORS.GRAY;\n    }\n\n    @computed\n    get barrier_count() {\n        return (typeof this.high !== 'undefined') + (typeof this.low !== 'undefined');\n    }\n\n    @computed\n    get default_shade() {\n        return DEFAULT_SHADES[this.barrier_count];\n    }\n}\n","import { observable } from 'mobx';\n\nexport class ChartMarkerStore {\n    @observable marker_config  = observable.object({});\n    @observable content_config = observable.object({});\n\n    constructor(marker_config, content_config) {\n        this.marker_config  = marker_config;\n        this.content_config = content_config;\n    }\n}\n","import extend                 from 'extend';\nimport {\n    action,\n    computed,\n    observable }              from 'mobx';\nimport { isEmptyObject }      from '_common/utility';\nimport ServerTime             from '_common/base/server_time';\nimport BinarySocket           from '_common/base/socket_base';\nimport { WS }                 from 'Services';\nimport { ChartBarrierStore }  from './chart-barrier-store';\nimport { ChartMarkerStore }   from './chart-marker-store';\nimport {\n    barriersObjectToArray,\n    isBarrierSupported }      from './Helpers/barriers';\nimport BaseStore              from '../../base-store';\n\nexport default class SmartChartStore extends BaseStore {\n    @observable chart_type;\n    @observable granularity;\n    @observable barriers = observable.object({});\n    @observable markers  = observable.object({});\n    barriers_empty_array = [];\n    markers_empty_array = [];\n\n    @observable is_contract_mode = false;\n    @observable is_static_chart  = false;\n    @observable is_title_enabled = true;\n\n    @observable start_epoch;\n    @observable end_epoch;\n    @observable margin;\n\n    @observable scroll_to_left_epoch = null;\n\n    @observable chart_id                      = 'trade';\n    @observable is_chart_loading              = false;\n    @observable is_chart_ready                = false;\n    @observable should_import_layout          = false;\n    @observable should_export_layout          = false;\n    @observable should_clear_chart            = false;\n    @observable trade_chart_layout            = null;\n    @observable should_refresh_active_symbols = false;\n\n    trade_chart_symbol               = null;\n    trade_chart_granularity          = null;\n    trade_chart_type                 = null;\n\n    @action.bound\n    switchToContractMode(\n        is_from_positions = false,\n        is_from_other_position = false,\n        chart_type = 'mountain',\n        granularity = 0,\n    ) {\n\n        if (!is_from_other_position) this.saveAndClearTradeChartLayout(null);\n        this.setContractMode(true);\n        if (!is_from_positions) {\n            this.updateGranularity(granularity);\n            this.updateChartType(chart_type);\n        }\n    }\n\n    @action.bound\n    getChartStatus(status) {\n        this.is_chart_ready = status;\n    }\n\n    @action.bound\n    updateChartType(type) {\n        this.chart_type = type;\n        if (!this.is_contract_mode) this.trade_chart_type = type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.granularity = granularity;\n        if (!this.is_contract_mode) this.trade_chart_granularity = granularity;\n    }\n\n    @action.bound\n    updateMargin(duration) {\n        this.margin = Math.floor(!this.granularity ?\n            (Math.max(300, (30 * duration) / (60 * 60) || 0))\n            :\n            3 * this.granularity);\n    }\n\n    @action.bound\n    updateEpochScrollToValue(epoch) {\n        this.scroll_to_left_epoch = epoch;\n    }\n\n    @action.bound\n    cleanupContractChartView() {\n        this.margin = null;\n        this.removeBarriers();\n        this.removeMarkers();\n        this.resetScrollToLeft();\n        this.setContractMode(false);\n        this.setContractStart(null);\n        this.setContractEnd(null);\n        this.setStaticChart(false);\n        this.root_store.ui.resetPurchaseStates();\n    }\n\n    @action.bound\n    resetScrollToLeft() {\n        this.scroll_to_left_epoch = null;\n    }\n\n    @action.bound\n    setContractMode(is_contract_mode) {\n        this.is_contract_mode = is_contract_mode;\n        this.is_title_enabled = !is_contract_mode;\n    }\n\n    @action.bound\n    onMount = () => {\n        // remove any barriers and markers before chart is ready\n        if (this.trade_chart_layout && !isEmptyObject(this.trade_chart_layout)) {\n            this.applySavedTradeChartLayout();\n        }\n    };\n\n    @action.bound\n    onUnmount = () => {\n        this.symbol = null;\n        this.trade_chart_layout = null;\n        this.should_import_layout = false;\n        this.setIsChartLoading(false);\n        this.cleanupContractChartView();\n    };\n\n    // --------- Set Contract Scroll to Left ---------\n    @action.bound\n    setChartView(scroll_to_left_epoch) {\n        this.updateEpochScrollToValue(scroll_to_left_epoch);\n    }\n\n    // --------- All Contracts ---------\n    @action.bound\n    setContractStart(start) {\n        this.start_epoch = start;\n    }\n\n    @action.bound\n    setContractEnd(end) {\n        this.end_epoch = end;\n    }\n\n    @action.bound\n    setIsChartLoading(bool) {\n        this.is_chart_loading = bool;\n    }\n\n    // ---------- Barriers ----------\n    @action.bound\n    createBarriers = (contract_type, high_barrier, low_barrier, onChartBarrierChange, barrier_config) => {\n        if (isEmptyObject(this.barriers.main)) {\n            let main_barrier = {};\n            if (isBarrierSupported(contract_type)) {\n                main_barrier = new ChartBarrierStore(high_barrier, low_barrier, onChartBarrierChange, barrier_config);\n            }\n\n            this.barriers = {\n                main: main_barrier,\n            };\n        }\n    };\n\n    @action.bound\n    updateBarriers(barrier_1, barrier_2) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarriers(barrier_1, barrier_2);\n        }\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarrierShade(should_display, contract_type);\n        }\n    }\n\n    @action.bound\n    updateBarrierColor(is_dark_mode) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarrierColor(is_dark_mode);\n        }\n    }\n\n    @action.bound\n    removeBarriers() {\n        this.barriers = {};\n    }\n\n    @action.bound\n    saveAndClearTradeChartLayout(chart_id) {\n        this.should_export_layout    = true;\n        this.should_import_layout    = false;\n        this.trade_chart_symbol      = this.root_store.modules.trade.symbol;\n        this.trade_chart_granularity = this.root_store.modules.smart_chart.granularity || 0;\n        this.trade_chart_type        = this.root_store.modules.smart_chart.chart_type || 'mountain';\n        this.chart_id                = chart_id;\n    }\n\n    @action.bound\n    applySavedTradeChartLayout() {\n        if (!this.trade_chart_layout) return;\n\n        this.setIsChartLoading(true);\n        this.should_export_layout = false;\n        this.should_import_layout = true;\n        this.should_clear_chart   = false;\n        this.chart_id             = 'trade';\n\n        this.trade_chart_layout.isDone = action(() => {\n            this.trade_chart_layout   = null;\n            this.should_import_layout = false;\n\n            // Reset back to symbol before loading contract if trade_symbol and contract_symbol don't match\n            if (this.trade_chart_symbol !== this.root_store.modules.trade.symbol) {\n                this.root_store.modules.trade.symbol = this.trade_chart_symbol;\n            }\n            WS.forgetAll('proposal').then(this.root_store.modules.trade.requestProposal());\n\n            // Clear chart loading status once ChartListener returns ready\n            if (this.is_chart_ready) {\n                this.setIsChartLoading(false);\n            }\n        });\n    }\n\n    @action.bound\n    exportLayout(layout) {\n        this.trade_chart_layout = layout;\n        this.should_clear_chart = true;\n    }\n\n    @action.bound\n    setStaticChart(bool) {\n        this.is_static_chart = bool;\n    }\n\n    @computed\n    get barriers_array() {\n        let has_differing = false;\n        const barriers_array = barriersObjectToArray(this.barriers, []);\n\n        if (this.barriers_empty_array.length !== barriers_array.length) {\n            has_differing = true;\n        } else {\n            this.barriers_empty_array.forEach(barrier => {\n                barriers_array.forEach(next_barrier => {\n                    Object.keys(barrier).forEach(key => {\n                        if (barrier[key] !== next_barrier[key]) {\n                            has_differing = true;\n                        }\n                    });\n                });\n            });\n        }\n\n        if (has_differing) {\n            this.barriers_empty_array = [];\n        } else {\n            this.barriers_empty_array.length = 0;\n        }\n\n        return barriersObjectToArray(this.barriers, this.barriers_empty_array);\n    }\n\n    // ---------- Markers ----------\n    @action.bound\n    createMarker(config) {\n        this.markers = extend({}, this.markers, {\n            [config.type]: new ChartMarkerStore(config.marker_config, config.content_config),\n        });\n    }\n\n    @action.bound\n    removeMarkers() {\n        this.markers = {};\n    }\n\n    @computed\n    get markers_array() {\n        let has_differing   = false;\n        const markers_array = barriersObjectToArray(this.markers, []);\n\n        if (this.markers_empty_array.length !== markers_array.length) {\n            has_differing = true;\n        } else {\n            this.markers_empty_array.forEach(marker => {\n                markers_array.forEach(next_marker => {\n                    Object.keys(marker).forEach(key => {\n                        if (marker[key] !== next_marker[key]) {\n                            has_differing = true;\n                        }\n                    });\n                });\n            });\n        }\n\n        if (has_differing) {\n            this.markers_empty_array = [];\n        } else {\n            this.markers_empty_array.length = 0;\n        }\n\n        return barriersObjectToArray(this.markers, this.markers_empty_array);\n    }\n\n    // ---------- Chart Settings ----------\n    @computed\n    get settings() {\n        return (({ common, ui } = this.root_store) => ({\n            assetInformation            : false, // ui.is_chart_asset_info_visible,\n            countdown                   : ui.is_chart_countdown_visible,\n            isHighestLowestMarkerEnabled: false, // !this.is_contract_mode, // TODO: Pending UI\n            lang                        : common.current_language,\n            position                    : ui.is_chart_layout_default ? 'bottom' : 'left',\n            theme                       : ui.is_dark_mode_on ? 'dark' : 'light',\n        }))();\n    }\n\n    // ---------- WS ----------\n    wsSubscribe = (request_object, callback) => {\n        if (request_object.subscribe !== 1) return;\n        WS.subscribeTicksHistory({ ...request_object }, callback); // use a copy of the request_object to prevent updating the source\n    };\n\n    wsForget = (match_values, callback) => (\n        WS.forget('ticks_history', callback, match_values)\n    );\n\n    wsForgetStream = (stream_id) => (\n        WS.forgetStream(stream_id)\n    );\n\n    wsSendRequest = (request_object) => {\n        if (request_object.time) {\n            return ServerTime.timePromise.then(() => ({\n                msg_type: 'time',\n                time    : ServerTime.get().unix(),\n            }));\n        }\n        if (request_object.active_symbols) {\n            if (this.should_refresh_active_symbols) {\n                return WS.sendRequest(request_object, { forced: true });\n            }\n            return BinarySocket.wait('active_symbols');\n        }\n        return WS.sendRequest(request_object);\n    };\n}\n","import debounce                       from 'lodash.debounce';\nimport {\n    action,\n    computed,\n    observable,\n}                                     from 'mobx';\nimport { WS }                         from 'Services';\nimport { toMoment }                   from 'Utils/Date';\nimport { formatStatementTransaction } from './Helpers/format-response';\nimport getDateBoundaries              from '../Profit/Helpers/format-request';\nimport BaseStore                      from '../../base-store';\n\nconst batch_size = 100; // request response limit\nconst delay_on_scroll_time = 150; // fetch debounce delay on scroll\n\nexport default class StatementStore extends BaseStore {\n    @observable data           = [];\n    @observable is_loading     = false;\n    @observable has_loaded_all = false;\n    @observable date_from      = null;\n    @observable date_to        = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n    @observable error          = '';\n\n    // `client_loginid` is only used to detect if this is in sync with the client-store, don't rely on\n    // this for calculations. Use the client.currency instead.\n    @observable client_loginid = '';\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    @computed\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    @action.bound\n    clearTable() {\n        this.data               = [];\n        this.has_loaded_all     = false;\n        this.is_loading         = false;\n    }\n\n    @action.bound\n    clearDateFilter() {\n        this.date_from = null;\n        this.date_to   = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n        this.partial_fetch_time = 0;\n    }\n\n    shouldFetchNextBatch(should_load_partially) {\n        if (!should_load_partially && (this.has_loaded_all || this.is_loading)) return false;\n        const today = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n        if (this.date_to < today) return (!should_load_partially && this.partial_fetch_time);\n        return true;\n    }\n\n    @action.bound\n    async fetchNextBatch(should_load_partially = false) {\n        if (!this.shouldFetchNextBatch(should_load_partially)) return;\n        this.is_loading = true;\n\n        const response = await WS.statement(\n            batch_size,\n            !should_load_partially ? this.data.length : undefined,\n            getDateBoundaries(this.date_from, this.date_to, this.partial_fetch_time, should_load_partially),\n        );\n        this.statementHandler(response, should_load_partially);\n    }\n\n    @action.bound\n    statementHandler(response, should_load_partially) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.statement.transactions\n            .map(transaction => formatStatementTransaction(transaction,\n                this.root_store.client.currency,\n                this.root_store.modules.trade.active_symbols,\n            ));\n\n        if (should_load_partially) {\n            this.data = [...formatted_transactions, ...this.data];\n        } else {\n            this.data = [...this.data, ...formatted_transactions];\n        }\n        this.has_loaded_all = !should_load_partially && formatted_transactions.length < batch_size;\n        this.is_loading     = false;\n        if (formatted_transactions.length > 0) {\n            this.partial_fetch_time = toMoment().unix();\n        }\n    }\n\n    @action.bound\n    handleDateChange(date_values) {\n        Object.keys(date_values).forEach(key => {\n            if (date_values[key]) {\n                this[`date_${key}`] = date_values[key];\n            }\n        });\n        this.clearTable();\n        this.fetchNextBatch();\n    }\n\n    fetchOnScroll = debounce((left) => {\n        if (left < 2000) {\n            this.fetchNextBatch();\n        }\n    }, delay_on_scroll_time);\n\n    @action.bound\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll  = scrollHeight - (scrollTop + clientHeight);\n\n        this.fetchOnScroll(left_to_scroll);\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise((resolve) => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        this.assertHasValidCache(\n            this.client_loginid,\n            this.clearDateFilter,\n            this.clearTable,\n            WS.forgetAll.bind(null, 'proposal')\n        );\n        this.client_loginid = this.root_store.client.loginid;\n        this.onSwitchAccount(this.accountSwitcherListener);\n        await this.waitFor('authorize');\n        this.fetchNextBatch(true);\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal');\n    }\n}\n","import { formatMoney }          from '_common/base/currency_base';\nimport { toTitleCase }          from '_common/string_util';\nimport { localize }             from 'App/i18n';\nimport { getMarketInformation } from 'Modules/Reports/Helpers/market-underlying';\nimport { toMoment }             from 'Utils/Date';\nimport { getSymbolDisplayName } from '../../Trading/Helpers/active-symbols';\n\nexport const formatStatementTransaction = (transaction, currency, active_symbols = []) => {\n    const format_string           = 'DD MMM YYYY HH:mm:ss';\n    const transaction_time        = toMoment(transaction.transaction_time).format(format_string);\n    const payout                  = parseFloat(transaction.payout);\n    const amount                  = parseFloat(transaction.amount);\n    const balance                 = parseFloat(transaction.balance_after);\n    const should_exclude_currency = true;\n    const shortcode               = ['buy', 'sell'].includes(transaction.action_type) ? transaction.shortcode : null;\n    const display_name            = shortcode ? getSymbolDisplayName(\n        active_symbols,\n        getMarketInformation(shortcode).underlying\n    ) : '';\n\n    return {\n        action     : localize(toTitleCase(transaction.action_type) /* localize-ignore */), // handled in static_strings_app.js: 'Buy', 'Sell', 'Deposit', 'Withdrawal'\n        date       : transaction_time,\n        display_name,\n        refid      : transaction.transaction_id,\n        payout     : isNaN(payout) ? '-' : formatMoney(currency, payout, should_exclude_currency),\n        amount     : isNaN(amount) ? '-' : formatMoney(currency, amount, should_exclude_currency),\n        balance    : isNaN(balance) ? '-' : formatMoney(currency, balance, should_exclude_currency),\n        desc       : transaction.longcode.replace(/\\n/g, '<br />'),\n        id         : transaction.contract_id,\n        app_id     : transaction.app_id,\n        shortcode,\n        action_type: transaction.action_type,\n    };\n};\n","import { WS } from 'Services';\n\nexport const processPurchase = async(proposal_id, price) =>\n    WS.subscribeProposalOpenContractOnBuy({ buy: proposal_id, price });\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeSymbolAsync = async(symbol) => {\n    await ContractType.buildContractTypesConfig(symbol);\n};\n","import { localize }           from 'App/i18n';\nimport { isSessionAvailable } from 'Stores/Modules/Trading/Helpers/start-date';\nimport {\n    isHourValid,\n    isMinuteValid,\n    isTimeValid,\n    toMoment }                from 'Utils/Date';\n\nconst getValidationRules = () => ({\n    amount: {\n        rules: [\n            ['req'    , { message: localize('Amount is a required field.') }],\n            ['number' , { min: 0, type: 'float' }],\n        ],\n    },\n    barrier_1: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.barrier_count }],\n            ['custom' , { func: (value, options, store, inputs) => store.barrier_count > 1 ? +value > +inputs.barrier_2 : true, message: localize('Higher barrier must be higher than lower barrier.') }],\n        ],\n        trigger: 'barrier_2',\n    },\n    barrier_2: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count > 1 && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.barrier_count }],\n            ['custom' , { func: (value, options, store, inputs) => (/^[+-]/g.test(inputs.barrier_1) && /^[+-]/g.test(value)) || (/^(?![+-])/g.test(inputs.barrier_1) && /^(?![+-])/g.test(value)), message: localize('Both barriers should be relative or absolute') }],\n            ['custom' , { func: (value, options, store, inputs) => +inputs.barrier_1 > +value, message: localize('Lower barrier must be lower than higher barrier.') }],\n        ],\n        trigger: 'barrier_1',\n    },\n    duration: {\n        rules: [\n            ['req'    , { message: localize('Duration is a required field.') }],\n        ],\n    },\n    start_date: {\n        trigger: 'start_time',\n    },\n    expiry_date: {\n        trigger: 'expiry_time',\n    },\n    start_time: {\n        rules: [\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isTimeValid(value)  , message: localize('Please enter the start time in the format \"HH:MM\".') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isHourValid(value)  , message: localize('Hour must be between 0 and 23.') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isMinuteValid(value), message: localize('Minute must be between 0 and 59.') }],\n            ['custom' , { func: (value, options, store) => {\n                if (store.contract_start_type === 'spot') return true;\n                if (!isTimeValid(value)) return false;\n                const start_moment       = toMoment(store.start_date);\n                const start_moment_clone = start_moment.clone();\n                const [h, m] = value.split(':');\n                return isSessionAvailable(store.sessions, start_moment_clone.hour(h).minute(m), start_moment);\n            }, message: localize('Start time cannot be in the past.') }],\n        ],\n    },\n    expiry_time: {\n        rules: [\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isTimeValid(value)  , message: localize('Please enter the start time in the format \"HH:MM\".') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isHourValid(value)  , message: localize('Hour must be between 0 and 23.') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isMinuteValid(value), message: localize('Minute must be between 0 and 59.') }],\n            ['custom' , { func: (value, options, store) => {\n                if (store.contract_start_type === 'spot') return true;\n                if (!isTimeValid(value)) return false;\n                const start_moment       = toMoment(store.start_date);\n                const start_moment_clone = start_moment.clone();\n                const [h, m] = value.split(':');\n                return isSessionAvailable(store.sessions, start_moment_clone.hour(h).minute(m), start_moment);\n            }, message: localize('Expiry time cannot be in the past.') }],\n        ],\n    },\n});\n\nexport default getValidationRules;\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeContractTypeList = ({ contract_types_list, contract_type }) => (\n    ContractType.getContractType(contract_types_list, contract_type)\n);\n\nexport const onChangeContractType = (store) => (\n    ContractType.getContractValues(store)\n);\n","import ContractType      from '../Helpers/contract-type';\nimport { getExpiryType } from '../Helpers/duration';\n\nexport const onChangeExpiry = (store) => {\n    const contract_expiry_type = getExpiryType(store);\n\n    // TODO: there will be no barrier available if contract is only daily but client chooses intraday endtime. we should find a way to handle this.\n    const obj_barriers = store.contract_expiry_type !== contract_expiry_type && // barrier value changes for tick/intraday/daily\n        ContractType.getBarriers(store.contract_type, contract_expiry_type);\n\n    return {\n        contract_expiry_type,\n        ...obj_barriers,\n    };\n};\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeStartDate = async (store) => {\n    const {\n        contract_type,\n        duration_unit,\n        expiry_time,\n        start_date,\n        symbol } = store;\n    const server_time = store.root_store.common.server_time;\n    let {\n        start_time,\n        expiry_date,\n        expiry_type } = store;\n\n    start_time = start_time || server_time.clone().add(6, 'minute').format('HH:mm'); // when there is not a default value for start_time, it should be set more than 5 min after server_time\n\n    const obj_contract_start_type = ContractType.getStartType(start_date);\n    const contract_start_type     = obj_contract_start_type.contract_start_type;\n    const obj_sessions            = ContractType.getSessions(contract_type, start_date);\n    const sessions                = obj_sessions.sessions;\n    const obj_start_time          = ContractType.getStartTime(sessions, start_date, start_time);\n    start_time                    = obj_start_time.start_time;\n\n    const obj_duration_units_list = ContractType.getDurationUnitsList(contract_type, contract_start_type);\n    const duration_units_list     = obj_duration_units_list.duration_units_list;\n    const obj_duration_unit       = ContractType.getDurationUnit(duration_unit, contract_type, contract_start_type);\n\n    const obj_expiry_type = ContractType.getExpiryType(duration_units_list, expiry_type);\n    expiry_type           = obj_expiry_type.expiry_type;\n    const obj_expiry_date = ContractType.getExpiryDate(duration_units_list, expiry_date, expiry_type, start_date);\n    expiry_date           = obj_expiry_date.expiry_date;\n    \n    const trading_times          = await ContractType.getTradingTimes(expiry_date, symbol);\n    const obj_market_open_times  = { market_open_times: trading_times.open };\n    const obj_market_close_times = { market_close_times: trading_times.close };\n\n    const market_close_times     = obj_market_close_times.market_close_times;\n    const obj_expiry_time        = ContractType.getExpiryTime(\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    );\n\n    const obj_duration_min_max = ContractType.getDurationMinMax(contract_type, contract_start_type);\n\n    return {\n        ...obj_contract_start_type,\n        ...obj_duration_units_list,\n        ...obj_duration_min_max,\n        ...obj_duration_unit,\n        ...obj_sessions,\n        ...obj_start_time,\n        ...obj_expiry_date,\n        ...obj_expiry_time,\n        ...obj_expiry_type,\n        ...obj_market_open_times,\n        ...obj_market_close_times,\n    };\n};\n","import extend from 'extend';\n\nimport ContractTypeHelper from './contract-type';\nimport * as ContractType  from '../Actions/contract-type';\nimport * as Duration      from '../Actions/duration';\nimport * as StartDate     from '../Actions/start-date';\n\nexport const processTradeParams = async(store, new_state) => {\n    const snapshot = store.getSnapshot();\n    const functions = getMethodsList(store, new_state);\n\n    // To make sure that every function is invoked and affects the snapshot respectively, we have to use for instead of forEach\n    for (let i = 0; i < functions.length; i++){\n        extendOrReplace(snapshot, await functions[i](snapshot)); // eslint-disable-line no-await-in-loop\n    }\n\n    return snapshot;\n};\n\nconst getMethodsList = (store, new_state) => ([\n    ContractTypeHelper.getContractCategories,\n    ContractType.onChangeContractTypeList,\n    ...(/\\b(symbol|contract_type)\\b/.test(Object.keys(new_state)) || !store.contract_type ? // symbol/contract_type changed or contract_type not set yet\n        [ContractType.onChangeContractType] : []),\n    StartDate.onChangeStartDate,\n    Duration.onChangeExpiry, // it should be always after StartDate.onChangeStartDate\n]);\n\n// Some values need to be replaced, not extended\nconst extendOrReplace = (source, new_values) => {\n    const to_replace = ['contract_types_list', 'duration_units_list', 'form_components', 'market_close_times', 'trade_types'];\n\n    to_replace.forEach((key) => {\n        if (key in new_values) {\n            source[key] = undefined;\n        }\n    });\n\n    extend(true, source, new_values);\n};\n","import { getDecimalPlaces }                from '_common/base/currency_base';\nimport { isVisible }                       from '_common/common_functions';\nimport {\n    getPropertyValue,\n    isDeepEqual }                          from '_common/utility';\nimport {\n    convertToUnix,\n    toMoment }                             from 'Utils/Date';\n\nconst map_error_field = {\n    barrier    : 'barrier_1',\n    barrier2   : 'barrier_2',\n    date_expiry: 'expiry_date',\n};\n\nexport const getProposalErrorField = (response) => {\n    const error_field = getPropertyValue(response, ['error', 'details', 'field']);\n    if (!error_field) {\n        return null;\n    }\n    const error_id = map_error_field[error_field] || error_field;\n    const el_error = document.getElementsByName(error_id)[0];\n    return (el_error && isVisible(el_error)) ? error_id : null;\n};\n\nexport const getProposalInfo = (store, response, obj_prev_contract_basis) => {\n    const proposal   = response.proposal || {};\n    const profit     = (proposal.payout - proposal.ask_price) || 0;\n    const returns    = profit * 100 / (proposal.ask_price || 1);\n    const stake      = proposal.display_value;\n    const basis_list = store.basis_list;\n\n    const contract_basis = (basis_list.find(o => o.value !== store.basis));\n    const is_stake       = contract_basis.text === 'Stake';\n    const price          = is_stake ? stake : proposal[contract_basis.value];\n    let has_increased    = price > obj_prev_contract_basis.value;\n\n    if (!obj_prev_contract_basis.value || price === obj_prev_contract_basis.value) {\n        has_increased = null;\n    }\n\n    const obj_contract_basis = {\n        text : contract_basis.text || '',\n        value: price || '',\n    };\n\n    return {\n        id               : proposal.id || '',\n        has_error        : !!response.error,\n        has_error_details: !!getProposalErrorField(response),\n        has_increased,\n        message          : proposal.longcode || response.error.message,\n        obj_contract_basis,\n        payout           : proposal.payout,\n        profit           : profit.toFixed(getDecimalPlaces(store.currency)),\n        returns          : `${returns.toFixed(2)}%`,\n        stake,\n    };\n};\n\nexport const createProposalRequests = (store) => {\n    const requests = {};\n\n    Object.keys(store.trade_types).forEach((type) => {\n        const new_req     = createProposalRequestForContract(store, type);\n        const current_req = store.proposal_requests[type];\n        if (!isDeepEqual(new_req, current_req)) {\n            requests[type] = new_req;\n        }\n    });\n\n    return requests;\n};\n\nconst createProposalRequestForContract = (store, type_of_contract) => {\n    const obj_expiry = {};\n    if (store.expiry_type === 'endtime') {\n        const expiry_date = toMoment(store.expiry_date);\n        obj_expiry.date_expiry = convertToUnix(expiry_date.unix(), store.expiry_time);\n    }\n\n    return {\n        proposal     : 1,\n        subscribe    : 1,\n        amount       : parseFloat(store.amount),\n        basis        : store.basis,\n        contract_type: type_of_contract,\n        currency     : store.root_store.client.currency,\n        symbol       : store.symbol,\n        ...(\n            store.start_date &&\n            { date_start: convertToUnix(store.start_date, store.start_time) }\n        ),\n        ...(\n            store.expiry_type === 'duration' ?\n                {\n                    duration     : parseInt(store.duration),\n                    duration_unit: store.duration_unit,\n                }\n                :\n                obj_expiry\n        ),\n        ...(\n            (store.barrier_count > 0 || store.form_components.indexOf('last_digit') !== -1) &&\n            { barrier: store.barrier_1 || store.last_digit }\n        ),\n        ...(\n            store.barrier_count === 2 &&\n            { barrier2: store.barrier_2 }\n        ),\n    };\n};\n","import debounce                       from 'lodash.debounce';\nimport {\n    action,\n    computed,\n    observable,\n    reaction,\n    runInAction }                     from 'mobx';\nimport BinarySocket                   from '_common/base/socket_base';\nimport { localize }                   from 'App/i18n';\nimport {\n    cloneObject,\n    isEmptyObject,\n    getPropertyValue }                from '_common/utility';\nimport {\n    getMinPayout,\n    isCryptocurrency }                from '_common/base/currency_base';\nimport { WS }                         from 'Services';\nimport { isDigitTradeType }           from 'Modules/Trading/Helpers/digits';\nimport { processPurchase }            from './Actions/purchase';\nimport * as Symbol                    from './Actions/symbol';\nimport getValidationRules             from './Constants/validation-rules';\nimport {\n    pickDefaultSymbol,\n    showUnavailableLocationError,\n    isMarketClosed,\n}                                     from './Helpers/active-symbols';\nimport { setChartBarrier }            from './Helpers/chart';\nimport ContractType                   from './Helpers/contract-type';\nimport {\n    convertDurationLimit,\n    resetEndTimeOnVolatilityIndices } from './Helpers/duration';\nimport { processTradeParams }         from './Helpers/process';\nimport {\n    createProposalRequests,\n    getProposalErrorField,\n    getProposalInfo }                 from './Helpers/proposal';\nimport { BARRIER_COLORS }             from '../SmartChart/Constants/barriers';\nimport BaseStore                      from '../../base-store';\n\nconst store_name = 'trade_store';\n\nexport default class TradeStore extends BaseStore {\n    // Control values\n    @observable is_trade_component_mounted = false;\n    @observable is_purchase_enabled        = false;\n    @observable is_trade_enabled           = false;\n    @observable is_equal                   = 0;\n\n    // Underlying\n    @observable symbol;\n    @observable is_market_closed = false;\n    @observable previous_symbol = '';\n    @observable active_symbols = [];\n\n    // Contract Type\n    @observable contract_expiry_type = '';\n    @observable contract_start_type  = '';\n    @observable contract_type        = '';\n    @observable contract_types_list  = {};\n    @observable form_components      = [];\n    @observable trade_types          = {};\n\n    // Amount\n    @observable amount     = 10;\n    @observable basis      = '';\n    @observable basis_list = [];\n    @observable currency   = '';\n\n    // Duration\n    @observable duration            = 5;\n    @observable duration_unit       = '';\n    @observable duration_units_list = [];\n    @observable duration_min_max    = {};\n    @observable expiry_date         = '';\n    @observable expiry_time         = '';\n    @observable expiry_type         = 'duration';\n\n    // Barrier\n    @observable barrier_1     = '';\n    @observable barrier_2     = '';\n    @observable barrier_count = 0;\n\n    // Start Time\n    @observable start_date       = Number(0); // Number(0) refers to 'now'\n    @observable start_dates_list = [];\n    @observable start_time       = null;\n    @observable sessions         = [];\n\n    @observable market_open_times = [];\n    // End Date Time\n    /**\n     * An array that contains market closing time.\n     *\n     * e.g. [\"04:00:00\", \"08:00:00\"]\n     *\n     */\n    @observable market_close_times = [];\n\n    // Last Digit\n    @observable last_digit = 5;\n\n    // Purchase\n    @observable proposal_info = {};\n    @observable purchase_info = {};\n\n    debouncedProposal = debounce(this.requestProposal, 500);\n    proposal_requests = {};\n\n    initial_barriers;\n    is_initial_barrier_applied = false;\n\n    @action.bound\n    init = async () => {\n        // To be sure that the website_status response has been received before processing trading page.\n        await BinarySocket.wait('authorize', 'website_status');\n        action(async() => {\n            this.active_symbols = await WS.activeSymbols().active_symbols;\n        });\n    };\n\n    constructor({ root_store }) {\n        const local_storage_properties = [\n            'amount',\n            'barrier_1',\n            'barrier_2',\n            'basis',\n            'contract_start_type',\n            'contract_type',\n            'duration',\n            'duration_unit',\n            'expiry_date',\n            'expiry_type',\n            'is_equal',\n            'last_digit',\n            'start_date',\n            'start_time',\n            'symbol',\n        ];\n        super({\n            root_store,\n            local_storage_properties,\n            store_name,\n            validation_rules: getValidationRules(),\n        });\n\n        // Adds intercept to change min_max value of duration validation\n        reaction(\n            () => [this.contract_expiry_type, this.duration_min_max, this.duration_unit, this.expiry_type],\n            () => {\n                this.changeDurationValidationRules();\n            },\n        );\n        reaction(\n            () => this.is_equal,\n            () => {\n                this.onAllowEqualsChange();\n            },\n        );\n        reaction(\n            () => this.symbol,\n            () => {\n                const date = resetEndTimeOnVolatilityIndices(this.symbol, this.expiry_type);\n                if (date) {\n                    this.expiry_date = date;\n                }\n            }\n        );\n        reaction(\n            () => this.duration_unit,\n            () => {\n                this.contract_expiry_type = this.duration_unit === 't' ? 'tick' : 'intraday';\n            }\n        );\n    }\n\n    @computed\n    get is_symbol_in_active_symbols() {\n        return this.active_symbols\n            .some(symbol_info => symbol_info.symbol === this.symbol && symbol_info.exchange_is_open === 1);\n    }\n\n    @action.bound\n    refresh = () => {\n        this.proposal_info     = {};\n        this.purchase_info     = {};\n        this.proposal_requests = {};\n        WS.forgetAll('proposal');\n    };\n\n    @action.bound\n    clearContract = () => {\n        if (this.root_store.modules.smart_chart.is_contract_mode) {\n            this.root_store.modules.contract_trade.onCloseContract();\n        }\n    };\n\n    @action.bound\n    setDefaultSymbol() {\n        if (!this.is_symbol_in_active_symbols) {\n            this.processNewValuesAsync({\n                symbol: pickDefaultSymbol(this.active_symbols),\n            });\n        }\n    }\n\n    @action.bound\n    async setActiveSymbols() {\n        const { active_symbols, error } = this.smart_chart.should_refresh_active_symbols ?\n            // if SmartCharts has requested active_symbols, we wait for the response\n            await BinarySocket.wait('active_symbols')\n            : // else requests new active_symbols\n            await WS.activeSymbols({ forced: true });\n\n        if (error) {\n            this.root_store.common.showError(localize('Trading is unavailable at this time.'));\n            this.root_store.ui.setAppLoading(false);\n            return;\n        } else if (!active_symbols || !active_symbols.length) {\n            showUnavailableLocationError(this.root_store.common.showError);\n            this.root_store.ui.setAppLoading(false);\n            return;\n        }\n\n        this.processNewValuesAsync({ active_symbols });\n    }\n\n    @action.bound\n    async setContractTypes() {\n        if (this.symbol && this.is_symbol_in_active_symbols) {\n            await Symbol.onChangeSymbolAsync(this.symbol);\n            runInAction(() => {\n                this.processNewValuesAsync({\n                    ...ContractType.getContractValues(this),\n                    ...ContractType.getContractCategories(),\n                });\n            });\n        }\n    }\n\n    @action.bound\n    async prepareTradeStore() {\n        this.smart_chart      = this.root_store.modules.smart_chart;\n        this.currency         = this.root_store.client.currency;\n        this.initial_barriers = { barrier_1: this.barrier_1, barrier_2: this.barrier_2 };\n\n        await BinarySocket.wait('authorize');\n        await this.setActiveSymbols();\n        runInAction(async() => {\n            this.setDefaultSymbol();\n            await this.setContractTypes();\n            runInAction(() => {\n                this.processNewValuesAsync({\n                    is_market_closed: isMarketClosed(this.active_symbols, this.symbol),\n                });\n            });\n        });\n    }\n\n    @action.bound\n    onChangeMultiple(values) {\n        Object.keys(values).forEach((name) => {\n            if (!(name in this)) {\n                throw new Error(`Invalid Argument: ${name}`);\n            }\n        });\n\n        this.processNewValuesAsync({ ...values }, true);\n    }\n\n    @action.bound\n    onChange(e) {\n        const { name, value } = e.target;\n\n        // save trade_chart_symbol upon user change\n        if (name === 'symbol' && value) {\n            this.root_store.modules.smart_chart.trade_chart_symbol = value;\n        }\n\n        if (name === 'currency') {\n            this.root_store.client.selectCurrency(value);\n        } else if (name === 'expiry_date') {\n            this.expiry_time = null;\n        } else if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n\n        this.validateAllProperties();\n        this.processNewValuesAsync({ [name]: value }, true);\n    }\n\n    @action.bound\n    setPreviousSymbol(symbol) {\n        if (this.previous_symbol !== symbol) this.previous_symbol = symbol;\n    }\n\n    @action.bound\n    async resetPreviousSymbol() {\n        this.setMarketStatus(isMarketClosed(this.active_symbols, this.previous_symbol));\n        await Symbol.onChangeSymbolAsync(this.previous_symbol);\n        runInAction(() => {\n            this.previous_symbol = ''; // reset the symbol to default\n        });\n    }\n\n    @action.bound\n    onHoverPurchase(is_over, contract_type) {\n        if (this.is_purchase_enabled) {\n            this.smart_chart.updateBarrierShade(is_over, contract_type);\n        }\n    }\n\n    @action.bound\n    onPurchase(proposal_id, price, type) {\n        if (!this.is_purchase_enabled) return;\n        if (proposal_id) {\n            this.is_purchase_enabled = false;\n            processPurchase(proposal_id, price).then(action((response) => {\n                if (this.proposal_info[type].id !== proposal_id) {\n                    this.smart_chart.cleanupContractChartView();\n                    this.smart_chart.applySavedTradeChartLayout();\n                    throw new Error('Proposal ID does not match.');\n                }\n                if (response.buy) {\n                    this.smart_chart.switchToContractMode();\n                    const contract_data = {\n                        ...this.proposal_requests[type],\n                        ...this.proposal_info[type],\n                        buy_price: response.buy.buy_price,\n                    };\n                    const {\n                        contract_id,\n                        longcode,\n                        start_time,\n                    } = response.buy;\n                    // toggle smartcharts to contract mode\n                    if (contract_id) {\n                        // NOTE: changing chart granularity and chart_type has to be done in a different render cycle\n                        // so we have to set chart granularity to zero, and change the chart_type to 'mountain' first,\n                        // and then set the chart view to the start_time\n                        this.smart_chart.setChartView(start_time);\n                        // draw the start time line and show longcode then mount contract\n                        this.root_store.modules.contract_trade.drawContractStartTime(start_time, longcode, contract_id);\n                        this.root_store.ui.openPositionsDrawer();\n                    }\n                    this.root_store.gtm.pushPurchaseData(contract_data);\n                } else if (response.error) {\n                    // using javascript to disable purchase-buttons manually to compensate for mobx lag\n                    this.disablePurchaseButtons();\n                    this.root_store.common.services_error = {\n                        type: response.msg_type,\n                        ...response.error,\n                    };\n                    this.root_store.ui.toggleServicesErrorModal(true);\n                }\n                WS.forgetAll('proposal');\n                this.purchase_info = response;\n                this.is_purchase_enabled = true;\n            }));\n        }\n    }\n\n    disablePurchaseButtons = () => {\n        const el_purchase_value    = document.getElementsByClassName('trade-container__price-info');\n        const el_purchase_buttons  = document.getElementsByClassName('btn-purchase');\n        [].forEach.bind(el_purchase_buttons, (el) => {\n            el.classList.add('btn-purchase--disabled');\n        })();\n        [].forEach.bind(el_purchase_value, (el) => {\n            el.classList.add('trade-container__price-info--fade');\n        })();\n    }\n\n    /**\n     * Updates the store with new values\n     * @param  {Object} new_state - new values to update the store with\n     * @return {Object} returns the object having only those values that are updated\n     */\n    @action.bound\n    updateStore(new_state) {\n        Object.keys(cloneObject(new_state)).forEach((key) => {\n            if (key === 'root_store' || ['validation_rules', 'validation_errors', 'currency', 'smart_chart'].indexOf(key) > -1) return;\n            if (JSON.stringify(this[key]) === JSON.stringify(new_state[key])) {\n                delete new_state[key];\n            } else {\n                if (key === 'symbol') {\n                    this.is_purchase_enabled = false;\n                    this.is_trade_enabled    = false;\n                }\n\n                if (new_state.start_date && typeof new_state.start_date === 'string') {\n                    new_state.start_date = parseInt(new_state.start_date);\n                }\n\n                this[key] = new_state[key];\n\n                // validation is done in mobx intercept (base_store.js)\n                // when barrier_1 is set, it is compared with store.barrier_2 (which is not updated yet)\n                if (key === 'barrier_2' && new_state.barrier_1) {\n                    this.barrier_1 = new_state.barrier_1; // set it again, after barrier_2 is updated in store\n                }\n            }\n        });\n        return new_state;\n    }\n\n    async processNewValuesAsync(\n        obj_new_values = {},\n        is_changed_by_user = false,\n        obj_old_values = {},\n        should_forget_first = true,\n    ) {\n        // Sets the default value to Amount when Currency has changed from Fiat to Crypto and vice versa.\n        // The source of default values is the website_status response.\n        if (should_forget_first) WS.forgetAll('proposal');\n        if (is_changed_by_user &&\n            /\\bcurrency\\b/.test(Object.keys(obj_new_values))\n        ) {\n            const prev_currency = obj_old_values &&\n            !isEmptyObject(obj_old_values) &&\n            obj_old_values.currency ? obj_old_values.currency : this.currency;\n            if (isCryptocurrency(obj_new_values.currency) !== isCryptocurrency(prev_currency)) {\n                obj_new_values.amount = is_changed_by_user && obj_new_values.amount ?\n                    obj_new_values.amount : getMinPayout(obj_new_values.currency);\n            }\n            this.currency = obj_new_values.currency;\n        }\n\n        let has_only_forward_starting_contracts;\n\n        if (Object.keys(obj_new_values).includes('symbol')) {\n            this.setPreviousSymbol(this.symbol);\n            await Symbol.onChangeSymbolAsync(obj_new_values.symbol);\n            this.setMarketStatus(isMarketClosed(this.active_symbols, obj_new_values.symbol));\n            has_only_forward_starting_contracts =\n                ContractType.getContractCategories().has_only_forward_starting_contracts;\n        }\n        // TODO: remove all traces of setHasOnlyForwardingContracts and has_only_forward_starting_contracts in app\n        //  once future contracts are implemented\n        this.root_store.ui.setHasOnlyForwardingContracts(has_only_forward_starting_contracts);\n        if (has_only_forward_starting_contracts) return;\n\n        const new_state = this.updateStore(cloneObject(obj_new_values));\n\n        if (is_changed_by_user || /\\b(symbol|contract_types_list)\\b/.test(Object.keys(new_state))) {\n            this.updateStore({ // disable purchase button(s), clear contract info\n                is_purchase_enabled: false,\n                proposal_info      : {},\n            });\n\n            // To prevent infinite loop when changing from advanced end_time to digit type contract\n            if (obj_new_values.contract_type && this.root_store.ui.is_advanced_duration) {\n                if (isDigitTradeType(obj_new_values.contract_type)) {\n                    this.barrier_1     = '';\n                    this.barrier_2     = '';\n                    this.expiry_type = 'duration';\n                    this.root_store.ui.is_advanced_duration = false;\n                }\n            }\n\n            if (!this.smart_chart.is_contract_mode) {\n                const is_barrier_changed = 'barrier_1' in new_state || 'barrier_2' in new_state;\n                if (is_barrier_changed) {\n                    this.smart_chart.updateBarriers(this.barrier_1, this.barrier_2);\n                } else {\n                    this.smart_chart.removeBarriers();\n                }\n            }\n\n            const snapshot            = await processTradeParams(this, new_state);\n            snapshot.is_trade_enabled = true;\n\n            this.updateStore({\n                ...snapshot,\n                ...(!this.is_initial_barrier_applied ? this.initial_barriers : {}),\n            });\n            this.is_initial_barrier_applied = true;\n\n            if (/\\bcontract_type\\b/.test(Object.keys(new_state))) {\n                this.validateAllProperties();\n            }\n\n            if (!this.smart_chart.is_contract_mode) {\n                this.debouncedProposal();\n            }\n        }\n    }\n\n    @action.bound\n    clearPurchaseInfo() {\n        this.purchase_info = {};\n        this.proposal_requests = {};\n        this.proposal_info = {};\n    }\n\n    @action.bound\n    requestProposal() {\n        const requests = createProposalRequests(this);\n\n        if (Object.values(this.validation_errors).some(e => e.length)) {\n            this.proposal_info = {};\n            this.purchase_info = {};\n            WS.forgetAll('proposal');\n            return;\n        }\n\n        if (!isEmptyObject(requests)) {\n            this.proposal_requests = requests;\n            this.proposal_info     = {};\n            this.purchase_info     = {};\n            this.root_store.modules.contract_trade.setIsDigitContract(Object.keys(this.proposal_requests)[0]);\n\n            Object.keys(this.proposal_requests).forEach((type) => {\n                WS.subscribeProposal(this.proposal_requests[type], this.onProposalResponse);\n            });\n        }\n        this.root_store.ui.resetPurchaseStates();\n    }\n\n    @action.bound\n    setMarketStatus(status) {\n        this.is_market_closed = status;\n    }\n\n    @action.bound\n    onProposalResponse(response) {\n        // We do not want new proposal requests when in contract mode\n        if (this.root_store.modules.smart_chart.is_contract_mode) return;\n        const contract_type           = response.echo_req.contract_type;\n        const prev_proposal_info      = getPropertyValue(this.proposal_info, contract_type) || {};\n        const obj_prev_contract_basis = getPropertyValue(prev_proposal_info, 'obj_contract_basis') || {};\n\n        this.proposal_info  = {\n            ...this.proposal_info,\n            [contract_type]: getProposalInfo(this, response, obj_prev_contract_basis),\n        };\n\n        if (!this.smart_chart.is_contract_mode) {\n            const color = this.root_store.ui.is_dark_mode_on ? BARRIER_COLORS.DARK_GRAY : BARRIER_COLORS.GRAY;\n            const barrier_config = { color };\n            setChartBarrier(this.smart_chart, response, this.onChartBarrierChange, barrier_config);\n        }\n\n        if (response.error) {\n            const error_id = getProposalErrorField(response);\n            if (error_id) {\n                this.setValidationErrorMessages(error_id, [response.error.message]);\n            }\n        } else {\n            this.validateAllProperties();\n        }\n\n        this.is_purchase_enabled = true;\n    }\n\n    @action.bound\n    onChartBarrierChange(barrier_1, barrier_2) {\n        this.processNewValuesAsync({ barrier_1, barrier_2 }, true);\n    }\n\n    @action.bound\n    onAllowEqualsChange() {\n        this.processNewValuesAsync({ contract_type: parseInt(this.is_equal) ? 'rise_fall_equal' : 'rise_fall' }, true);\n    }\n\n    @action.bound\n    updateSymbol(underlying) {\n        if (!underlying) return;\n        this.onChange({\n            target: {\n                name : 'symbol',\n                value: underlying,\n            },\n        });\n    }\n\n    @action.bound\n    changeDurationValidationRules() {\n        if (this.expiry_type === 'endtime') {\n            this.validation_errors.duration = [];\n            return;\n        }\n\n        const index  = this.validation_rules.duration.rules.findIndex(item => item[0] === 'number');\n        const limits = this.duration_min_max[this.contract_expiry_type] || false;\n\n        if (limits) {\n            const duration_options = {\n                min: convertDurationLimit(+limits.min, this.duration_unit),\n                max: convertDurationLimit(+limits.max, this.duration_unit),\n            };\n\n            if (index > -1) {\n                this.validation_rules.duration.rules[index][1] = duration_options;\n            } else {\n                this.validation_rules.duration.rules.push(['number', duration_options]);\n            }\n            this.validateProperty('duration', this.duration);\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => {\n            await this.processNewValuesAsync(\n                { currency: this.root_store.client.currency },\n                true,\n                { currency: this.currency },\n                false,\n            );\n            await this.clearContract();\n            await this.resetErrorServices();\n            await this.refresh();\n            return resolve(this.debouncedProposal());\n        });\n    }\n\n    @action.bound\n    resetErrorServices() {\n        this.root_store.ui.toggleServicesErrorModal(false);\n    }\n\n    @action.bound\n    async onMount() {\n        this.onLoadingMount();\n        await this.prepareTradeStore();\n        this.debouncedProposal();\n        runInAction(() => {\n            this.is_trade_component_mounted = true;\n        });\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    onLoadingMount() {\n        const first_timeout = setTimeout(() => {\n            const loading_message = localize('Your network connection might be slow.');\n            const secondary_message = localize('Please wait for the page to finish loading.');\n            this.root_store.ui.setSlowLoading(true, [loading_message, secondary_message]);\n        }, 8000);\n\n        const second_timeout = setTimeout(() => {\n            const loading_message = localize('This page is taking too long to load.');\n            const secondary_message = localize('Please wait for the page to finish loading or check your network connection.');\n            this.root_store.ui.setSlowLoading(true, [loading_message, secondary_message]);\n        }, 15000);\n\n        const loading_interval = setInterval(() => {\n            if (this.smart_chart) {\n                if (this.smart_chart.is_chart_ready && this.is_trade_component_mounted) {\n                    this.root_store.ui.setAppLoading(false);\n                    clearInterval(loading_interval);\n                    clearTimeout(first_timeout);\n                    clearTimeout(second_timeout);\n                }\n            }\n        }, 400);\n    }\n\n    @action.bound\n    restoreTradeChart() {\n        const smart_chart_store = this.root_store.modules.smart_chart;\n        if (smart_chart_store.trade_chart_symbol &&\n            (smart_chart_store.trade_chart_symbol !== this.symbol)) {\n            this.symbol = smart_chart_store.trade_chart_symbol;\n        }\n        if (smart_chart_store.trade_chart_granularity &&\n            (smart_chart_store.trade_chart_granularity !== smart_chart_store.granularity)) {\n            smart_chart_store.granularity = smart_chart_store.trade_chart_granularity;\n        } else {\n            smart_chart_store.granularity = 0;\n        }\n        if (smart_chart_store.trade_chart_type !== smart_chart_store.chart_type) {\n            smart_chart_store.chart_type = smart_chart_store.trade_chart_type;\n        } else {\n            smart_chart_store.chart_type = 'mountain';\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.proposal_info = {};\n        this.purchase_info = {};\n        WS.forgetAll('proposal');\n        this.resetErrorServices();\n        this.restoreTradeChart();\n        this.is_trade_component_mounted = false;\n        // clear url query string\n        window.history.pushState(null, null, window.location.pathname);\n    }\n}\n","export const setChartBarrier = (SmartChartStore, proposal_response, onBarrierChange, barrier_config) => {\n    const { barrier, barrier2, contract_type } = proposal_response.echo_req;\n    SmartChartStore.createBarriers(\n        contract_type,\n        barrier,\n        barrier2,\n        onBarrierChange,\n        barrier_config,\n    );\n};\n","import CashierStore        from './Cashier/cashier-store';\nimport ContractReplayStore from './Contract/contract-replay-store';\nimport ContractTradeStore  from './Contract/contract-trade-store';\nimport PortfolioStore      from './Portfolio/portfolio-store';\nimport ProfitTableStore    from './Profit/profit-store';\nimport SmartChartStore     from './SmartChart/smart-chart-store';\nimport StatementStore      from './Statement/statement-store';\nimport TradeStore          from './Trading/trade-store';\n\nexport default class ModulesStore {\n    constructor(root_store) {\n        this.cashier         = new CashierStore({ root_store });\n        this.contract_replay = new ContractReplayStore({ root_store });\n        this.contract_trade  = new ContractTradeStore({ root_store });\n        this.portfolio       = new PortfolioStore({ root_store });\n        this.profit_table    = new ProfitTableStore({ root_store });\n        this.smart_chart     = new SmartChartStore({ root_store });\n        this.statement       = new StatementStore({ root_store });\n        this.trade           = new TradeStore({ root_store });\n\n    }\n}\n","import {\n    action,\n    autorun,\n    computed,\n    observable }             from 'mobx';\nimport {\n    MAX_MOBILE_WIDTH,\n    MAX_TABLET_WIDTH }       from 'Constants/ui';\nimport { unique }            from '_common/utility';\nimport BaseStore             from './base-store';\nimport { sortNotifications } from '../App/Components/Elements/NotificationMessage';\n\nconst store_name = 'ui_store';\n\nexport default class UIStore extends BaseStore {\n    @observable is_main_drawer_on          = false;\n    @observable is_notifications_drawer_on = false;\n    @observable is_positions_drawer_on     = false;\n    @observable is_reports_visible         = false;\n\n    @observable is_cashier_modal_on     = false;\n    @observable is_dark_mode_on         = false;\n    @observable is_settings_modal_on    = false;\n    @observable is_accounts_switcher_on = false;\n\n    @observable is_loading              = true;\n    @observable is_slow_loading         = false;\n    @observable slow_loading_status     = [];\n\n    @observable has_only_forward_starting_contracts = false;\n\n    // Purchase Controls\n    // @observable is_purchase_confirm_on    = false;\n    @observable is_services_error_visible             = false;\n    @observable is_unsupported_contract_modal_visible = false;\n    @observable is_account_signup_modal_visible       = false;\n    // @observable is_purchase_lock_on       = false;\n\n    // SmartCharts Controls\n    // TODO: enable asset information\n    // @observable is_chart_asset_info_visible = true;\n    @observable is_chart_countdown_visible  = false;\n    @observable is_chart_layout_default     = true;\n\n    // PWA event and config\n    @observable pwa_prompt_event = null;\n\n    @observable screen_width = window.innerWidth;\n\n    @observable notification_messages = [];\n    @observable push_notifications = [];\n\n    @observable is_advanced_duration   = false;\n    @observable advanced_duration_unit = 't';\n    @observable advanced_expiry_type   = 'duration';\n    @observable simple_duration_unit   = 't';\n    @observable duration_t             = 5;\n    @observable duration_s             = 15;\n    @observable duration_m             = 3;\n    @observable duration_h             = 1;\n    @observable duration_d             = 1;\n\n    // purchase button states\n    @observable purchase_states = [ false, false ];\n\n    @observable is_fully_blurred = false;\n    @observable is_app_blurred   = false;\n    @observable is_route_blurred = false;\n    @observable show_positions_toggle = true;\n\n    @observable active_cashier_tab = 'deposit';\n\n    getDurationFromUnit = (unit) => this[`duration_${unit}`];\n\n    constructor() {\n        const local_storage_properties = [\n            'advanced_duration_unit',\n            'is_advanced_duration',\n            'advanced_expiry_type',\n            'simple_duration_unit',\n            'duration_t',\n            'duration_s',\n            'duration_m',\n            'duration_h',\n            'duration_d',\n            'is_chart_asset_info_visible',\n            'is_chart_countdown_visible',\n            'is_chart_layout_default',\n            'is_dark_mode_on',\n            'is_positions_drawer_on',\n            'is_reports_visible',\n            // 'is_purchase_confirm_on',\n            // 'is_purchase_lock_on',\n        ];\n\n        super({ local_storage_properties, store_name });\n        window.addEventListener('resize', this.handleResize);\n        autorun(() => {\n            if (this.is_dark_mode_on) {\n                document.body.classList.remove('theme--light');\n                document.body.classList.add('theme--dark');\n            } else {\n                document.body.classList.remove('theme--dark');\n                document.body.classList.add('theme--light');\n            }\n        });\n    }\n\n    @action.bound\n    onChangeUiStore({ name, value }) {\n        if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n        this[name] = value;\n    }\n\n    @action.bound\n    handleResize() {\n        this.screen_width = window.innerWidth;\n        if (this.is_mobile) {\n            this.is_positions_drawer_on = false;\n        }\n    }\n\n    @computed\n    get is_mobile() {\n        return this.screen_width <= MAX_MOBILE_WIDTH;\n    }\n\n    @computed\n    get is_tablet() {\n        return this.screen_width <= MAX_TABLET_WIDTH;\n    }\n\n    @action.bound\n    showRouteBlur() {\n        this.is_route_blurred = true;\n    }\n\n    @action.bound\n    hideRouteBlur() {\n        this.is_route_blurred = false;\n    }\n\n    @action.bound\n    showAppBlur() {\n        this.is_app_blurred = true;\n    }\n\n    @action.bound\n    hideAppBlur() {\n        this.is_app_blurred = false;\n    }\n\n    @action.bound\n    showFullBlur() {\n        this.is_fully_blurred = true;\n    }\n\n    @action.bound\n    hideFullBlur() {\n        this.is_fully_blurred = false;\n    }\n\n    @action.bound\n    toggleAccountsDialog() {\n        this.is_accounts_switcher_on = !this.is_accounts_switcher_on;\n    }\n\n    @action.bound\n    setAppLoading(is_visible) {\n        this.is_loading = is_visible;\n    }\n\n    @action.bound\n    setPurchaseState(index) {\n        this.purchase_states[index] = true;\n\n        // TODO: Find better solution in the future for hack below\n        // Force the animation to start quicker by manually assigning class to compensate for mobx getter lag\n        // Because mobx has a delay before it can receive the updated prop used to assign the animation class\n        const el_purchase_buttons = document.getElementsByClassName('btn-purchase');\n        if (el_purchase_buttons[index]) {\n            el_purchase_buttons[index].classList.add('btn-purchase--swoosh');\n        }\n        // UI/UX wants button to remain green until transition is finished and only then disable buttons\n        setTimeout(() => {\n            [].forEach.bind(el_purchase_buttons, (el) => {\n                el.classList.add('btn-purchase--disabled');\n            })();\n        }, 250);\n    }\n\n    @action.bound\n    resetPurchaseStates() {\n        this.purchase_states = [ false, false ];\n    }\n\n    @action.bound\n    toggleChartLayout() {\n        this.is_chart_layout_default = !this.is_chart_layout_default;\n    }\n\n    // TODO: enable asset information\n    // @action.bound\n    // toggleChartAssetInfo() {\n    //     this.is_chart_asset_info_visible = !this.is_chart_asset_info_visible;\n    // }\n\n    @action.bound\n    toggleChartCountdown() {\n        this.is_chart_countdown_visible = !this.is_chart_countdown_visible;\n    }\n\n    // @action.bound\n    // togglePurchaseLock() {\n    //     this.is_purchase_lock_on = !this.is_purchase_lock_on;\n    // }\n\n    // @action.bound\n    // togglePurchaseConfirmation() {\n    //     this.is_purchase_confirm_on = !this.is_purchase_confirm_on;\n    // }\n\n    @action.bound\n    toggleDarkMode() {\n        this.is_dark_mode_on = !this.is_dark_mode_on;\n        return this.is_dark_mode_on;\n    }\n\n    @action.bound\n    showPositionsFooterToggle() {\n        this.show_positions_toggle = true;\n    }\n\n    @action.bound\n    hidePositionsFooterToggle() {\n        this.show_positions_toggle = false;\n    }\n\n    @action.bound\n    toggleCashierModal() {\n        this.is_cashier_modal_on = !this.is_cashier_modal_on;\n    }\n\n    @action.bound\n    setCashierActiveTab(tab = 'deposit') {\n        if (this.active_cashier_tab !== tab) this.active_cashier_tab = tab;\n    }\n\n    @action.bound\n    toggleSettingsModal() {\n        this.is_settings_modal_on = !this.is_settings_modal_on;\n    }\n\n    @action.bound\n    openPositionsDrawer() { // show and hide Positions Drawer\n        this.is_positions_drawer_on = true;\n    }\n\n    @action.bound\n    togglePositionsDrawer() { // toggle Positions Drawer\n        this.is_positions_drawer_on = !this.is_positions_drawer_on;\n    }\n\n    @action.bound\n    toggleReports(is_visible) {\n        this.is_reports_visible = is_visible;\n    }\n\n    @action.bound\n    toggleServicesErrorModal(is_visible) {\n        this.is_services_error_visible = is_visible;\n    }\n\n    @action.bound\n    showMainDrawer() { // show main Drawer\n        this.is_main_drawer_on = true;\n    }\n\n    @action.bound\n    showNotificationsDrawer() { // show nofitications Drawer\n        this.is_notifications_drawer_on = true;\n    }\n\n    @action.bound\n    hideDrawers() { // hide both menu drawers\n        this.is_main_drawer_on = false;\n        this.is_notifications_drawer_on = false;\n    }\n\n    @action.bound\n    removePWAPromptEvent() {\n        this.pwa_prompt_event = null;\n    }\n\n    @action.bound\n    setPWAPromptEvent(e) {\n        this.pwa_prompt_event = e;\n    }\n\n    @action.bound\n    addNotification(notification) {\n        this.notification_messages = [...this.notification_messages, notification].sort(sortNotifications);\n    }\n\n    @action.bound\n    removeNotification(notification) {\n        const index = this.notification_messages.indexOf(notification);\n        if (index > -1) {\n            this.notification_messages.splice(index, 1);\n        }\n    }\n\n    @action.bound\n    removeAllNotifications() {\n        this.notification_messages = [];\n    }\n\n    @action.bound\n    setHasOnlyForwardingContracts(has_only_forward_starting_contracts) {\n        this.has_only_forward_starting_contracts = has_only_forward_starting_contracts;\n    }\n\n    @action.bound\n    setSlowLoading(status, message) {\n        this.is_slow_loading     = status;\n        this.slow_loading_status = message;\n    }\n\n    @action.bound\n    addNotificationBar(message) {\n        this.push_notifications.push(message);\n        this.push_notifications = unique(this.push_notifications, 'msg_type');\n    }\n\n    @action.bound\n    toggleUnsupportedContractModal(state_change = !this.is_unsupported_contract_modal_visible) {\n        this.is_unsupported_contract_modal_visible = state_change;\n    }\n\n    @action.bound\n    toggleAccountSignupModal(state_change = !this.is_unsupported_contract_modal_visible) {\n        this.is_account_signup_modal_visible = state_change;\n    }\n}\n","import ClientStore  from './client-store';\nimport CommonStore  from './common-store';\nimport GTMStore     from './gtm-store';\nimport ModulesStore from './Modules';\nimport UIStore      from './ui-store';\n\nexport default class RootStore {\n    constructor() {\n        this.client  = new ClientStore(this);\n        this.common  = new CommonStore();\n        this.modules = new ModulesStore(this);\n        this.ui      = new UIStore();\n        this.gtm     = new GTMStore(this);\n    }\n}\n","import { configure }        from 'mobx';\nimport Client               from '_common/base/client_base';\nimport NetworkMonitor       from 'Services/network-monitor';\nimport OutdatedBrowser      from 'Services/outdated-browser';\nimport RootStore            from 'Stores';\nimport { setStorageEvents } from 'Utils/Events/storage';\n\nconfigure({ enforceActions: 'observed' });\n\nconst initStore = () => {\n    Client.init();\n\n    const root_store = new RootStore();\n\n    setStorageEvents(root_store);\n\n    NetworkMonitor.init(root_store);\n    OutdatedBrowser.init(root_store);\n    root_store.client.init();\n    root_store.modules.trade.init();\n\n    return root_store;\n};\n\nexport default initStore;\n","export const setStorageEvents = (root_store) => {\n    window.addEventListener('storage', (evt) => {\n        switch (evt.key) {\n            case 'active_loginid':\n                if (document.hidden) {\n                    window.location.reload();\n                }\n                break;\n            case 'verification_code':\n                if (document.hidden && root_store.ui.is_cashier_modal_on && root_store.ui.active_cashier_tab === 'withdraw') {\n                    root_store.modules.cashier.clearVerification();\n                    root_store.ui.toggleCashierModal();\n                }\n            // no default\n        }\n    });\n};\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport ReactDOM                    from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { MobxProvider }            from 'Stores/connect';\nimport ErrorBoundary               from './Components/Elements/Errors/error-boundary.jsx';\nimport AppContents                 from './Containers/Layout/app-contents.jsx';\nimport Footer                      from './Containers/Layout/footer.jsx';\nimport Header                      from './Containers/Layout/header.jsx';\nimport Lazy                        from './Containers/Lazy';\nimport Modals                      from './Containers/Modals';\nimport Routes                      from './Containers/Routes/routes.jsx';\nimport './i18n';\n// eslint-disable-next-line import/extensions\nimport initStore                   from './app.js';\n// eslint-disable-next-line import/no-unresolved\nimport 'Sass/app.scss';\n// Check if device is touch capable\nconst isTouchDevice = 'ontouchstart' in document.documentElement;\n\nconst App = ({ root_store }) => {\n    const l = window.location;\n    const base = l.pathname.split('/')[1];\n    return (\n        <Router basename={/^\\/br_/.test(l.pathname) ? `/${base}` : null}>\n            <MobxProvider store={root_store}>\n                {\n                    root_store.ui.is_mobile || (root_store.ui.is_tablet && isTouchDevice) ?\n                        <Lazy\n                            ctor={() => import(/* webpackChunkName: \"work-in-progress\" */'./Containers/Wip')}\n                            should_load={root_store.ui.is_mobile || (root_store.ui.is_tablet && isTouchDevice)}\n                            has_progress={true}\n                        /> :\n                        <React.Fragment>\n                            <Header />\n                            <ErrorBoundary>\n                                <AppContents>\n                                    <Routes />\n                                    <Lazy\n                                        ctor={() => import(/* webpackChunkName: \"push-notification\" */'./Containers/push-notification.jsx')}\n                                        should_load={!root_store.ui.is_loading}\n                                        has_progress={false}\n                                    />\n                                </AppContents>\n                            </ErrorBoundary>\n                            <Footer />\n                            <Modals />\n                        </React.Fragment>\n                }\n            </MobxProvider>\n        </Router>\n    );\n};\n\nApp.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default App;\n\nconst root_store = initStore();\n\nconst wrapper = document.getElementById('deriv_app');\n// eslint-disable-next-line no-unused-expressions\nwrapper ? ReactDOM.render(<App root_store={root_store} />, wrapper) : false;\n","export default function register () { // Register the service worker\n    if (/* process.env.NODE_ENV === 'production' && */ 'serviceWorker' in navigator) {\n        window.addEventListener('load', () => {\n            let path_name = window.location.pathname;\n            path_name = /index\\.html/g.test(path_name) ? window.location.pathname.replace('index.html', '') : '';\n            const sw_url = `${path_name}service-worker.js`;\n            navigator.serviceWorker\n                .register(sw_url)\n                .then(registration => {\n                    registration.onupdatefound = () => {\n                        const installingWorker = registration.installing;\n                        installingWorker.onstatechange = () => {\n                            if (installingWorker.state === 'installed') {\n                                if (navigator.serviceWorker.controller) {\n                                    // At this point, the old content will have been purged and\n                                    // the fresh content will have been added to the cache.\n                                    // It's the perfect time to display a \"New content is\n                                    // available; please refresh.\" message in your web app.\n                                    console.log('New content is available; please refresh.'); // eslint-disable-line no-console\n                                } else {\n                                    // At this point, everything has been precached.\n                                    // It's the perfect time to display a\n                                    // \"Content is cached for offline use.\" message.\n                                    console.log('Content is cached for offline use.'); // eslint-disable-line no-console\n                                }\n                            }\n                        };\n                    };\n                })\n                .catch(error => {\n                    console.error('Error during service worker registration:', error); // eslint-disable-line no-console\n                });\n        });\n    }\n}\n\nexport function unregister () {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import classNames           from 'classnames';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport ReactDOM             from 'react-dom';\nimport posed, { PoseGroup } from 'react-pose';\nimport Icon                 from 'Assets/icon.jsx';\n\nconst FadeIn = posed.span({\n    enter: {\n        opacity   : 1,\n        transition: {\n            duration: 150,\n        },\n    },\n    exit: {\n        opacity   : 0,\n        transition: {\n            duration: 150,\n        },\n    },\n});\n\nclass PopoverBubble extends React.PureComponent {\n    calculatePosition = () => {\n        const { alignment, target_rectangle, margin = 0 } = this.props;\n\n        switch (alignment) {\n            case 'top': return {\n                left     : (target_rectangle.width / 2) + target_rectangle.left,\n                bottom   : (window.innerHeight - target_rectangle.top) + margin,\n                transform: 'translateX(-50%)',\n            };\n            case 'bottom': return {\n                left     : (target_rectangle.width / 2) + target_rectangle.left,\n                top      : target_rectangle.bottom + margin,\n                transform: 'translateX(-50%)',\n            };\n            case 'left': return {\n                right    : (window.innerWidth - target_rectangle.left) + margin,\n                top      : (target_rectangle.height / 2) + target_rectangle.top,\n                transform: 'translateY(-50%)',\n            };\n            case 'right': return {\n                left     : target_rectangle.right + margin,\n                top      : (target_rectangle.height / 2) + target_rectangle.top,\n                transform: 'translateY(-50%)',\n            };\n            default: return {\n                left: target_rectangle.left,\n                top : target_rectangle.top,\n            };\n        }\n    };\n\n    render() {\n        const {\n            alignment,\n            className,\n            has_error,\n            icon,\n            is_open,\n            message,\n            target_rectangle,\n        } = this.props;\n\n        if (!target_rectangle) return null;\n\n        const popover_bubble = (\n            <PoseGroup>\n                { is_open &&\n                <FadeIn key='fade_in' initialPose='exit' style={{ position: 'fixed', zIndex: 999 }}>\n                    <span\n                        style={ target_rectangle ? this.calculatePosition() : {}}\n                        data-popover-pos={alignment}\n                        className={classNames(\n                            className,\n                            'popover__bubble',\n                            { 'popover__bubble--error': has_error },\n                        )}\n                    >\n                        { icon === 'info' &&\n                            <i className='popover__bubble__icon'>\n                                <Icon icon='IconInfoBlue' />\n                            </i>\n                        }\n\n                        <span className='popover__bubble__text'>\n                            { message }\n                        </span>\n                        <span className='popover__bubble__arrow' />\n                    </span>\n                </FadeIn>\n                }\n            </PoseGroup>\n        );\n\n        return ReactDOM.createPortal(\n            popover_bubble,\n            document.getElementById('deriv_app')\n        );\n    }\n}\n\nPopoverBubble.propTypes = {\n    alignment       : PropTypes.string,\n    children        : PropTypes.node,\n    className       : PropTypes.string,\n    has_error       : PropTypes.bool,\n    icon            : PropTypes.string,\n    is_open         : PropTypes.bool,\n    margin          : PropTypes.number,\n    message         : PropTypes.string.isRequired,\n    target_rectangle: PropTypes.object,\n};\n\nexport default PopoverBubble;\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport Icon          from 'Assets/icon.jsx';\nimport PopoverBubble from './popover-bubble.jsx';\n\nclass Popover extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_open         : false,\n            target_rectangle: null,\n        };\n        this.target_reference = React.createRef();\n    }\n\n    componentDidMount() {\n        this.setState({\n            is_open         : this.props.has_error,\n            target_rectangle: this.target_reference.current.getBoundingClientRect(),\n        });\n    }\n\n    toggleOpen = () => {\n        this.setState({\n            is_open         : Boolean(this.props.message),\n            target_rectangle: this.target_reference.current.getBoundingClientRect(),\n        });\n    }\n\n    toggleClose = () => this.setState({ is_open: false });\n\n    render() {\n        const {\n            alignment,\n            children,\n            classNameBubble,\n            classNameTarget,\n            classNameTargetIcon,\n            disable_target_icon,\n            has_error,\n            icon,\n            margin,\n            message,\n        } = this.props;\n\n        const icon_class_name = classNames(classNameTargetIcon, icon);\n        return (\n            <div\n                className='popover'\n                onMouseEnter={this.toggleOpen}\n                onMouseLeave={this.toggleClose}\n            >\n                <div className={classNames(classNameTarget, 'popover__target')} ref={this.target_reference}>\n                    { !disable_target_icon &&\n                        <i className={message ? 'popover__target__icon' : 'popover__target__icon--disabled'}>\n                            {(icon === 'info')     && <Icon icon='IconInfoOutline' className={icon_class_name} /> }\n                            {(icon === 'question') && <Icon icon='IconQuestion'    className={icon_class_name} />}\n                            {(icon === 'dot')      && <Icon icon='IconRedDot'      className={icon_class_name} />}\n                        </i>\n                    }\n\n                    { children }\n                </div>\n\n                <PopoverBubble\n                    alignment={alignment}\n                    className={classNameBubble}\n                    has_error={has_error}\n                    icon={icon}\n                    is_open={this.state.is_open}\n                    target_rectangle={this.state.target_rectangle}\n                    margin={margin}\n                    message={message}\n                />\n            </div>\n        );\n    }\n}\n\nPopover.propTypes = {\n    alignment          : PropTypes.string,\n    children           : PropTypes.node,\n    classNameBubble    : PropTypes.string,\n    classNameTarget    : PropTypes.string,\n    classNameTargetIcon: PropTypes.string,\n    disable_target_icon: PropTypes.bool,\n    has_error          : PropTypes.bool,\n    icon               : PropTypes.string,\n    margin             : PropTypes.number,\n    message            : PropTypes.string,\n};\n\nexport default Popover;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Fieldset = ({\n    children,\n    className,\n    header,\n    is_center,\n    onMouseEnter,\n    onMouseLeave,\n}) => {\n    const fieldset_header_class = classNames('trade-container__fieldset-header', is_center ? 'center-text' : '');\n    const fieldset_info_class   = classNames('trade-container__fieldset-info', !is_center && 'trade-container__fieldset-info--left');\n\n    return (\n        <fieldset className={className} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            {!!header &&\n                <div className={fieldset_header_class}>\n                    <span className={fieldset_info_class}>{header}</span>\n                </div>\n            }\n            {children}\n        </fieldset>\n    );\n};\n\n// ToDo:\n// - Refactor Last Digit to keep the children as array type.\n//   Currently last_digit.jsx returns object (React-Element) as 'children'\n//   props type.\nFieldset.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    className   : PropTypes.string,\n    header      : PropTypes.string,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n};\n\nexport default Fieldset;\n","import ServerTime   from '_common/base/server_time';\nimport { toMoment } from 'Utils/Date';\n\nexport const buildForwardStartingConfig = (contract, forward_starting_dates) => {\n    const forward_starting_config = [];\n\n    if ((contract.forward_starting_options || []).length) {\n        contract.forward_starting_options.forEach(option => {\n            const duplicated_option = forward_starting_config.find(opt => opt.value === parseInt(option.date));\n            const current_session   = { open: toMoment(option.open), close: toMoment(option.close) };\n            if (duplicated_option) {\n                duplicated_option.sessions.push(current_session);\n            } else {\n                forward_starting_config.push({\n                    text    : toMoment(option.date).format('ddd - DD MMM, YYYY'),\n                    value   : parseInt(option.date),\n                    sessions: [current_session],\n                });\n            }\n        });\n    }\n\n    return forward_starting_config.length ? forward_starting_config : forward_starting_dates;\n};\n\n// returns false if same as now\nconst isBeforeDate = (compare_moment, start_moment, should_only_check_hour) => {\n    const now_moment = toMoment(start_moment);\n    if (should_only_check_hour) {\n        now_moment.minute(0).second(0);\n    }\n    return compare_moment.isBefore(now_moment) && now_moment.unix() !== compare_moment.unix();\n};\n\nexport const isSessionAvailable = (\n    sessions               = [],\n    compare_moment         = toMoment(ServerTime.get()),\n    start_moment           = toMoment(ServerTime.get()),\n    should_only_check_hour = false,\n) => (\n    !isBeforeDate(compare_moment, ServerTime.get(), should_only_check_hour) &&\n    !isBeforeDate(compare_moment, start_moment, should_only_check_hour) &&\n        (!sessions.length ||\n            !!sessions.find(session =>\n                compare_moment.isBetween(session.open, session.close, should_only_check_hour ? 'hour' : null, '[]')))\n);\n","const Client              = require('./client_base');\nconst getElementById      = require('../common_functions').getElementById;\nconst getLanguage         = require('../language').get;\nconst isMobile            = require('../os_detect').isMobile;\nconst isStorageSupported  = require('../storage').isStorageSupported;\nconst LocalStore          = require('../storage').LocalStore;\nconst urlForCurrentDomain = require('../url').urlForCurrentDomain;\nconst domain_app_ids      = require('../../config').domain_app_ids;\nconst getAppId            = require('../../config').getAppId;\n\nconst Login = (() => {\n    const redirectToLogin = () => {\n        if (!Client.isLoggedIn() && !isLoginPages() && isStorageSupported(sessionStorage)) {\n            sessionStorage.setItem('redirect_url', window.location.href);\n            window.location.href = loginUrl();\n        }\n    };\n\n    const loginUrl = () => {\n        const server_url         = localStorage.getItem('config.server_url');\n        const language           = getLanguage();\n        const signup_device      = LocalStore.get('signup_device') || (isMobile() ? 'mobile' : 'desktop');\n        const date_first_contact = LocalStore.get('date_first_contact');\n        const marketing_queries  = `&signup_device=${signup_device}${date_first_contact ? `&date_first_contact=${date_first_contact}` : ''}`;\n        const default_binary_url = `https://oauth.binary.com/oauth2/authorize?app_id=${getAppId()}&l=${language}${marketing_queries}`;\n\n        if (server_url && /qa/.test(server_url)) {\n            return `https://${server_url}/oauth2/authorize?app_id=${getAppId()}&l=${language}${marketing_queries}`;\n        }\n        if (getAppId === domain_app_ids['deriv.app']) {\n            return default_binary_url;\n        }\n\n        return urlForCurrentDomain(default_binary_url);\n    };\n\n    // TODO: update this to handle logging into /app/ url\n    const isLoginPages = () => /logged_inws|redirect/i.test(window.location.pathname);\n\n    const socialLoginUrl = brand => (`${loginUrl()}&social_signup=${brand}`);\n\n    const initOneAll = () => {\n        ['google', 'facebook'].forEach(provider => {\n            const el_button = getElementById(`#button_${provider}`);\n            el_button.removeEventListener('click');\n            el_button.addEventListener('click', (e) => {\n                e.preventDefault();\n                window.location.href = socialLoginUrl(provider);\n            });\n        });\n    };\n\n    return {\n        redirectToLogin,\n        isLoginPages,\n        initOneAll,\n    };\n})();\n\nmodule.exports = Login;\n","import { getLastTickFromTickStream } from './logic';\n\nexport const isDigitContract = (contract_type) => /digit/i.test(contract_type);\n\nexport const getDigitInfo = (digits_info, contract_info) => {\n    const { tick_stream } = contract_info;\n    const { tick_display_value, epoch } = getLastTickFromTickStream(tick_stream);\n\n    if (!tick_display_value || !epoch) return {}; // filter out empty responses\n\n    const current = (epoch in digits_info) ? {} : // filter out duplicated responses\n        createDigitInfo(tick_display_value, epoch);\n\n    return {\n        ...current,\n    };\n};\n\nconst createDigitInfo = (spot, spot_time) => {\n    const digit = +`${spot}`.slice(-1);\n\n    return {\n        [+spot_time]: {\n            digit,\n            spot,\n        },\n    };\n};\n","import React     from 'react';\nimport PropTypes from 'prop-types';\n\nclass Icon extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        /* When adding a new icon, arrange it by following the ascending file system arrangement */\n        this.icons = {\n            // Common\n            IconArrowBold         : React.lazy(() => import('./Common/icon-arrow-bold.jsx')),\n            IconArrow             : React.lazy(() => import('./Common/icon-arrow.jsx')),\n            IconBack              : React.lazy(() => import('./Common/icon-back.jsx')),\n            IconCalendarToday     : React.lazy(() => import('./Common/icon-calendar-today.jsx')),\n            IconCalendar          : React.lazy(() => import('./Common/icon-calendar.jsx')),\n            IconChevronDoubleLeft : React.lazy(() => import('./Common/icon-chevron-double-left.jsx')),\n            IconChevronDoubleRight: React.lazy(() => import('./Common/icon-chevron-double-right.jsx')),\n            IconChevronLeft       : React.lazy(() => import('./Common/icon-chevron-left.jsx')),\n            IconChevronRight      : React.lazy(() => import('./Common/icon-chevron-right.jsx')),\n            IconClear             : React.lazy(() => import('./Common/icon-clear.jsx')),\n            IconClock             : React.lazy(() => import('./Common/icon-clock.jsx')),\n            IconClose             : React.lazy(() => import('./Common/icon-close.jsx')),\n            IconCountryFlag       : React.lazy(() => import('./Common/icon-country-flag.jsx')),\n            IconDanger            : React.lazy(() => import('./Common/icon-danger.jsx')),\n            IconDeposit           : React.lazy(() => import('./Common/icon-deposit.jsx')), // TODO: update big when design is ready\n            IconDepositSmall      : React.lazy(() => import('./Common/icon-deposit-small.jsx')),\n            IconExclamation       : React.lazy(() => import('./Common/icon-exclamation.jsx')),\n            IconFlag              : React.lazy(() => import('./Common/icon-flag.jsx')),\n            IconInfoBlue          : React.lazy(() => import('./Common/icon-info-blue.jsx')),\n            IconInfoOutline       : React.lazy(() => import('./Common/icon-info-outline.jsx')),\n            IconInformation       : React.lazy(() => import('./Common/icon-information.jsx')),\n            IconMinimize          : React.lazy(() => import('./Common/icon-minimize.jsx')),\n            IconMinus             : React.lazy(() => import('./Common/icon-minus.jsx')),\n            IconPlus              : React.lazy(() => import('./Common/icon-plus.jsx')),\n            IconQuestion          : React.lazy(() => import('./Common/icon-question.jsx')),\n            IconRedDot            : React.lazy(() => import('./Common/icon-red-dot.jsx')),\n            IconSuccess           : React.lazy(() => import('./Common/icon-success.jsx')),\n            IconWarning           : React.lazy(() => import('./Common/icon-warning.jsx')),\n            IconWip               : React.lazy(() => import('./Common/icon-wip.jsx')),\n            IconWithdrawal        : React.lazy(() => import('./Common/icon-withdrawal.jsx')), // TODO: update big when design is ready\n            IconWithdrawalSmall   : React.lazy(() => import('./Common/icon-withdrawal-small.jsx')),\n\n            // Contract\n            ContractIconClose: React.lazy(() => import('./Contract/icon-close.jsx')),\n            IconEndTime      : React.lazy(() => import('./Contract/icon-end-time.jsx')),\n            ContractIconFlag : React.lazy(() => import('./Contract/icon-flag.jsx')),\n            IconStartTime    : React.lazy(() => import('./Contract/icon-start-time.jsx')),\n            IconTick         : React.lazy(() => import('./Contract/icon-tick.jsx')),\n\n            // Cashier\n            IconAuthenticateWithdrawals: React.lazy(() => import('./Cashier/icon-authenticate-withdrawals.jsx')),\n            IconEmailSent              : React.lazy(() => import('./Cashier/icon-email-sent.jsx')),\n\n            // Modal\n            ModalIconClose: React.lazy(() => import('./Modal/icon-close.jsx')),\n\n            // Footer\n            IconMaximize : React.lazy(() => import('./Footer/icon-maximize.jsx')),\n            IconPositions: React.lazy(() => import('./Footer/icon-positions.jsx')),\n            IconSettings : React.lazy(() => import('./Footer/icon-settings.jsx')),\n\n            // Header\n            IconAccountsCurrency: React.lazy(() => import('./Header/AccountsCurrency/icon_accounts_currency.jsx')),\n            IconLogout          : React.lazy(() => import('./Header/Drawer/icon-logout.jsx')),\n            IconBell            : React.lazy(() => import('./Header/NavBar/icon-bell.jsx')),\n            IconCashier         : React.lazy(() => import('./Header/NavBar/icon-cashier.jsx')),\n            IconDeriv           : React.lazy(() => import('./Header/NavBar/icon-deriv.jsx')),\n            IconHamburger       : React.lazy(() => import('./Header/NavBar/icon-hamburger.jsx')),\n            IconPortfolio       : React.lazy(() => import('./Header/NavBar/icon-portfolio.jsx')),\n            IconReports         : React.lazy(() => import('./Header/NavBar/icon-reports.jsx')),\n            IconTrade           : React.lazy(() => import('./Header/NavBar/icon-trade.jsx')),\n\n            // Reports\n            IconDemo                : React.lazy(() => import('./Reports/icon-demo.jsx')),\n            IconOpenPositions       : React.lazy(() => import('./Reports/icon-open-positions.jsx')),\n            IconProfitTable         : React.lazy(() => import('./Reports/icon-profit-table.jsx')),\n            IconStatement           : React.lazy(() => import('./Reports/icon-statement.jsx')),\n            IconCalendarForwardToday: React.lazy(() => import('./Reports/ic-calendar-forwardtoday.jsx')),\n\n            // Settings\n            IconCharts  : React.lazy(() => import('./Settings/icon-charts.jsx')),\n            IconLanguage: React.lazy(() => import('./Settings/icon-language.jsx')),\n            IconPurchase: React.lazy(() => import('./Settings/icon-purchase.jsx')),\n            IconTheme   : React.lazy(() => import('./Settings/icon-theme.jsx')),\n\n            // Statement\n            IconBuy   : React.lazy(() => import('./Statement/icon-buy.jsx')),\n            IconPayout: React.lazy(() => import('./Statement/icon-payout.jsx')),\n            IconSell  : React.lazy(() => import('./Statement/icon-sell.jsx')),\n            IconWallet: React.lazy(() => import('./Statement/icon-wallet.jsx')),\n\n            // Trading\n            IconBarrierDown   : React.lazy(() => import('./Trading/Barriers/icon-barrier-down.jsx')),\n            IconBarrierUp     : React.lazy(() => import('./Trading/Barriers/icon-barrier-up.jsx')),\n            IconTradeCategory : React.lazy(() => import('./Trading/Categories/icon-trade-categories.jsx')),\n            TradeCategoriesGIF: React.lazy(() => import('./Trading/Categories/trade-categories-gif.jsx')),\n            TradeCategories   : React.lazy(() => import('./Trading/Categories/trade-categories.jsx')),\n            IconTradeType     : React.lazy(() => import('./Trading/Types/icon-trade-types.jsx')),\n            IconLock          : React.lazy(() => import('./Trading/icon-lock.jsx')),\n            IconPriceMove     : React.lazy(() => import('./Trading/icon-price-move.jsx')),\n        };\n    }\n\n    render() {\n        const options = {\n            category     : this.props.category,\n            className    : this.props.className,\n            classNamePath: this.props.classNamePath,\n            classNameRect: this.props.classNameRect,\n            is_dark_theme: this.props.is_dark_theme,\n            is_disabled  : this.props.is_disabled,\n            onClick      : this.props.onClick,\n            onMouseEnter : this.props.onMouseEnter,\n            onMouseLeave : this.props.onMouseLeave,\n            type         : this.props.type,\n        };\n\n        const IconLazy = this.icons[this.props.icon];\n        if (!IconLazy) return <div />;\n\n        return (\n            <React.Suspense fallback={<div />}>\n                <IconLazy {...options} />\n            </React.Suspense>\n        );\n    }\n}\n\nIcon.propTypes = {\n    category     : PropTypes.string,\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n    classNameRect: PropTypes.string,\n    icon         : PropTypes.string,\n    is_dark_theme: PropTypes.bool,\n    is_disabled  : PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n    onClick      : PropTypes.func,\n    type         : PropTypes.string,\n};\n\nexport default Icon;\n","// const Cookies = require('js-cookie');\n\n/*\n * Configuration values needed in js codes\n *\n * NOTE:\n * Please use the following command to avoid accidentally committing personal changes\n * git update-index --assume-unchanged src/javascript/config.js\n *\n */\nconst domain_app_ids = { // these domains as supported \"production domains\"\n    'deriv.app': 16929,\n};\n\nconst getCurrentProductionDomain = () => (\n    !/^staging\\./.test(window.location.hostname) &&\n    Object.keys(domain_app_ids).find(domain => (new RegExp(`.${domain}$`, 'i').test(window.location.hostname)))\n);\n\nconst isProduction = () => {\n    const all_domains = Object.keys(domain_app_ids).map(domain => `www\\\\.${domain.replace('.', '\\\\.')}`);\n    return new RegExp(`^(${all_domains.join('|')})$`, 'i').test(window.location.hostname);\n};\n\nconst binary_desktop_app_id = 14473;\n\nconst getAppId = () => {\n    let app_id = null;\n    const user_app_id   = ''; // you can insert Application ID of your registered application here\n    const config_app_id = window.localStorage.getItem('config.app_id');\n    if (config_app_id) {\n        app_id = config_app_id;\n    } else if (/desktop-app/i.test(window.location.href) || window.localStorage.getItem('config.is_desktop_app')) {\n        window.localStorage.removeItem('config.default_app_id');\n        window.localStorage.setItem('config.is_desktop_app', 1);\n        app_id = binary_desktop_app_id;\n    } else if (user_app_id.length) {\n        window.localStorage.setItem('config.default_app_id', user_app_id);\n        app_id = user_app_id;\n    } else if (/staging\\.deriv\\.app/i.test(window.location.hostname)) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 16303; // it's being used in endpoint chrome extension - please do not remove\n    } else if (/localhost/i.test(window.location.hostname)) {\n        app_id = 17044;\n    } else {\n        window.localStorage.removeItem('config.default_app_id');\n        const current_domain = getCurrentProductionDomain();\n        app_id = domain_app_ids[current_domain] || 16929;\n    }\n    return app_id;\n};\n\nconst getSocketURL = () => {\n    let server_url = window.localStorage.getItem('config.server_url');\n    if (!server_url) {\n        // const to_green_percent = { real: 100, virtual: 0, logged_out: 0 }; // default percentage\n        // const category_map     = ['real', 'virtual', 'logged_out'];\n        // const percent_values   = Cookies.get('connection_setup'); // set by GTM\n        //\n        // // override defaults by cookie values\n        // if (percent_values && percent_values.indexOf(',') > 0) {\n        //     const cookie_percents = percent_values.split(',');\n        //     category_map.map((cat, idx) => {\n        //         if (cookie_percents[idx] && !isNaN(cookie_percents[idx])) {\n        //             to_green_percent[cat] = +cookie_percents[idx].trim();\n        //         }\n        //     });\n        // }\n\n        // let server = 'blue';\n        // if (/www\\.binary\\.com/i.test(window.location.hostname)) {\n        //     const loginid = window.localStorage.getItem('active_loginid');\n        //     let client_type = category_map[2];\n        //     if (loginid) {\n        //         client_type = /^VRT/.test(loginid) ? category_map[1] : category_map[0];\n        //     }\n        //\n        //     const random_percent = Math.random() * 100;\n        //     if (random_percent < to_green_percent[client_type]) {\n        //         server = 'green';\n        //     }\n        // }\n\n        // TODO: in order to use connection_setup config, uncomment the above section and remove next lines\n\n        const loginid       = window.localStorage.getItem('active_loginid');\n        const is_real       = loginid && !/^VRT/.test(loginid);\n        const server        = isProduction() && is_real ? 'green' : 'blue';\n\n        server_url = `${server}.binaryws.com`;\n    }\n    return `wss://${server_url}/websockets/v3`;\n};\n\nmodule.exports = {\n    domain_app_ids,\n    getCurrentProductionDomain,\n    isProduction,\n    getAppId,\n    getSocketURL,\n};\n","import { localize } from 'App/i18n';\n\nexport const getMarketNamesMap = () => ({\n    FRXAUDCAD : localize('AUD/CAD'),\n    FRXAUDCHF : localize('AUD/CHF'),\n    FRXAUDJPY : localize('AUD/JPY'),\n    FRXAUDNZD : localize('AUD/NZD'),\n    FRXAUDPLN : localize('AUD/PLN'),\n    FRXAUDUSD : localize('AUD/USD'),\n    FRXBROUSD : localize('Oil/USD'),\n    FRXEURAUD : localize('EUR/AUD'),\n    FRXEURCAD : localize('EUR/CAD'),\n    FRXEURCHF : localize('EUR/CHF'),\n    FRXEURGBP : localize('EUR/GBP'),\n    FRXEURJPY : localize('EUR/JPY'),\n    FRXEURNZD : localize('EUR/NZD'),\n    FRXEURUSD : localize('EUR/USD'),\n    FRXGBPAUD : localize('GBP/AUD'),\n    FRXGBPCAD : localize('GBP/CAD'),\n    FRXGBPCHF : localize('GBP/CHF'),\n    FRXGBPJPY : localize('GBP/JPY'),\n    FRXGBPNOK : localize('GBP/NOK'),\n    FRXGBPUSD : localize('GBP/USD'),\n    FRXNZDJPY : localize('NZD/JPY'),\n    FRXNZDUSD : localize('NZD/USD'),\n    FRXUSDCAD : localize('USD/CAD'),\n    FRXUSDCHF : localize('USD/CHF'),\n    FRXUSDJPY : localize('USD/JPY'),\n    FRXUSDNOK : localize('USD/NOK'),\n    FRXUSDPLN : localize('USD/PLN'),\n    FRXUSDSEK : localize('USD/SEK'),\n    FRXXAGUSD : localize('Silver/USD'),\n    FRXXAUUSD : localize('Gold/USD'),\n    FRXXPDUSD : localize('Palladium/USD'),\n    FRXXPTUSD : localize('Platinum/USD'),\n    OTC_AEX   : localize('Dutch Index'),\n    OTC_AS51  : localize('Australian Index'),\n    OTC_DJI   : localize('Wall Street Index'),\n    OTC_FCHI  : localize('French Index'),\n    OTC_FTSE  : localize('UK Index'),\n    OTC_GDAXI : localize('German Index'),\n    OTC_HSI   : localize('Hong Kong Index'),\n    OTC_IBEX35: localize('Spanish Index'),\n    OTC_N225  : localize('Japanese Index'),\n    OTC_NDX   : localize('US Tech Index'),\n    OTC_SPC   : localize('US Index'),\n    OTC_SSMI  : localize('Swiss Index'),\n    OTC_SX5E  : localize('Euro 50 Index'),\n    R_10      : localize('Volatility 10 Index'),\n    R_25      : localize('Volatility 25 Index'),\n    R_50      : localize('Volatility 50 Index'),\n    R_75      : localize('Volatility 75 Index'),\n    R_100     : localize('Volatility 100 Index'),\n    RDBEAR    : localize('Bear Market Index'),\n    RDBULL    : localize('Bull Market Index'),\n    WLDAUD    : localize('AUD Index'),\n    WLDEUR    : localize('EUR Index'),\n    WLDGBP    : localize('GBP Index'),\n    WLDUSD    : localize('USD Index'),\n});\n\nexport const getUnsupportedContracts = () => ({\n    EXPIRYMISS: {\n        name    : localize('Ends Outside'),\n        position: 'top',\n    },\n    EXPIRYRANGE: {\n        name    : localize('Ends Between'),\n        position: 'bottom',\n    },\n    RANGE: {\n        name    : localize('Stays Between'),\n        position: 'top',\n    },\n    UPORDOWN: {\n        name    : localize('Goes Outside'),\n        position: 'bottom',\n    },\n    RESETCALL: {\n        name    : localize('Reset Call'),\n        position: 'top',\n    },\n    RESETPUT: {\n        name    : localize('Reset Put'),\n        position: 'bottom',\n    },\n    TICKHIGH: {\n        name    : localize('High Tick'),\n        position: 'top',\n    },\n    TICKLOW: {\n        name    : localize('Low Tick'),\n        position: 'bottom',\n    },\n    ASIANU: {\n        name    : localize('Asian Up'),\n        position: 'top',\n    },\n    ASIAND: {\n        name    : localize('Asian Down'),\n        position: 'bottom',\n    },\n    LBFLOATCALL: {\n        name    : localize('Close-Low'),\n        position: 'top',\n    },\n    LBFLOATPUT: {\n        name    : localize('High-Close'),\n        position: 'top',\n    },\n    LBHIGHLOW: {\n        name    : localize('High-Low'),\n        position: 'top',\n    },\n    CALLSPREAD: {\n        name    : localize('Call Spread'),\n        position: 'top',\n    },\n    PUTSPREAD: {\n        name    : localize('Put Spread'),\n        position: 'bottom',\n    },\n    RUNHIGH: {\n        name    : localize('Only Ups'),\n        position: 'top',\n    },\n    RUNLOW: {\n        name    : localize('Only Downs'),\n        position: 'bottom',\n    },\n});\n\nexport const getSupportedContracts = is_high_low => ({\n    CALL: {\n        name    : is_high_low ?  localize('Higher') : localize('Rise'),\n        position: 'top',\n    },\n    PUT: {\n        name    : is_high_low ? localize('Lower') : localize('Fall'),\n        position: 'bottom',\n    },\n    CALLE: {\n        name    : localize('Rise'),\n        position: 'top',\n    },\n    PUTE: {\n        name    : localize('Fall'),\n        position: 'bottom',\n    },\n    DIGITMATCH: {\n        name    : localize('Matches'),\n        position: 'top',\n    },\n    DIGITDIFF: {\n        name    : localize('Differs'),\n        position: 'bottom',\n    },\n    DIGITEVEN: {\n        name    : localize('Even'),\n        position: 'top',\n    },\n    DIGITODD: {\n        name    : localize('Odd'),\n        position: 'bottom',\n    },\n    DIGITOVER: {\n        name    : localize('Over'),\n        position: 'top',\n    },\n    DIGITUNDER: {\n        name    : localize('Under'),\n        position: 'bottom',\n    },\n    ONETOUCH: {\n        name    : localize('Touch'),\n        position: 'top',\n    },\n    NOTOUCH: {\n        name    : localize('No Touch'),\n        position: 'bottom',\n    },\n});\n\nexport const getContractConfig = is_high_low => ({\n    ...getSupportedContracts(is_high_low),\n    ...getUnsupportedContracts(),\n});\n\nexport const getContractTypeDisplay  = (\n    type,\n    is_high_low = false) => (\n    getContractConfig(is_high_low)[type] ? getContractConfig(is_high_low)[type.toUpperCase()].name : ''\n);\n\nexport const getContractTypePosition = (\n    type,\n    is_high_low = false) => (\n    getContractConfig(is_high_low)[type] ? getContractConfig(is_high_low)[type.toUpperCase()].position : 'top'\n);\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { formatMoney } from '_common/base/currency_base';\n\nconst Money = ({\n    amount,\n    className,\n    currency = 'USD',\n    has_sign,\n    is_formatted = true,\n}) => {\n    let sign = '';\n    if (+amount && (amount < 0 || has_sign)) {\n        sign = amount > 0 ? '+' : '-';\n    }\n\n    const abs_value = Math.abs(amount);\n    const final_amount = is_formatted ? formatMoney(currency, abs_value, true) : abs_value;\n\n    return (\n        <React.Fragment>\n            {has_sign && sign}\n            <span className={classNames(className, 'symbols', `symbols--${currency.toLowerCase()}`)} />\n            {final_amount}\n        </React.Fragment>\n    );\n};\n\nMoney.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className   : PropTypes.string,\n    currency    : PropTypes.string,\n    has_sign    : PropTypes.bool,\n    is_formatted: PropTypes.bool,\n};\n\nexport default Money;\n","import { localize } from 'App/i18n';\n\nexport const month_headers = {\n    Jan: localize('Jan'),\n    Feb: localize('Feb'),\n    Mar: localize('Mar'),\n    Apr: localize('Apr'),\n    May: localize('May'),\n    Jun: localize('Jun'),\n    Jul: localize('Jul'),\n    Aug: localize('Aug'),\n    Sep: localize('Sep'),\n    Oct: localize('Oct'),\n    Nov: localize('Nov'),\n    Dec: localize('Dec'),\n};\n\nexport const week_headers = {\n    Monday   : localize('Monday'),\n    Tuesday  : localize('Tuesday'),\n    Wednesday: localize('Wednesday'),\n    Thursday : localize('Thursday'),\n    Friday   : localize('Friday'),\n    Saturday : localize('Saturday'),\n    Sunday   : localize('Sunday'),\n};\n\nexport const week_headers_abbr = {\n    Monday   : localize('M'),\n    Tuesday  : localize('T'),\n    Wednesday: localize('W'),\n    Thursday : localize('T'),\n    Friday   : localize('F'),\n    Saturday : localize('S'),\n    Sunday   : localize('S'),\n};\n\nexport const getDaysOfTheWeek = (day) => {\n    const days_of_the_week = {\n        'Mondays'   : 1,\n        'Tuesdays'  : 2,\n        'Wednesdays': 3,\n        'Thursdays' : 4,\n        'Fridays'   : 5,\n        'Saturdays' : 6,\n        'Sundays'   : 0,\n    };\n\n    return days_of_the_week[day];\n};\n","const extend = require('extend');\nrequire('./lib/polyfills/element.matches');\n\nconst template = (string, content) => {\n    let to_replace = content;\n    if (content && !Array.isArray(content)) {\n        to_replace = [content];\n    }\n    return string.replace(/\\[_(\\d+)]/g, (s, index) => to_replace[(+index) - 1]);\n};\n\nconst isEmptyObject = (obj) => {\n    let is_empty = true;\n    if (obj && obj instanceof Object) {\n        Object.keys(obj).forEach((key) => {\n            if (Object.prototype.hasOwnProperty.call(obj, key)) is_empty = false;\n        });\n    }\n    return is_empty;\n};\n\nconst cloneObject = obj => (!isEmptyObject(obj) ? extend(true, Array.isArray(obj) ? [] : {}, obj) : obj);\n\nconst isDeepEqual = (a, b) => {\n    if (typeof a !== typeof b) {\n        return false;\n    } else if (Array.isArray(a)) {\n        return isEqualArray(a, b);\n    } else if (a && b && typeof a === 'object') {\n        return isEqualObject(a, b);\n    }\n    // else\n    return a === b;\n};\n\nconst isEqualArray = (arr1, arr2) => (\n    arr1 === arr2 ||\n    (\n        arr1.length === arr2.length &&\n        arr1.every((value, idx) => isDeepEqual(value, arr2[idx]))\n    )\n);\n\nconst isEqualObject = (obj1, obj2) => (\n    obj1 === obj2 ||\n    (\n        Object.keys(obj1).length === Object.keys(obj2).length &&\n        Object.keys(obj1).every(key => isDeepEqual(obj1[key], obj2[key]))\n    )\n);\n\n// Filters out duplicates in an array of objects by key\nconst unique = (array, key) => array.filter((e, idx) =>\n    array.findIndex((a, i) => a[key] ? a[key] === e[key] : i === idx) === idx);\n\nconst getPropertyValue = (obj, k) => {\n    let keys = k;\n    if (!Array.isArray(keys)) keys = [keys];\n    if (!isEmptyObject(obj) && keys[0] in obj && keys && keys.length > 1) {\n        return getPropertyValue(obj[keys[0]], keys.slice(1));\n    }\n    // else return clone of object to avoid overwriting data\n    return obj ? cloneObject(obj[keys[0]]) : undefined;\n};\n\n/**\n * Creates a DOM element and adds any attributes to it.\n *\n * @param {String} tag_name: the tag to create, e.g. 'div', 'a', etc\n * @param {Object} attributes: all the attributes to assign, e.g. { id: '...', class: '...', html: '...', ... }\n * @return the created DOM element\n */\nconst createElement = (tag_name, attributes = {}) => {\n    const el = document.createElement(tag_name);\n    Object.keys(attributes).forEach((attr) => {\n        const value = attributes[attr];\n        if (attr === 'text') {\n            el.textContent = value;\n        } else if (attr === 'html') {\n            el.html(value);\n        } else {\n            el.setAttribute(attr, value);\n        }\n    });\n    return el;\n};\n\nlet static_hash;\nconst getStaticHash = () => {\n    static_hash = static_hash || (document.querySelector('script[src*=\"main\"]').getAttribute('src') || '').split('.')[1];\n    return static_hash;\n};\n\nclass PromiseClass {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.reject  = reject;\n            this.resolve = resolve;\n        });\n    }\n}\n\nmodule.exports = {\n    template,\n    isEmptyObject,\n    cloneObject,\n    isDeepEqual,\n    unique,\n    getPropertyValue,\n    createElement,\n    getStaticHash,\n    PromiseClass,\n};\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst UILoader = ({ className, classNameBlock }) => {\n    const block_class   = classNames(classNameBlock, 'block-ui');\n    const loading_class = classNames('block-ui__loading', className);\n    return (\n        <div className={block_class}>\n            <div className={loading_class}>\n                <div className='block-ui__loading-spinner'>\n                    <svg className='block-ui__loading-spinner-circular' viewBox='25 25 50 50'>\n                        <circle className='block-ui__loading-spinner-path' cx='50' cy='50' r='20' fill='none' strokeWidth='4' strokeMiterlimit='10' />\n                    </svg>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nUILoader.propTypes = {\n    className     : PropTypes.string,\n    classNameBlock: PropTypes.string,\n};\n\nexport default UILoader;\n","import { toMoment } from 'Utils/Date';\n\nexport const getDecade = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(9, 'years').year()}`;\n\nexport const getCentury = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(99, 'years').year()}`;\n","export *                   from './logout';\nexport BinarySocketGeneral from './socket-general';\nexport WS                  from './ws-methods';\n","import { matchPath } from 'react-router';\nimport routes        from 'Constants/routes';\n\nexport const normalizePath = (path) => /^\\//.test(path) ? path : `/${path || ''}`; // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some((route_info) => {\n        let match_path;\n        try {\n            match_path = matchPath(path, route_info);\n        } catch (e) {\n            if (/undefined/.test(e.message)) {\n                return undefined;\n            }\n        }\n\n        if (match_path) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) =>\n    !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) => (\n    Object.keys(params).reduce(\n        (p, name) => p.replace(`:${name}`, params[name]),\n        route_path,\n    )\n);\n\nexport const getContractPath = (contract_id) => getPath(routes.contract, { contract_id });\n"],"sourceRoot":""}