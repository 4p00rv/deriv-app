{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./_common/base/socket_base.js","webpack:///./_common/base/socket_cache.js","webpack:///./Modules/Reports/Helpers/market-underlying.js","webpack:///./Services/logout.js","webpack:///./_common/common_functions.js","webpack:///./_common/string_util.js","webpack:///./Stores/Modules/Trading/Constants/contract.js","webpack:///./Stores/connect.js","webpack:///./Stores/Modules/Portfolio/Helpers/details.js","webpack:///./Constants/ui.js","webpack:///./_common/base/currency_base.js","webpack:///./App/Components/Routes/button-link.jsx","webpack:///./App/Components/Elements/VerticalTabs/vertical-tab-content-container.jsx","webpack:///./App/Components/Elements/VerticalTabs/vertical-tab-headers.jsx","webpack:///./Modules/Trading/Components/Elements/full-screen-dialog.jsx","webpack:///./Services/socket-general.js","webpack:///./App/Containers/Redirect/redirect.jsx","webpack:///./Modules/Reports/Components/empty-portfolio-message.jsx","webpack:///./Modules/Contract/Containers/contract-link.jsx","webpack:///./Assets/SvgComponents/portfolio/ic-check.svg","webpack:///./Assets/SvgComponents/portfolio/ic-cross.svg","webpack:///./App/Components/Elements/PositionsDrawer/result-overlay.jsx","webpack:///./App/Components/Elements/PositionsDrawer/positions-drawer-card.jsx","webpack:///./App/Components/Elements/PositionsDrawer/positions-drawer.jsx","webpack:///./App/Components/Elements/market-is-closed-overlay.jsx","webpack:///./Modules/Trading/Containers/test.jsx","webpack:///./Modules/Trading/Components/Form/screen-large.jsx","webpack:///./Modules/Trading/Components/Form/form-layout.jsx","webpack:///./Modules/Trading/Containers/trade.jsx","webpack:///./App/Constants/routes-config.js","webpack:///./App/Components/Routes/binary-link.jsx","webpack:///./App/Components/Elements/login-prompt.jsx","webpack:///./App/Components/Routes/route-with-sub-routes.jsx","webpack:///./App/Components/Routes/binary-routes.jsx","webpack:///./Modules/PageError/PageError.jsx","webpack:///./Modules/Trading/Helpers/digits.js","webpack:///./Modules/Reports/Helpers/shortcode.js","webpack:///./App/Constants/app-config.js","webpack:///./App/Components/Elements/tooltip.jsx","webpack:///./App/Components/Form/InputField/increment-buttons.jsx","webpack:///./App/Components/Form/InputField/input.jsx","webpack:///./App/Components/Form/InputField/input-field.jsx","webpack:///./App/Components/Elements/VerticalTabs/vertical-tab.jsx","webpack:///./templates/_common/components/loading.jsx","webpack:///./App/Components/Elements/underlying-icon.jsx","webpack:///./App/Components/Elements/PositionsDrawer/ProgressSlider/positions-progress-ticks.jsx","webpack:///./App/Containers/remaining-time.jsx","webpack:///./App/Components/Elements/PositionsDrawer/ProgressSlider/positions-progress-slider.jsx","webpack:///./App/Components/Elements/localize.jsx","webpack:///./_common/storage.js","webpack:///./Stores/Modules/Contract/Helpers/logic.js","webpack:///./Stores/Modules/Trading/Helpers/barrier.js","webpack:///./Stores/Modules/Trading/Helpers/contract-type.js","webpack:///./App/Components/Elements/chart-loader.jsx","webpack:///./App/Components/Elements/PositionsDrawer/contract-type-cell.jsx","webpack:///./App/Components/Elements/Calendar/calendar-footer.jsx","webpack:///./App/Components/Form/ButtonToggleMenu/button-highlight.jsx","webpack:///./App/Components/Form/ButtonToggleMenu/button-highlight-wrapper.jsx","webpack:///./App/Components/Form/ButtonToggleMenu/button-toggle-menu.jsx","webpack:///./App/Components/Form/DropDown/items.jsx","webpack:///./App/Components/Form/DropDown/native-select.jsx","webpack:///./App/Components/Form/DropDown/helpers.js","webpack:///./App/Components/Form/DropDown/dropdown.jsx","webpack:///./Stores/Modules/Trading/Helpers/allow-equals.js","webpack:///./Modules/Trading/Components/Form/TradeParams/allow-equals.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/amount.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/barrier.jsx","webpack:///./App/Components/Form/RangeSlider/tick-steps.jsx","webpack:///./App/Components/Form/RangeSlider/range-slider.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/Duration/duration-toggle.jsx","webpack:///./App/Components/Form/DatePicker/helpers.js","webpack:///./App/Components/Elements/Calendar/calendar.jsx","webpack:///./App/Components/Form/DatePicker/date-picker.jsx","webpack:///./Modules/Trading/Components/Form/DatePicker/trading-date-picker.jsx","webpack:///./App/Components/Form/TimePicker/dialog.jsx","webpack:///./App/Components/Form/TimePicker/time-picker.jsx","webpack:///./Stores/Modules/Trading/Helpers/end-time.js","webpack:///./Modules/Trading/Components/Form/TimePicker/trading-time-picker.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/Duration/advanced-duration.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/Duration/simple-duration.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/Duration/duration.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/Duration/duration-wrapper.jsx","webpack:///./App/Components/Form/number-selector.jsx","webpack:///./Modules/Trading/Components/Form/TradeParams/last-digit.jsx","webpack:///./Modules/Trading/Containers/trade-params.jsx","webpack:///./Modules/Trading/Components/Form/ContractType/contract-type-dialog.jsx","webpack:///./Modules/Trading/Components/Form/ContractType/contract-type-item.jsx","webpack:///./Modules/Trading/Components/Form/ContractType/contract-type-list.jsx","webpack:///./Modules/Trading/Components/Form/TradeTypeInfo/trade-type-info-dialog.jsx","webpack:///./Modules/Trading/Components/Form/TradeTypeInfo/trade-type-info-item.jsx","webpack:///./Modules/Trading/Components/Form/ContractType/contract-type-widget.jsx","webpack:///./Modules/Trading/Containers/contract-type.jsx","webpack:///./App/Components/Elements/Calendar/panels/types.js","webpack:///./App/Components/Elements/Calendar/panels/calendar-days.jsx","webpack:///./App/Components/Elements/Calendar/panels/calendar-months.jsx","webpack:///./App/Components/Elements/Calendar/panels/calendar-years.jsx","webpack:///./App/Components/Elements/Calendar/panels/calendar-decades.jsx","webpack:///./App/Components/Elements/Calendar/calendar-body.jsx","webpack:///./Modules/Trading/Components/Form/Purchase/contract-info.jsx","webpack:///./Modules/Trading/Components/Elements/purchase-button.jsx","webpack:///./Modules/Trading/Components/Elements/purchase-fieldset.jsx","webpack:///./Modules/Trading/Containers/purchase.jsx","webpack:///./App/Components/Elements/NotificationMessage/close-button.jsx","webpack:///./App/Components/Elements/NotificationMessage/constants.js","webpack:///./App/Components/Elements/NotificationMessage/notification.jsx","webpack:///./App/Components/Elements/PositionsDrawer/helpers/positions-helper.js","webpack:///./App/Components/Elements/PositionsDrawer/helpers/index.js","webpack:///./App/Components/Elements/Errors/error-component.jsx","webpack:///./App/Components/Elements/modal.jsx","webpack:///./Utils/Language/language.js","webpack:///./Utils/Language/index.js","webpack:///./App/Components/Elements/Calendar/calendar-button.jsx","webpack:///./App/Components/Elements/Calendar/calendar-header.jsx","webpack:///./App/Components/Elements/ContentLoader/positions-card.jsx","webpack:///./App/Components/Elements/ContentLoader/index.js","webpack:///./_common/base/gtm.js","webpack:///./_common/base/network_monitor_base.js","webpack:///./_common/url.js","webpack:///./_common/base/client_base.js","webpack:///./App/Components/Form/button.jsx","webpack:///./App/i18n.js","webpack:///./App/Containers/Lazy/lazy.jsx","webpack:///./Constants/index.js","webpack:///./Constants/routes.js","webpack:///./_common/base/server_time.js","webpack:///./_common/language.js","webpack:///./Stores/Modules/Trading/Helpers/duration.js","webpack:///./_common/lib/polyfills/nodelist.foreach.js","webpack:///./_common/lib/polyfills/element.closest.js","webpack:///./_common/lib/plugins.js","webpack:///./_common/base/subscription_manager.js","webpack:///./Services/trackjs.js","webpack:///./Services/ws-methods.js","webpack:///./_common/lib/polyfills/element.matches.js","webpack:///./Utils/Date/date-time.js","webpack:///./Utils/Date/index.js","webpack:///./_common/os_detect.js","webpack:///./App/Components/Elements/Errors/error-boundary.jsx","webpack:///./templates/app/components/loading.jsx","webpack:///./App/Containers/Layout/app-contents.jsx","webpack:///./App/Containers/server-time.jsx","webpack:///./App/Components/Layout/Footer/network-status.jsx","webpack:///./App/Components/Layout/Footer/toggle-fullscreen.jsx","webpack:///./App/Components/Layout/Footer/toggle-positions.jsx","webpack:///./App/Components/Layout/Footer/toggle-settings.jsx","webpack:///./App/Containers/Layout/footer.jsx","webpack:///./App/Components/Layout/Header/menu-links.jsx","webpack:///./App/Components/Layout/Header/login-button.jsx","webpack:///./App/Components/Layout/Header/signup-button.jsx","webpack:///./App/Components/Layout/Header/upgrade-button.jsx","webpack:///./App/Components/Layout/Header/account-actions.jsx","webpack:///./App/Constants/header-links.js","webpack:///./App/Containers/Layout/header.jsx","webpack:///./App/Containers/Modals/modals.jsx","webpack:///./App/Containers/Routes/routes.jsx","webpack:///./Services/network-monitor.js","webpack:///./Services/outdated-browser.js","webpack:///./Stores/Helpers/client-notifications.js","webpack:///./Utils/Validator/declarative-validation-rules.js","webpack:///./Utils/Validator/errors.js","webpack:///./Utils/Validator/validator.js","webpack:///./Stores/base-store.js","webpack:///./Stores/Modules/Trading/Helpers/currency.js","webpack:///./Stores/client-store.js","webpack:///./Stores/common-store.js","webpack:///./Stores/gtm-store.js","webpack:///./Stores/Modules/Cashier/cashier-store.js","webpack:///./Stores/Modules/SmartChart/Constants/barriers.js","webpack:///./Stores/Modules/Contract/Helpers/chart-barriers.js","webpack:///./Modules/SmartChart/Components/Markers/marker-line.jsx","webpack:///./Modules/SmartChart/Components/Markers/marker-spot.jsx","webpack:///./Modules/SmartChart/Components/Markers/marker-spot-label.jsx","webpack:///./Stores/Modules/SmartChart/Constants/markers.js","webpack:///./Stores/Modules/Contract/Helpers/chart-marker-helpers.js","webpack:///./Stores/Modules/Contract/Helpers/chart-markers.js","webpack:///./Stores/Modules/Portfolio/Helpers/portfolio-notifcations.js","webpack:///./Stores/Modules/Contract/contract-replay-store.js","webpack:///./Stores/Modules/Contract/contract-trade-store.js","webpack:///./Stores/Modules/Trading/Helpers/active-symbols.js","webpack:///./Stores/Modules/Portfolio/Helpers/format-response.js","webpack:///./Stores/Modules/Portfolio/portfolio-store.js","webpack:///./Stores/Modules/Profit/Helpers/format-request.js","webpack:///./Stores/Modules/Profit/Helpers/format-response.js","webpack:///./Stores/Modules/Profit/profit-store.js","webpack:///./Stores/Modules/SmartChart/Helpers/barriers.js","webpack:///./Stores/Modules/SmartChart/chart-barrier-store.js","webpack:///./Stores/Modules/SmartChart/chart-marker-store.js","webpack:///./Stores/Modules/SmartChart/smart-chart-store.js","webpack:///./Stores/Modules/Statement/statement-store.js","webpack:///./Stores/Modules/Statement/Helpers/format-response.js","webpack:///./Stores/Modules/Trading/Actions/purchase.js","webpack:///./Stores/Modules/Trading/Actions/symbol.js","webpack:///./Stores/Modules/Trading/Constants/validation-rules.js","webpack:///./Stores/Modules/Trading/Actions/contract-type.js","webpack:///./Stores/Modules/Trading/Actions/duration.js","webpack:///./Stores/Modules/Trading/Actions/start-date.js","webpack:///./Stores/Modules/Trading/Helpers/process.js","webpack:///./Stores/Modules/Trading/Helpers/proposal.js","webpack:///./Stores/Modules/Trading/trade-store.js","webpack:///./Stores/Modules/Trading/Helpers/chart.js","webpack:///./Stores/Modules/index.js","webpack:///./Stores/ui-store.js","webpack:///./Stores/index.js","webpack:///./App/app.js","webpack:///./Utils/Events/storage.js","webpack:///./App/app.jsx","webpack:///./Utils/pwa/register-service-worker.js","webpack:///./App/Components/Elements/Popover/popover-bubble.jsx","webpack:///./App/Components/Elements/Popover/popover.jsx","webpack:///./App/Components/Form/fieldset.jsx","webpack:///./_common/base/login.js","webpack:///./Stores/Modules/Trading/Helpers/start-date.js","webpack:///./config.js","webpack:///./Stores/Modules/Contract/Helpers/digits.js","webpack:///./Assets/icon.jsx","webpack:///./Constants/contract.js","webpack:///./App/Components/Elements/money.jsx","webpack:///./Constants/date-time.js","webpack:///./_common/utility.js","webpack:///./App/Components/Elements/ui-loader.jsx","webpack:///./App/Components/Elements/Calendar/helper.js","webpack:///./Services/index.js","webpack:///./App/Components/Routes/helpers.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","prefetchChunks","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","deferredPrefetch","apply","shift","deferredModules","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","forEach","undefined","link","document","createElement","nc","setAttribute","rel","as","href","jsonpScriptSrc","head","appendChild","installedModules","installedCssChunks","main","p","404","DenialOfServiceModal","MarketUnavailableModal","ServicesErrorModal","UnsupportedContractModal","account-info","contract","digits","info-box","notification-messages","push-notification","reports","screen-small","settings-chart","settings-language","settings-theme","toggle-cashier","toggle-menu-drawer","vendors~open_position~7c650be5","default~open_position~1833eefb","open_positions","profit_table","statement","vendors~smart_chart","smart_chart","work-in-progress","wallet-information","two-month-picker","exports","module","l","e","promises","Promise","resolve","reject","fullhref","existingLinkTags","getElementsByTagName","dataHref","tag","getAttribute","existingStyleTags","linkTag","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","error","clearTimeout","chunk","errorType","realSrc","message","name","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","startupResult","binary_socket","config","buffered_sends","req_id","wrong_app_id","is_available","is_disconnect_called","is_connected_before","socket_url","timeouts","no_duplicate_requests","sent_requests","waiting_list","clearTimeouts","isReady","hasReadyState","sendBufferedRequests","wait","send","ClientBase","require","SocketCache","getLanguage","State","cloneObject","getPropertyValue","isEmptyObject","PromiseClass","getAppId","getSocketURL","BinarySocketBase","concat","items","clear","has","msg_type","indexOf","add","remove","promise_obj","response","this_promises","pr","another_exists","keys","some","req_obj","options","arguments","has_callback","callback","find","forced","set","skip_cache_update","JSON","stringify","time","assign","last_response","subscribe","isOnline","passthrough","wsEvent","init","_typeof","WebSocket","onopen","isLoggedIn","authorize","onOpen","onReconnect","onmessage","msg","parse","test","this_req_id","onMessage","onclose","onDisconnect","_len2","msg_types","Array","_key2","is_resolved","availability","status","_len","states","_key","readyState","sendBuffered","setOnDisconnect","setOnReconnect","removeOnReconnect","removeOnDisconnect","data_obj","msg_type_mapping","isEmptyValue","makeKey","moment","LocalStore","getStaticHash","payout_currencies","expire","proposal_open_contract","map_to","active_symbols","contracts_for","exchange_rates","ticks_history","trading_times","history","candles","is_empty_data","isArray","response_data","getObject","static_hash","response_obj","isBefore","expires","source_obj","map_key","subscription","cached_response","echo_req","cached_message","new_message","has_error_or_missing","has_new_value","has_old_cache","has_valid_cache","valueOf","setObject","should_match_all","data_key","__webpack_exports__","getMarketInformation","getMarketName","getTradeTypeName","Constants__WEBPACK_IMPORTED_MODULE_0__","shortcode","market_info","category","underlying","extracted","RegExp","exec","toLowerCase","getMarketNamesMap","toUpperCase","getContractConfig","requestLogout","_common_base_client_base__WEBPACK_IMPORTED_MODULE_0__","_common_base_client_base__WEBPACK_IMPORTED_MODULE_0___default","_common_base_socket_cache__WEBPACK_IMPORTED_MODULE_1__","_common_base_socket_cache__WEBPACK_IMPORTED_MODULE_1___default","_common_storage__WEBPACK_IMPORTED_MODULE_2__","_ws_methods__WEBPACK_IMPORTED_MODULE_3__","WS","logout","doLogout","removeCookies","Client","clearAllAccounts","isVisible","elem","offsetWidth","offsetHeight","getElementById","id_selector","parent","padLeft","txt","len","char","text","String","join","numberToString","toTitleCase","str","replace","charAt","substr","compareBigUnsignedInt","a","b","first_num","second_num","max_length","Math","max","order","getLocalizedBasis","payout","localize","stake","multiplier","getContractTypesConfig","rise_fall","title","trade_types","basis","components","barrier_count","rise_fall_equal","high_low","touch","end","stay","asian","match_diff","even_odd","over_under","lb_call","lb_put","lb_high_low","getContractCategoriesConfig","_ref","_defineProperty","SPECIAL_REACT_KEYS","children","ref","MobxProvider","_Provider","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","_inherits","Provider","_createClass","stores","baseStores","context","mobxStores","props","store","_objectSpread","childContextTypes","PropTypes","client","common","gtm","ui","connect","StoreClass","mapper","Component","inject","observer","connect_global_store","observed","StoredComponent","_Component","_getPrototypeOf2","_this","args","propTypes","React","wrappedDisplayName","displayName","constructor","getCurrentTick","getDurationUnitText","getDurationPeriod","getDurationTime","App_i18n__WEBPACK_IMPORTED_MODULE_0__","_common_utility__WEBPACK_IMPORTED_MODULE_1__","Utils_Date__WEBPACK_IMPORTED_MODULE_2__","_Contract_Helpers_digits__WEBPACK_IMPORTED_MODULE_3__","contract_info","tick_stream","unique","current_tick","isDigitContract","contract_type","isEndTime","duration","obj_duration","unit_map","name_plural","name_singular","h","duration_ms","asMilliseconds","getDiffDuration","epochToMoment","purchase_time","date_start","date_expiry","tick_count","floor","is_end_time","string_format","formatMiliseconds","getDurationUnitValue","MAX_MOBILE_WIDTH","MAX_TABLET_WIDTH","crypto_config","currencies_config","formatCurrency","currency","addComma","num","decimal_points","is_crypto","number","toFixed","parseFloat","toString","$0","$1","$2","getDecimalPlaces","isCryptocurrency","calcDecimalPlaces","CryptoConfig","BTC","min_withdrawal","pa_max_withdrawal","pa_min_withdrawal","BCH","ETH","ETC","LTC","UST","USB","getMinWithdrawal","formatMoney","currency_value","amount","exclude_currency","decimals","minimumFractionDigits","money","sign","Number","decimal_places","isNaN","abs","Intl","maximumFractionDigits","NumberFormat","format","setCurrencies","website_status","getCurrencyName","getTransferLimits","which","transfer_limits","min","getTransferFee","currency_from","currency_to","transfer_fee","getMinimumTransferFee","pow","getTextFormat","getMinPayout","getPaWithdrawalLimit","limit","getCurrencies","classnames__WEBPACK_IMPORTED_MODULE_0__","classnames__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","ButtonLink","className","to","onClick","classNames","string","func","VerticalTabContentContainer","PureComponent","_this$props","action_bar","action_bar_classname","is_routed","selected","selected_item","item","label","TabContent","react__WEBPACK_IMPORTED_MODULE_1___default","map","component","icon","Assets_icon_jsx__WEBPACK_IMPORTED_MODULE_3__","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","exact","from","routes","positions","_ref2","path","render","component_icon","VerticalTabHeaders","header_title","onChange","activeClassName","vertical-tab__header--active","vertical-tab__header__icon--active","FullScreenDialog","visible","wrapperClassName","body","classList","fullscreen-dialog--open","tagName","scrollToTarget","el","viewport_offset","getBoundingClientRect","top","clientHeight","innerHeight","new_el_top","scrollTop","scrollToElement","currentTarget","addEventListener","removeEventListener","onClose","any","bool","client_store","common_store","setResidence","setBalance","handleError","authorizeAccount","mobx__WEBPACK_IMPORTED_MODULE_0__","_common_base_gtm__WEBPACK_IMPORTED_MODULE_1__","_common_base_gtm__WEBPACK_IMPORTED_MODULE_1___default","_common_base_login__WEBPACK_IMPORTED_MODULE_2__","_common_base_login__WEBPACK_IMPORTED_MODULE_2___default","_common_base_server_time__WEBPACK_IMPORTED_MODULE_3__","_common_base_server_time__WEBPACK_IMPORTED_MODULE_3___default","_common_base_socket_base__WEBPACK_IMPORTED_MODULE_4__","_common_base_socket_base__WEBPACK_IMPORTED_MODULE_4___default","_common_storage__WEBPACK_IMPORTED_MODULE_5__","_common_utility__WEBPACK_IMPORTED_MODULE_6__","App_i18n__WEBPACK_IMPORTED_MODULE_7__","_logout__WEBPACK_IMPORTED_MODULE_8__","_ws_methods__WEBPACK_IMPORTED_MODULE_9__","BinarySocketGeneral","setIsSocketOpened","is_ready","Login","isLoginPages","is_valid_login","subscribeWebsiteStatus","ResponseHandlers","websiteStatus","ServerTime","action","server_time","is_active_tab","sessionStorage","getItem","removeItem","loginid","is_populating_account_list","get_settings","country_code","setEmail","email","responsePayoutCurrencies","GTM","pushTransactionData","bom_ui","residence","landingCompany","flow","regeneratorRuntime","mark","_callee","balance","wrap","_context","prev","next","BinarySocket","stop","setError","responseAuthorize","subscribeBalance","sendRequest","getAccountStatus","payoutCurrencies","mt5LoginList","country","accounts","is_virtual","getSelfExclusion","accepted_bch","site_status","location","reload","setWebsiteStatus","Redirect","setCashierActiveTab","setVerificationCode","toggleAccountSignupModal","toggleCashierModal","url_params","URLSearchParams","search","replaceState","root","withRouter","EmptyPortfolioMessage","react_default","Fragment","ContractLink","contract_id","openContract","node","onMount","contract_trade","ic_check","styles","_objectWithoutProperties","_extends","xmlns","width","height","fill","fillRule","cx","cy","ic_cross","ic_cross_objectWithoutProperties","ic_cross_extends","stroke","strokeLinecap","ResultOverlay","handleClick","is_unsupported","preventDefault","is_visible","onClickRemove","is_contract_won","react_transition_group","in","enter","enterDone","exit","unmountOnExit","positions-drawer-card__result--won","positions-drawer-card__result--lost","react_router_dom","getContractPath","result__caption--won","result__caption--lost","oneOfType","has_same_contract_mounted","PositionsDrawerCard","active_position","indicative","id","is_dark_theme","is_loading","is_sell_requested","is_valid_to_sell","profit_loss","onClickSell","sell_price","toggleUnsupportedContractModal","loader_el","ContentLoader","speed","fallback_result","contract_el","underlying_icon","market","display_name","contract_type_cell","is_high_low","Shortcode","isHighLow","is_sold","ProgressSlider","start_time","expiry_time","ticks_count","positions-drawer-card__profit-loss--is-crypto","positions-drawer-card__profit-loss--negative","positions-drawer-card__profit-loss--positive","positions-drawer-card__indicative--movement-complete","buy_price","positions-drawer-card__wrapper--active","parseInt","result_overlay","positions-drawer-card--active","positions-drawer-card--green","positions-drawer-card--red","contract_link","Form_button","btn--loading","is_disabled","duration_unit","exit_spot","sell_time","PositionsDrawer","onUnmount","all_positions","active_contract_id","is_contract_mode","is_empty","is_positions_drawer_on","toggleDrawer","body_content","portfolio_position","appear","positions_drawer_card","positions_drawer_extends","positions-drawer--open","positions-drawer--contract-mode","lib","style","autoHide","empty_portfolio_message","MobxPropTypes","arrayOrObservableArray","portfolio","removePositionById","is_dark_mode_on","togglePositionsDrawer","startAnimation","children_background_color","getComputedStyle","firstElementChild","converted_rgba","startsWith","split","querySelectorAll","element","backgroundColor","requestAnimationFrame","toggleFade","opacity","direction","color","sub_or_add","reduction","new_opacity","stopId","cancelAnimationFrame","querySelector","contains","click","MarketIsClosedOverlay","i18n_default_text","classNameSpan","Test","state","setVisibility","stateVisibility","test_assertThisInitialized","container","fontSize","lineHeight","position","zIndex","background","padding","marginTop","display","overflowY","prop_name","componentDidMount","componentWillUnmount","ctrlKey","keyCode","setState","_this2","entries","sort","_slicedToArray","k","v","test_typeof","toJS","array","_ref3","trade","ScreenLarge","is_contract_visible","is_trade_enabled","is_blurred","sidebar__items--blur","fieldset","trade_params","purchase","ui_loader","FormLayout","is_mobile","Lazy","ctor","should_load","screen_large","SmartChart","lazy","Trade","showPositions","hidePositions","onCloseContract","form_wrapper_class","should_show_bottom_widgets","is_digit_contract","should_show_last_digit_stats","isDigitTradeType","is_chart_visible","is_chart_loading","is_chart_ready","positions_drawer","has_progress","symbol","Suspense","fallback","chart_loader","chart_id","chart_type","Digits","is_trade_page","digits_info","display_status","is_ended","InfoBox","error_message","removeError","end_epoch","granularity","is_static_chart","onSymbolChange","scroll_to_epoch","scroll_to_offset","start_epoch","cursor","is_market_closed","market_is_closed_overlay","form_layout","onClickNewTrade","purchase_info","routesConfig","removeErrorMessage","scroll_to_left_epoch","scroll_to_left_epoch_offset","hidePositionsFooterToggle","showPositionsFooterToggle","has_only_forward_starting_contracts","setHasOnlyForwardingContracts","ContractDetails","Reports","OpenPositions","ProfitTable","Statement","Page404","route_default","getRoutesConfig","is_authenticated","index","RouterRedirect","icon_component","default","profit","error404","redirect","BinaryLink","active_class","binary_link_objectWithoutProperties","normalizePath","route","findRouteByPath","binary_link_extends","LoginPrompt","onLogin","onSignup","page_title","PageError","header","values","messages","defaultProps","open","urlFor","pushDataLayer","react_router","pathname","is_logged_in","login_prompt","redirectToLogin","route_with_sub_routes_extends","Language","setCookie","default_title","BinaryRoutes","idx","route_with_sub_routes","binary_routes_extends","buttonOnClick","error_code","redirect_label","redirect_url","has_html","dangerouslySetInnerHTML","__html","button_link","digitTypesMap","includes","extractInfoFromShortcode","info_from_shortcode","barrier_1","_ref$shortcode","_ref$shortcode_info","shortcode_info","website_name","Tooltip","show_tooltip_balloon_icon","onMouseEnter","onMouseLeave","alignment","classNameIcon","has_error","icon_class","tooltip--error","data-tooltip","data-tooltip-pos","Assets_icon","tooltip__balloon-icon--show","IncrementButtons","decrementValue","incrementValue","max_is_disabled","min_is_disabled","tabIndex","Input","changeValue","checked","classNameInlinePrefix","data_value","data_tip","display_value","fractional_digits","inline_prefix","is_autocomplete_disabled","is_hj_whitelisted","is_incrementable","is_read_only","onKeyPressed","placeholder","required","autoComplete","data-for","data-hj-whitelist","data-tip","data-value","disabled","maxLength","navigator","userAgent","selectionStart","evt","selectionEnd","onKeyDown","readOnly","InputField","classNameInput","classNamePrefix","error_messages","helper","is_float","_this$props$is_hj_whi","is_negative_disabled","_this$props$is_read_o","_this$props$is_signed","is_signed","_this$props$is_unit_a","is_unit_at_right","max_value","min_value","prefix","unit","Icon","has_valid_length","getDecimals","val","array_value","increment_value","new_value","calculateDecrementedValue","decrement_value","is_increment_input","input","InputField_input","trim","signed_regex","is_number","is_not_completed_number","has_zero_at_end","is_scientific_notation","input--error","increment_buttons","InputField_increment_buttons","input_tooltip","tooltip","tooltip--with-label","htmlFor","VerticalTab","changeSelected","applicable_routes","list","filter","current_path","selected_index","vertical-tab--full-screen","is_full_width","_vertical_tab_headers_jsx__WEBPACK_IMPORTED_MODULE_4__","_vertical_tab_content_container_jsx__WEBPACK_IMPORTED_MODULE_3__","arrayOf","shape","isRequired","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","Loading","is_invisible","theme","x","inx","UnderlyingIcon","react__WEBPACK_IMPORTED_MODULE_1__","ProgressTicks","arr_ticks","_toConsumableArray","progress-slider__ticks-step--marked","RemainingTime","_ref$end_time","end_time","unix","remaining_time","formatDuration","percentage","getTimePercentage","positions_progress_ticks","Containers_remaining_time","progress-slider__line--green","progress-slider__line--orange","progress-slider__line--red","prop_types__WEBPACK_IMPORTED_MODULE_0__","prop_types__WEBPACK_IMPORTED_MODULE_0___default","react_i18next__WEBPACK_IMPORTED_MODULE_2__","Localize","defaults","Cookies","isProduction","setItem","Storage","isStorageSupported","storage","Store","InScriptStore","obj","getResponse","CookieStorage","cookie_name","cookie_domain","hostname","initialized","domain","Date","read","cookie_value","write","expireDate","isSecure","secure","SessionStore","localStorage","domains","parent_path","cookie_names","cookie","getChartConfig","getChartType","getChartGranularity","getDisplayStatus","getIndicativePrice","getLastTickFromTickStream","isEnded","isUserSold","isValidToSell","getEndTime","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","_common_base_server_time__WEBPACK_IMPORTED_MODULE_2__","_common_base_server_time__WEBPACK_IMPORTED_MODULE_2___default","is_from_purchase","start","hour_to_granularity_map","getExpiryTime","diff","asHours","calculateGranularity","getFinalPrice","bid_price","is_expired","is_settleable","exit_tick_time","is_path_dependent","is_tick_contract","contract_types","available_contract_types","available_categories","buildTradeTypesConfig","getArrayDefaultValue","getComponents","getDurationUnitsList","getDurationUnit","getDurationMinMax","getStartType","getStartDates","hours","minutes","getValidTime","buildMoment","setMinuteMultipleByFive","getTradeTypes","getBarriers","getBasis","ContractType","contract_display","arr_new_values","c_type","form_components","contract_start_type","duration_units_list","duration_units","arr_units","contract_expiry_type","duration_min_max","start_date","current_start_date","start_dates_list","has_spot","forward_starting_dates","sessions","compare_moment","start_moment","isSessionAvailable","minute","hour","date","isTimeValid","toMoment","moment_obj","ceil","arr_basis","localized_basis","basis_list","reduce","cur","bas","buildContractTypesConfig","contractsFor","has_contracts","available","start_type","contract_categories","barriers","sub_cats","durations","buildDurationConfig","count","obj_barrier","field","expiry_type","buildBarriersConfig","buildForwardStartingConfig","barrier_values","barrier","high_barrier","barrier_2","low_barrier","getContractType","arr_list","ct","getContractValues","obj_basis","obj_trade_types","obj_start_dates","obj_start_type","getFullContractTypes","getExpiryDate","expiry_date","proper_expiry_date","moment_start","moment_expiry","hasIntradayDurationUnit","isAfter","clone","isSameOrBefore","market_close_times","market_close_time","end_moment","expiry_sessions","close","minDate","is_end_of_day","is_end_of_session","subtract","getExpiryType","getSessions","option","getStartTime","getTradingTimes","trading_times_response","submarkets","symbols","_args","abrupt","sent","markets","times","_x","getContractCategories","contract_types_list","_templates_common_components_loading_jsx__WEBPACK_IMPORTED_MODULE_2__","ChartLoader","Constants_contract__WEBPACK_IMPORTED_MODULE_2__","ContractTypeCell","getContractTypeDisplay","Assets_icon_jsx__WEBPACK_IMPORTED_MODULE_2__","App_i18n__WEBPACK_IMPORTED_MODULE_3__","FooterIcon","use_icon","CalendarFooter","footer","has_today_btn","has_range_selection","duration_date","is_minimum","Highlight","left","left_offset","highlight_style","transform","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","HighlightWrapper","buttonClick","updateHighlightPosition","closest","resetHighlight","offsetLeft","active_button_el","getElementsByClassName","other_props","classnames","Children","child","cloneElement","button_highlight_Highlight","ButtonToggleMenu","buttons_arr","is_animated","menu","button-menu__button--active","selected_value","button_highlight_wrapper","Items","handleSelect","has_symbol","symbol_type_class_name","list__item--highlighted","list__item--selected","list__item--disabled","has_tooltip","Popover","NativeSelect","getItemFromValue","findInArray","findIndex","isArrayLike","getValueFromIndex","getPrevIndex","getNextIndex","Dropdown","list_ref","createRef","curr_index","is_list_visible","handleVisibility","setWrapperRef","wrapper_ref","handleClickOutside","is_single_option","prev_index","next_index","is_alignment_left","firstChars","is_nativepicker","native_select","left_alignment_style","list_width","dropdown--left","dropdown--show","dropdown--disabled","classNameDisplay","dropdown__display--clicked","dropdown__display--has-symbol","dropdown__select-arrow--left","onEntered","current","dropdown__list--left","list--left","autoHeight","autoHeightMax","renderTrackHorizontal","dropdown_extends","renderThumbHorizontal","DropDown_items","hasCallPutEqual","contract_type_list","hasDurationForCallPutEqual","contract_duration_list","allow_equals_toConsumableArray","AllowEquals","has_callputequal_duration","has_callputequal","isRiseFallEqual","input_field","_e$target","classNameTarget","margin","Amount","currencies_list","is_equal","is_minimized","is_single_currency","validation_errors","button_toggle_menu","dropdown","trade-container__currency-options-dropdown","allow_equals","observableObject","Barrier","barrier_title","input_class","is_center","TickSteps","hover_value","tick_steps_toConsumableArray","isActive","isMarked","isMarkedOnHover","range-slider__ticks-step--active","range-slider__ticks-step--marked","range-slider__ticks-step--marked-hover","RangeSlider","handleChange","resetOnHover","rangeSliderTrack","getRangeSliderTrackWidth","_e$nativeEvent","nativeEvent","offsetX","offsetY","is_hover","range-slider__error","steps","tick_steps","DurationToggle","icon_className","advanced-simple-toggle__icon--active","react","classNamePath","trading_events","getTradingEvents","events","Calendar","calendar_classCallCheck","calendar_possibleConstructorReturn","calendar_getPrototypeOf","switchView","view","calendar_view","navigateTo","new_date","calendar_date","date_format","onChangeCalendarMonth","start_of_month","getStartOfMonth","onMouseOver","hovered_date","updateSelectedDate","max_date","min_date","onSelect","moment_date","dataset","startOf","is_before","is_after","formatted_date","selected_date","updateSelected","stopPropagation","isPeriodDisabled","month","year","decade","resetCalendar","_this$props2","default_date","setToday","_this$props3","now","_this$props4","start_of_period","endOf","current_date","default_message","_this$props5","holidays","weekends","_this$state","calendar_header","calendar_body","calendar_footer","dates","descrip","DatePicker","date_value","is_datepicker_visible","is_clear_btn_visible","is_mounted","onClickOutside","mainNode","updateDatePickerValue","formatDate","is_clearable","onSelectCalendar","isDateValid","onChangeInput","formatted_value","addDays","clearDatePickerInput","updateStore","calendar","daysFromTodayTo","new_date_value","renderInputField","initial_value","disable_trading_events","defaultValue","datepicker__icon--is-hidden","datepicker__icon--with-label","datepicker__picker--left","date_picker_objectSpread","TradingDatePicker","max_date_duration","min_date_expiry","duration_d","is_24_hours_contract","has_intraday_unit","min_duration","daily","moment_contract_start_date_time","setTime","max_daily_duration","is_duration_contract","date_picker","disable_year_selector","Dialog","preClass","selected_time","start_time_moment","end_time_moment","seconds","milliseconds","to_compare_moment","_selected_time$split2","dialog_toConsumableArray","selectOption","current_value","prev_value","is_enabled","_prev_value$split","_prev_value$split2","prev_hour","prev_minute","start_time_reset_minute","is_hour_enabled","isBetween","is_minute_enabled","dialog_defineProperty","mm","TimePicker","is_open","toggleDropDown","arg","time_picker_typeof","saveRef","nodeName","target_element","dialog","getClosestTime","interval","TradingTimePicker","market_open_times","moment_expiry_date","market_open_datetime","market_close_datetime","expiry_datetime","server_datetime","boundaries","market_open_time","getBoundaries","getSelectedTime","time_picker","AdvancedDuration","advanced_duration_unit","advanced_expiry_type","duration_t","changeDurationUnit","getDurationFromUnit","expiry_list","number_input_props","onChangeUiStore","shared_input_props","has_intraday_duration_unit","isSame","endtime_container_class","has-time","range_slider","advanced_duration_extends","ticks","trading_date_picker","trading_time_picker","SimpleDuration","arr","filtered_arr","simple_duration_unit","has_label","du","simple_duration_extends","Duration","hasDurationUnit","is_advanced_duration","onChangeMultiple","has_end_time","expiry","pop","duration_unit_text","duration_value","shared_input","duration_name","number_input","has_toggle","trade-container__fieldset--advanced","duration_extends","advanced_duration","simple_duration","duration_toggle","_ref4","current_duration_unit","new_trade_store_values","duration_objectSpread","DurationWrapper","duration_list","duration_wrapper_toConsumableArray","advancedHasWrongExpiry","handleEndTime","getDurationMinMaxValues","convertDurationLimit","new_duration_unit","new_duration_value","current_unit","current_duration","_this$getDurationMinM2","duration_wrapper_slicedToArray","has_missing_duration_unit","simple_is_missing_duration_unit","_this$getDurationMinM4","setDurationUnit","Duration_duration","duration_wrapper_extends","duration_h","duration_m","duration_s","NumberSelector","arr_arr_numbers","selected_number","arr_numbers","number-selector__selection--selected","LastDigit","last_digit","arr_five","last_digit_toConsumableArray","number_selector","TradeParams","component_key","duration_wrapper","TradeParams_last_digit","TradeParams_amount","ContractTypeDialog","full_screen_dialog","ContractTypeItem","contracts","handleInfoClick","contract-type-item--selected","contract-type-item--invisible","ContractTypeList","contract_type_item","objectOrObservableObject","TradeTypeInfoDialog","TradeTypeInfoItem","handleNavigationClick","handleNextClick","handlePrevClick","item_index","itemList","onBackButtonClick","onSubmitButtonClick","ContractTypeWidget","is_dialog_open","is_info_dialog_open","handleInfoVisibility","navigationLength","nextIndex","list_item","prevIndex","onWidgetClick","getDisplayText","getItemIndex","curr_item","getItemList","contract-type-widget__display--clicked","contract_type_dialog","trade_type_info_dialog","trade_type_info_item","Contract","contract_type_widget","CommonPropTypes","CalendarDays","days","hide_others","moment_today","moment_cur_date","num_of_days","daysInMonth","moment_month_start","moment_month_end","moment_selected","subMonths","day","subDays","start_of_next_month","addMonths","moment_start_date","moment_hovered","is_active","is_today","getDaysOfTheWeek","has_events","is_closes_early","match","duration_from_today","is_between","is_between_hover","is_before_min_or_after_max_date","is_other_month","calendar__cell--active","calendar__cell--today","calendar__cell--active-duration","calendar__cell--today-duration","calendar__cell--disabled","calendar__cell--is-hidden","calendar__cell--other","calendar__cell--between-hover","calendar__cell--between","data-date","data-duration","classNameTargetIcon","getDays","week_headers_abbr","CalendarMonths","moment_selected_date","month_headers","data-month","calendar_months_objectSpread","CalendarYears","_getDecade$split2","getDecade","start_of_decade","end_of_decade","years","is_other_decade","data-year","calendar_years_objectSpread","CalendarDecades","decades","min_year","getCentury","_decade$split2","calendar_decades_slicedToArray","is_other_century","data-decade","calendar_decades_objectSpread","CalendarBody","calendar_days_CalendarDays","calendar_months_CalendarMonths","calendar_years_CalendarYears","calendar_decades_CalendarDecades","ContractInfo","has_increased","should_fade","proposal_info","has_error_or_not_loaded","trade-container__price-info--disabled","trade-container__price-info--slide","trade-container__price-info--fade","stakeOrPayout","obj_contract_basis","PurchaseButton","buy_info","info","is_proposal_empty","purchased_states_arr","setPurchaseState","onClickPurchase","is_button_disabled","btn-purchase--disabled","btn-purchase--animated--slide","btn-purchase--animated--fade","btn-purchase--swoosh","returns","PurchaseFieldset","is_proposal_error","onHoverPurchase","purchase_button","Elements_purchase_button","btn-purchase__shadow-wrapper--disabled","classNameBubble","Purchase","is_client_allowed_to_visit","isLoading","has_error_details","purchase_fieldset","Elements_purchase_fieldset","getContractTypePosition","unshift","is_purchase_locked","onPurchase","purchase_states","CloseButton","notification_order","types","danger","success","warning","contract_sold","sortNotifications","Notification","removeNotification","destroy","is_closed_by_user","closeOnClick","is_auto_close","delay","notification--small","size","should_hide_close_btn","close_button","oneOf","duration_from_purchase","round","getBarrierLabel","isDigitType","getBarrierValue","digitTypeMap","addCommaToNumber","DIGITDIFF","DIGITEVEN","DIGITMATCH","DIGITODD","DIGITOVER","DIGITUNDER","positions_helper_getTimePercentage","positions_helper_getBarrierLabel","ErrorComponent","redirectOnClick","_ref$should_show_refr","should_show_refresh","refresh_message","ModalElement","showFullBlur","modal_root","hideFullBlur","toggleModal","ReactDOM","createPortal","vertical_tab","classNameHeader","modal_content","Modal","modal_ModalElement","currentLanguage","getAllowedLanguages","exclude_languages","getAll","EN","getURL","lang","language_getAllowedLanguages","language_getURL","CalendarButton","is_hidden","CalendarHeader","disable_month_selector","hide_disabled_periods","is_date_view","is_month_view","is_year_view","is_decade_view","num_of_years","century","is_prev_month_disabled","is_prev_year_disabled","subYears","is_next_month_disabled","is_next_year_disabled","addYears","is_select_year_disabled","should_hide_next_month","should_hide_prev_month","should_hide_prev_year","should_hide_next_year","onClickPrevYear","onClickNextYear","onClickPrevMonth","onClickNextMonth","calendar_button","calendar__nav--disabled","calendar__nav--is-hidden","calendar__btn--disabled","PositionsCardLoader","react_content_loader_es","primaryColor","secondaryColor","y","rx","ry","positions_card_PositionsCardLoader","isGtmApplicable","dataLayer","language","visitorId","eventHandler","login_event","is_new_account","affiliate_token","getJSON","bom_affiliate_token","moment_now","utc","bom_account_type","getAccountType","bom_currency","bom_country","bom_country_abbrev","bom_email","url","bom_today","bom_date_joined","bom_age","date_of_birth","bom_firstname","first_name","bom_lastname","last_name","bom_phone","phone","mt5_login_list","acc_type","getMT5AccountType","group","login","last_transaction_timestamp","bom_transaction_in_last_30d","extra_data","transaction","storage_key","gtm_transactions","timestamp","transactions_arr","transactions","transaction_id","transaction_time","mt5NewAccount","mt5_new_account","mt5_account_type","account_type","gtm_data","mt5_last_signup","getAccountOfType","_pending_timeouts","status_config","ws_config","network_status","updateUI","StatusConfig","pendings","pending_keys","pending_timeouts","setStatus","ws_events_map","setPending","clearPendings","NetworkMonitorBase","online","class","offline","blinking","ws_init","ws_request","onLine","ping","socket_general_functions","fncUpdateUI","urlForLanguage","getCurrentProductionDomain","location_url","static_host","paramsHash","host_map","Url","bot.binary.com","developers.binary.com","academy.binary.com","tech.binary.com","blog.binary.com","getUrlBase","reset","param_hash","arr_params","parsed","URL","p_l","param","params","pars","should_change_to_legacy","new_url","urlForCurrentDomain","current_domain","url_object","urlForStatic","websiteUrl","protocol","getHostMap","resetStaticHost","current_loginid","types_map_config","client_object","getAllAccountsObject","getAllLoginids","isAccountOfType","TypesMapConfig","updateAccountList","canTransferFundsTo","only_enabled","this_type","financial","gaming","virtual","account_list","account","excluded_until","param_to_set","value_to_set","to_loginid","from_currency","to_currency","from_landing_company","to_landing_company","maltainvest","malta","is_from_crypto","is_to_crypto","isValidLoginid","valid_login_ids","every","current_client","hasAccountType","hasCurrencyType","loginids","getAccountTitle","types_map","landing_company_name","shouldAcceptTnc","website_tnc_version","client_tnc_status","setNewAccount","token","currentLandingCompany","landing_company_response","this_shortcode","landing_company_prop","shouldCompleteTax","getBasicUpgradeInfo","can_upgrade_to","upgradeable_landing_companies","can_open_multi","current_landing_company","landing_companies","landing_company","canUpgrade","can_upgrade","getLandingCompanyValue","landing_company_object","real","financial_company","gaming_company","getRiskAssessment","is_high_risk","canTransferFunds","hasSvgAccount","canChangeCurrency","is_current","has_no_mt5","has_no_transaction","has_account_criteria","Button","_ref$className","has_effect","classes","effect","button","wrapper","i18n_config","resources","translation","hashTransKey","crc32","lng","query","fallbackLng","i18n","use","initReactI18next","_ref$should_load","component_props","LazyLoadedComponent","_contract__WEBPACK_IMPORTED_MODULE_0__","_routes__WEBPACK_IMPORTED_MODULE_1__","account_password","apps","cashier_password","exclusion","limits","personal","settings","performance_request_time","get_time_interval","update_time_interval","onTimeUpdated","clock_started","pending","requestTime","timeCounter","fncTimeUpdated","clearInterval","setInterval","performance","start_timestamp","performance_response_time","server_time_at_response","updateTime","time_since_response","timePromise","all_languages","url_lang","lang_regex","languageFromUrl","current_lang","ACH","DE","ES","FR","ID","IT","PL","PT","RU","TH","VI","ZH_CN","ZH_TW","crowdin_lang","urlLang","custom_url","getDurationMaps","to_second","min_max","units_display","obj_min","getDurationFromString","min_contract_duration","obj_max","max_contract_duration","convertDurationUnit","duration_maps","u","from_unit","to_unit","duration_string","root_store","duration_is_day","expiry_is_after_today","isInteger","resetEndTimeOnVolatilityIndices","NodeList","thisArg","Element","documentElement","matches","parentElement","nodeType","hide","show","toggleClass","class_name","should_add","make_visible","html","content","innerHTML","subscriptions","forget_requested","subscription_id","dispatch","forget","forgetStream","hasCallbackFunction","hasValues","SubscriptionManager","sub_id","stream_id","sub_info","subscribers","fnc","fncCallback","match_values","forgets_list","request_obj","values_obj","addSubscriptionFromRequest","send_request","subscribe_request","subscription_props","is_stream","prop","should_forget_first","isDeepEqual","forgetAll","types_to_forget","sub_ids","forget_all","ignored_responses_in_trackjs","queue","ResponseQueue","ApiCallProxyHandler","prop_key","receiver","target_value","Reflect","return_value","TrackJS","log","fresh","track","getMessage","activeSymbols","buy","proposal_id","price","cashier","verification_code","get_account_status","get_self_exclusion","getSettings","newAccountVirtual","client_password","new_account_virtual","oauthApps","oauth_apps","profitTable","offset","date_boundaries","description","proposalOpenContract","residenceList","residence_list","sell","sellExpired","sell_expired","request_object","force_request","verifyEmail","verify_email","cb","is_forced","subscribeProposal","req","subscribeProposalOpenContract","subscribeProposalOpenContractOnBuy","buy_request","subscribeTicks","subscribeTicksHistory","subscribeTransaction","trackJSNetworkMonitor","Proxy","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","ownerDocument","createFromInputFallback","_d","NaN","epoch","isValid","isUTC","today_moment","second","convertToUnix","toGMTFormat","diffInMonths","asDays","formatted_str","time_str","isHourValid","isMinuteValid","num_of_months","date_1","date_2","miliseconds","str_format","date_time_epochToMoment","date_time_toMoment","date_time_toGMTFormat","date_time_getDiffDuration","date_time_formatDuration","date_time_isDateValid","date_time_minDate","date_time_formatMiliseconds","isMobile","ErrorBoundary","componentDidCatch","hasError","Errors","is_slow_loading","AppContents","is_app_blurred","is_dark_mode","is_fully_blurred","slow_loading_status","loading","app-contents--show-positions-drawer","app-contents--contract-mode","app-contents--is-blurred","tt_react_custom_scrollbars_lib","addNotificationBar","pwa_prompt_event","setPWAPromptEvent","gmt_time","NetworkStatus","network-status__circle--offline","network-status__circle--online","network-status__circle--blinker","ToggleFullScreen","toggle_fullscreen_classCallCheck","toggle_fullscreen_possibleConstructorReturn","toggle_fullscreen_getPrototypeOf","onFullScreen","is_full_screen","fullscreen_map","toggleFullScreen","to_exit","fncToCall","fnc_enter","fnc_exit","full_screen_icon_class","ic-fullscreen--active","TogglePositions","positions_count","toggle_positions_class","ic-positions--active","ic-positions--has-count","data-count","ToggleSettings","is_settings_visible","toggleSettings","toggle_settings_class","ic-settings--active","modal","Footer","active_positions","is_route_blurred","is_settings_modal_on","show_positions_toggle","toggleSettingsModal","footer--is-blurred","toggle_positions_TogglePositions","Containers_server_time","toggle_settings_ToggleSettings","toggle_fullscreen_ToggleFullScreen","MenuLinks","login_only","Components_Routes","link_to","logo","image","LoginButton","SignupButton","UpgradeButton","AccountActions","account_actions_classCallCheck","account_actions_possibleConstructorReturn","account_actions_getPrototypeOf","account_actions_inherits","nextProps","is_acc_switcher_on","onClickUpgrade","toggleAccountsDialog","is_upgrade_enabled","is_dialog_on","toggleDialog","upgrade_button_UpgradeButton","login_button_LoginButton","signup_button_SignupButton","active_cashier_tab","is_cashier_modal_on","header_links","Header","header--is-blurred","menu_links_MenuLinks","account_actions_AccountActions","is_accounts_switcher_on","is_initial_idle","is_denial_of_service_modal_visible","is_market_unavailable_visible","is_services_error_visible","is_unsupported_contract_modal_visible","resetPreviousSymbol","clearPurchaseInfo","resetPurchase","requestProposal","services_error","switchAccount","toggleServicesErrorModal","virtual_account_loginid","denialOfServiceOnConfirm","unsupportedContractOnClose","onConfirm","onCancel","Routes","NetworkMonitor","is_online","setNetworkStatus","OutdatedBrowser","showError","opening_tag","closing_tag","interpolation","escapeValue","$buoop","vs","f","api","noclose","reminder","onshow","nomessage","insecure","pre_build_dvrs","client_notifications","self_exclusion","exclusion_end","authenticate","cashier_locked","withdrawal_locked","mt5_withdrawal_locked","document_needs_action","unwelcome","mf_retail","financial_limit","risk","tax","tnc","required_fields","handleClientNotifications","addNotification","_response$get_account","prompt_client_to_authenticate","_getStatusValidations","validations","account_status","document_under_review","ukrts_max_turnover_limit_not_set","professional","is_mf_retail","landing_company_shortcode","checkAccountStatus","necessary_withdrawal_fields","necessary_signup_fields","required_settings_fields","getRequiredFields","hasMissingRequiredField","validRequired","validEmail","validPassword","validLetterSymbol","validGeneral","validAddress","validPostCode","validPhone","validRegular","regex","validEmailToken","validTaxID","validBarrier","validCompare","validNotEqual","validMin","validLength","validNumber","opts","allow_empty","is_ok","decimal_count","format_money","isMoreThanMax","getPreBuildDVRs","address","permitted_characters","compare","general","letter_symbol","not_equal","value_one","value_two","password","postcode","regular","signup_token","tax_id","errors_classCallCheck","errors","attribute","Validator","rules","validator_classCallCheck","error_count","rule","is_rule_string","rule_object","validator","template","name1","name2","ruleObject","getRuleObject","condition","addFailure","check","BaseStore","bound","base_store_classCallCheck","_initializerDefineProperty","_descriptor","_descriptor2","switchAccountDisposer","switch_account_listener","_descriptor3","waitFor","base_store_asyncToGenerator","local_storage_properties","session_storage_properties","validation_rules","store_name","writable","setValidationRules","setupReactionForLocalStorage","setupReactionForSessionStorage","retrieveFromStorage","properties","snapshot","reaction","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","getSnapshot","_this3","propertyName","_this4","_this5","addRule","_this6","intercept","change","validateProperty","newValue","_this7","trigger","inputs","isPassed","setValidationErrorMessages","_this8","listener","_this9","when","switch_broadcast","_callee2","_context2","switchEndSignal","onSwitchAccount","t0","disposeSwitchAccount","reactions","act","partial_fetch_time","freeze","observable","ClientStore","client_store_classCallCheck","client_store_initializerDefineProperty","client_store_getPrototypeOf","client_store_descriptor","client_store_assertThisInitialized","client_store_descriptor2","client_store_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","fiat","crypto","isCrypto","currency_defineProperty","selectCurrency","session_start","upgrade_info","user_id","removeAllNotifications","setSwitched","setUserLogin","authorize_response","setLoginId","setAccounts","registerReactions","switched","getAccount","all_loginids","clearContract","clearTable","switchAccountHandler","setLoginFlag","resetLocalStorageValues","getToken","broadcastAccountChange","selected_currency","should_refresh_active_symbols","client_store_asyncToGenerator","_callee3","_context3","resetErrorServices","refresh","debouncedProposal","obj_params","active_loginid","map_names","is_allowed_real","acct1","param_value","token1","runInAction","storeClientAccounts","_this10","isDisabled","getAccountInfo","default_currency","valid_login_ids_regex","_this11","_this12","acc","computed","CommonStore","is_socket_opened","is_network_online","common_store_objectSpread","deposit_url","withdraw_url","GTMStore","gtm_store_classCallCheck","gtm_store_getPrototypeOf","gtm_store_descriptor","gtm_store_assertThisInitialized","accountSwitcherListener","gtm_store_asyncToGenerator","is_gtm_applicable","gtm_store_objectSpread","common_variables","contract_data","barrier1","barrier2","chart","toolbar_position","is_chart_layout_default","chart_asset_info","is_chart_asset_info_visible","event_name","userId","CashierStore","cashier_store_classCallCheck","cashier_store_initializerDefineProperty","cashier_store_getPrototypeOf","cashier_store_descriptor","cashier_store_assertThisInitialized","cashier_store_descriptor2","cashier_store_descriptor3","cashier_store_descriptor4","cashier_store_descriptor5","cashier_store_descriptor6","cashier_store_descriptor7","containers","deposit","withdraw","default_cashier_height","timeout_cashier_url","timeout_verification_button","setErrorMessage","setContainerHeight","setLoading","container_urls","is_session_timeout","checkIframeLoaded","setSessionTimeout","setContainerUrl","response_cashier","clearVerification","setTimeoutCashierUrl","onIframeLoaded","clearTimeoutCashierUrl","container_height","is_session_time_out","is_verification_button_clicked","is_verification_email_sent","clearTimeoutVerification","setVerificationButtonClicked","response_verify_email","setVerificationEmailSent","setTimeoutVerification","cashier_store_asyncToGenerator","_callee6","_context6","_x5","CONTRACT_SHADES","CALL","PUT","CALLE","PUTE","EXPIRYRANGE","EXPIRYMISS","RANGE","UPORDOWN","ONETOUCH","NOTOUCH","ASIANU","ASIAND","DEFAULT_SHADES","1","2","BARRIER_COLORS","BARRIER_LINE_STYLES","DASHED","DOTTED","SOLID","createChartBarrier","SmartChartStore","removeBarriers","createBarriers","line_style","not_draggable","updateBarrierShade","MarkerLine","marker_config","LINE_END","content_config","chart-marker-line__icon--won","chart-marker-line__icon--lost","LINE_START","MarkerSpot","spot_count","MarkerSpotLabel","marker_spot_label_classCallCheck","marker_spot_label_possibleConstructorReturn","marker_spot_label_getPrototypeOf","handleHoverToggle","show_label","has_hover_toggle","marker_spot","Markers_marker_spot","spot_className","align_label","spot_epoch","chart-spot-label__value-container--won","chart-spot-label__value-container--lost","spot_value","MARKER_TYPES_CONFIG","ContentComponent","LINE_PURCHASE","SPOT_ENTRY","SPOT_SELL","SPOT_EXIT","SPOT_MIDDLE","createMarkerConfig","marker_type","extend","getSpotCount","createMarkerSpotEntry","entry_tick_time","entry_tick","entry_tick_display_value","createMarkerSpotExit","tick","is_user_sold","exit_tick","exit_tick_display_value","createMarkerSpotMiddle","spot","tick_display_value","createChartMarkers","addTickMarker","addMarker","marker_spots","marker_lines","chart_markers_defineProperty","_marker_spots","_marker_lines","chart_markers_asyncToGenerator","marker_obj","createMarker","markers","_x2","_x3","addLabelAlignment","prev_tick","is_entry_spot","is_middle_spot","is_exit_spot","_x4","contractSold","sold_for","ContractReplayStore","is_ongoing_contract","prev_indicative","handleSubscribeProposalOpenContract","proposal_open_contract_request","forgetProposalOpenContract","setContractMode","populateConfig","indicative_status","sell_info","cleanupContractChartView","setIsChartLoading","new_indicative","updateMargin","handleDigits","extendObservable","getDigitInfo","handleSell","contract_replay_store_objectSpread","ContractTradeStore","is_from_positions","_this$contract_info","handleChartType","setChartView","is_one_tick_contract","setStaticChart","setContractStart","setContractEnd","longcode","onMountBuy","updateProposal","switchToContractMode","applySavedTradeChartLayout","drawChart","updateChartType","updateGranularity","showUnavailableLocationError","clients_country_code","clients_country_text","clients_country","obj_country","isMarketClosed","symbol_info","exchange_is_open","pickDefaultSymbol","getFavoriteOpenSymbol","getFirstOpenSymbol","chart_favorites","client_favorite_list","client_fav_symbol","client_first_open_symbol","isSymbolOpen","first_open_symbol","submarket","getSymbolDisplayName","formatPortfolioPosition","portfolio_pos","details","reference","getUnsupportedContracts","PortfolioStore","getPositionById","createTransformer","pos","pos1","pos2","res","new_pos","pushNewPosition","proposalOpenContractHandler","getPositionIndexById","populateResultDetails","proposal","entry_spot","portfolio_store_objectSpread","contract_idx","portfolio_store_asyncToGenerator","initializePortfolio","portfolioHandler","transactionHandler","contract_response","current_spot","current_spot_time","getDateTo","date_to","today","getDateFrom","should_load_partially","date_from","shouldSendDateFrom","getDateBoundaries","format_request_objectSpread","formatProfitTableTransactions","format_string","should_exclude_currency","format_response_objectSpread","delay_on_scroll_time","ProfitTableStore","fetchOnScroll","debounce","fetchNextBatch","has_loaded_all","shouldFetchNextBatch","profitTableResponseHandler","formatted_transactions","profit_store_toConsumableArray","_event$target","left_to_scroll","scrollHeight","assertHasValidCache","client_loginid","clearDateFilter","date_values","previous","barriersObjectToArray","reference_array","js_object","ChartBarrierStore","chart_barrier_store_dec","chart_barrier_store_dec2","chart_barrier_store_dec3","chart_barrier_store_dec4","chart_barrier_store_descriptor","chart_barrier_store_applyDecoratedDescriptor","chart_barrier_store_class","onChartBarrierChange","chart_barrier_store_classCallCheck","chart_barrier_store_initializerDefineProperty","chart_barrier_store_descriptor2","chart_barrier_store_descriptor3","chart_barrier_store_descriptor4","chart_barrier_store_descriptor5","chart_barrier_store_descriptor6","chart_barrier_store_descriptor7","chart_barrier_store_descriptor8","lineStyle","onBarrierChange","high","low","shade","default_shade","has_barrier","relative","draggable","hidePriceLines","isFromChart","should_display","updateBarriers","chart_barrier_store_toConsumableArray","is_relative","barriers_list","barriersToString","configurable","initializer","getOwnPropertyDescriptor","ChartMarkerStore","chart_marker_store_descriptor","chart_marker_store_applyDecoratedDescriptor","chart_marker_store_class","chart_marker_store_classCallCheck","chart_marker_store_initializerDefineProperty","chart_marker_store_descriptor2","barriers_empty_array","markers_empty_array","trade_chart_symbol","trade_chart_granularity","trade_chart_type","wsSubscribe","smart_chart_store_objectSpread","wsForget","wsForgetStream","wsSendRequest","saveAndClearTradeChartLayout","removeMarkers","resetScrollToLeft","resetPurchaseStates","is_title_enabled","updateEpochScrollToOffset","updateEpochScrollToValue","updateBarrierColor","should_export_layout","should_import_layout","trade_chart_layout","should_clear_chart","isDone","layout","smart_chart_store_defineProperty","has_differing","barriers_array","next_barrier","markers_array","marker","next_marker","assetInformation","countdown","is_chart_countdown_visible","isHighestLowestMarkerEnabled","current_language","barrier_config","main_barrier","isBarrierSupported","StatementStore","statementHandler","balance_after","action_type","refid","desc","app_id","formatStatementTransaction","statement_store_toConsumableArray","processPurchase","onChangeSymbolAsync","getValidationRules","start_moment_clone","_value$split2","_value$split4","onChangeContractTypeList","onChangeContractType","onChangeExpiry","onChangeStartDate","obj_contract_start_type","obj_sessions","obj_start_time","obj_duration_units_list","obj_duration_unit","obj_expiry_type","obj_expiry_date","obj_market_open_times","obj_market_close_times","obj_expiry_time","obj_duration_min_max","start_date_objectSpread","processTradeParams","new_state","functions","getMethodsList","extendOrReplace","t1","t2","ContractTypeHelper","process_toConsumableArray","StartDate","source","new_values","map_error_field","getProposalErrorField","error_field","error_id","el_error","getElementsByName","createProposalRequestForContract","type_of_contract","obj_expiry","proposal_objectSpread","TradeStore","trade_store_classCallCheck","trade_store_getPrototypeOf","trade_store_initializerDefineProperty","trade_store_descriptor","trade_store_assertThisInitialized","trade_store_descriptor2","trade_store_descriptor3","trade_store_descriptor4","trade_store_descriptor5","trade_store_descriptor6","trade_store_descriptor7","trade_store_descriptor8","trade_store_descriptor9","trade_store_descriptor10","trade_store_descriptor11","trade_store_descriptor12","trade_store_descriptor13","trade_store_descriptor14","trade_store_descriptor15","trade_store_descriptor16","trade_store_descriptor17","trade_store_descriptor18","trade_store_descriptor19","trade_store_descriptor20","trade_store_descriptor21","trade_store_descriptor22","trade_store_descriptor23","_descriptor24","_descriptor25","_descriptor26","_descriptor27","_descriptor28","_descriptor29","_descriptor30","_descriptor31","_descriptor32","_descriptor33","_descriptor34","_descriptor35","_descriptor36","_descriptor37","proposal_requests","initial_barriers","is_initial_barrier_applied","_descriptor38","_descriptor39","_descriptor40","disablePurchaseButtons","el_purchase_value","el_purchase_buttons","changeDurationValidationRules","onAllowEqualsChange","is_symbol_in_active_symbols","processNewValuesAsync","setAppLoading","trade_store_objectSpread","setActiveSymbols","trade_store_asyncToGenerator","setDefaultSymbol","setContractTypes","validateAllProperties","trade_store_defineProperty","previous_symbol","setMarketStatus","is_over","is_purchase_enabled","_response$buy","drawContractStartTime","openPositionsDrawer","pushPurchaseData","obj_new_values","is_changed_by_user","obj_old_values","prev_currency","setPreviousSymbol","requests","new_req","current_req","createProposalRequests","setIsDigitContract","onProposalResponse","prev_proposal_info","obj_prev_contract_basis","ask_price","contract_basis","getProposalInfo","proposal_response","_proposal_response$ec","setChartBarrier","duration_options","_callee7","_context7","onLoadingMount","prepareTradeStore","is_trade_component_mounted","first_timeout","loading_message","secondary_message","setSlowLoading","second_timeout","loading_interval","smart_chart_store","trade_chart_chart_type","restoreTradeChart","pushState","_callee10","_context10","_callee9","_context9","_this13","_this14","_this15","ModulesStore","Modules_classCallCheck","contract_replay","UIStore","ui_store_classCallCheck","ui_store_getPrototypeOf","ui_store_initializerDefineProperty","ui_store_descriptor","ui_store_assertThisInitialized","ui_store_descriptor2","ui_store_descriptor3","ui_store_descriptor4","ui_store_descriptor5","ui_store_descriptor6","ui_store_descriptor7","ui_store_descriptor8","ui_store_descriptor9","ui_store_descriptor10","ui_store_descriptor11","ui_store_descriptor12","ui_store_descriptor13","ui_store_descriptor14","ui_store_descriptor15","ui_store_descriptor16","ui_store_descriptor17","ui_store_descriptor18","ui_store_descriptor19","ui_store_descriptor20","ui_store_descriptor21","ui_store_descriptor22","ui_store_descriptor23","ui_store_descriptor24","ui_store_descriptor25","ui_store_descriptor26","ui_store_descriptor27","ui_store_descriptor28","ui_store_descriptor29","ui_store_descriptor30","ui_store_descriptor31","ui_store_descriptor32","ui_store_descriptor33","ui_store_descriptor34","ui_store_descriptor35","ui_store_descriptor36","handleResize","autorun","screen_width","innerWidth","tab","is_reports_visible","is_main_drawer_on","is_notifications_drawer_on","notification","notification_messages","ui_store_toConsumableArray","push_notifications","state_change","is_account_signup_modal_visible","RootStore","Stores_classCallCheck","configure","enforceActions","initStore","hidden","setStorageEvents","isTouchDevice","App","base","basename","is_tablet","error_boundary","app_contents","Routes_routes","Modals_modals","app_App","path_name","sw_url","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","FadeIn","posed","span","transition","PopoverBubble","calculatePosition","target_rectangle","_this$props$margin","bottom","right","popover_bubble","react_pose_es","initialPose","data-popover-pos","popover__bubble--error","popover_classCallCheck","popover_possibleConstructorReturn","popover_getPrototypeOf","toggleOpen","Boolean","target_reference","toggleClose","disable_target_icon","icon_class_name","Popover_popover_bubble","Fieldset","fieldset_header_class","fieldset_info_class","loginUrl","domain_app_ids","server_url","signup_device","date_first_contact","marketing_queries","default_binary_url","initOneAll","provider","el_button","brand","_common_base_server_time__WEBPACK_IMPORTED_MODULE_0__","_common_base_server_time__WEBPACK_IMPORTED_MODULE_0___default","Utils_Date__WEBPACK_IMPORTED_MODULE_1__","forward_starting_config","forward_starting_options","duplicated_option","opt","current_session","isBeforeDate","should_only_check_hour","now_moment","session","deriv.app","all_domains","config_app_id","is_real","server","_getLastTickFromTickS","createDigitInfo","spot_time","digit","icons","IconArrowBold","IconArrow","IconBack","IconCalendarToday","IconCalendar","IconChevronDoubleLeft","IconChevronDoubleRight","IconChevronLeft","IconChevronRight","IconClear","IconClock","IconClose","IconCountryFlag","IconDanger","IconDeposit","IconDepositSmall","IconExclamation","IconFlag","IconInfoBlue","IconInfoOutline","IconInformation","IconMinimize","IconMinus","IconPlus","IconQuestion","IconRedDot","IconSuccess","IconWarning","IconWip","IconWithdrawal","IconWithdrawalSmall","ContractIconClose","IconEndTime","ContractIconFlag","IconStartTime","IconTick","IconAuthenticateWithdrawals","IconEmailSent","ModalIconClose","IconMaximize","IconPositions","IconSettings","IconAccountsCurrency","IconLogout","IconBell","IconCashier","IconDeriv","IconHamburger","IconPortfolio","IconReports","IconTrade","IconDemo","IconOpenPositions","IconProfitTable","IconStatement","IconCalendarForwardToday","IconCharts","IconLanguage","IconPurchase","IconTheme","IconBuy","IconPayout","IconSell","IconWallet","IconBarrierDown","IconBarrierUp","IconTradeCategory","TradeCategoriesGIF","TradeCategories","IconTradeType","IconLock","IconPriceMove","classNameRect","IconLazy","FRXAUDCAD","FRXAUDCHF","FRXAUDJPY","FRXAUDNZD","FRXAUDPLN","FRXAUDUSD","FRXBROUSD","FRXEURAUD","FRXEURCAD","FRXEURCHF","FRXEURGBP","FRXEURJPY","FRXEURNZD","FRXEURUSD","FRXGBPAUD","FRXGBPCAD","FRXGBPCHF","FRXGBPJPY","FRXGBPNOK","FRXGBPUSD","FRXNZDJPY","FRXNZDUSD","FRXUSDCAD","FRXUSDCHF","FRXUSDJPY","FRXUSDNOK","FRXUSDPLN","FRXUSDSEK","FRXXAGUSD","FRXXAUUSD","FRXXPDUSD","FRXXPTUSD","OTC_AEX","OTC_AS51","OTC_DJI","OTC_FCHI","OTC_FTSE","OTC_GDAXI","OTC_HSI","OTC_IBEX35","OTC_N225","OTC_NDX","OTC_SPC","OTC_SSMI","OTC_SX5E","R_10","R_25","R_50","R_75","R_100","RDBEAR","RDBULL","WLDAUD","WLDEUR","WLDGBP","WLDUSD","RESETCALL","RESETPUT","TICKHIGH","TICKLOW","LBFLOATCALL","LBFLOATPUT","LBHIGHLOW","CALLSPREAD","PUTSPREAD","RUNHIGH","RUNLOW","getSupportedContracts","_common_base_currency_base__WEBPACK_IMPORTED_MODULE_3__","Money","_ref$currency","has_sign","_ref$is_formatted","is_formatted","abs_value","final_amount","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","Mondays","Tuesdays","Wednesdays","Thursdays","Fridays","Saturdays","Sundays","isEqualArray","isEqualObject","arr1","arr2","obj1","obj2","to_replace","tag_name","attributes","attr","textContent","UILoader","classNameBlock","block_class","loading_class","viewBox","strokeWidth","strokeMiterlimit","Utils_Date__WEBPACK_IMPORTED_MODULE_0__","_logout__WEBPACK_IMPORTED_MODULE_0__","_socket_general__WEBPACK_IMPORTED_MODULE_1__","_ws_methods__WEBPACK_IMPORTED_MODULE_2__","react_router__WEBPACK_IMPORTED_MODULE_0__","Constants_routes__WEBPACK_IMPORTED_MODULE_1__","routes_config","route_info","match_path","matchPath","route_path","getPath"],"mappings":"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","file":"js/main.e91e03246430df2be1c4.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\tvar prefetchChunks = data[3] || [];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\tdeferredPrefetch.push.apply(deferredPrefetch, prefetchChunks);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\tif(deferredModules.length === 0) {\n \t\t\t// chunk prefetching for javascript\n \t\t\tdeferredPrefetch.forEach(function(chunkId) {\n \t\t\t\tif(installedChunks[chunkId] === undefined) {\n \t\t\t\t\tinstalledChunks[chunkId] = null;\n \t\t\t\t\tvar link = document.createElement('link');\n\n \t\t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\t\tlink.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t\t}\n \t\t\t\t\tlink.rel = \"prefetch\";\n \t\t\t\t\tlink.as = \"script\";\n \t\t\t\t\tlink.href = jsonpScriptSrc(chunkId);\n \t\t\t\t\tdocument.head.appendChild(link);\n \t\t\t\t}\n \t\t\t});\n \t\t\tdeferredPrefetch.length = 0;\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"main\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"main\": 0\n \t};\n\n \tvar deferredModules = [], deferredPrefetch = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"404\":\"404\",\"DenialOfServiceModal\":\"DenialOfServiceModal\",\"MarketUnavailableModal\":\"MarketUnavailableModal\",\"ServicesErrorModal\":\"ServicesErrorModal\",\"UnsupportedContractModal\":\"UnsupportedContractModal\",\"account-info\":\"account-info\",\"contract\":\"contract\",\"digits\":\"digits\",\"info-box\":\"info-box\",\"notification-messages\":\"notification-messages\",\"push-notification\":\"push-notification\",\"reports\":\"reports\",\"screen-small\":\"screen-small\",\"settings-chart\":\"settings-chart\",\"settings-language\":\"settings-language\",\"settings-theme\":\"settings-theme\",\"toggle-cashier\":\"toggle-cashier\",\"toggle-menu-drawer\":\"toggle-menu-drawer\",\"vendors~open_position~7c650be5\":\"vendors~open_position~7c650be5\",\"default~open_position~1833eefb\":\"default~open_position~1833eefb\",\"open_positions\":\"open_positions\",\"profit_table\":\"profit_table\",\"statement\":\"statement\",\"vendors~smart_chart\":\"vendors~smart_chart\",\"smart_chart\":\"smart_chart\",\"work-in-progress\":\"work-in-progress\",\"wallet-information\":\"wallet-information\",\"two-month-picker\":\"two-month-picker\"}[chunkId]||chunkId) + \".\" + \"e91e03246430df2be1c4\" + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"digits\":1,\"notification-messages\":1,\"reports\":1,\"screen-small\":1,\"work-in-progress\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + chunkId + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \tvar startupResult = (function() {\n \t// add entry module to deferred list\n \tdeferredModules.push([508,\"vendors~main\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n \t})();\n\n \twebpackJsonpCallback([[], {}, 0, [\"digits\",\"info-box\",\"settings-chart\",\"settings-language\",\"settings-theme\",\"toggle-cashier\"]]);\n \treturn startupResult;\n","const ClientBase       = require('./client_base');\nconst SocketCache      = require('./socket_cache');\nconst getLanguage      = require('../language').get;\nconst State            = require('../storage').State;\nconst cloneObject      = require('../utility').cloneObject;\nconst getPropertyValue = require('../utility').getPropertyValue;\nconst isEmptyObject    = require('../utility').isEmptyObject;\nconst PromiseClass     = require('../utility').PromiseClass;\nconst getAppId         = require('../../config').getAppId;\nconst getSocketURL     = require('../../config').getSocketURL;\n\n/*\n * An abstraction layer over native javascript WebSocket,\n * which provides additional functionality like\n * reopen the closed connection and process the buffered requests\n */\nconst BinarySocketBase = (() => {\n    let binary_socket;\n\n    let config               = {};\n    let buffered_sends       = [];\n    let req_id               = 0;\n    let wrong_app_id         = 0;\n    let is_available         = true;\n    let is_disconnect_called = false;\n    let is_connected_before  = false;\n\n    const socket_url = `${getSocketURL()}?app_id=${getAppId()}&l=${getLanguage()}`;\n    const timeouts   = {};\n    const promises   = {};\n\n    const no_duplicate_requests = [\n        'authorize',\n        'get_settings',\n        'residence_list',\n        'landing_company',\n        'payout_currencies',\n        'asset_index',\n        'active_symbols',\n    ];\n\n    const sent_requests = {\n        items : [],\n        clear : () => { sent_requests.items = []; },\n        has   : msg_type => sent_requests.items.indexOf(msg_type) >= 0,\n        add   : (msg_type) => { if (!sent_requests.has(msg_type)) sent_requests.items.push(msg_type); },\n        remove: (msg_type) => {\n            if (sent_requests.has(msg_type)) sent_requests.items.splice(sent_requests.items.indexOf(msg_type, 1));\n        },\n    };\n\n    const waiting_list = {\n        items: {},\n        add  : (msg_type, promise_obj) => {\n            if (!waiting_list.items[msg_type]) {\n                waiting_list.items[msg_type] = [];\n            }\n            waiting_list.items[msg_type].push(promise_obj);\n        },\n        resolve: (response) => {\n            const msg_type      = response.msg_type;\n            const this_promises = waiting_list.items[msg_type];\n            if (this_promises && this_promises.length) {\n                this_promises.forEach((pr) => {\n                    if (!waiting_list.another_exists(pr, msg_type)) {\n                        pr.resolve(response);\n                    }\n                });\n                waiting_list.items[msg_type] = [];\n            }\n        },\n        another_exists: (pr, msg_type) => (\n            Object.keys(waiting_list.items)\n                .some(type => (\n                    type !== msg_type &&\n                    waiting_list.items[type].indexOf(pr) !== -1\n                ))\n        ),\n    };\n\n    const clearTimeouts = () => {\n        Object.keys(timeouts).forEach((key) => {\n            clearTimeout(timeouts[key]);\n            delete timeouts[key];\n        });\n    };\n\n    const isReady = () => hasReadyState(1);\n\n    const isClose = () => !binary_socket || hasReadyState(2, 3);\n\n    const hasReadyState = (...states) => binary_socket && states.some(s => binary_socket.readyState === s);\n\n    const sendBufferedRequests = () => {\n        while (buffered_sends.length > 0 && is_available) {\n            const req_obj = buffered_sends.shift();\n            send(req_obj.request, req_obj.options);\n        }\n    };\n\n    const wait = (...msg_types) => {\n        const promise_obj = new PromiseClass();\n        let is_resolved   = true;\n        msg_types.forEach((msg_type) => {\n            const last_response = State.get(['response', msg_type]);\n            if (!last_response) {\n                if (msg_type !== 'authorize' || ClientBase.isLoggedIn()) {\n                    waiting_list.add(msg_type, promise_obj);\n                    is_resolved = false;\n                }\n            } else if (msg_types.length === 1) {\n                promise_obj.resolve(last_response);\n            }\n        });\n        if (is_resolved) {\n            promise_obj.resolve();\n        }\n        return promise_obj.promise;\n    };\n\n    /**\n     * @param {Object} data: request object\n     * @param {Object} options:\n     *      forced  : {boolean}  sends the request regardless the same msg_type has been sent before\n     *      msg_type: {string}   specify the type of request call\n     *      callback: {function} to call on response of streaming requests\n     */\n    const send = function (data, options = {}) {\n        const promise_obj = options.promise || new PromiseClass();\n        const has_callback = typeof options.callback === 'function';\n\n        if (!data || isEmptyObject(data)) return promise_obj.promise;\n\n        const msg_type = options.msg_type || no_duplicate_requests.find(c => c in data);\n\n        // Fetch from cache\n        if (!options.forced) {\n            const response = SocketCache.get(data, msg_type);\n            if (response) {\n                State.set(['response', msg_type], cloneObject(response));\n                if (isReady() && is_available && !options.skip_cache_update && !has_callback) { // make the request to keep the cache updated\n                    binary_socket.send(JSON.stringify(data), { forced: true });\n                } else if (+data.time !== 1) { // Do not buffer all time requests\n                    buffered_sends.push({\n                        request: data,\n                        options: Object.assign(options, { promise: promise_obj, forced: true }),\n                    });\n                }\n                promise_obj.resolve(response);\n                if (has_callback) {\n                    options.callback(response);\n                } else {\n                    return promise_obj.promise;\n                }\n            }\n        }\n\n        // Fetch from state\n        if (!options.forced && msg_type && no_duplicate_requests.indexOf(msg_type) !== -1) {\n            const last_response = State.get(['response', msg_type]);\n            if (last_response) {\n                promise_obj.resolve(last_response);\n                return promise_obj.promise;\n            } else if (sent_requests.has(msg_type)) {\n                return wait(msg_type).then((response) => {\n                    promise_obj.resolve(response);\n                    return promise_obj.promise;\n                });\n            }\n        }\n\n        if (!data.req_id) {\n            data.req_id = ++req_id;\n        }\n        promises[data.req_id] = {\n            callback: (response) => {\n                if (has_callback) {\n                    options.callback(response);\n                } else {\n                    promise_obj.resolve(response);\n                }\n            },\n            subscribe: !!data.subscribe,\n        };\n\n        if (isReady() && is_available && config.isOnline()) {\n            is_disconnect_called = false;\n            if (!getPropertyValue(data, 'passthrough') && !getPropertyValue(data, 'verify_email')) {\n                data.passthrough = {};\n            }\n\n            binary_socket.send(JSON.stringify(data));\n            config.wsEvent('send');\n            if (msg_type && !sent_requests.has(msg_type)) {\n                sent_requests.add(msg_type);\n            }\n        } else if (+data.time !== 1) { // Do not buffer all time requests\n            buffered_sends.push({ request: data, options: Object.assign(options, { promise: promise_obj }) });\n        }\n\n        return promise_obj.promise;\n    };\n\n    const init = (options) => {\n        if (wrong_app_id === getAppId()) {\n            return;\n        }\n        if (typeof options === 'object' && config !== options) {\n            config         = options;\n            buffered_sends = [];\n        }\n        clearTimeouts();\n        config.wsEvent('init');\n\n        if (isClose()) {\n            binary_socket = new WebSocket(socket_url);\n            State.set('response', {});\n        }\n\n        binary_socket.onopen = () => {\n            config.wsEvent('open');\n            if (ClientBase.isLoggedIn()) {\n                send({ authorize: ClientBase.get('token') }, { forced: true });\n            } else {\n                sendBufferedRequests();\n            }\n\n            if (typeof config.onOpen === 'function') {\n                config.onOpen(isReady());\n            }\n\n            if (typeof config.onReconnect === 'function' && is_connected_before) {\n                config.onReconnect();\n            }\n\n            if (!is_connected_before) {\n                is_connected_before = true;\n            }\n        };\n\n        binary_socket.onmessage = (msg) => {\n            config.wsEvent('message');\n            const response = msg.data ? JSON.parse(msg.data) : undefined;\n            if (response) {\n                SocketCache.set(response);\n                const msg_type = response.msg_type;\n\n                // store in State\n                if (!getPropertyValue(response, ['echo_req', 'subscribe']) || /balance|website_status/.test(msg_type)) {\n                    State.set(['response', msg_type], cloneObject(response));\n                }\n                // resolve the send promise\n                const this_req_id = response.req_id;\n                const pr          = this_req_id ? promises[this_req_id] : null;\n                if (pr && typeof pr.callback === 'function') {\n                    pr.callback(response);\n                    if (!pr.subscribe) {\n                        delete promises[this_req_id];\n                    }\n                }\n                // resolve the wait promise\n                waiting_list.resolve(response);\n\n                if (getPropertyValue(response, ['error', 'code']) === 'InvalidAppID') {\n                    wrong_app_id = getAppId();\n                }\n\n                if (typeof config.onMessage === 'function') {\n                    config.onMessage(response);\n                }\n            }\n        };\n\n        binary_socket.onclose = () => {\n            sent_requests.clear();\n            clearTimeouts();\n            config.wsEvent('close');\n\n            if (wrong_app_id !== getAppId() && typeof config.onDisconnect === 'function' && !is_disconnect_called) {\n                config.onDisconnect();\n                is_disconnect_called = true;\n            }\n        };\n    };\n\n    const clear = (msg_type) => {\n        buffered_sends = [];\n        if (msg_type) {\n            State.set(['response', msg_type], undefined);\n            sent_requests.remove(msg_type);\n        }\n    };\n\n    const availability = (status) => {\n        if (typeof status !== 'undefined') {\n            is_available = !!status;\n        }\n        return is_available;\n    };\n\n    return {\n        init,\n        wait,\n        send,\n        clear,\n        clearTimeouts,\n        availability,\n        hasReadyState,\n        sendBuffered      : sendBufferedRequests,\n        get               : () => binary_socket,\n        setOnDisconnect   : (onDisconnect) => { config.onDisconnect = onDisconnect; },\n        setOnReconnect    : (onReconnect) => { config.onReconnect = onReconnect; },\n        removeOnReconnect : () => { delete config.onReconnect; },\n        removeOnDisconnect: () => { delete config.onDisconnect; },\n    };\n})();\n\nmodule.exports = BinarySocketBase;\n","const moment           = require('moment');\nconst getLanguage      = require('../language').get;\nconst LocalStore       = require('../storage').LocalStore;\nconst getPropertyValue = require('../utility').getPropertyValue;\nconst getStaticHash    = require('../utility').getStaticHash;\nconst isEmptyObject    = require('../utility').isEmptyObject;\n\n/*\n * Caches WS responses to reduce delay time and number of requests\n * Stores data in LocalStore which is the first one available in: localStorage, sessionStorage, InScriptStore\n *\n * 1. It caches only the response of those calls which determined in `config`\n * 2. It doesn't cache responses which returned error\n * 3. The value is requested by BinarySocket,\n *    if this returns a value according to the logic here, socket code take it as response\n *    but also triggers an async `send` request, to keep the cache updated for next time\n * 4. Uses client's time to set and check for expiry, as the expire durations are not so long to need a more precise one\n *    (And doesn't worth to wait for the response of time call)\n * 5. Some responses should be cached by a particular value from request (e.g. contracts_for_frxAUDJPY)\n *    so there can be more than one value for a particular call\n * 6. Clears the whole cache regardless their expire time on the following events:\n *    6.1. Client changes: login / logout / switch loginid\n *    6.2. Detect a new release (static hash changed)\n */\nconst SocketCache = (() => {\n    // keys are msg_type\n    // expire: how long to keep the value (in minutes)\n    // map_to: to store different responses of the same key, should be array of:\n    //     string  : the property value from echo_req\n    //     function: return value of the function\n    const config = {\n        payout_currencies     : { expire: 120 },\n        proposal_open_contract: { expire: 10,  map_to: ['contract_id'] },\n        active_symbols        : { expire: 10,  map_to: ['product_type', 'landing_company', getLanguage] },\n        contracts_for         : { expire: 10,  map_to: ['contracts_for', 'product_type', 'currency'] },\n        exchange_rates        : { expire: 60,  map_to: ['base_currency'] },\n        ticks_history         : { expire: 10,  map_to: ['ticks_history', 'granularity', 'start', 'end', 'style'] },\n        trading_times         : { expire: 120, map_to: ['trading_times'] },\n        // TODO: Enable statement and profit table caching once we have UI design for handling\n        // transitions between cached table and newly added data to table\n        // statement             : { expire: 10,   map_to: ['limit', 'offset'] },\n        // profit_table          : { expire: 10,   map_to: ['date_from', 'limit', 'offset'] },\n    };\n\n    const storage_key = 'ws_cache';\n\n    let data_obj = {};\n\n    const msg_type_mapping = {\n        history: 'ticks_history',\n        candles: 'ticks_history',\n    };\n\n    const set = (response) => {\n        const msg_type = msg_type_mapping[response.msg_type] || response.msg_type;\n\n        // check if response has subscription, since only want to cache non-streamed responses\n        if (response.subscription) return;\n\n        if (!config[msg_type]) return;\n        // prevent unwanted page behaviour\n        // if a cached version already exists but it gives an error after being called for updating the cache\n        const cached_response = get(response.echo_req) || {};\n        const cached_message  = cached_response[msg_type];\n        const new_message     = response[msg_type];\n\n        const has_error_or_missing = response.error; // || !(msg_type in response);\n        const has_new_value        = cached_message && isEmptyValue(cached_message) && !isEmptyValue(new_message);\n        const has_old_cache        = cached_message && isEmptyValue(new_message) && !isEmptyValue(cached_message);\n        const has_valid_cache      = !isEmptyValue(cached_response) && !cached_response.error;\n\n        if ((has_error_or_missing || has_new_value || has_old_cache) && has_valid_cache) {\n            clear();\n            // window.location.reload();\n            return;\n        }\n\n        const key      = makeKey(response.echo_req, msg_type);\n        const expires  = moment().add(config[msg_type].expire, 'm').valueOf();\n\n        if (!data_obj.static_hash) {\n            data_obj.static_hash = getStaticHash();\n        }\n\n        data_obj[key] = { value: response, expires };\n        LocalStore.setObject(storage_key, data_obj);\n    };\n\n    const isEmptyValue = (data) => {\n        let is_empty_data = false;\n        if (Array.isArray(data)) {\n            if (!data.length) {\n                is_empty_data = true;\n            }\n        } else if (typeof response_data === 'object') {\n            if (!Object.keys(data).length) {\n                is_empty_data = true;\n            }\n        }\n        return is_empty_data;\n    };\n\n    const get = (request, msg_type) => {\n        let response;\n\n        if (isEmptyObject(data_obj)) {\n            data_obj = LocalStore.getObject(storage_key);\n            if (isEmptyObject(data_obj)) return undefined;\n        }\n\n        if (data_obj.static_hash !== getStaticHash()) { // new release\n            clear();\n        }\n\n        const key          = makeKey(request, msg_type);\n        const response_obj = getPropertyValue(data_obj, key) || {};\n\n        if (moment().isBefore(response_obj.expires)) {\n            response = response_obj.value;\n        } else { // remove if expired\n            remove(key);\n        }\n\n        return response;\n    };\n\n    const makeKey = (source_obj = {}, msg_type = '') => {\n        let key = msg_type || Object.keys(source_obj).find(type => config[type]);\n\n        if (key && !isEmptyObject(source_obj)) {\n            ((config[key] || {}).map_to || []).forEach((map_key) => {\n                const value = typeof map_key === 'function' ? map_key() : source_obj[map_key];\n                key += map_key ? `_${value || ''}` : '';\n            });\n        }\n\n        return key;\n    };\n\n    const remove = (key, should_match_all) => {\n        if (should_match_all) {\n            Object.keys(data_obj).forEach((data_key) => {\n                if (data_key.indexOf(key) !== -1) {\n                    delete data_obj[data_key];\n                }\n            });\n        } else if (key in data_obj) {\n            delete data_obj[key];\n        }\n        LocalStore.setObject(storage_key, data_obj);\n    };\n\n    const clear = () => {\n        LocalStore.remove(storage_key);\n        data_obj = {};\n    };\n\n    return {\n        set,\n        get,\n        remove,\n        clear,\n    };\n})();\n\nmodule.exports = SocketCache;\n","import { getMarketNamesMap, getContractConfig } from 'Constants';\n\n/**\n * Fetch market information from shortcode\n * @param shortcode: string\n * @returns {{underlying: string, category: string}}\n */\nexport const getMarketInformation = (shortcode) => {\n    const market_info = {\n        category  : '',\n        underlying: '',\n    };\n\n    const pattern = new RegExp('^([A-Z]+)_((OTC_[A-Z0-9]+)|R_[\\\\d]{2,3}|[A-Z]+)_'); // Used to get market name from shortcode\n    const extracted = pattern.exec(shortcode);\n    if (extracted !== null) {\n        market_info.category   = extracted[1].toLowerCase();\n        market_info.underlying = extracted[2];\n    }\n\n    return market_info;\n};\n\nexport const getMarketName = (underlying) => underlying ? getMarketNamesMap()[underlying.toUpperCase()] : null;\n\nexport const getTradeTypeName = (category) => category ? getContractConfig()[category.toUpperCase()].name : null;\n","import Client            from '_common/base/client_base';\nimport SocketCache       from '_common/base/socket_cache';\nimport { removeCookies } from '_common/storage';\nimport WS                from './ws-methods';\n\nexport const requestLogout = () =>\n    WS.logout().then(doLogout);\n\nconst doLogout = (response) => {\n    if (response.logout !== 1) return;\n    removeCookies('affiliate_token', 'affiliate_tracking');\n    Client.clearAllAccounts();\n    Client.set('loginid', '');\n    SocketCache.clear();\n};\n","const createElement = require('./utility').createElement;\n\n/*\n * function to check if element is visible or not\n *\n */\nconst isVisible = elem => !(!elem || (elem.offsetWidth === 0 && elem.offsetHeight === 0));\n\n/*\n * @param  {String}  id_selector   the selector for the element\n * @param  {Element} parent        optional selector to use for parent, defaults to document\n * @return {Element}               return element if it exists, if it doesn't return a dummy element\n */\nconst getElementById = (id_selector, parent = document) => parent.getElementById(id_selector) || createElement('div');\n\nmodule.exports = {\n    isVisible,\n    getElementById,\n};\n","const toTitleCase = str => (\n    (str || '').replace(/\\w[^\\s/\\\\]*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase())\n);\n\nconst padLeft = (txt, len, char) => {\n    const text = String(txt || '');\n    return text.length >= len ? text : `${Array((len - text.length) + 1).join(char)}${text}`;\n};\n\nconst compareBigUnsignedInt = (a, b) => {\n    let first_num  = numberToString(a);\n    let second_num = numberToString(b);\n    if (!first_num || !second_num) {\n        return '';\n    }\n    const max_length = Math.max(first_num.length, second_num.length);\n    first_num        = padLeft(first_num, max_length, '0');\n    second_num       = padLeft(second_num, max_length, '0');\n\n    // lexicographical comparison\n    let order = 0;\n    if (first_num !== second_num) {\n        order = first_num > second_num ? 1 : -1;\n    }\n\n    return order;\n};\n\nconst numberToString = n => (typeof n === 'number' ? String(n) : n);\n\nmodule.exports = {\n    toTitleCase,\n    padLeft,\n    numberToString,\n    compareBigUnsignedInt,\n};\n","import { localize } from 'App/i18n';\n\nexport const getLocalizedBasis = () => ({\n    payout    : localize('Payout'),\n    stake     : localize('Stake'),\n    multiplier: localize('Multiplier'),\n});\n\n/**\n * components can be undef or an array containing any of: 'start_date', 'barrier', 'last_digit'\n *     ['duration', 'amount'] are omitted, as they're available in all contract types\n */\nexport const getContractTypesConfig = () => (\n    {\n        rise_fall      : { title: localize('Rise/Fall'),                  trade_types: ['CALL', 'PUT'],               basis: ['stake', 'payout'], components: ['start_date'], barrier_count: 0 },\n        rise_fall_equal: { title: localize('Rise/Fall'),                  trade_types: ['CALLE', 'PUTE'],             basis: ['stake', 'payout'], components: ['start_date'], barrier_count: 0 },\n        high_low       : { title: localize('Higher/Lower'),               trade_types: ['CALL', 'PUT'],               basis: ['stake', 'payout'], components: ['barrier'],    barrier_count: 1 },\n        touch          : { title: localize('Touch/No Touch'),             trade_types: ['ONETOUCH', 'NOTOUCH'],       basis: ['stake', 'payout'], components: ['barrier'] },\n        end            : { title: localize('Ends Between/Ends Outside'),  trade_types: ['EXPIRYMISS', 'EXPIRYRANGE'], basis: ['stake', 'payout'], components: ['barrier'] },\n        stay           : { title: localize('Stays Between/Goes Outside'), trade_types: ['RANGE', 'UPORDOWN'],         basis: ['stake', 'payout'], components: ['barrier'] },\n        asian          : { title: localize('Asians'),                     trade_types: ['ASIANU', 'ASIAND'],          basis: ['stake', 'payout'], components: [] },\n        match_diff     : { title: localize('Matches/Differs'),            trade_types: ['DIGITMATCH', 'DIGITDIFF'],   basis: ['stake', 'payout'], components: ['last_digit'] },\n        even_odd       : { title: localize('Even/Odd'),                   trade_types: ['DIGITODD', 'DIGITEVEN'],     basis: ['stake', 'payout'], components: [] },\n        over_under     : { title: localize('Over/Under'),                 trade_types: ['DIGITOVER', 'DIGITUNDER'],   basis: ['stake', 'payout'], components: ['last_digit'] },\n        lb_call        : { title: localize('Close-Low'),                  trade_types: ['LBFLOATCALL'],               basis: ['multiplier'],      components: [] },\n        lb_put         : { title: localize('High-Close'),                 trade_types: ['LBFLOATPUT'],                basis: ['multiplier'],      components: [] },\n        lb_high_low    : { title: localize('High-Low'),                   trade_types: ['LBHIGHLOW'],                 basis: ['multiplier'],      components: [] },\n    }\n);\n\nexport const getContractCategoriesConfig = () => (\n    {\n        [localize('Up/Down')]       : ['rise_fall', 'rise_fall_equal', 'high_low'],\n        [localize('Touch/No Touch')]: ['touch'],\n        [localize('In/Out')]        : ['end', 'stay'],\n        [localize('Asians')]        : ['asian'],\n        [localize('Digits')]        : ['match_diff', 'even_odd', 'over_under'],\n        // [localize('Lookback')]      : ['lb_call', 'lb_put', 'lb_high_low'],\n    }\n);\n","import {\n    inject,\n    Provider,\n    observer }   from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst SPECIAL_REACT_KEYS = { children: true, key: true, ref: true };\n\nexport class MobxProvider extends Provider {\n    getChildContext() {\n        const stores = {};\n\n        // inherit stores\n        const baseStores = this.context.mobxStores;\n        if (baseStores) {\n            for (const key in baseStores) { // eslint-disable-line\n                stores[key] = baseStores[key];\n            }\n        }\n\n        // add own stores\n        for (const key in this.props.store) { // eslint-disable-line\n            if (!SPECIAL_REACT_KEYS[key]) {\n                stores[key] = this.props.store[key];\n            }\n        }\n\n        return {\n            mobxStores: stores,\n            ...stores,\n        };\n    }\n\n    static childContextTypes = {\n        mobxStores: PropTypes.object,\n        client    : PropTypes.object,\n        common    : PropTypes.object,\n        gtm       : PropTypes.object,\n        modules   : PropTypes.object,\n        ui        : PropTypes.object,\n    };\n}\n\nconst connect_global_store = (mapper) => Component => inject(mapper)(observer(Component));\n\nexport const connect = (StoreClass, mapper) => Component => {\n    if (!mapper) {\n        return connect_global_store(StoreClass)(Component);\n    }\n\n    const observed = observer(Component);\n\n    class StoredComponent extends Component {\n        store = new StoreClass();\n\n        render() {\n            return React.createElement(\n                observed,\n                {\n                    ...this.props,\n                    store: this.store,\n                },\n                this.props.children,\n            );\n        }\n\n        propTypes = {\n            children: PropTypes.object,\n        }\n    }\n\n    const wrappedDisplayName = Component.displayName\n        || Component.name\n        || (Component.constructor && Component.constructor.name)\n        || 'Unknown';\n    StoredComponent.displayName = `store-${wrappedDisplayName}`;\n\n    return inject(mapper)(StoredComponent);\n};\n","import { localize }        from 'App/i18n';\nimport { unique }          from '_common/utility';\nimport {\n    epochToMoment,\n    formatMiliseconds,\n    getDiffDuration }      from 'Utils/Date';\nimport { isDigitContract } from '../../Contract/Helpers/digits';\n\nexport const getCurrentTick = (contract_info) => {\n    const tick_stream = unique(contract_info.tick_stream, 'epoch');\n    const current_tick = isDigitContract(contract_info.contract_type) ? tick_stream.length : tick_stream.length - 1;\n    return (!current_tick || current_tick < 0) ? 0 : current_tick;\n};\n\nexport const getDurationUnitValue = (obj_duration) => {\n    const duration_ms = obj_duration.asMilliseconds() / 1000;\n    // Check with isEndTime to find out if value of duration has decimals\n    // for days we do not require precision for End Time value since users cannot select with timepicker if not in same day\n    // Seconds is the smallest End Time duration displayed thus we can keep the same formatting as normal Duration\n\n    if (duration_ms >= 86400000) {\n        const duration = duration_ms / (1000 * 60 * 60 * 24);\n        return Math.floor(duration);\n    } else if (duration_ms >= 3600000 && duration_ms < 86400000) {\n        const duration      = duration_ms / (1000 * 60 * 60);\n        const is_end_time   = isEndTime(duration);\n        const has_seconds   = isEndTime(duration_ms / (1000 * 60));\n        const string_format = has_seconds ? 'HH[h] mm[m] ss[s]' : 'HH[h] mm[m]';\n\n        return is_end_time ?\n            formatMiliseconds(duration_ms, string_format)\n            :\n            Math.floor(duration_ms / (1000 * 60 * 60));\n    } else if (duration_ms >= 60000 && duration_ms < 3600000) {\n        const duration = duration_ms / (1000 * 60);\n        const is_end_time = isEndTime(duration);\n        return is_end_time ?\n            formatMiliseconds(duration_ms, 'mm[m] ss[s]')\n            :\n            Math.floor(duration_ms / (1000 * 60));\n    } else if (duration_ms >= 1000 && duration_ms < 60000) {\n        return Math.floor(duration_ms / 1000);\n    }\n    return Math.floor(duration_ms / 1000);\n};\n\nexport const isEndTime = (duration) => (duration % 1) !== 0;\n\nexport const getDurationUnitText = (obj_duration) => {\n    const unit_map = {\n        d: { name_plural: localize('days'),    name_singular: localize('day') },\n        h: { name_plural: localize('hours'),   name_singular: localize('hour') },\n        m: { name_plural: localize('minutes'), name_singular: localize('minute') },\n        s: { name: localize('seconds') },\n    };\n    const duration_ms = obj_duration.asMilliseconds() / 1000;\n    // return empty suffix string if duration is End Time set except for days and seconds, refer to L18 and L19\n\n    if (duration_ms) {\n        if (duration_ms >= 86400000) {\n            const days_value = duration_ms / 86400000;\n            return (days_value <= 2) ? unit_map.d.name_singular : unit_map.d.name_plural;\n        } else if (duration_ms >= 3600000 && duration_ms < 86400000) {\n            if (isEndTime(duration_ms / (1000 * 60 * 60))) return '';\n            return (duration_ms === 3600000) ? unit_map.h.name_singular : unit_map.h.name_plural;\n        } else if (duration_ms >= 60000 && duration_ms < 3600000) {\n            if (isEndTime(duration_ms / (1000 * 60))) return '';\n            return (duration_ms === 60000) ? unit_map.m.name_singular : unit_map.m.name_plural;\n        } else if (duration_ms >= 1000 && duration_ms < 60000) {\n            return unit_map.s.name;\n        }\n    }\n    return unit_map.s.name;\n};\n\nexport const getDurationPeriod = (contract_info) => (\n    getDiffDuration(\n        epochToMoment(contract_info.purchase_time || contract_info.date_start),\n        epochToMoment(contract_info.date_expiry)\n    )\n);\n\nexport const getDurationTime = (contract_info) => (\n    contract_info.tick_count ?\n        contract_info.tick_count\n        :\n        getDurationUnitValue(getDurationPeriod(contract_info))\n);\n","export const MAX_MOBILE_WIDTH = 767;\nexport const MAX_TABLET_WIDTH = 1024;\n","const getLanguage      = require('../language').get;\nconst localize         = require('../../App/i18n').localize;\nconst getPropertyValue = require('../utility').getPropertyValue;\n\nlet currencies_config = {};\n\nconst getTextFormat = (number, currency) => `${currency} ${addComma(number, getDecimalPlaces(currency), isCryptocurrency(currency))}`;\n\nconst formatMoney = (currency_value, amount, exclude_currency, decimals = 0, minimumFractionDigits = 0) => {\n    let money = amount;\n    if (money) money = String(money).replace(/,/g, '');\n    const sign           = money && Number(money) < 0 ? '-' : '';\n    const decimal_places = decimals || getDecimalPlaces(currency_value);\n\n    money = isNaN(money) ? 0 : Math.abs(money);\n    if (typeof Intl !== 'undefined') {\n        const options = {\n            minimumFractionDigits: minimumFractionDigits || decimal_places,\n            maximumFractionDigits: decimal_places,\n        };\n        money = new Intl.NumberFormat(getLanguage().toLowerCase().replace('_', '-'), options).format(money);\n    } else {\n        money = addComma(money, decimal_places);\n    }\n\n    return sign + (exclude_currency ? '' : formatCurrency(currency_value)) + money;\n};\n\nconst formatCurrency = currency => `<span class=\"symbols ${(currency || '').toLowerCase()}\"></span>`;\n\nconst addComma = (num, decimal_points, is_crypto) => {\n    let number = String(num || 0).replace(/,/g, '');\n    if (typeof decimal_points !== 'undefined') {\n        number = (+number).toFixed(decimal_points);\n    }\n    if (is_crypto) {\n        number = parseFloat(+number);\n    }\n\n    return number.toString().replace(/(^|[^\\w.])(\\d{4,})/g, ($0, $1, $2) => (\n        $1 + $2.replace(/\\d(?=(?:\\d\\d\\d)+(?!\\d))/g, '$&,')\n    ));\n};\n\nconst calcDecimalPlaces = (currency) => isCryptocurrency(currency) ? 8 : 2;\n\nconst getDecimalPlaces = (currency) => (\n    // need to check currencies_config[currency] exists instead of || in case of 0 value\n    currencies_config[currency] ? getPropertyValue(currencies_config, [currency, 'fractional_digits']) : calcDecimalPlaces(currency)\n);\n\nconst setCurrencies = (website_status) => {\n    currencies_config = website_status.currencies_config;\n};\n\n// (currency in crypto_config) is a back-up in case website_status doesn't include the currency config, in some cases where it's disabled\nconst isCryptocurrency = currency => /crypto/i.test(getPropertyValue(currencies_config, [currency, 'type'])) || (currency in CryptoConfig.get());\n\nconst CryptoConfig = (() => {\n    let crypto_config;\n\n    const initCryptoConfig = () => ({\n        BTC: { name: localize('Bitcoin'),       min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        BCH: { name: localize('Bitcoin Cash'),  min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        ETH: { name: localize('Ether'),         min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        ETC: { name: localize('Ether Classic'), min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        LTC: { name: localize('Litecoin'),      min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        UST: { name: localize('Tether'),        min_withdrawal: 0.02,  pa_max_withdrawal: 2000, pa_min_withdrawal: 10 },\n        USB: { name: localize('Binary Coin'),   min_withdrawal: 0.02,  pa_max_withdrawal: 2000, pa_min_withdrawal: 10 },\n    });\n\n    return {\n        get: () => {\n            if (!crypto_config) {\n                crypto_config = initCryptoConfig();\n            }\n            return crypto_config;\n        },\n    };\n})();\n\nconst getMinWithdrawal = currency => (isCryptocurrency(currency) ? (getPropertyValue(CryptoConfig.get(), [currency, 'min_withdrawal']) || 0.002) : 1);\n\n/**\n * Returns the transfer limits for the account.\n * @param currency\n * @param {string} max|undefined\n * @returns numeric|undefined\n */\nconst getTransferLimits = (currency, which) => {\n    const transfer_limits = getPropertyValue(currencies_config, [currency, 'transfer_between_accounts', 'limits']) || getMinWithdrawal(currency);\n    const decimals        = getDecimalPlaces(currency);\n    if (which === 'max') {\n        return transfer_limits.max ? transfer_limits.max.toFixed(decimals) : undefined;\n    }\n\n    return transfer_limits.min ? transfer_limits.min.toFixed(decimals) : undefined;\n};\n\nconst getTransferFee = (currency_from, currency_to) => {\n    const transfer_fee = getPropertyValue(currencies_config, [currency_from, 'transfer_between_accounts', 'fees', currency_to]);\n    return `${typeof transfer_fee === 'undefined' ? '1' : transfer_fee}%`;\n};\n\n// returns in a string format, e.g. '0.00000001'\nconst getMinimumTransferFee = (currency) => {\n    const decimals = getDecimalPlaces(currency);\n    return `${currency} ${(1 / Math.pow(10, decimals)).toFixed(decimals)}`; // we need toFixed() so that it doesn't display in scientific notation, e.g. 1e-8 for currencies with 8 decimal places\n};\n\n// @param {String} limit = max|min\nconst getPaWithdrawalLimit = (currency, limit) => {\n    if (isCryptocurrency(currency)) {\n        return getPropertyValue(CryptoConfig.get(), [currency, `pa_${limit}_withdrawal`]); // pa_min_withdrawal and pa_max_withdrawal used here\n    }\n    return limit === 'max' ? 2000 : 10; // limits for fiat currency\n};\n\nconst getCurrencyName = currency => getPropertyValue(CryptoConfig.get(), [currency, 'name']) || '';\n\nconst getMinPayout = currency => getPropertyValue(currencies_config, [currency, 'stake_default']);\n\nmodule.exports = {\n    formatMoney,\n    formatCurrency,\n    addComma,\n    getDecimalPlaces,\n    setCurrencies,\n    isCryptocurrency,\n    getCurrencyName,\n    getMinWithdrawal,\n    getTransferLimits,\n    getTransferFee,\n    getMinimumTransferFee,\n    getTextFormat,\n    getMinPayout,\n    getPaWithdrawalLimit,\n    getCurrencies: () => currencies_config,\n};\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport { Link }   from 'react-router-dom';\n\nconst ButtonLink = ({ children, className, to, onClick }) => (\n    <Link\n        className={classNames('btn btn--link', className, 'effect')}\n        to={to}\n        onClick={onClick}\n    >\n        {children}\n    </Link>\n);\n\nButtonLink.propTypes = {\n    children : PropTypes.object,\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n    to       : PropTypes.string,\n};\n\nexport default ButtonLink;\n","import classNames                  from 'classnames';\nimport React                       from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport Icon                        from 'Assets/icon.jsx';\nimport routes                      from 'Constants/routes';\n\nclass VerticalTabContentContainer extends React.PureComponent {\n    render() {\n        const {\n            action_bar,\n            action_bar_classname,\n            is_routed,\n            items,\n            selected,\n        } = this.props;\n        const selected_item = items.find(item => item.label === selected.label);\n        const TabContent    = selected_item.value;\n\n        return (\n            <div className='vertical-tab__content'>\n                { action_bar &&\n                    <div className={classNames('vertical-tab__action-bar', {\n                        [action_bar_classname]: !!action_bar_classname,\n                    })}\n                    >\n                        {\n                            action_bar.map(({ component, icon, onClick, title }) => {\n                                const Component = component;\n                                return (\n                                    component ?\n                                        <Component key={title} />\n                                        :\n                                        <div\n                                            className='vertical-tab__action-bar-wrapper'\n                                            key={title}\n                                            onClick={onClick}\n                                        >\n                                            <Icon\n                                                className='vertical-tab__action-bar--icon'\n                                                icon={icon}\n                                            />\n                                        </div>\n                                );\n                            })\n                        }\n                    </div>\n                }\n                { is_routed ?\n                    <Switch>\n                        <Redirect exact from={routes.reports} to={routes.positions} />\n                        {\n                            items.map(({ value, path, icon }) => {\n                                const Component = value;\n                                return (\n                                    <Route\n                                        key={path}\n                                        path={path}\n                                        render={() => <Component component_icon={icon} />}\n                                    />\n                                );\n                            })\n                        }\n                    </Switch>\n                    :\n                    <TabContent\n                        key={selected_item.label}\n                        className='item-id'\n                    />\n                }\n            </div>\n        );\n    }\n}\n\nexport { VerticalTabContentContainer };\n","import classNames  from 'classnames';\nimport React       from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Icon        from 'Assets/icon.jsx';\n\nclass VerticalTabHeaders extends React.PureComponent {\n    render() {\n        return (\n            <div className='vertical-tab__tab'>\n                {this.props.header_title &&\n                    <div className='vertical-tab__header-title'>\n                        <p>{ this.props.header_title }</p>\n                    </div>\n                }\n\n                {this.props.items.map(item => {\n                    // Capitalize only the first letter of the label and make the rest lowercase\n                    const label = item.label.charAt(0).toUpperCase() + item.label.slice(1).toLowerCase();\n\n                    return (\n                        this.props.is_routed ?\n                            <NavLink\n                                key={item.path}\n                                to={item.path}\n                                onClick={() => this.props.onChange(item)}\n                                className='vertical-tab__header'\n                                activeClassName={\n                                    classNames({\n                                        'vertical-tab__header--active': this.props.selected.label === item.label,\n                                    })\n                                }\n                            >\n                                <Icon\n                                    icon={item.icon}\n                                    className={classNames('vertical-tab__header__icon', {\n                                        'vertical-tab__header__icon--active': this.props.selected.label === item.label,\n                                    })}\n                                />\n                                <span className='vertical-tab__header__link'>{label}</span>\n                            </NavLink>\n                            :\n                            <div\n                                className={\n                                    classNames('vertical-tab__header', {\n                                        'vertical-tab__header--active': this.props.selected.label === item.label,\n                                    })\n                                }\n                                key={item.label}\n                                onClick={() => this.props.onChange(item)}\n                            >\n                                <Icon\n                                    icon={item.icon}\n                                    className={classNames('vertical-tab__header__icon', {\n                                        'vertical-tab__header__icon--active': this.props.selected.label === item.label,\n                                    })}\n                                />\n                                <a\n                                    key={item.label}\n                                    className='vertical-tab__header__link'\n                                >\n                                    {label}\n                                </a>\n                            </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport { VerticalTabHeaders };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Icon       from 'Assets/icon.jsx';\n\nconst FullScreenDialog = (props) => {\n    const { title, visible, children, wrapperClassName } = props;\n\n    const checkVisibility = () => {\n        if (props.visible) {\n            document.body.classList.add('no-scroll');\n            document.getElementById('deriv_app').classList.add('no-scroll');\n        } else {\n            document.body.classList.remove('no-scroll');\n            document.getElementById('deriv_app').classList.remove('no-scroll');\n        }\n    };\n\n    const scrollToElement = (parent, el) => {\n        const viewport_offset = el.getBoundingClientRect();\n        const hidden = viewport_offset.top + el.clientHeight + 20 > window.innerHeight;\n        if (hidden) {\n            const new_el_top = (window.innerHeight - el.clientHeight) / 2;\n            parent.scrollTop += viewport_offset.top - new_el_top;\n        }\n    };\n\n    // sometimes input is covered by virtual keyboard on mobile chrome, uc browser\n    const handleClick = (e) => {\n        if (e.target.tagName === 'INPUT' && e.target.type === 'number') {\n            const scrollToTarget = scrollToElement(e.currentTarget, e.target);\n            window.addEventListener('resize', scrollToTarget, false);\n\n            // remove listener, resize is not fired on iOS safari\n            window.setTimeout(() => {\n                window.removeEventListener('resize', scrollToTarget, false);\n            }, 2000);\n        }\n    };\n\n    checkVisibility();\n\n    return (\n        <div\n            className={classNames('fullscreen-dialog', {\n                'fullscreen-dialog--open': visible,\n            })}\n            onClick={handleClick}\n        >\n            <div className='fullscreen-dialog__header'>\n                <h2 className='fullscreen-dialog__title'>\n                    {title}\n                </h2>\n                <div\n                    className='icons btn-close fullscreen-dialog__close-btn'\n                    onClick={props.onClose}\n                >\n                    <Icon icon='IconClose' className='fullscreen-dialog__close-btn-icon' />\n                </div>\n            </div>\n            <div className='fullscreen-dialog__header-shadow-cover' />\n            <div className='fullscreen-dialog__header-shadow' />\n            <div className='fullscreen-dialog__content'>\n                <div className={`fullscreen-dialog__${wrapperClassName || 'contracts-modal-list'}`}>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nFullScreenDialog.propTypes = {\n    children        : PropTypes.any,\n    onClose         : PropTypes.func,\n    title           : PropTypes.string,\n    visible         : PropTypes.bool,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default FullScreenDialog;\n","import { action, flow }     from 'mobx';\nimport GTM                  from '_common/base/gtm';\nimport Login                from '_common/base/login';\nimport ServerTime           from '_common/base/server_time';\nimport BinarySocket         from '_common/base/socket_base';\nimport { State }            from '_common/storage';\nimport { getPropertyValue } from '_common/utility';\nimport { localize }         from 'App/i18n';\nimport { requestLogout }    from './logout';\nimport WS                   from './ws-methods';\n\nlet client_store,\n    common_store;\n\n// TODO: update commented statements to the corresponding functions from app\nconst BinarySocketGeneral = (() => {\n    const onDisconnect = () => {\n        common_store.setIsSocketOpened(false);\n    };\n\n    const onOpen = (is_ready) => {\n        // Header.hideNotification();\n        if (is_ready) {\n            if (!Login.isLoginPages()) {\n                if (!client_store.is_valid_login) {\n                    requestLogout();\n                    return;\n                }\n                WS.subscribeWebsiteStatus(ResponseHandlers.websiteStatus);\n            }\n            ServerTime.init(action('setTime', () => { common_store.server_time = ServerTime.get(); }));\n            common_store.setIsSocketOpened(true);\n        }\n    };\n\n    const onMessage = (response) => {\n        handleError(response);\n        // Header.hideNotification('CONNECTION_ERROR');\n        switch (response.msg_type) {\n            case 'authorize':\n                if (response.error) {\n                    const is_active_tab = sessionStorage.getItem('active_tab') === '1';\n                    if (getPropertyValue(response, ['error', 'code']) === 'SelfExclusion' && is_active_tab) {\n                        sessionStorage.removeItem('active_tab');\n                        // Dialog.alert({ id: 'authorize_error_alert', message: response.error.message });\n                    }\n                    requestLogout();\n                } else if (!Login.isLoginPages() && !/authorize/.test(State.get('skip_response'))) {\n                    // is_populating_account_list is a check to avoid logout on the first logged-in session\n                    // In any other case, if the response loginid does not match the store's loginid, user must be logged out\n                    if (response.authorize.loginid !== client_store.loginid &&\n                        !client_store.is_populating_account_list) {\n                        requestLogout();\n                    } else if (response.authorize.loginid === client_store.loginid) {\n                        // All other cases continue with the loginid and authorize the profile\n                        authorizeAccount(response);\n                    }\n                }\n                break;\n            case 'landing_company':\n                // Header.upgradeMessageVisibility();\n                break;\n            case 'get_self_exclusion':\n                // SessionDurationLimit.exclusionResponseHandler(response);\n                break;\n            case 'get_settings':\n                if (response.get_settings) {\n                    setResidence(response.get_settings.country_code);\n                    client_store.setEmail(response.get_settings.email);\n                    // GTM.eventHandler(response.get_settings);\n                    // if (response.get_settings.is_authenticated_payment_agent) {\n                    //     $('#topMenuPaymentAgent').setVisibility(1);\n                    // }\n                }\n                break;\n            case 'payout_currencies':\n                client_store.responsePayoutCurrencies(response.payout_currencies);\n                break;\n            case 'transaction':\n                GTM.pushTransactionData(response, { bom_ui: 'new' });\n                break;\n            // no default\n        }\n    };\n\n    const setResidence = (residence) => {\n        if (residence) {\n            client_store.setResidence(residence);\n            WS.landingCompany(residence);\n        }\n    };\n\n    const setBalance = flow(function* (balance) {\n        yield BinarySocket.wait('website_status');\n        client_store.setBalance(balance);\n    });\n\n    const handleError = (response) => {\n        const msg_type   = response.msg_type;\n        const error_code = getPropertyValue(response, ['error', 'code']);\n        switch (error_code) {\n            case 'WrongResponse':\n            case 'InternalServerError':\n            case 'OutputValidationFailed': {\n                if (msg_type !== 'mt5_login_list') {\n                    common_store.setError(true, { message: response.error.message });\n                }\n                break;\n            }\n            case 'RateLimit':\n                if (msg_type !== 'cashier_password') {\n                    common_store.setError(true, { message: localize('You have reached the rate limit of requests per second. Please try later.') });\n                }\n                break;\n            case 'InvalidAppID':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'DisabledClient':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            // no default\n        }\n    };\n\n    const init = (store) => {\n        client_store = store.client;\n        common_store = store.common;\n\n        return {\n            onDisconnect,\n            onOpen,\n            onMessage,\n        };\n    };\n\n    const authorizeAccount = (response) => {\n        client_store.responseAuthorize(response);\n        WS.subscribeBalance(ResponseHandlers.balance, true);\n        WS.sendRequest({ get_settings: 1 }, { forced: true });\n        WS.getAccountStatus();\n        WS.payoutCurrencies();\n        WS.mt5LoginList();\n        setResidence(\n            response.authorize.country ||\n            client_store.accounts[client_store.loginid].residence\n        );\n        if (!client_store.is_virtual) {\n            WS.getSelfExclusion();\n        }\n        BinarySocket.sendBuffered();\n        if (/bch/i.test(response.authorize.currency) && !client_store.accounts[client_store.loginid].accepted_bch) {\n            // showPopup({\n            //     url        : urlFor('user/warning'),\n            //     popup_id   : 'warning_popup',\n            //     form_id    : '#frm_warning',\n            //     content_id : '#warning_content',\n            //     validations: [{ selector: '#chk_accept', validations: [['req', { hide_asterisk: true }]] }],\n            //     onAccept   : () => { Client.set('accepted_bch', 1); },\n            // });\n        }\n    };\n\n    return {\n        init,\n        setBalance,\n        authorizeAccount,\n    };\n})();\n\nexport default BinarySocketGeneral;\n\nconst ResponseHandlers = (() => {\n    let is_available = false;\n    const websiteStatus = (response) => {\n        if (response.website_status) {\n            is_available = /^up$/i.test(response.website_status.site_status);\n            if (is_available && !BinarySocket.availability()) {\n                window.location.reload();\n                return;\n            }\n            if (response.website_status.message) {\n                // Footer.displayNotification(response.website_status.message);\n            } else {\n                // Footer.clearNotification();\n            }\n            BinarySocket.availability(is_available);\n            client_store.setWebsiteStatus(response);\n        }\n    };\n\n    const balance = (response) => {\n        if (!response.error){\n            BinarySocketGeneral.setBalance(response.balance.balance);\n        }\n    };\n\n    return {\n        websiteStatus,\n        balance,\n    };\n})();\n","import PropTypes      from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect }    from 'Stores/connect';\nimport routes         from '../../../Constants/routes';\n\nconst Redirect = ({\n    history,\n    setCashierActiveTab,\n    setVerificationCode,\n    toggleAccountSignupModal,\n    toggleCashierModal,\n}) => {\n    const url_params = new URLSearchParams(window.location.search);\n\n    setVerificationCode(url_params.get('code'));\n\n    switch (url_params.get('action')) {\n        case 'signup': {\n            toggleAccountSignupModal(true);\n            break;\n        }\n        case 'payment_withdraw': {\n            setCashierActiveTab('withdraw');\n            toggleCashierModal(true);\n            break;\n        }\n        default: break;\n    }\n\n    // Clear URL search params and route to root (currently set to `trade`)\n    window.history.replaceState({}, document.title, '/');\n    history.push(routes.root);\n\n    return null;\n};\n\nRedirect.propTypes = {\n    history                 : PropTypes.object,\n    setVerificationCode     : PropTypes.func,\n    toggleAccountSignupModal: PropTypes.func,\n    toggleCashierModal      : PropTypes.func,\n};\n\nexport default withRouter(connect(\n    ({ client, ui }) => ({\n        setCashierActiveTab     : ui.setCashierActiveTab,\n        setVerificationCode     : client.setVerificationCode,\n        toggleAccountSignupModal: ui.toggleAccountSignupModal,\n        toggleCashierModal      : ui.toggleCashierModal,\n    }),\n)(Redirect));\n","import React        from 'react';\nimport { localize } from 'App/i18n';\nimport Icon         from 'Assets/icon.jsx';\n\nconst EmptyPortfolioMessage = ({ error }) => (\n    <div className='portfolio-empty'>\n        <div className='portfolio-empty__wrapper'>\n            { error ?\n                <span className='portfolio-empty__text'>{error}</span>\n                :\n                <React.Fragment>\n                    <Icon icon='IconPositions' className='portfolio-empty__icon' />\n                    <span className='portfolio-empty__text'>{localize('No open positions')}</span>\n                </React.Fragment>\n            }\n        </div>\n    </div>\n);\n\nexport default EmptyPortfolioMessage;\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nconst ContractLink = ({\n    contract_id,\n    children,\n    className,\n    openContract,\n}) => (\n    <a\n        className={className}\n        href='javascript:;'\n        onClick={() => openContract(contract_id, true)}\n    >\n        {children}\n    </a>\n);\n\nContractLink.propTypes = {\n    children   : PropTypes.node,\n    className  : PropTypes.string,\n    contract_id: PropTypes.number,\n    onMount    : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        openContract: modules.contract_trade.onMount,\n    }),\n)(ContractLink);\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" {...props}><g fill=\"none\" fillRule=\"evenodd\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#4BBFAB\" /><path fill=\"#FFF\" fillRule=\"nonzero\" d=\"M6.5 10.8l5.65-5.65a.5.5 0 0 1 .7.7l-6 6a.5.5 0 0 1-.7 0l-3-3a.5.5 0 1 1 .7-.7l2.65 2.64z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" {...props}><g fill=\"none\" fillRule=\"evenodd\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#E31C4B\" fillRule=\"nonzero\" /><path stroke=\"#FFF\" strokeLinecap=\"round\" d=\"M10.5 5.5l-5 5m5 0l-5-5\" /></g></svg>);","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { NavLink }         from 'react-router-dom';\nimport { getContractPath } from 'App/Components/Routes/helpers';\nimport IconCheck           from 'Assets/SvgComponents/portfolio/ic-check.svg';\nimport IconCross           from 'Assets/SvgComponents/portfolio/ic-cross.svg';\nimport { localize }        from 'App/i18n';\n\nclass ResultOverlay extends React.PureComponent {\n\n    handleClick = (e) => {\n        if (this.props.is_unsupported) {\n            e.preventDefault();\n            this.props.onClick();\n        }\n    }\n\n    render() {\n        const {\n            contract_id,\n            is_visible,\n            onClickRemove,\n            result } = this.props;\n        const is_contract_won = (result === 'won');\n        return (\n            <React.Fragment>\n                <CSSTransition\n                    in={is_visible}\n                    timeout={250}\n                    classNames={{\n                        enter    : 'positions-drawer-card__result--enter',\n                        enterDone: 'positions-drawer-card__result--enter-done',\n                        exit     : 'positions-drawer-card__result--exit',\n                    }}\n                    unmountOnExit\n                >\n                    <div className={classNames('positions-drawer-card__result', {\n                        'positions-drawer-card__result--won' : is_contract_won,\n                        'positions-drawer-card__result--lost': !is_contract_won,\n                    })}\n                    >\n                        <span\n                            className='result__close-btn'\n                            onClick={() => onClickRemove(contract_id)}\n                        />\n                        <NavLink\n                            className='result__caption-wrapper'\n                            to={getContractPath(contract_id)}\n                            onClick={this.handleClick}\n                        >\n                            <span\n                                className={classNames('result__caption', {\n                                    'result__caption--won' : is_contract_won,\n                                    'result__caption--lost': !is_contract_won,\n                                }\n                                )}\n                            >\n                                {\n                                    (is_contract_won) ?\n                                        <React.Fragment>\n                                            {localize('won')}\n                                            <IconCheck className='result__icon' />\n                                        </React.Fragment>\n                                        :\n                                        <React.Fragment>\n                                            {localize('lost')}\n                                            <IconCross className='result__icon' />\n                                        </React.Fragment>\n                                }\n                            </span>\n                        </NavLink>\n                    </div>\n                </CSSTransition>\n            </React.Fragment>\n        );\n    }\n}\n\nResultOverlay.propTypes = {\n    contract_id              : PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    has_same_contract_mounted: PropTypes.bool,\n    is_unsupported           : PropTypes.bool,\n    is_visible               : PropTypes.bool,\n    onClick                  : PropTypes.func,\n    onClickRemove            : PropTypes.func,\n    result                   : PropTypes.string,\n};\n\nexport default ResultOverlay;\n","import classNames              from 'classnames';\nimport PropTypes               from 'prop-types';\nimport React                   from 'react';\nimport { CSSTransition }       from 'react-transition-group';\nimport ContractLink            from 'Modules/Contract/Containers/contract-link.jsx';\nimport Shortcode               from 'Modules/Reports/Helpers/shortcode';\nimport { isCryptocurrency }    from '_common/base/currency_base';\nimport { localize }            from 'App/i18n';\nimport Icon                    from 'Assets/icon.jsx';\nimport Button                  from 'App/Components/Form/button.jsx';\nimport Money                   from 'App/Components/Elements/money.jsx';\nimport { UnderlyingIcon }      from 'App/Components/Elements/underlying-icon.jsx';\nimport { PositionsCardLoader } from 'App/Components/Elements/ContentLoader';\nimport ContractTypeCell        from './contract-type-cell.jsx';\nimport ProgressSlider          from './ProgressSlider';\nimport ResultOverlay           from './result-overlay.jsx';\n\nconst PositionsDrawerCard = ({\n    active_position,\n    className,\n    contract_info,\n    currency,\n    current_tick,\n    indicative,\n    id,\n    is_dark_theme,\n    is_loading,\n    is_sell_requested,\n    is_unsupported,\n    is_valid_to_sell,\n    profit_loss,\n    onClickSell,\n    onClickRemove,\n    result,\n    sell_price,\n    status,\n    toggleUnsupportedContractModal,\n    type,\n}) => {\n    const loader_el = (\n        <div className='positions-drawer-card__content-loader'>\n            <PositionsCardLoader\n                is_dark_theme={is_dark_theme}\n                speed={2}\n            />\n        </div>\n    );\n    const fallback_result = (profit_loss < 0) ? 'lost' : 'won';\n    const contract_el = (\n        <React.Fragment>\n            <div className={classNames(\n                'positions-drawer-card__grid',\n                'positions-drawer-card__grid-underlying-trade'\n            )}\n            >\n                <div className='positions-drawer-card__underlying-name'>\n                    <UnderlyingIcon market={contract_info.underlying} />\n                    <span className='positions-drawer-card__symbol'>\n                        {contract_info.display_name}\n                    </span>\n                </div>\n                <div className='positions-drawer-card__type'>\n                    <ContractTypeCell\n                        type={type}\n                        is_high_low={Shortcode.isHighLow({ shortcode: contract_info.shortcode })}\n                    />\n                </div>\n            </div>\n            {(result || !!(contract_info.is_sold)) ?\n                <div className='progress-slider--completed' />\n                :\n                <ProgressSlider\n                    is_loading={is_loading}\n                    start_time={contract_info.date_start}\n                    expiry_time={contract_info.date_expiry}\n                    current_tick={current_tick}\n                    ticks_count={contract_info.tick_count}\n                />\n            }\n            <div className={classNames(\n                'positions-drawer-card__grid',\n                'positions-drawer-card__grid-profit-payout'\n            )}\n            >\n                <div className={classNames(\n                    'positions-drawer-card__profit-loss',\n                    'positions-drawer-card__profit-loss-label',\n                )}\n                >\n                    {result ? localize('Profit/Loss:') : localize('Potential profit/loss:')}\n                </div>\n                <div className={classNames(\n                    'positions-drawer-card__indicative',\n                    'positions-drawer-card__indicative-label',\n                )}\n                >\n                    {!result ? localize('Indicative price:') : localize('Payout:')}\n                </div>\n                <div className={classNames(\n                    'positions-drawer-card__profit-loss', {\n                        'positions-drawer-card__profit-loss--is-crypto': isCryptocurrency(currency),\n                        'positions-drawer-card__profit-loss--negative' : (profit_loss < 0),\n                        'positions-drawer-card__profit-loss--positive' : (profit_loss > 0),\n                    })}\n                >\n                    <Money amount={Math.abs(profit_loss)} currency={currency} />\n                    <div className={classNames(\n                        'positions-drawer-card__indicative--movement', {\n                            'positions-drawer-card__indicative--movement-complete': !!result,\n                        },\n                    )}\n                    >\n                        <Icon\n                            icon='IconPriceMove'\n                            type={(status !== 'complete') ? status : null}\n                        />\n                    </div>\n                </div>\n                <div className='positions-drawer-card__indicative'>\n                    <Money amount={sell_price || indicative} currency={currency} />\n                    <div className={classNames(\n                        'positions-drawer-card__indicative--movement', {\n                            'positions-drawer-card__indicative--movement-complete': !!result,\n                        },\n                    )}\n                    >\n                        <Icon\n                            icon='IconPriceMove'\n                            type={(status !== 'complete') ? status : null}\n                        />\n                    </div>\n                </div>\n            </div>\n            <div className={classNames(\n                'positions-drawer-card__grid',\n                'positions-drawer-card__grid-price-payout',\n            )}\n            >\n                <div className='positions-drawer-card__purchase-price'>\n                    <span className='positions-drawer-card__purchase-label'>\n                        {localize('Purchase price:')}\n                    </span>\n                    <span className='positions-drawer-card__purchase-value'>\n                        <Money amount={contract_info.buy_price} currency={currency} />\n                    </span>\n                </div>\n                <div className='positions-drawer-card__payout-price'>\n                    <span className='positions-drawer-card__payout-label'>\n                        {localize('Potential payout:')}\n                    </span>\n                    <span className='positions-drawer-card__payout-value'>\n                        {contract_info.payout ?\n                            <Money amount={contract_info.payout} currency={currency} />\n                            :\n                            <strong>-</strong>\n                        }\n                    </span>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n\n    return (\n        <div className={classNames(\n            'positions-drawer-card__wrapper', {\n                'positions-drawer-card__wrapper--active': (parseInt(active_position) === id),\n            },\n            className)}\n        >\n            <ResultOverlay\n                contract_id={id}\n                is_unsupported={is_unsupported}\n                is_visible={!!(contract_info.is_sold)}\n                has_same_contract_mounted={id === parseInt(active_position)}\n                onClickRemove={onClickRemove}\n                onClick={() => toggleUnsupportedContractModal(true)}\n                result={(result || fallback_result)}\n            />\n            {is_unsupported ?\n                <div\n                    className={classNames(\n                        'positions-drawer-card', {\n                            'positions-drawer-card--active': (parseInt(active_position) === id),\n                            'positions-drawer-card--green' : (profit_loss > 0) && !result,\n                            'positions-drawer-card--red'   : (profit_loss < 0) && !result,\n                        }\n                    )}\n                    onClick={() => toggleUnsupportedContractModal(true)}\n                >\n                    {contract_info.underlying ? contract_el : loader_el}\n                </div>\n                :\n                <ContractLink\n                    className={classNames(\n                        'positions-drawer-card', {\n                            'positions-drawer-card--active': (parseInt(active_position) === id),\n                            'positions-drawer-card--green' : (profit_loss > 0) && !result,\n                            'positions-drawer-card--red'   : (profit_loss < 0) && !result,\n                        }\n                    )}\n                    contract_id={id}\n                >\n                    {contract_info.underlying ? contract_el : loader_el}\n                </ContractLink>\n            }\n            <CSSTransition\n                in={!!(is_valid_to_sell)}\n                timeout={250}\n                classNames={{\n                    enter    : 'positions-drawer-card__sell-button--enter',\n                    enterDone: 'positions-drawer-card__sell-button--enter-done',\n                    exit     : 'positions-drawer-card__sell-button--exit',\n                }}\n                unmountOnExit\n            >\n                <div className='positions-drawer-card__sell-button'>\n                    <Button\n                        className={classNames(\n                            'btn--primary',\n                            'btn--primary--green',\n                            'btn--sell', {\n                                'btn--loading': is_sell_requested,\n                            })}\n                        is_disabled={!is_valid_to_sell || is_sell_requested}\n                        text={localize('Sell contract')}\n                        onClick={() => onClickSell(id)}\n                    />\n                </div>\n            </CSSTransition>\n        </div>\n    );\n};\n\nPositionsDrawerCard.propTypes = {\n    active_position: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className                     : PropTypes.string,\n    contract_info                 : PropTypes.object,\n    currency                      : PropTypes.string,\n    current_tick                  : PropTypes.number,\n    duration                      : PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    duration_unit                 : PropTypes.string,\n    exit_spot                     : PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    id                            : PropTypes.number,\n    indicative                    : PropTypes.number,\n    is_dark_theme                 : PropTypes.bool,\n    is_loading                    : PropTypes.bool,\n    is_sell_requested             : PropTypes.bool,\n    is_unsupported                : PropTypes.bool,\n    is_valid_to_sell              : PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n    onClickRemove                 : PropTypes.func,\n    onClickSell                   : PropTypes.func,\n    profit_loss                   : PropTypes.number,\n    result                        : PropTypes.string,\n    sell_time                     : PropTypes.number,\n    status                        : PropTypes.string,\n    toggleUnsupportedContractModal: PropTypes.func,\n    type                          : PropTypes.string,\n};\n\nexport default PositionsDrawerCard;\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { NavLink }                    from 'react-router-dom';\nimport { TransitionGroup,\n    CSSTransition }                   from 'react-transition-group';\nimport { Scrollbars }                 from 'tt-react-custom-scrollbars';\nimport { localize }                   from 'App/i18n';\nimport Icon                           from 'Assets/icon.jsx';\nimport routes                         from 'Constants/routes';\nimport EmptyPortfolioMessage          from 'Modules/Reports/Components/empty-portfolio-message.jsx';\nimport { connect }                    from 'Stores/connect';\nimport PositionsDrawerCard            from './positions-drawer-card.jsx';\n\nclass PositionsDrawer extends React.Component {\n    componentDidMount()    {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const {\n            all_positions,\n            active_contract_id,\n            error,\n            currency,\n            is_contract_mode,\n            is_dark_theme,\n            is_empty,\n            is_positions_drawer_on,\n            onClickSell,\n            onClickRemove,\n            openContract,\n            toggleDrawer,\n            toggleUnsupportedContractModal,\n        } = this.props;\n\n        // Show only 5 most recent open contracts\n        const body_content = (\n            <React.Fragment>\n                <TransitionGroup component='div'>\n                    {all_positions.slice(0, 5).map((portfolio_position) => (\n                        <CSSTransition\n                            appear\n                            key={portfolio_position.id}\n                            in={true}\n                            timeout={150}\n                            classNames={{\n                                appear   : 'positions-drawer-card__wrapper--enter',\n                                enter    : 'positions-drawer-card__wrapper--enter',\n                                enterDone: 'positions-drawer-card__wrapper--enter-done',\n                                exit     : 'positions-drawer-card__wrapper--exit',\n                            }}\n                            unmountOnExit\n                        >\n                            <PositionsDrawerCard\n                                active_position={active_contract_id}\n                                is_dark_theme={is_dark_theme}\n                                onClickSell={onClickSell}\n                                onClickRemove={onClickRemove}\n                                openContract={openContract}\n                                key={portfolio_position.id}\n                                currency={currency}\n                                toggleUnsupportedContractModal={toggleUnsupportedContractModal}\n                                {...portfolio_position}\n                            />\n                        </CSSTransition>\n                    ))}\n                </TransitionGroup>\n            </React.Fragment>\n        );\n\n        return (\n            <div className={classNames(\n                'positions-drawer', {\n                    'positions-drawer--open'         : is_positions_drawer_on,\n                    'positions-drawer--contract-mode': is_contract_mode,\n                })}\n            >\n                <div className='positions-drawer__header'>\n                    <span className='positions-drawer__title'>{localize('Recent Positions')}</span>\n                    <div\n                        className='positions-drawer__icon-close'\n                        onClick={toggleDrawer}\n                    >\n                        <Icon icon='IconMinimize' />\n                    </div>\n                </div>\n                <div className='positions-drawer__body'>\n                    <Scrollbars\n                        style={{ width: '100%', height: '100%' }}\n                        autoHide\n                    >\n                        {(is_empty || error) ? <EmptyPortfolioMessage error={error} />  : body_content}\n                    </Scrollbars>\n                </div>\n                <div className='positions-drawer__footer'>\n                    <NavLink className='btn btn--link btn--alternate' to={routes.reports}>\n                        <span className='btn__text'>\n                            {localize('Go to Reports')}\n                        </span>\n                    </NavLink>\n                </div>\n            </div>\n        );\n    }\n}\n\nPositionsDrawer.propTypes = {\n    active_contract_id    : PropTypes.number,\n    all_positions         : MobxPropTypes.arrayOrObservableArray,\n    children              : PropTypes.any,\n    currency              : PropTypes.string,\n    error                 : PropTypes.string,\n    is_contract_mode      : PropTypes.bool,\n    is_dark_theme         : PropTypes.bool,\n    is_empty              : PropTypes.bool,\n    is_loading            : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    onClickRemove         : PropTypes.func,\n    onClickSell           : PropTypes.func,\n    onMount               : PropTypes.func,\n    onUnmount             : PropTypes.func,\n    openContract          : PropTypes.func,\n    toggleDrawer          : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, client, ui }) => ({\n        currency                      : client.currency,\n        active_contract_id            : modules.contract_trade.contract_id,\n        all_positions                 : modules.portfolio.all_positions,\n        error                         : modules.portfolio.error,\n        is_contract_mode              : modules.smart_chart.is_contract_mode,\n        is_empty                      : modules.portfolio.is_empty,\n        is_loading                    : modules.portfolio.is_loading,\n        onClickSell                   : modules.portfolio.onClickSell,\n        onClickRemove                 : modules.portfolio.removePositionById,\n        openContract                  : modules.contract_trade.onMount,\n        onMount                       : modules.portfolio.onMount,\n        onUnmount                     : modules.portfolio.onUnmount,\n        is_dark_theme                 : ui.is_dark_mode_on,\n        is_positions_drawer_on        : ui.is_positions_drawer_on,\n        toggleDrawer                  : ui.togglePositionsDrawer,\n        toggleUnsupportedContractModal: ui.toggleUnsupportedContractModal,\n    })\n)(PositionsDrawer);\n","import React        from 'react';\nimport { localize } from 'App/i18n';\nimport Localize     from './localize.jsx';\nimport Button       from '../Form/button.jsx';\n\nconst toggleFade = ({ node, opacity, direction, color }) => {\n    const sub_or_add = direction === -1 && opacity > 0.1 ? -1 : 1;\n    let reduction = 0.05;\n    if (opacity < 0.3 && opacity > 0.1) {\n        reduction = 0.01;\n    }\n    const new_opacity = parseFloat(Number(opacity + (sub_or_add * reduction)).toFixed(2));\n\n    node.style.backgroundColor = color.replace(`${opacity})`, `${Number(new_opacity).toFixed(2)})`);\n\n    const stopId = requestAnimationFrame(toggleFade.bind(this,\n        {\n            node,\n            opacity  : new_opacity,\n            direction: sub_or_add,\n            color    : node.style.backgroundColor,\n        },\n    ));\n    if (new_opacity >= 1) {\n        cancelAnimationFrame(stopId);\n        // Set the initial value to follow CSS\n        node.querySelectorAll('div')\n            .forEach(element => {\n                element.style.backgroundColor = '';\n            });\n        node.style.backgroundColor = '';\n    }\n};\n\nconst startAnimation = (node) => {\n    const children_background_color = getComputedStyle(node.firstElementChild).getPropertyValue('background-color');\n    const converted_rgba = children_background_color.startsWith('rgba') ?\n        children_background_color :\n        `rgba(${children_background_color\n            .replace('rgb(', '')\n            .replace(')', '')\n            .split(', ')\n            .join(',')},1)`;\n\n    // Set initial value for individual rows\n    node.querySelectorAll('div')\n        .forEach(element => {\n            element.style.backgroundColor = 'transparent';\n        });\n    node.style.backgroundColor = converted_rgba; // compensate for removal background of individual rows\n\n    const direction            = -1; // lower the opacity\n    requestAnimationFrame(toggleFade.bind(this,\n        {\n            node,\n            opacity: 1,\n            direction,\n            color  : converted_rgba,\n        },\n    ));\n};\n\n/**\n * Handle animation for dropdown, this is imperative, with DOM manipulation.\n */\nconst onClick = () => {\n    const dropdown = document.querySelector('.cq-menu-dropdown');\n    if (dropdown.classList.contains('open')) return;\n    document.querySelector('.cq-symbol-select-btn').click();\n    const left_panel = document.querySelector('.cq-filter-panel');\n    left_panel.querySelector('.ic-volidx').parentNode.click();\n\n    const node = document\n        .querySelector('.category-volidx')\n        .querySelector('.category-content');\n    setTimeout(startAnimation.bind(this, node), 600);\n};\n\nconst MarketIsClosedOverlay = () => (\n    <div className='market-is-closed-overlay'>\n        <p><Localize i18n_default_text='Market is closed.' /></p>\n        <p><Localize i18n_default_text='Try Volatility Indices which simulate real-world market volatility and are open 24/7.' /></p>\n        <Button\n            className='market-is-closed-overlay__button'\n            classNameSpan='market-is-closed-overlay__button--span'\n            onClick={onClick}\n            text={localize('Try Volatility Indices')}\n        />\n    </div>\n);\n\nexport default MarketIsClosedOverlay;\n","import { toJS }    from 'mobx';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nclass Test extends React.Component {\n    state         = { is_visible: false };\n    setVisibility = this.stateVisibility.bind(this);\n    styles        = {\n        container: {\n            fontSize  : '10px',\n            lineHeight: '15px',\n            position  : 'absolute',\n            zIndex    : 1,\n            background: 'rgba(0, 0, 0, 0.8)',\n            color     : '#ccc',\n            padding   : '10px',\n            marginTop : '-10px',\n            display   : 'none',\n            overflowY : 'auto',\n            height    : '100%',\n        },\n        prop_name: {\n            color: 'yellowgreen',\n        },\n    };\n\n    componentDidMount = () => {\n        document.addEventListener('keyup', this.setVisibility, false);\n    };\n\n    componentWillUnmount = () => {\n        document.removeEventListener('keyup', this.setVisibility);\n    };\n\n    stateVisibility(e) {\n        if (e.ctrlKey && e.keyCode === 83) { // Ctrl + S\n            this.setState({ is_visible: !this.state.is_visible });\n        }\n    }\n\n    render() {\n        return (\n            <code id='state_info' style={Object.assign({}, this.styles.container, { display: this.state.is_visible ? 'block' : 'none' })}>\n                {this.props.entries.sort().map(([k, v]) => k !== 'root_store' && typeof v !== 'function' && <div key={k}><span style={this.styles.prop_name}>{k}:</span> {v && typeof v === 'object' ? JSON.stringify(toJS(v), null, 1) : v}</div>)}\n            </code>\n        );\n    }\n}\n\nTest.propTypes = {\n    entries: PropTypes.array,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        entries: Object.entries(modules.trade),\n    })\n)(Test);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport UILoader     from 'App/Components/Elements/ui-loader.jsx';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\nimport ContractType from '../../Containers/contract-type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\nimport TradeParams  from '../../Containers/trade-params.jsx';\n\nconst ScreenLarge = ({ is_contract_visible, is_trade_enabled, is_blurred }) => (\n    <div className={classNames('sidebar__items', {\n        'sidebar__items--blur': is_contract_visible || is_blurred,\n    })}\n    >\n        {!is_trade_enabled && !is_contract_visible ?\n            <UILoader />\n            :\n            <React.Fragment>\n                <Fieldset className='trade-container__fieldset trade-types'>\n                    <ContractType />\n                </Fieldset>\n                <TradeParams />\n                <div className='purchase-container'>\n                    <Purchase />\n                </div>\n            </React.Fragment>\n        }\n    </div>\n);\n\nScreenLarge.propTypes = {\n    is_blurred         : PropTypes.bool,\n    is_contract_visible: PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default ScreenLarge;\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport Lazy        from 'App/Containers/Lazy';\nimport ScreenLarge from './screen-large.jsx';\n\nconst FormLayout = ({\n    is_contract_visible,\n    is_blurred,\n    is_mobile,\n    is_trade_enabled,\n}) => (\n    is_mobile ?\n        <Lazy\n            ctor={() => import(/* webpackChunkName: \"screen-small\" */'./screen-small.jsx')}\n            should_load={is_mobile}\n            is_trade_enabled={is_trade_enabled}\n        />\n        :\n        <ScreenLarge\n            is_contract_visible={is_contract_visible}\n            is_trade_enabled={is_trade_enabled}\n            is_blurred={is_blurred}\n        />\n);\n\nFormLayout.propTypes = {\n    is_blurred         : PropTypes.bool,\n    is_contract_visible: PropTypes.bool,\n    is_mobile          : PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default FormLayout;\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport ChartLoader           from 'App/Components/Elements/chart-loader.jsx';\nimport UILoader              from 'App/Components/Elements/ui-loader.jsx';\nimport { connect }           from 'Stores/connect';\nimport PositionsDrawer       from 'App/Components/Elements/PositionsDrawer';\nimport MarketIsClosedOverlay from 'App/Components/Elements/market-is-closed-overlay.jsx';\nimport Lazy                  from 'App/Containers/Lazy';\nimport Test                  from './test.jsx';\nimport FormLayout            from '../Components/Form/form-layout.jsx';\nimport { isDigitTradeType }  from '../Helpers/digits';\n\nconst SmartChart = React.lazy(() => import(/* webpackChunkName: \"smart_chart\" */'../../SmartChart'));\n\nclass Trade extends React.Component {\n    componentDidMount() {\n        this.props.showPositions();\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.hidePositions();\n        if (this.props.is_contract_mode) {\n            this.props.onCloseContract();\n        }\n        this.props.onUnmount();\n    }\n\n    render() {\n        const form_wrapper_class           = this.props.is_mobile ? 'mobile-wrapper' : 'sidebar__container desktop-only';\n        const should_show_bottom_widgets   = this.props.is_digit_contract && this.props.is_contract_mode;\n        const should_show_last_digit_stats = isDigitTradeType(this.props.contract_type) && !this.props.is_contract_mode;\n        const is_chart_visible             = (this.props.is_chart_loading || !this.props.is_chart_ready);\n\n        return (\n            <div id='trade_container' className='trade-container'>\n                <PositionsDrawer />\n                <div className='chart-container'>\n                    <Lazy\n                        ctor={() => import(/* webpackChunkName: \"notification-messages\" */'App/Containers/notification-messages.jsx')}\n                        has_progress={false}\n                        should_load={true}\n                    />\n                    { this.props.symbol &&\n                        <React.Suspense fallback={<UILoader />} >\n                            <ChartLoader is_visible={is_chart_visible} />\n                            <SmartChart\n                                chart_id={this.props.chart_id}\n                                chart_type={this.props.chart_type}\n                                Digits={\n                                    <Lazy\n                                        ctor={() => import(/* webpackChunkName: \"digits\", webpackPrefetch: true */'Modules/Contract/Components/Digits')}\n                                        should_load={this.props.is_digit_contract}\n                                        is_trade_page\n                                        contract_info={this.props.contract_info}\n                                        digits_info={this.props.digits_info}\n                                        display_status={this.props.display_status}\n                                        is_digit_contract={this.props.is_digit_contract}\n                                        is_ended={this.props.is_ended}\n                                    />\n                                }\n                                InfoBox={\n                                    <Lazy\n                                        ctor={() => import(/* webpackChunkName: \"info-box\", webpackPrefetch: true */'Modules/Contract/Components/InfoBox')}\n                                        should_load={true}\n                                        has_progress={false}\n                                        is_trade_page\n                                        contract_info={this.props.contract_info}\n                                        error_message={this.props.error_message}\n                                        is_contract_mode={this.props.is_contract_mode}\n                                        removeError={this.props.removeError}\n                                        onClose={this.props.onCloseContract}\n                                    />\n                                }\n                                end_epoch={this.props.end_epoch}\n                                granularity={this.props.granularity}\n                                is_trade_page\n                                is_static_chart={this.props.is_static_chart}\n                                onSymbolChange={this.props.onSymbolChange}\n                                scroll_to_epoch={this.props.scroll_to_epoch}\n                                scroll_to_offset={this.props.scroll_to_offset}\n                                start_epoch={this.props.start_epoch}\n                                should_show_bottom_widgets={should_show_bottom_widgets}\n                                should_show_last_digit_stats={should_show_last_digit_stats}\n                                symbol={this.props.symbol}\n                            />\n                        </React.Suspense>\n                    }\n                    {/* Remove Test component for debugging below for production release */}\n                    <Test />\n                </div>\n                <div\n                    className={form_wrapper_class}\n                    onClick={this.props.is_contract_mode ? () => {\n                        this.props.onCloseContract();\n                    } : null}\n                    style={{ cursor: this.props.is_contract_mode ? 'pointer' : 'initial' }}\n                >\n                    { this.props.is_market_closed && <MarketIsClosedOverlay />}\n                    <FormLayout\n                        is_mobile={this.props.is_mobile}\n                        is_contract_visible={this.props.is_contract_mode}\n                        is_trade_enabled={this.props.is_trade_enabled}\n                        is_blurred={this.props.is_market_closed}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nTrade.propTypes = {\n    chart_id         : PropTypes.string,\n    chart_type       : PropTypes.string,\n    contract_info    : PropTypes.object,\n    contract_type    : PropTypes.string,\n    digits_info      : PropTypes.object,\n    display_status   : PropTypes.string,\n    end_epoch        : PropTypes.number,\n    granularity      : PropTypes.number,\n    hidePositions    : PropTypes.func,\n    is_chart_loading : PropTypes.bool,\n    is_chart_ready   : PropTypes.bool,\n    is_contract_mode : PropTypes.bool,\n    is_digit_contract: PropTypes.bool,\n    is_ended         : PropTypes.bool,\n    is_market_closed : PropTypes.bool,\n    is_mobile        : PropTypes.bool,\n    is_static_chart  : PropTypes.bool,\n    is_trade_enabled : PropTypes.bool,\n    onClickNewTrade  : PropTypes.func,\n    onCloseContract  : PropTypes.func,\n    onMount          : PropTypes.func,\n    onSymbolChange   : PropTypes.func,\n    onUnmount        : PropTypes.func,\n    purchase_info    : PropTypes.object,\n    scroll_to_epoch  : PropTypes.number,\n    scroll_to_offset : PropTypes.number,\n    showPositions    : PropTypes.func,\n    start_epoch      : PropTypes.number,\n    symbol           : PropTypes.string,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        contract_info                      : modules.contract_trade.contract_info,\n        digits_info                        : modules.contract_trade.digits_info,\n        display_status                     : modules.contract_trade.display_status,\n        error_message                      : modules.contract_trade.error_message,\n        is_ended                           : modules.contract_trade.is_ended,\n        is_digit_contract                  : modules.contract_trade.is_digit_contract,\n        onCloseContract                    : modules.contract_trade.onCloseContract,\n        removeError                        : modules.contract_trade.removeErrorMessage,\n        chart_id                           : modules.smart_chart.chart_id,\n        chart_type                         : modules.smart_chart.chart_type,\n        scroll_to_epoch                    : modules.smart_chart.scroll_to_left_epoch,\n        scroll_to_offset                   : modules.smart_chart.scroll_to_left_epoch_offset,\n        granularity                        : modules.smart_chart.granularity,\n        end_epoch                          : modules.smart_chart.end_epoch,\n        start_epoch                        : modules.smart_chart.start_epoch,\n        is_chart_loading                   : modules.smart_chart.is_chart_loading,\n        is_chart_ready                     : modules.smart_chart.is_chart_ready,\n        is_contract_mode                   : modules.smart_chart.is_contract_mode,\n        is_static_chart                    : modules.smart_chart.is_static_chart,\n        contract_type                      : modules.trade.contract_type,\n        is_market_closed                   : modules.trade.is_market_closed,\n        is_trade_enabled                   : modules.trade.is_trade_enabled,\n        onClickNewTrade                    : modules.trade.onClickNewTrade,\n        onMount                            : modules.trade.onMount,\n        onSymbolChange                     : modules.trade.onChange,\n        onUnmount                          : modules.trade.onUnmount,\n        purchase_info                      : modules.trade.purchase_info,\n        symbol                             : modules.trade.symbol,\n        hidePositions                      : ui.hidePositionsFooterToggle,\n        showPositions                      : ui.showPositionsFooterToggle,\n        has_only_forward_starting_contracts: ui.has_only_forward_starting_contracts,\n        is_mobile                          : ui.is_mobile,\n        setHasOnlyForwardingContracts      : ui.setHasOnlyForwardingContracts,\n    })\n)(Trade);\n","import { lazy }                       from 'react';\nimport { Redirect as RouterRedirect } from 'react-router-dom';\nimport { Redirect }                   from 'App/Containers/Redirect';\nimport { localize }                   from 'App/i18n';\nimport { routes }                     from 'Constants';\n\nimport Trade from 'Modules/Trading';\n\nconst ContractDetails = lazy(() => import(/* webpackChunkName: \"contract\" */  'Modules/Contract'));\n\n// Reports Routes\nconst Reports       = lazy(() => import(/* webpackChunkName: \"reports\" */        'Modules/Reports'));\nconst OpenPositions = lazy(() => import(/* webpackChunkName: \"open_positions\" */ 'Modules/Reports/Containers/open-positions.jsx'));\nconst ProfitTable   = lazy(() => import(/* webpackChunkName: \"profit_table\" */   'Modules/Reports/Containers/profit-table.jsx'));\nconst Statement     = lazy(() => import(/* webpackChunkName: \"statement\" */      'Modules/Reports/Containers/statement.jsx'));\n\n// Error Routes\nconst Page404 = lazy(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404'));\n\nconst initRoutesConfig = () => ([\n    { path: routes.contract,  component: ContractDetails, title: localize('Contract Details'),  is_authenticated: true },\n    { path: routes.index,     component: RouterRedirect,  title: '',                            to: routes.trade },\n    {\n        path            : routes.reports,\n        component       : Reports,\n        is_authenticated: true,\n        title           : localize('Reports'),\n        routes          : [\n            { path: routes.positions, component: OpenPositions, title: localize('Open Positions'), icon_component: 'IconOpenPositions', default: true },\n            { path: routes.profit,    component: ProfitTable,   title: localize('Profit Table'),   icon_component: 'IconProfitTable' },\n            { path: routes.statement, component: Statement,     title: localize('Statement'),      icon_component: 'IconStatement' },\n        ],\n    },\n    { path: routes.trade,     component: Trade,           title: localize('Trade'),    exact: true },\n    { path: routes.error404,  component: Page404,         title: localize('Error 404') },\n    { path: routes.redirect,  component: Redirect,        title: localize('Redirect') },\n]);\n\nlet routesConfig;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default  = { component: Page404, title: localize('Error 404') };\n\nconst getRoutesConfig = () => {\n    if (!routesConfig) {\n        routesConfig = initRoutesConfig();\n    }\n    routesConfig.push(route_default);\n    return routesConfig;\n};\n\nexport default getRoutesConfig;\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { NavLink }     from 'react-router-dom';\nimport {\n    findRouteByPath,\n    normalizePath }    from './helpers';\nimport getRoutesConfig from '../../Constants/routes-config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ active_class, to, children, ...props }) => {\n    const path  = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig());\n\n    if (!route) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return (\n        to ?\n            <NavLink to={path} activeClassName={active_class || 'active'} exact={route.exact} {...props}>\n                {children}\n            </NavLink>\n            :\n            <a href='javascript:;' {...props}>\n                {children}\n            </a>\n    );\n};\n\nBinaryLink.propTypes = {\n    active_class: PropTypes.string,\n    children    : PropTypes.object,\n    to          : PropTypes.string,\n};\n\nexport default BinaryLink;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { urlFor }   from '_common/url';\nimport PageError    from 'Modules/PageError';\nimport Localize     from './localize.jsx';\n\nconst LoginPrompt = ({\n    onLogin,\n    onSignup,\n    page_title,\n}) => (\n    <PageError\n        header={\n            <Localize\n                i18n_default_text='{{page_title}} page is only<0 />available for existing clients.'\n                values={{ page_title: page_title || 'This' }}\n                components={[ <br key={0} /> ]}\n            />\n        }\n        messages={[\n            <Localize\n                key={0}\n                i18n_default_text='If you have an active account, please <0>Log in</0> for full access. Otherwise, please <1>Sign up</1> to start trading.'\n                components={[\n                    <a key={0} className='link' href='javascript:;' onClick={onLogin} />,\n                    <a key={1} className='link' href='javascript:;' onClick={onSignup} />,\n                ]}\n            />,\n        ]}\n    />\n);\n\nLoginPrompt.propTypes = {\n    onLogin   : PropTypes.func,\n    onSignup  : PropTypes.func,\n    page_title: PropTypes.string,\n};\n\n// TODO - Remove this default setting once sign-up has been integrated to app 2\nLoginPrompt.defaultProps = {\n    onSignup: () => { window.open(urlFor('new-account', undefined, undefined, true)); },\n};\n\nexport default LoginPrompt;\n\n","import React               from 'react';\nimport {\n    Redirect,\n    Route }                from 'react-router-dom';\nimport { redirectToLogin } from '_common/base/login';\nimport BinarySocket        from '_common/base/socket_base';\nimport Language            from '_common/language';\nimport routes              from 'Constants/routes';\nimport { connect }         from 'Stores/connect';\nimport LoginPrompt         from '../Elements/login-prompt.jsx';\nimport { default_title }   from '../../Constants/app-config';\n\nconst RouteWithSubRoutes = route => {\n    const renderFactory = props => {\n        let result = null;\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else {\n            result = (\n                (route.is_authenticated && !route.is_logged_in) ?\n                    <LoginPrompt onLogin={redirectToLogin} page_title={route.title} />\n                    :\n                    <route.component {...props} routes={route.routes} />\n            );\n        }\n\n        Language.setCookie();\n        const title = route.title ? `${route.title} | ` : '';\n        document.title = `${ title }${ default_title }`;\n        BinarySocket.wait('website_status').then(() => {\n            route.pushDataLayer({ event: 'page_load' });\n        });\n        return result;\n    };\n\n    return <Route\n        exact={route.exact}\n        path={route.path}\n        render={renderFactory}\n    />;\n};\n\nexport { RouteWithSubRoutes as RouteWithSubRoutesRender }; // For tests\n\nexport default connect(({ gtm }) => ({\n    pushDataLayer: gtm.pushDataLayer,\n}))(RouteWithSubRoutes);\n","import React              from 'react';\nimport { Switch }         from 'react-router-dom';\nimport getRoutesConfig    from 'App/Constants/routes-config';\nimport RouteWithSubRoutes from './route-with-sub-routes.jsx';\n\nconst BinaryRoutes = (props) => (\n    <React.Suspense fallback={<div />}>\n        <Switch>\n            {\n                getRoutesConfig().map((route, idx) => (\n                    <RouteWithSubRoutes key={idx} {...route} {...props} />\n                ))\n            }\n        </Switch>\n    </React.Suspense>\n\n);\n\nexport default BinaryRoutes;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ButtonLink   from 'App/Components/Routes/button-link.jsx';\nimport Localize     from 'App/Components/Elements/localize.jsx';\n\nconst PageError = ({\n    buttonOnClick,\n    error_code,\n    messages,\n    header,\n    redirect_label,\n    redirect_url,\n}) => (\n    <div className='page-error__container'>\n        <div className='page-error__box'>\n            <h3 className='page-error__header'>\n                {header}\n            </h3>\n            <div className='page-error__message-wrapper'>\n                <span className='page-error__message'>\n                    { messages.map((message, index) => (\n                        message.has_html ?\n                            <p key={index} dangerouslySetInnerHTML={{ __html: message.message }} />\n                            :\n                            <p key={index}>{ message }</p>\n                    ))}\n                    { error_code &&\n                    <React.Fragment>\n                        <br />\n                        <p className='page-error__code'><Localize i18n_default_text={'Error Code: {{error_code}}'} values={{ error_code }} /></p>\n                    </React.Fragment>\n                    }\n                </span>\n            </div>\n            { redirect_label &&\n            <ButtonLink\n                className='page-error__btn btn--primary btn--primary--orange'\n                to={redirect_url}\n                onClick={buttonOnClick}\n            >\n                <span className='page-error__btn-text btn__text'>\n                    {redirect_label}\n                </span>\n            </ButtonLink>\n            }\n        </div>\n    </div>\n);\n\nPageError.propTypes = {\n    buttonOnClick : PropTypes.func,\n    error_code    : PropTypes.number,\n    header        : PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    messages      : PropTypes.array,\n    redirect_label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    redirect_url  : PropTypes.string,\n};\n\nexport default PageError;\n","const digitTypesMap = [ 'even_odd', 'match_diff', 'over_under' ];\n\nexport const isDigitTradeType = (contract_type) => digitTypesMap.includes(contract_type);\n","const Shortcode = (() => {\n    const extractInfoFromShortcode = (shortcode) => {\n        const info_from_shortcode = {\n            category  : '',\n            underlying: '',\n            barrier_1 : '',\n        };\n\n        const pattern = new RegExp('^([A-Z]+)_((OTC_[A-Z0-9]+)|R_[\\\\d]{2,3}|[A-Z]+)'); // Used to get market name from shortcode\n        const extracted = pattern.exec(shortcode);\n        if (extracted !== null) {\n            info_from_shortcode.category   = extracted[1].toLowerCase();\n            info_from_shortcode.underlying = extracted[2];\n\n            if (/^(CALL|PUT)$/i.test(info_from_shortcode.category)) {\n                info_from_shortcode.barrier_1 = shortcode.split('_').slice(-2)[0];\n            }\n        }\n\n        return info_from_shortcode;\n    };\n\n    const isHighLow = ({ shortcode = '', shortcode_info = '' }) => {\n        const info_from_shortcode = shortcode ? extractInfoFromShortcode(shortcode) : shortcode_info;\n        return (info_from_shortcode && info_from_shortcode.barrier_1) ? !/^S0P$/.test(info_from_shortcode.barrier_1) : false;\n    };\n\n    return {\n        extractInfoFromShortcode,\n        isHighLow,\n    };\n})();\n\nmodule.exports = Shortcode;\n","export const website_domain = 'Deriv.app';\nexport const website_name   = 'Deriv';\nexport const default_title  = website_name;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport Icon              from 'Assets/icon.jsx';\n\nclass Tooltip extends React.PureComponent {\n    state = {\n        show_tooltip_balloon_icon: false,\n    }\n\n    onMouseEnter = () => {\n        this.setState({ show_tooltip_balloon_icon: true });\n    }\n\n    onMouseLeave = () => {\n        this.setState({ show_tooltip_balloon_icon: false });\n    }\n\n    render() {\n        const {\n            alignment,\n            children,\n            className,\n            classNameIcon,\n            has_error,\n            icon, // only question or info accepted\n            message,\n        } = this.props;\n\n        const icon_class = classNames(classNameIcon, icon);\n        return (\n            <span\n                className={classNames(className, 'tooltip', { 'tooltip--error': has_error })}\n                data-tooltip={message || undefined}\n                data-tooltip-pos={alignment}\n            >\n                {icon === 'info' &&\n                    <React.Fragment>\n                        <Icon\n                            icon='IconInfoOutline'\n                            className={icon_class}\n                            onMouseEnter={this.onMouseEnter}\n                            onMouseLeave={this.onMouseLeave}\n                        />\n                        <Icon\n                            icon='IconInfoBlue'\n                            className={classNames(`${classNameIcon}-balloon-icon`, 'tooltip__balloon-icon', {\n                                'tooltip__balloon-icon--show': this.state.show_tooltip_balloon_icon,\n                            })}\n                        />\n                    </React.Fragment>\n                }\n                {icon === 'question' && <Icon icon='IconQuestion' className={icon_class} />}\n                {icon === 'dot'      && <Icon icon='IconRedDot' className={icon_class} />}\n                {children}\n            </span>\n        );\n    }\n}\n\nTooltip.propTypes = {\n    alignment    : PropTypes.string,\n    children     : PropTypes.node,\n    className    : PropTypes.string,\n    classNameIcon: PropTypes.string,\n    has_error    : PropTypes.bool,\n    icon         : PropTypes.string,\n    message      : PropTypes.string,\n};\n\nexport default Tooltip;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport Icon      from 'Assets/icon.jsx';\nimport Button    from '../button.jsx';\n\nconst IncrementButtons = ({\n    decrementValue,\n    incrementValue,\n    max_is_disabled,\n    min_is_disabled,\n}) => (\n    <React.Fragment>\n        <Button\n            className={'input-wrapper__button input-wrapper__button--increment'}\n            is_disabled={max_is_disabled}\n            onClick={incrementValue}\n            tabIndex='-1'\n        >\n            <Icon icon='IconPlus' className={'input-wrapper__icon input-wrapper__icon--plus' } is_disabled={max_is_disabled} />\n        </Button>\n        <Button\n            className={'input-wrapper__button input-wrapper__button--decrement'}\n            is_disabled={min_is_disabled}\n            onClick={decrementValue}\n            tabIndex='-1'\n        >\n            <Icon icon='IconMinus' className={'input-wrapper__icon input-wrapper__icon--minus'} is_disabled={min_is_disabled} />\n        </Button>\n    </React.Fragment>\n);\n\nIncrementButtons.propTypes = {\n    decrementValue : PropTypes.func,\n    incrementValue : PropTypes.func,\n    max_is_disabled: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n    min_is_disabled: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n};\n\nexport default IncrementButtons;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst Input = ({\n    changeValue,\n    checked,\n    className,\n    classNameInlinePrefix,\n    data_value,\n    data_tip,\n    display_value,\n    fractional_digits,\n    id,\n    inline_prefix,\n    is_autocomplete_disabled,\n    is_disabled,\n    is_hj_whitelisted,\n    is_incrementable,\n    is_read_only,\n    max_length,\n    name,\n    onClick,\n    onKeyPressed,\n    placeholder,\n    required,\n    type,\n}) => {\n    const onChange = (e) => {\n        /**\n         * fix for Safari\n         * we have to keep track of the current cursor position, update the value in store,\n         * then reset the cursor position to the current cursor position\n         */\n        // TODO: find better ways to target browsers\n        if (navigator.userAgent.indexOf('Safari') !== -1 && type !== 'checkbox') {\n            const cursor = e.target.selectionStart;\n            changeValue(e, (evt) => {\n                evt.target.selectionEnd = cursor; // reset the cursor position in callback\n            });\n        } else {\n            changeValue(e);\n        }\n    };\n\n    return (\n        <React.Fragment>\n            {!!inline_prefix &&\n            <div className={classNameInlinePrefix}>\n                <span className={classNames(classNameInlinePrefix ? `${classNameInlinePrefix}--symbol` : '', 'symbols', `symbols--${inline_prefix.toLowerCase()}`)} />\n            </div>\n            }\n            <input\n                autoComplete={is_autocomplete_disabled ? 'off' : undefined}\n                checked={checked}\n                className={classNames(className)}\n                data-for={`error_tooltip_${name}`}\n                data-hj-whitelist={is_hj_whitelisted}\n                data-tip={data_tip}\n                data-value={data_value}\n                disabled={is_disabled}\n                id={id}\n                maxLength={fractional_digits ? max_length + fractional_digits + 1 : max_length}\n                name={name}\n                onChange={onChange}\n                onClick={onClick}\n                onKeyDown={is_incrementable ? onKeyPressed : undefined}\n                placeholder={placeholder || undefined}\n                readOnly={is_read_only}\n                required={required || undefined}\n                type={type === 'number' ? 'text' : type}\n                value={display_value || ''}\n            />\n        </React.Fragment>\n    );\n};\n\nInput.propTypes = {\n    changeValue: PropTypes.func,\n    checked    : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className            : PropTypes.string,\n    classNameInlinePrefix: PropTypes.string,\n    data_tip             : PropTypes.string,\n    data_value           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    display_value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    fractional_digits       : PropTypes.number,\n    id                      : PropTypes.string,\n    inline_prefix           : PropTypes.string,\n    is_autocomplete_disabled: PropTypes.bool,\n    is_disabled             : PropTypes.string,\n    is_hj_whitelisted       : PropTypes.bool,\n    is_incrementable        : PropTypes.bool,\n    is_read_only            : PropTypes.bool,\n    max_length              : PropTypes.number,\n    name                    : PropTypes.string,\n    onClick                 : PropTypes.func,\n    onKeyPressed            : PropTypes.func,\n    placeholder             : PropTypes.string,\n    required                : PropTypes.bool,\n    type                    : PropTypes.string,\n    value                   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Input;\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport { isCryptocurrency }      from '_common/base/currency_base';\nimport Tooltip                   from 'App/Components/Elements/tooltip.jsx';\nimport IncrementButtons          from './increment-buttons.jsx';\nimport Input                     from './input.jsx';\n\nclass InputField extends React.Component {\n    render () {\n        const {\n            checked,\n            className,\n            classNameInlinePrefix,\n            classNameInput,\n            classNamePrefix,\n            currency,\n            data_tip,\n            data_value,\n            error_messages,\n            fractional_digits,\n            helper,\n            id,\n            inline_prefix,\n            is_autocomplete_disabled,\n            is_disabled,\n            is_float,\n            is_hj_whitelisted = false,\n            is_incrementable,\n            is_negative_disabled,\n            is_read_only = false,\n            is_signed = false,\n            is_unit_at_right = false,\n            label,\n            max_length,\n            max_value,\n            min_value,\n            name,\n            onChange,\n            onClick,\n            placeholder,\n            prefix,\n            required,\n            type,\n            unit,\n            value,\n        } = this.props;\n        const Icon = this.props.icon;\n        const has_error       = error_messages && !!error_messages.length;\n        let has_valid_length  = true;\n        const max_is_disabled = max_value && +value >= +max_value;\n        const min_is_disabled = min_value && +value <= +min_value;\n\n        const changeValue = (e, callback) => {\n            if (unit) {\n                e.target.value = e.target.value.replace(unit, '').trim();\n            }\n\n            if (e.target.value === value && type !== 'checkbox') {\n                return;\n            }\n\n            if (type === 'number' || type === 'tel') {\n                const is_empty = !e.target.value || e.target.value === '' || e.target.value === '  ';\n                const signed_regex = is_signed ? '^([+-.0-9])' : '^';\n\n                const is_number = new RegExp(`${signed_regex}(\\\\d*)?${is_float ? '(\\\\.\\\\d+)?' : ''}$`)\n                    .test(e.target.value);\n\n                const is_not_completed_number = is_float && new RegExp(`${signed_regex}(\\\\.|\\\\d+\\\\.)?$`)\n                    .test(e.target.value);\n                // This regex check whether there is any zero at the end of fractional part or not.\n                const has_zero_at_end = new RegExp(`${signed_regex}(\\\\d+)?\\\\.(\\\\d+)?[0]+$`)\n                    .test(e.target.value);\n\n                const is_scientific_notation = /e/.test(`${+e.target.value}`);\n\n                if (max_length && fractional_digits) {\n                    has_valid_length = new RegExp(`${signed_regex}(\\\\d{0,${max_length}})(\\\\.\\\\d{0,${fractional_digits}})?$`)\n                        .test(e.target.value);\n                }\n\n                if (((is_number) || is_empty) && has_valid_length) {\n                    e.target.value = is_empty || is_signed || has_zero_at_end || is_scientific_notation || type === 'tel'\n                        ? e.target.value\n                        : +e.target.value;\n                } else if (!is_not_completed_number) {\n                    e.target.value = value;\n                    return;\n                }\n            }\n\n            onChange(e);\n            if (callback) {\n                callback(e);\n            }\n        };\n\n        const getDecimals = (val) => {\n            const array_value = typeof val === 'string' ? val.split('.') : val.toString().split('.');\n            return array_value && array_value.length > 1 ? array_value[1].length : 0;\n        };\n\n        const incrementValue = () => {\n            if (max_is_disabled) return;\n            let increment_value;\n\n            const decimal_places = value ? getDecimals(value) : 0;\n            const is_crypto      = !!currency && isCryptocurrency(currency);\n\n            if (is_crypto || (!currency && is_float)) {\n                const new_value = parseFloat(+value) + parseFloat(1 * 10 ** (0 - decimal_places));\n                increment_value = parseFloat(new_value).toFixed(decimal_places);\n            } else {\n                increment_value = parseFloat((+value) + 1).toFixed(decimal_places);\n            }\n            onChange({ target: { value: increment_value, name } });\n        };\n\n        const calculateDecrementedValue = () => {\n            let decrement_value;\n\n            const decimal_places = value ? getDecimals(value) : 0;\n            const is_crypto      = !!currency && isCryptocurrency(currency);\n\n            if (is_crypto || (!currency && is_float)) {\n                const new_value = parseFloat(+value) - parseFloat(1 * 10 ** (0 - decimal_places));\n                decrement_value = parseFloat(new_value).toFixed(decimal_places);\n            } else {\n                decrement_value = parseFloat((+value) - 1).toFixed(decimal_places);\n            }\n            return decrement_value;\n        };\n\n        const decrementValue = () => {\n            if (!value || min_is_disabled) return;\n            const decrement_value = calculateDecrementedValue();\n            if (is_negative_disabled && decrement_value < 0) return;\n            onChange({ target: { value: decrement_value, name } });\n        };\n\n        const onKeyPressed = (e) => {\n            if (e.keyCode === 38) incrementValue(); // up-arrow pressed\n            if (e.keyCode === 40) decrementValue(); // down-arrow pressed\n        };\n\n        let display_value = value;\n\n        if (unit) {\n            display_value = is_unit_at_right ? `${value} ${unit}` : `${unit} ${value}`;\n        }\n\n        const is_increment_input = is_incrementable && (type === 'number' || type === 'tel');\n\n        const input =\n            <Input\n                changeValue={changeValue}\n                checked={checked}\n                className={classNames(is_increment_input ? 'input-wrapper__input' : '', inline_prefix ? 'input--has-inline-prefix' : '', 'input', { 'input--error': has_error }, classNameInput)}\n                classNameInlinePrefix={classNameInlinePrefix}\n                data_tip={data_tip}\n                data_value={data_value}\n                display_value={display_value}\n                fractional_digits={fractional_digits}\n                has_error={has_error}\n                id={id}\n                inline_prefix={inline_prefix}\n                is_autocomplete_disabled={is_autocomplete_disabled}\n                is_disabled={is_disabled}\n                is_hj_whitelisted={is_hj_whitelisted}\n                is_incrementable={is_increment_input}\n                is_read_only={is_read_only}\n                max_length={max_length}\n                name={name}\n                onClick={onClick}\n                onKeyPressed={onKeyPressed}\n                placeholder={placeholder}\n                required={required}\n                type={type}\n            />;\n\n        const increment_buttons =\n            <IncrementButtons\n                max_is_disabled={max_is_disabled}\n                incrementValue={incrementValue}\n                min_is_disabled={min_is_disabled || (is_negative_disabled && calculateDecrementedValue() < 0)}\n                decrementValue={decrementValue}\n            />;\n\n        const input_tooltip =\n            <Tooltip\n                className={classNames('', { 'tooltip--with-label': label })}\n                alignment='left'\n                message={has_error ? error_messages[0] : null}\n                has_error={has_error}\n            >\n                {!!label &&\n                <label htmlFor={name} className='input-field__label'>{label}</label>\n                }\n                {!!helper &&\n                <span className='input-field__helper'>{helper}</span>\n                }\n                {is_increment_input ?\n                    <div className='input-wrapper'>\n                        {increment_buttons}\n                        {input}\n                    </div>\n                    :\n                    input\n                }\n            </Tooltip>;\n\n        return (\n            <React.Fragment>\n                {!!prefix &&\n                <div className={classNamePrefix}>\n                    <span className={classNames(`${classNamePrefix}--symbol`, 'symbols', `symbols--${prefix.toLowerCase()}`)} />\n                </div>\n                }\n                <div\n                    className={classNames('input-field', className)}\n                >\n                    {this.props.icon &&\n                    <Icon onClick={onClick} />\n                    }\n                    {input_tooltip}\n                </div>\n            </React.Fragment>\n        );\n\n    }\n}\n\n// ToDo: Refactor input_field\n// supports more than two different types of 'value' as a prop.\n// Quick Solution - Pass two different props to input field.\nInputField.propTypes = {\n    checked: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className            : PropTypes.string,\n    classNameInlinePrefix: PropTypes.string,\n    classNameInput       : PropTypes.string,\n    classNamePrefix      : PropTypes.string,\n    currency             : PropTypes.string,\n    error_messages       : MobxPropTypes.arrayOrObservableArray,\n    fractional_digits    : PropTypes.number,\n    helper               : PropTypes.string,\n    icon                 : PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.node,\n    ]),\n    id                      : PropTypes.string,\n    inline_prefix           : PropTypes.string,\n    is_autocomplete_disabled: PropTypes.bool,\n    is_disabled             : PropTypes.string,\n    is_float                : PropTypes.bool,\n    is_hj_whitelisted       : PropTypes.bool,\n    is_incrementable        : PropTypes.bool,\n    is_negative_disabled    : PropTypes.bool,\n    is_read_only            : PropTypes.bool,\n    is_signed               : PropTypes.bool,\n    is_unit_at_right        : PropTypes.bool,\n    label                   : PropTypes.string,\n    max_length              : PropTypes.number,\n    name                    : PropTypes.string,\n    onChange                : PropTypes.func,\n    onClick                 : PropTypes.func,\n    placeholder             : PropTypes.string,\n    prefix                  : PropTypes.string,\n    required                : PropTypes.bool,\n    type                    : PropTypes.string,\n    unit                    : PropTypes.string,\n    value                   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(InputField);\n","import classNames                      from 'classnames';\nimport PropTypes                       from 'prop-types';\nimport React                           from 'react';\nimport { VerticalTabContentContainer } from './vertical-tab-content-container.jsx';\nimport { VerticalTabHeaders }          from './vertical-tab-headers.jsx';\n\nclass VerticalTab extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        if (props.is_routed) {\n            const applicable_routes = props.list.filter(item => (\n                item.path === props.current_path || item.default\n            ));\n            const selected = applicable_routes.length > 1\n                ? applicable_routes[applicable_routes.length - 1]\n                : applicable_routes[0];\n\n            this.state = {\n                selected,\n            };\n        } else {\n            this.state = {\n                selected: props.list[props.selected_index || 0],\n            };\n        }\n    }\n\n    changeSelected = (e) => {\n        this.setState({\n            selected: e,\n        });\n    };\n\n    render() {\n        return (\n            <div\n                className={classNames('vertical-tab', {\n                    'vertical-tab--full-screen': this.props.is_full_width,\n                })}\n            >\n                <VerticalTabHeaders\n                    items={this.props.list}\n                    onChange={this.changeSelected}\n                    selected={this.state.selected}\n                    is_routed={this.props.is_routed}\n                    header_title={this.props.header_title}\n                />\n                <VerticalTabContentContainer\n                    action_bar={this.props.action_bar}\n                    action_bar_classname={this.props.action_bar_classname}\n                    items={this.props.list}\n                    selected={this.state.selected}\n                    is_routed={this.props.is_routed}\n                />\n            </div>\n        );\n    }\n}\n\nVerticalTab.propTypes = {\n    action_bar: PropTypes.arrayOf(\n        PropTypes.shape({\n            component: PropTypes.func,\n            icon     : PropTypes.string,\n            onClick  : PropTypes.func,\n            title    : PropTypes.string,\n        })\n    ),\n    action_bar_classname: PropTypes.string,\n    current_path        : PropTypes.string,\n    header_title        : PropTypes.string,\n    is_full_width       : PropTypes.bool,\n    is_routed           : PropTypes.bool,\n    list                : PropTypes.arrayOf(\n        PropTypes.shape({\n            default: PropTypes.bool,\n            icon   : PropTypes.string,\n            label  : PropTypes.string,\n            path   : PropTypes.string,\n            value  : PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n        })\n    ).isRequired,\n    selected_index: PropTypes.number,\n};\n\nexport default VerticalTab;\n","import React from 'react';\n\nconst Loading = ({ is_invisible, theme, id }) => (\n    <div id={id} className={`barspinner barspinner--${ theme || 'dark'}${is_invisible ? ' invisible' : ''}`}>\n        { Array.from(new Array(5)).map((x, inx) => (\n            <div key={inx} className={`barspinner__rect barspinner__rect--${inx + 1} rect${inx + 1}`} />\n        ))}\n    </div>\n);\n\nexport default Loading;\n","import classNames from 'classnames';\nimport React      from 'react';\n\nconst UnderlyingIcon = ({ market }) => (\n    <div\n        className={classNames(\n            'icons-underlying',\n            `icons-underlying__ic-${market ? market.toUpperCase() : 'unknown'}`\n        )}\n    />\n);\n\nexport { UnderlyingIcon };\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Localize     from 'App/Components/Elements/localize.jsx';\n\nconst ProgressTicks = ({\n    current_tick,\n    ticks_count,\n}) => {\n    const arr_ticks   = [...Array(ticks_count).keys()];\n    return (\n        <div className='progress-slider__ticks'>\n            <span className='progress-slider__ticks-caption'>\n                <Localize i18n_default_text='Tick {{current_tick}}' values={{ current_tick: current_tick.toString() }} />\n            </span>\n            <div className='progress-slider__ticks-wrapper'>\n                {arr_ticks.map(idx =>\n                    <div\n                        key={idx}\n                        className={classNames('progress-slider__ticks-step', {\n                            'progress-slider__ticks-step--marked': (idx + 1) <= parseInt(current_tick),\n                        })}\n                    />\n                )}\n            </div>\n        </div>\n    );\n};\n\nProgressTicks.propTypes = {\n    current_tick: PropTypes.number,\n    ticks_count : PropTypes.number,\n};\n\nexport default ProgressTicks;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport {\n    formatDuration,\n    getDiffDuration } from 'Utils/Date';\n\nconst RemainingTime = ({\n    end_time = null,\n    start_time,\n}) => {\n    if (!+end_time || start_time.unix() > +end_time) {\n        return '';\n    }\n\n    const remaining_time = formatDuration(getDiffDuration(start_time.unix(), end_time));\n\n    return (\n        <div className='remaining-time'>{remaining_time}</div>\n    );\n};\n\nRemainingTime.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        start_time: common.server_time,\n    })\n)(RemainingTime);\n","import classNames            from 'classnames';\nimport PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { connect }           from 'Stores/connect';\nimport ProgressTicks         from './positions-progress-ticks.jsx';\nimport { getTimePercentage } from '../helpers';\nimport RemainingTime         from '../../../../Containers/remaining-time.jsx';\n\nconst ProgressSlider = ({\n    className,\n    current_tick,\n    is_loading,\n    start_time,\n    expiry_time,\n    server_time,\n    ticks_count,\n}) => {\n    const percentage = getTimePercentage(server_time, start_time, expiry_time);\n    return (\n        <div className={classNames('progress-slider', className)}>\n            {(ticks_count) ?\n                <ProgressTicks\n                    current_tick={current_tick}\n                    ticks_count={ticks_count}\n                />\n                :\n                <React.Fragment>\n                    <span className='positions-drawer-card__remaining-time'>\n                        <RemainingTime end_time={expiry_time} />\n                    </span>\n                    {(is_loading || (percentage < 1)) ?\n                        <div className='progress-slider__infinite-loader'>\n                            <div className='progress-slider__infinite-loader--indeterminate' />\n                        </div>\n                        :\n                        /* Calculate line width based on percentage of time left */\n                        <div className='progress-slider__track'>\n                            <div\n                                className={classNames('progress-slider__line', {\n                                    'progress-slider__line--green' : (percentage >= 50),\n                                    'progress-slider__line--orange': (percentage < 50 && percentage >= 20),\n                                    'progress-slider__line--red'   : (percentage < 20),\n                                })}\n                                style={{ width: `${percentage}%` }}\n                            />\n                        </div>\n                    }\n                </React.Fragment>\n            }\n        </div>\n    );\n};\n// Keypress events do not trigger on Safari due to the way it handles input type='range' elements, using focus on the input element also doesn't work for Safari.\n\nProgressSlider.propTypes = {\n    className   : PropTypes.string,\n    current_tick: PropTypes.number,\n    expiry_time : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    is_loading : PropTypes.bool,\n    server_time: PropTypes.object,\n    start_time : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    ticks_count: PropTypes.number,\n};\n\nexport default connect(({ common }) => ({\n    server_time: common.server_time,\n}))(ProgressSlider);\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { Trans }        from 'react-i18next';\n\nconst Localize = ({ i18n_default_text, values, components }) => (\n    <Trans defaults={i18n_default_text} values={values} components={components} />\n);\n\nLocalize.propTypes = {\n    components       : PropTypes.arrayOf(PropTypes.node),\n    i18n_default_text: PropTypes.string,\n    values           : PropTypes.object,\n};\n\nexport default Localize;\n","const Cookies          = require('js-cookie');\nconst getPropertyValue = require('./utility').getPropertyValue;\nconst isEmptyObject    = require('./utility').isEmptyObject;\nconst isProduction     = require('../config').isProduction;\n\nconst getObject = function (key) {\n    return JSON.parse(this.getItem(key) || '{}');\n};\n\nconst setObject = function (key, value) {\n    if (value && value instanceof Object) {\n        try {\n            this.setItem(key, JSON.stringify(value));\n        } catch (e) { /* do nothing */ }\n    }\n};\n\nif (typeof Storage !== 'undefined') {\n    Storage.prototype.getObject = getObject;\n    Storage.prototype.setObject = setObject;\n}\n\nconst isStorageSupported = (storage) => {\n    if (typeof storage === 'undefined') {\n        return false;\n    }\n\n    const test_key = 'test';\n    try {\n        storage.setItem(test_key, '1');\n        storage.removeItem(test_key);\n        return true;\n    } catch (e) {\n        return false;\n    }\n};\n\nconst Store = function (storage) {\n    this.storage           = storage;\n    this.storage.getObject = getObject;\n    this.storage.setObject = setObject;\n};\n\nStore.prototype = {\n    get(key) {\n        return this.storage.getItem(key) || undefined;\n    },\n    set(key, value) {\n        if (typeof value !== 'undefined') {\n            this.storage.setItem(key, value);\n        }\n    },\n    getObject(key) {\n        return typeof this.storage.getObject === 'function' // Prevent runtime error in IE\n            ? this.storage.getObject(key)\n            : JSON.parse(this.storage.getItem(key) || '{}');\n    },\n    setObject(key, value) {\n        if (typeof this.storage.setObject === 'function') { // Prevent runtime error in IE\n            this.storage.setObject(key, value);\n        } else {\n            this.storage.setItem(key, JSON.stringify(value));\n        }\n    },\n    remove(key) { this.storage.removeItem(key); },\n    clear()     { this.storage.clear(); },\n};\n\nconst InScriptStore = function (object) {\n    this.store = typeof object !== 'undefined' ? object : {};\n};\n\nInScriptStore.prototype = {\n    get(key) {\n        return getPropertyValue(this.store, key);\n    },\n    set(k, value, obj = this.store) {\n        let key = k;\n        if (!Array.isArray(key)) key = [key];\n        if (key.length > 1) {\n            if (!(key[0] in obj) || isEmptyObject(obj[key[0]])) obj[key[0]] = {};\n            this.set(key.slice(1), value, obj[key[0]]);\n        } else {\n            obj[key[0]] = value;\n        }\n    },\n    getObject(key) {\n        return JSON.parse(this.get(key) || '{}');\n    },\n    setObject(key, value) {\n        this.set(key, JSON.stringify(value));\n    },\n    remove(...keys) {\n        keys.forEach((key) => { delete this.store[key]; });\n    },\n    clear()   { this.store = {}; },\n    has(key)  { return this.get(key) !== undefined; },\n    keys()    { return Object.keys(this.store); },\n    call(key) { if (typeof this.get(key) === 'function') this.get(key)(); },\n};\n\nconst State     = new InScriptStore();\nState.prototype = InScriptStore.prototype;\n/**\n * Shorthand function to get values from response object of State\n *\n * @param {String} pathname\n *     e.g. getResponse('authorize.currency') == get(['response', 'authorize', 'authorize', 'currency'])\n */\nState.prototype.getResponse = function (pathname) {\n    let path = pathname;\n    if (typeof path === 'string') {\n        const keys = path.split('.');\n        path = ['response', keys[0]].concat(keys);\n    }\n    return this.get(path);\n};\nState.set('response', {});\n\nconst CookieStorage = function (cookie_name, cookie_domain) {\n    const hostname = window.location.hostname;\n\n    this.initialized = false;\n    this.cookie_name = cookie_name;\n    this.domain      = cookie_domain || (isProduction() ? `.${hostname.split('.').slice(-2).join('.')}` : hostname);\n    this.path        = '/';\n    this.expires     = new Date('Thu, 1 Jan 2037 12:00:00 GMT');\n    this.value       = {};\n};\n\nCookieStorage.prototype = {\n    read() {\n        const cookie_value = Cookies.get(this.cookie_name);\n        try {\n            this.value = cookie_value ? JSON.parse(cookie_value) : {};\n        } catch (e) {\n            this.value = {};\n        }\n        this.initialized = true;\n    },\n    write(val, expireDate, isSecure) {\n        if (!this.initialized) this.read();\n        this.value = val;\n        if (expireDate) this.expires = expireDate;\n        Cookies.set(this.cookie_name, this.value, {\n            expires: this.expires,\n            path   : this.path,\n            domain : this.domain,\n            secure : !!isSecure,\n        });\n    },\n    get(key) {\n        if (!this.initialized) this.read();\n        return this.value[key];\n    },\n    set(key, val) {\n        if (!this.initialized) this.read();\n        this.value[key] = val;\n        Cookies.set(this.cookie_name, this.value, {\n            expires: new Date(this.expires),\n            path   : this.path,\n            domain : this.domain,\n        });\n    },\n    remove() {\n        Cookies.remove(this.cookie_name, {\n            path  : this.path,\n            domain: this.domain,\n        });\n    },\n};\n\nconst removeCookies = (...cookie_names) => {\n    const domains = [\n        `.${document.domain.split('.').slice(-2).join('.')}`,\n        `.${document.domain}`,\n    ];\n\n    let parent_path = window.location.pathname.split('/', 2)[1];\n    if (parent_path !== '') {\n        parent_path = `/${parent_path}`;\n    }\n\n    cookie_names.forEach((c) => {\n        Cookies.remove(c, { path: '/', domain: domains[0] });\n        Cookies.remove(c, { path: '/', domain: domains[1] });\n        Cookies.remove(c);\n        if (new RegExp(c).test(document.cookie) && parent_path) {\n            Cookies.remove(c, { path: parent_path, domain: domains[0] });\n            Cookies.remove(c, { path: parent_path, domain: domains[1] });\n            Cookies.remove(c, { path: parent_path });\n        }\n    });\n};\n\nlet SessionStore,\n    LocalStore;\n\nif (isStorageSupported(window.localStorage)) {\n    LocalStore = new Store(window.localStorage);\n}\nif (isStorageSupported(window.sessionStorage)) {\n    SessionStore = new Store(window.sessionStorage);\n}\n\nif (!LocalStore) {\n    LocalStore = new InScriptStore();\n}\nif (!SessionStore) {\n    SessionStore = new InScriptStore();\n}\n\nmodule.exports = {\n    isStorageSupported,\n    CookieStorage,\n    removeCookies,\n    State,\n    SessionStore,\n    LocalStore,\n};\n","import moment            from 'moment';\nimport { isEmptyObject } from '_common/utility';\nimport ServerTime        from '_common/base/server_time';\n\nexport const getChartConfig = (\n    contract_info,\n    is_digit_contract,\n    is_from_purchase,\n) => {\n    if (isEmptyObject(contract_info)) return null;\n    const start       = contract_info.date_start;\n    const end         = getEndTime(contract_info);\n    const granularity = getChartGranularity(start, end || null);\n    const chart_type  = getChartType(start, end || null);\n\n    return {\n        chart_type                : contract_info.tick_count ? 'mountain' : chart_type,\n        granularity               : contract_info.tick_count ? 0 : granularity,\n        end_epoch                 : end,\n        start_epoch               : !is_from_purchase ? start : null,\n        scroll_to_epoch           : contract_info.purchase_time,\n        should_show_bottom_widgets: is_digit_contract,\n    };\n};\n\nconst hour_to_granularity_map = [\n    [1      , 0],\n    [2      , 120],\n    [6      , 600],\n    [24     , 900],\n    [5 * 24 , 3600],\n    [30 * 24, 14400],\n];\n\nconst getExpiryTime = (time) => time || ServerTime.get().unix();\n\nexport const getChartType = (start_time, expiry_time) => {\n    const duration = moment.duration(moment.unix(getExpiryTime(expiry_time)).diff(moment.unix(start_time))).asHours();\n    // use line chart if duration is equal or less than 1 hour\n    return (duration <= 1) ? 'mountain' : 'candle';\n};\n\nexport const getChartGranularity = (start_time, expiry_time) =>\n    calculateGranularity(getExpiryTime(expiry_time) - start_time);\n\nexport const calculateGranularity = (duration) =>\n    (hour_to_granularity_map.find(m => duration <= m[0] * 3600) || [null, 86400])[1];\n\nexport const getDisplayStatus = (contract_info) => {\n    let status = 'purchased';\n    if (isEnded(contract_info)) {\n        status = contract_info.profit >= 0 ? 'won' : 'lost';\n    }\n    return status;\n};\n\nexport const getFinalPrice = (contract_info) => (\n    +(contract_info.sell_price || contract_info.bid_price)\n);\n\nexport const getIndicativePrice = (contract_info) => (\n    getFinalPrice(contract_info) && isEnded(contract_info) ?\n        getFinalPrice(contract_info) :\n        (+contract_info.bid_price || null)\n);\n\nexport const getLastTickFromTickStream = (tick_stream = []) => (\n    tick_stream[tick_stream.length - 1] || {}\n);\n\nexport const isEnded = (contract_info) => !!(\n    (contract_info.status && contract_info.status !== 'open') ||\n    contract_info.is_expired        ||\n    contract_info.is_settleable\n);\n\nexport const isSoldBeforeStart = (contract_info) => (\n    contract_info.sell_time && +contract_info.sell_time < +contract_info.date_start\n);\n\nexport const isStarted = (contract_info) => (\n    !contract_info.is_forward_starting || contract_info.current_spot_time > contract_info.date_start\n);\n\nexport const isUserSold = (contract_info) => (\n    contract_info.status === 'sold'\n);\n\nexport const isValidToSell = (contract_info) => (\n    !isEnded(contract_info) && !isUserSold(contract_info) && +contract_info.is_valid_to_sell === 1\n);\n\nexport const getEndTime = (contract_info) => {\n    const {\n        exit_tick_time,\n        date_expiry,\n        is_expired,\n        is_path_dependent,\n        sell_time,\n        status,\n        tick_count: is_tick_contract,\n    } = contract_info;\n\n    const is_finished = is_expired && (status !== 'open');\n\n    if (!is_finished && !isUserSold(contract_info)) return undefined;\n\n    if (isUserSold(contract_info)) {\n        return (sell_time > date_expiry) ?\n            date_expiry : sell_time;\n    } else if (!is_tick_contract && (sell_time > date_expiry)) {\n        return date_expiry;\n    }\n\n    return (date_expiry > exit_tick_time && !(+is_path_dependent)) ? date_expiry : exit_tick_time;\n};\n","export const buildBarriersConfig = (contract, barriers = { count: contract.barriers }) => {\n    if (!contract.barriers) {\n        return undefined;\n    }\n\n    const obj_barrier = {};\n\n    ['barrier', 'low_barrier', 'high_barrier'].forEach((field) => {\n        if (field in contract) obj_barrier[field] = contract[field];\n    });\n\n    return Object.assign(barriers || {}, {\n        [contract.expiry_type]: obj_barrier,\n    });\n};\n","import ServerTime               from '_common/base/server_time';\nimport { localize }             from 'App/i18n';\nimport {\n    cloneObject,\n    getPropertyValue }          from '_common/utility';\nimport { WS }                   from 'Services';\nimport {\n    isTimeValid,\n    minDate,\n    toMoment }                  from 'Utils/Date';\nimport { buildBarriersConfig }  from './barrier';\nimport {\n    buildDurationConfig,\n    hasIntradayDurationUnit }   from './duration';\nimport {\n    buildForwardStartingConfig,\n    isSessionAvailable }        from './start-date';\nimport {\n    getContractCategoriesConfig,\n    getContractTypesConfig,\n    getLocalizedBasis }         from '../Constants/contract';\n\nconst ContractType = (() => {\n    let available_contract_types = {};\n    let available_categories     = {};\n    let contract_types;\n    const trading_times          = {};\n    let has_only_forward_starting_contracts = false;\n\n    const buildContractTypesConfig = (symbol) => WS.contractsFor(symbol).then(r => {\n        const has_contracts = getPropertyValue(r, ['contracts_for']);\n        has_only_forward_starting_contracts = has_contracts && !r.contracts_for.available.find((contract) => contract.start_type !== 'forward');\n        if (!has_contracts || has_only_forward_starting_contracts) return;\n        const contract_categories = getContractCategoriesConfig();\n        contract_types = getContractTypesConfig();\n\n        available_contract_types = {};\n        available_categories = cloneObject(contract_categories); // To preserve the order (will clean the extra items later in this function)\n\n        r.contracts_for.available.forEach((contract) => {\n            const type = Object.keys(contract_types).find(key => (\n                contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                (typeof contract_types[key].barrier_count === 'undefined' || +contract_types[key].barrier_count === contract.barriers) // To distinguish betweeen Rise/Fall & Higher/Lower\n            ));\n\n            if (!type) return; // ignore unsupported contract types\n\n            /*\n            add to this config if a value you are looking for does not exist yet\n            accordingly create a function to retrieve the value\n            config: {\n                has_spot: 1,\n                durations: {\n                    min_max: {\n                        spot: {\n                            tick    : { min: 5,     max: 10 },    // value in ticks, as cannot convert to seconds\n                            intraday: { min: 18000, max: 86400 }, // all values converted to seconds\n                            daily   : { min: 86400, max: 432000 },\n                        },\n                        forward: {\n                            intraday: { min: 18000, max: 86400 },\n                        },\n                    },\n                    units_display: {\n                        spot: [\n                            { text: 'ticks',   value: 't' },\n                            { text: 'seconds', value: 's' },\n                            { text: 'minutes', value: 'm' },\n                            { text: 'hours',   value: 'h' },\n                            { text: 'days',    value: 'd' },\n                        ],\n                        forward: [\n                            { text: 'days',    value: 'd' },\n                        ],\n                    },\n                },\n                forward_starting_dates: [\n                    { text: 'Mon - 19 Mar, 2018', value: 1517356800, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Tue - 20 Mar, 2018', value: 1517443200, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Wed - 21 Mar, 2018', value: 1517529600, sessions: [{ open: obj_moment, close: obj_moment }] },\n                ],\n                trade_types: {\n                    'CALL': 'Higher',\n                    'PUT' : 'Lower',\n                },\n                barriers: {\n                    count   : 2,\n                    tick    : { high_barrier: '+1.12', low_barrier : '-1.12' },\n                    intraday: { high_barrier: '+2.12', low_barrier : '-2.12' },\n                    daily   : { high_barrier: 1111,    low_barrier : 1093 },\n                },\n            }\n            */\n\n            if (!available_contract_types[type]) {\n                // extend contract_categories to include what is needed to create the contract list\n                const sub_cats = available_categories[Object.keys(available_categories)\n                    .find(key => available_categories[key].indexOf(type) !== -1)];\n\n                if (!sub_cats) return;\n\n                sub_cats[sub_cats.indexOf(type)] = { value: type, text: contract_types[type].title };\n\n                // populate available contract types\n                available_contract_types[type] = cloneObject(contract_types[type]);\n            }\n            const config = available_contract_types[type].config || {};\n\n            // set config values\n            config.has_spot               = config.has_spot || contract.start_type === 'spot';\n            config.durations              = buildDurationConfig(contract, config.durations);\n            config.trade_types            = buildTradeTypesConfig(contract, config.trade_types);\n            config.barriers               = buildBarriersConfig(contract, config.barriers);\n            config.forward_starting_dates = buildForwardStartingConfig(contract, config.forward_starting_dates);\n\n            available_contract_types[type].config = config;\n        });\n\n        // cleanup categories\n        Object.keys(available_categories).forEach((key) => {\n            available_categories[key] = available_categories[key].filter(item => typeof item === 'object');\n            if (available_categories[key].length === 0) {\n                delete available_categories[key];\n            }\n        });\n    });\n\n    const buildTradeTypesConfig = (contract, trade_types = {}) => {\n        trade_types[contract.contract_type] = contract.contract_display;\n        return trade_types;\n    };\n\n    const getArrayDefaultValue = (arr_new_values, value) => (\n        arr_new_values.indexOf(value) !== -1 ? value : arr_new_values[0]\n    );\n\n    const getContractValues = (store) => {\n        const { contract_expiry_type, contract_type, basis, duration_unit, start_date } = store;\n        const form_components   = getComponents(contract_type);\n        const obj_basis         = getBasis(contract_type, basis);\n        const obj_trade_types   = getTradeTypes(contract_type);\n        const obj_start_dates   = getStartDates(contract_type, start_date);\n        const obj_start_type    = getStartType(obj_start_dates.start_date);\n        const obj_barrier       = getBarriers(contract_type, contract_expiry_type);\n        const obj_duration_unit = getDurationUnit(duration_unit, contract_type, obj_start_type.contract_start_type);\n\n        const obj_duration_units_list    = getDurationUnitsList(contract_type, obj_start_type.contract_start_type);\n        const obj_duration_units_min_max = getDurationMinMax(contract_type, obj_start_type.contract_start_type);\n\n        return {\n            ...form_components,\n            ...obj_basis,\n            ...obj_trade_types,\n            ...obj_start_dates,\n            ...obj_start_type,\n            ...obj_barrier,\n            ...obj_duration_unit,\n            ...obj_duration_units_list,\n            ...obj_duration_units_min_max,\n        };\n    };\n\n    const getContractType = (list, contract_type) => {\n        const arr_list = Object.keys(list || {})\n            .reduce((k, l) => ([...k, ...list[l].map(ct => ct.value)]), []);\n        return {\n            contract_type: getArrayDefaultValue(arr_list, contract_type),\n        };\n    };\n\n    const getComponents = (c_type) => ({ form_components: ['duration', 'amount', ...contract_types[c_type].components] });\n\n    const getDurationUnitsList = (contract_type, contract_start_type) => ({\n        duration_units_list: getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [],\n    });\n\n    const getDurationUnit = (duration_unit, contract_type, contract_start_type) => {\n        const duration_units = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [];\n        const arr_units = [];\n        duration_units.forEach(obj => {\n            arr_units.push(obj.value);\n        });\n\n        return {\n            duration_unit: getArrayDefaultValue(arr_units, duration_unit),\n        };\n    };\n\n    const getDurationMinMax = (contract_type, contract_start_type, contract_expiry_type) => {\n        let duration_min_max = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'min_max', contract_start_type]) || {};\n\n        if (contract_expiry_type) {\n            duration_min_max = duration_min_max[contract_expiry_type] || {};\n        }\n\n        return { duration_min_max };\n    };\n\n    const getFullContractTypes = () => available_contract_types;\n\n    const getStartType = (start_date) => ({\n        // Number(0) refers to 'now'\n        contract_start_type: start_date === Number(0) ? 'spot' : 'forward',\n    });\n\n    const getStartDates = (contract_type, current_start_date) => {\n        const config           = getPropertyValue(available_contract_types, [contract_type, 'config']);\n        const start_dates_list = [];\n\n        if (config.has_spot) {\n            // Number(0) refers to 'now'\n            start_dates_list.push({ text: localize('Now'), value: Number(0) });\n        }\n        if (config.forward_starting_dates) {\n            start_dates_list.push(...config.forward_starting_dates);\n        }\n\n        const start_date = start_dates_list.find(item => item.value === current_start_date) ?\n            current_start_date : start_dates_list[0].value;\n\n        return { start_date, start_dates_list };\n    };\n\n    const getSessions = (contract_type, start_date) => {\n        const config   = getPropertyValue(available_contract_types, [contract_type, 'config']) || {};\n        const sessions =\n                  ((config.forward_starting_dates || []).find(option => option.value === start_date) || {}).sessions;\n        return { sessions };\n    };\n\n    const hours   = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const getValidTime = (sessions, compare_moment, start_moment) => {\n        if (sessions && !isSessionAvailable(sessions, compare_moment)) {\n            // first see if changing the minute brings it to the right session\n            compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            // if not, also change the hour\n            if (!isSessionAvailable(sessions, compare_moment)) {\n                compare_moment.minute(0);\n                compare_moment.hour(hours.find(h => isSessionAvailable(sessions, compare_moment.hour(h), start_moment, true)) || compare_moment.format('HH'));\n                compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            }\n        }\n        return compare_moment.format('HH:mm');\n    };\n\n    const buildMoment = (date, time) => {\n        const [ hour, minute ] = isTimeValid(time) ? time.split(':') : [0, 0];\n        return toMoment(date || ServerTime.get()).hour(hour).minute(minute);\n    };\n\n    const getStartTime = (sessions, start_date, start_time) => ({\n        start_time: start_date ? getValidTime(sessions, buildMoment(start_date, start_time)) : null,\n    });\n\n    const getTradingTimes = async (date, underlying = null) => {\n        if (!date) {\n            return [];\n        }\n\n        if (!(date in trading_times)) {\n            const trading_times_response = await WS.getTradingTimes(date);\n\n            if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n                for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                    const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                    if (submarkets) {\n                        for (let j = 0; j < submarkets.length; j++) {\n                            const symbols = submarkets[j].symbols;\n                            if (symbols) {\n                                for (let k = 0; k < symbols.length; k++) {\n                                    const symbol = symbols[k];\n                                    if (!trading_times[trading_times_response.echo_req.trading_times]) {\n                                        trading_times[trading_times_response.echo_req.trading_times] = {};\n                                    }\n                                    trading_times[trading_times_response.echo_req.trading_times][symbol.symbol] = {\n                                        'open' : symbol.times.open,\n                                        'close': symbol.times.close,\n                                    };\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return underlying ? trading_times[date][underlying] : trading_times[date];\n    };\n\n    const getExpiryType = (duration_units_list, expiry_type) => {\n        if (duration_units_list && duration_units_list.length === 1 && duration_units_list[0].value === 't') {\n            return { expiry_type: 'duration' };\n        }\n\n        return { expiry_type };\n    };\n\n    const getExpiryDate = (duration_units_list, expiry_date, expiry_type, start_date) => {\n        let proper_expiry_date = null;\n\n        if (expiry_type === 'endtime') {\n            const moment_start  = toMoment(start_date);\n            const moment_expiry = toMoment(expiry_date);\n\n            if (!hasIntradayDurationUnit(duration_units_list)) {\n                const is_invalid = moment_expiry.isSameOrBefore(moment_start, 'day');\n                proper_expiry_date = (is_invalid ? moment_start.clone().add(1, 'day') : moment_expiry).format('YYYY-MM-DD');\n            } else {\n                // forward starting contracts should only show today and tomorrow as expiry date\n                const is_invalid =\n                    moment_expiry.isBefore(moment_start, 'day') || (start_date && moment_expiry.isAfter(moment_start.clone().add(1, 'day')));\n                proper_expiry_date = (is_invalid ? moment_start : moment_expiry).format('YYYY-MM-DD');\n            }\n        }\n\n        return { expiry_date: proper_expiry_date };\n    };\n\n    // It has to follow the correct order of checks:\n    // first check if end time is within available sessions\n    // then confirm that end time is at least 5 minute after start time\n    const getExpiryTime = (\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    ) => {\n        let end_time = null;\n\n        if (expiry_type === 'endtime') {\n            let market_close_time = '23:59:59';\n\n            if (market_close_times && market_close_times.length && market_close_times[0] !== '--') {\n                // Some of underlyings (e.g. Australian Index) have two close time during a day so we always select the further one as the end time of the contract.\n                market_close_time = market_close_times.slice(-1)[0];\n            }\n\n            // For contracts with a duration of more that 24 hours must set the expiry_time to the market's close time on the expiry date.\n            if (!start_date && ServerTime.get().isBefore(buildMoment(expiry_date), 'day')) {\n                end_time = market_close_time;\n            } else {\n                const start_moment = start_date ? buildMoment(start_date, start_time) : ServerTime.get();\n                const end_moment   = buildMoment(expiry_date, expiry_time);\n\n                end_time = end_moment.format('HH:mm');\n                // When the contract is forwarding, and the duration is endtime, users can purchase the contract within 24 hours.\n                const expiry_sessions = [{\n                    open : start_moment.clone().add(5, 'minute'), // expiry time should be at least 5 minute after start_time\n                    close: minDate(start_moment.clone().add(24, 'hour'), buildMoment(expiry_date, market_close_time)),\n                }];\n\n                if (!isSessionAvailable(expiry_sessions, end_moment)) {\n                    end_time = getValidTime(expiry_sessions, end_moment.clone(), start_moment.clone());\n                }\n                if (end_moment.isSameOrBefore(start_moment) || end_moment.diff(start_moment, 'minute') < 5) {\n                    const is_end_of_day     = start_moment.get('hours') === 23 && start_moment.get('minute') >= 55;\n                    const is_end_of_session = sessions && !isSessionAvailable(sessions, start_moment.clone().add(5, 'minutes'));\n                    end_time = start_moment.clone().add((is_end_of_day || is_end_of_session) ? 0 : 5, 'minutes');\n                    // Set the end_time to be multiple of 5 to be equal as the SELECTED_TIME that shown to the client.\n                    end_time = setMinuteMultipleByFive(end_time).format('HH:mm');\n                }\n                // Set the expiry_time to 5 minute less than start_time for forwading contracts when the expiry_time is null and the expiry_date is tomorrow.\n                if (end_time === '00:00' && start_moment.isBefore(end_moment, 'day')) {\n                    end_time = start_moment.clone().subtract(5, 'minute').format('HH:mm');\n                }\n            }\n        }\n        return { expiry_time: end_time };\n    };\n\n    const setMinuteMultipleByFive = (moment_obj) => (\n        moment_obj.minute((Math.ceil(moment_obj.minute() / 5) * 5))\n    );\n\n    const getTradeTypes = (contract_type) => ({\n        trade_types: getPropertyValue(available_contract_types, [contract_type, 'config', 'trade_types']),\n    });\n\n    const getBarriers = (contract_type, expiry_type) => {\n        const barriers       = getPropertyValue(available_contract_types, [contract_type, 'config', 'barriers']) || {};\n        const barrier_values = barriers[expiry_type] || {};\n        const barrier_1      = barrier_values.barrier || barrier_values.high_barrier || '';\n        const barrier_2      = barrier_values.low_barrier || '';\n        return {\n            barrier_count: barriers.count || 0,\n            barrier_1    : barrier_1.toString(),\n            barrier_2    : barrier_2.toString(),\n        };\n    };\n\n    const getBasis = (contract_type, basis) => {\n        const arr_basis  = getPropertyValue(available_contract_types, [contract_type, 'basis']) || {};\n        const localized_basis = getLocalizedBasis();\n        const basis_list = arr_basis.reduce((cur, bas) => (\n            [...cur, { text: localized_basis[bas], value: bas }]\n        ), []);\n\n        return {\n            basis_list,\n            basis: getArrayDefaultValue(arr_basis, basis),\n        };\n    };\n\n    return {\n        buildContractTypesConfig,\n        getBarriers,\n        getContractType,\n        getContractValues,\n        getDurationMinMax,\n        getDurationUnit,\n        getDurationUnitsList,\n        getFullContractTypes,\n        getExpiryDate,\n        getExpiryTime,\n        getExpiryType,\n        getSessions,\n        getStartTime,\n        getStartType,\n        getTradingTimes,\n        getContractCategories: () => ({\n            contract_types_list: available_categories,\n            has_only_forward_starting_contracts,\n        }),\n    };\n})();\n\nexport default ContractType;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport Loading   from '../../../templates/_common/components/loading.jsx';\n\nconst ChartLoader = ({ is_visible }) => (\n    is_visible &&\n    <div className='chart-container__loader'>\n        <Loading theme='chart-loader' />\n    </div>\n);\n\nChartLoader.propTypes = {\n    is_visible: PropTypes.bool,\n};\n\nexport default ChartLoader;\n","import React                      from 'react';\nimport PropTypes                  from 'prop-types';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport Icon                       from 'Assets/icon.jsx';\n\nconst ContractTypeCell = ({ type, is_high_low }) => (\n    <div className='contract-type'>\n        <div className='contract-type__type-wrapper'>\n            <Icon\n                icon='IconTradeType'\n                type={(is_high_low) ? `${type.toLowerCase()}_barrier` : type.toLowerCase()}\n                className='category-type'\n            />\n        </div>\n        <span className='contract-type__type-label'>\n            {getContractTypeDisplay(type, is_high_low) || ''}\n        </span>\n    </div>\n);\n\nContractTypeCell.propTypes = {\n    type: PropTypes.string,\n};\n\nexport default ContractTypeCell;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Icon         from 'Assets/icon.jsx';\nimport { localize } from 'App/i18n';\n\nconst FooterIcon = (use_icon) => use_icon || 'IconCalendarToday';\n\nconst CalendarFooter = ({\n    footer,\n    has_today_btn,\n    has_range_selection,\n    duration_date,\n    is_minimum,\n    onClick,\n    use_icon,\n}) => (\n    <React.Fragment>\n        { (has_today_btn || footer || has_range_selection) &&\n            <div className='calendar__footer'>\n                { footer && <span className='calendar__text'>{footer}</span>}\n                { has_range_selection && <span className='calendar__text'>{ `${!is_minimum ? localize('Duration: ') : ''}${duration_date}` }</span> }\n                { has_today_btn &&\n                    <Icon\n                        icon={FooterIcon(use_icon)}\n                        className='calendar__icon'\n                        onClick={onClick}\n                    />\n                }\n            </div>\n        }\n    </React.Fragment>\n);\n\nCalendarFooter.propTypes = {\n    duration_date      : PropTypes.string,\n    footer             : PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    has_today_btn      : PropTypes.bool,\n    is_minimum         : PropTypes.bool,\n    onClick            : PropTypes.func,\n    use_icon           : PropTypes.string,\n};\n\nexport default CalendarFooter;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst Highlight = ({ left, width }) => {\n    const border_radius_size = '4px';\n    const left_offset        = (left < 110) ? 0 : left;\n    const width_offset       = (width < 110) ? 111 : width;\n    const highlight_style = {\n        width                    : width_offset,\n        left                     : 0,\n        transform                : `translate3d(${left_offset}px, 0, 0)`,\n        'borderTopLeftRadius'    : (left_offset === 0) ? border_radius_size : 0,\n        'borderTopRightRadius'   : (left_offset === 0) ? 0 : border_radius_size ,\n        'borderBottomLeftRadius' : (left_offset === 0) ? border_radius_size  : 0,\n        'borderBottomRightRadius': (left_offset === 0) ? 0 : border_radius_size ,\n    };\n\n    return (\n        <span style={highlight_style} className='button-menu--highlight' />\n    );\n};\n\nHighlight.propTypes = {\n    left : PropTypes.number,\n    width: PropTypes.number,\n};\n\nexport { Highlight };\n","import classnames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { Highlight } from './button-highlight.jsx';\n\nclass HighlightWrapper extends React.PureComponent {\n    state = {\n        left : 0,\n        width: 0,\n    }\n\n    componentDidMount() {\n        const active_button_el = [...this.node.getElementsByClassName('button-menu__button--active')][0];\n        if (!this.node) return;\n        this.updateHighlightPosition(active_button_el);\n    }\n\n    componentDidUpdate() {\n        const active_button_el = [...this.node.getElementsByClassName('button-menu__button--active')][0];\n        if (active_button_el) {\n            this.updateHighlightPosition(active_button_el);\n        } else if (this.state.left !== 0 || this.state.width !== 0) {\n            this.resetHighlight(); // clear highlight when active element doesn't exist\n        }\n    }\n\n    componentWillUnMount() {\n        this.resetHighlight();\n    }\n\n    onClick = (e, buttonClick) => {\n        if (!e.target) return;\n        this.updateHighlightPosition(e.target.closest('button'));\n        if (typeof buttonClick  === 'function') {\n            buttonClick();\n        }\n    };\n\n    resetHighlight = () => {\n        this.setState({\n            left : 0,\n            width: 0,\n        });\n    };\n\n    updateHighlightPosition = (el) => {\n        if (!el) return;\n        const { offsetLeft: left, offsetWidth: width } = el;\n        if (this.state.width !== width) {\n            this.setState({ width });\n        }\n        if (this.state.left !== left) {\n            this.setState({ left });\n        }\n    };\n\n    render() {\n        const { className, ...other_props } = this.props;\n        const props = {\n            className: classnames('button-menu__wrapper', className),\n            ...other_props,\n        };\n\n        return (\n            <div ref={(node) => this.node = node} {...props}>\n                {\n                    React.Children.map(this.props.children, child => (\n                        React.cloneElement(child, {\n                            onClick: (e) => this.onClick(e, child.props.onClick),\n                        })\n                    ))\n                }\n                <Highlight left={this.state.left} width={this.state.width} />\n            </div>\n        );\n    }\n}\n\nHighlightWrapper.propTypes = {\n    children : PropTypes.array,\n    className: PropTypes.string,\n    timeout  : PropTypes.number,\n};\n\nexport default HighlightWrapper;\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport Button           from 'App/Components/Form/button.jsx';\nimport HighlightWrapper from './button-highlight-wrapper.jsx';\n\nconst ButtonToggleMenu = ({\n    buttons_arr,\n    is_animated,\n    name,\n    onChange,\n    value,\n}) => {\n    const changeValue = (selected_value) => {\n        if (value === selected_value) return;\n        onChange({ target: { value: selected_value, name } });\n    };\n    const menu = buttons_arr.map((val, idx) => {\n        const className = classNames('button-menu__button', {\n            'button-menu__button--active': val.value === value,\n        });\n        return (\n            <Button\n                key={idx}\n                text={`${val.text.charAt(0).toUpperCase()}${val.text.slice(1)}`}\n                onClick={() => changeValue(val.value)}\n                className={className}\n            />\n        );\n    });\n    return (\n        <div className='button-menu'>\n            {is_animated ?\n                <HighlightWrapper>\n                    {menu}\n                </HighlightWrapper>\n                :\n                <React.Fragment>\n                    {menu}\n                </React.Fragment>\n            }\n        </div>\n    );\n};\n\nButtonToggleMenu.propTypes = {\n    buttons_arr: PropTypes.array,\n    is_animated: PropTypes.bool,\n    name       : PropTypes.string,\n    onChange   : PropTypes.func,\n    value      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default ButtonToggleMenu;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { Popover }         from 'App/Components/Elements/Popover';\nimport { getCurrencyName } from '_common/base/currency_base';\n\nconst Items = ({\n    index,\n    handleSelect,\n    has_symbol,\n    items,\n    name,\n    value,\n}) =>  items.map((item, idx) => {\n    const symbol_type_class_name = item.text ? `symbols--${(item.text).toLowerCase()}` : '';\n    return (\n        <div\n            className={classNames(\n                'list__item',\n                { 'list__item--highlighted': idx === index },\n                { 'list__item--selected': value === item.value },\n                { 'list__item--disabled': item.disabled }\n            )}\n            name={name}\n            value={item.value}\n            onClick={item.disabled ? null : handleSelect.bind(null, item)}\n            key={idx}\n        >\n            {!!has_symbol && item.has_tooltip &&\n                <Popover\n                    alignment='left'\n                    message={getCurrencyName(item.value)}\n                >\n                    <span\n                        className={classNames(\n                            'symbols',\n                            'list__item-symbol',\n                            symbol_type_class_name\n                        )}\n                    />\n                </Popover>\n            }\n\n            {!!has_symbol && !item.has_tooltip &&\n                <span\n                    className={classNames(\n                        'symbols',\n                        'list__item-text',\n                        symbol_type_class_name,\n                    )}\n                />\n            }\n\n            {!has_symbol &&\n                <span className='list__item-text'>{item.text}</span>\n            }\n        </div>\n    );\n});\n\nItems.propTypes = {\n    handleSelect: PropTypes.func,\n    has_symbol  : PropTypes.bool,\n    name        : PropTypes.string,\n    value       : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Items;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst NativeSelect = ({\n    name,\n    list,\n    value,\n    onChange,\n}) => (\n    <div className='native-select native-select__wrapper'>\n        <select className='select native-select__select' name={name} value={value} onChange={onChange}>\n            {Array.isArray(list) ?\n                list.map((item, idx) => (\n                    <option key={idx} value={item.value}>{item.text}</option>\n                ))\n                :\n                Object.keys(list).map(key => (\n                    <React.Fragment key={key}>\n                        <optgroup label={key}>\n                            {list[key].map((item, idx) => (\n                                <option key={idx} value={item.value}>{item.text}</option>\n                            ))}\n                        </optgroup>\n                    </React.Fragment>\n                ))}\n        </select>\n    </div>\n);\n\nNativeSelect.propTypes = {\n    list: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.array,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default NativeSelect;\n","import { isArrayLike } from 'mobx';\n\nexport const getDisplayText = (list, value) => {\n    const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n    let text = '';\n    if (isArrayLike(list)) {\n        text = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            text = findInArray(list[key]);\n            return text;\n        });\n    }\n    return text;\n};\n\nexport const getItemFromValue = (list, value) => {\n    const findInArray = (arr_list) => arr_list.findIndex(item => item.value === value);\n    let item = {};\n    if (isArrayLike(list)) {\n        item = { number: findInArray(list), length: list.length };\n    } else {\n        Object.keys(list).some(key => {\n            item = { number: findInArray(list[key]), length: list[key].length };\n            return item;\n        });\n    }\n    return item;\n};\n\nexport const getValueFromIndex = (list, index) => {\n    const findInArray = (arr_list) => arr_list[index];\n    let result;\n    if (isArrayLike(list)) {\n        result = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            result = findInArray(list[key]);\n            return result.value;\n        });\n    }\n    return result.value;\n};\n\nexport const getPrevIndex = (index, length) => {\n    const prev_index = (index - 1) < 0 ? (length - 1) : index - 1;\n    return prev_index;\n};\n\nexport const getNextIndex = (index, length) => {\n    const next_index = (index + 1) === length ? 0 : index + 1;\n    return next_index;\n};\n","import classNames        from 'classnames';\nimport { isArrayLike }   from 'mobx';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Scrollbars }    from 'tt-react-custom-scrollbars';\nimport Icon              from 'Assets/icon.jsx';\nimport Items             from './items.jsx';\nimport NativeSelect      from './native-select.jsx';\nimport {\n    getDisplayText,\n    getItemFromValue,\n    getValueFromIndex,\n    getPrevIndex,\n    getNextIndex }       from './helpers';\n\nclass Dropdown extends React.PureComponent {\n    list_ref = React.createRef();\n    state = {\n        curr_index     : getItemFromValue(this.props.list, this.props.value).number,\n        is_list_visible: false,\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    }\n\n    setWrapperRef = (node) => this.wrapper_ref = node;\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_list_visible) {\n            this.setState({ is_list_visible: false });\n        }\n    }\n\n    handleVisibility = () => {\n        this.setState((state) =>({  is_list_visible: !state.is_list_visible }));\n    }\n\n    onKeyPressed = (event) => {\n        if (this.is_single_option) return;\n        if (event.keyCode === 9) { // Tab is pressed\n            if (this.state.is_list_visible) {\n                this.handleVisibility();\n            }\n            return;\n        }\n        event.preventDefault();\n        const index = getItemFromValue(this.props.list, this.props.value);\n        const value = getValueFromIndex(this.props.list, this.state.curr_index);\n        const handleToggle = () => {\n            if (this.state.is_list_visible && this.props.value !== value) {\n                this.props.onChange({ target: { name: this.props.name, value } });\n            }\n            this.handleVisibility();\n        };\n        switch (event.keyCode) {\n            case 13: // Enter is pressed\n            case 32: // Space is pressed\n                handleToggle();\n                break;\n            case 38: // Up Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const prev_index = getPrevIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: prev_index });\n                }\n                break;\n            case 40: // Down Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const next_index = getNextIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: next_index });\n                } else if (!this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            case 37: // Left arrow is pressed\n                if (!this.state.is_list_visible && this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            case 39: // Right Arrow is pressed\n                if (this.state.is_list_visible && this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            default:\n        }\n\n        // For char presses, we do a search for the item:\n        if (event.key.length === 1) {\n            const char = event.key.toLowerCase();\n            const firstChars = this.props.list.map(x => x.text[0].toLowerCase());\n            let idx;\n            // Tapping the same character again jumps to the next match:\n            if (this.state.curr_index) {\n                idx = firstChars.indexOf(char, this.state.curr_index + 1);\n            }\n            if (idx === undefined || idx === -1) {\n                idx = firstChars.indexOf(char);\n            }\n            if (idx >= 0) {\n                this.setState({ curr_index: idx });\n            }\n        }\n    }\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <NativeSelect\n                    name={this.props.name}\n                    value={this.props.value}\n                    list={this.props.list}\n                    onChange={this.props.onChange}\n                />\n            );\n        }\n\n        // we are calculating the offset for the dropdown list based on it's width here\n        const left_alignment_style = {\n            transform: `translate3d(calc(-${this.state.list_width}px - 12px), 0, 0px)`,\n        };\n\n        // upon render via css transition group, we use this as a callback to set the width of the dropdown list in the state\n        const setListWidth = () => this.setState({ list_width: this.list_ref.current.offsetWidth });\n\n        const is_single_option = isArrayLike(this.props.list) ?\n            !!(this.props.list.length < 2)\n            :\n            !!(Object.keys(this.props.list).length < 2);\n\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={classNames('dropdown-container', this.props.className, {\n                    'dropdown--left'    : this.props.is_alignment_left,\n                    'dropdown--show'    : this.state.is_list_visible,\n                    'dropdown--disabled': is_single_option,\n                })}\n            >\n                <div\n                    className={classNames('dropdown__display', this.props.classNameDisplay, {\n                        'dropdown__display--clicked'   : this.state.is_list_visible,\n                        'dropdown__display--has-symbol': this.props.has_symbol,\n                    })}\n                    tabIndex={is_single_option ? '-1' : '0'}\n                    onClick={this.handleVisibility}\n                    onKeyDown={this.onKeyPressed}\n                >\n                    {this.props.has_symbol &&\n                    <span name={this.props.name} value={this.props.value} className={`symbols dropdown__display-symbol symbols--${(this.props.value || '').toLowerCase()}`} />\n                    }\n                    {!this.props.has_symbol &&\n                    <span name={this.props.name} value={this.props.value} className='dropdown__display-text'>\n                        {getDisplayText(this.props.list, this.props.value)}\n                    </span>\n                    }\n                </div>\n                {\n                    !is_single_option && <Icon\n                        icon='IconArrow'\n                        className={classNames('dropdown__select-arrow', {\n                            'dropdown__select-arrow--left': this.props.is_alignment_left,\n                        })}\n                    />\n                }\n                <CSSTransition\n                    in={this.state.is_list_visible}\n                    timeout={100}\n                    classNames={{\n                        enter    : `dropdown__list--enter ${this.props.is_alignment_left ? 'dropdown__list--left--enter' : ''}`,\n                        enterDone: `dropdown__list--enter-done ${this.props.is_alignment_left ? 'dropdown__list--left--enter-done' : ''}`,\n                        exit     : `dropdown__list--exit ${this.props.is_alignment_left ? 'dropdown__list--left--exit' : ''}`,\n                    }}\n                    onEntered={setListWidth}\n                    unmountOnExit\n                >\n                    <div className={classNames('dropdown__list', {\n                        'dropdown__list--left': this.props.is_alignment_left,\n                    })}\n                    >\n                        <div\n                            className={classNames('list', {\n                                'list--left': this.props.is_alignment_left,\n                            })}\n                            ref={this.list_ref}\n                            style={this.props.is_alignment_left ? left_alignment_style : undefined}\n                        >\n                            <Scrollbars\n                                autoHeight\n                                autoHide\n                                autoHeightMax={200}\n                                renderTrackHorizontal={props => <div {...props} className='track-horizontal' style={{ display: 'none' }} />}\n                                renderThumbHorizontal={props => <div {...props} className='thumb-horizontal' style={{ display: 'none' }} />}\n                            >\n                                {isArrayLike(this.props.list) ?\n                                    <Items\n                                        index={this.state.curr_index}\n                                        handleSelect={this.handleSelect}\n                                        has_symbol={this.props.has_symbol}\n                                        items={this.props.list}\n                                        name={this.props.name}\n                                        value={this.props.value}\n                                    /> :\n                                    Object.keys(this.props.list).map(key => (\n                                        <React.Fragment key={key}>\n                                            <div className='list__label'>{key}</div>\n                                            <Items\n                                                index={this.state.curr_index}\n                                                handleSelect={this.handleSelect}\n                                                has_symbol={this.props.has_symbol}\n                                                items={this.props.list[key]}\n                                                name={this.props.name}\n                                                value={this.props.value}\n                                            />\n                                        </React.Fragment>\n                                    ))\n                                }\n                            </Scrollbars>\n                        </div>\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nDropdown.propTypes = {\n    className        : PropTypes.string,\n    classNameDisplay : PropTypes.string,\n    has_symbol       : PropTypes.bool,\n    is_alignment_left: PropTypes.bool,\n    is_nativepicker  : PropTypes.bool,\n    list             : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Dropdown;\n","import { getPropertyValue } from '_common/utility';\nimport ContractType         from './contract-type';\n\nexport const hasCallPutEqual = (contract_type_list) => {\n    if (!contract_type_list) return false;\n\n    return getPropertyValue(contract_type_list, 'Up/Down')\n        .some(contract => contract.value === 'rise_fall_equal');\n};\n\nexport const hasDurationForCallPutEqual = (contract_type_list, duration_unit, contract_start_type) => {\n    if (!contract_type_list || !duration_unit || !contract_start_type) return false;\n\n    const contract_list = Object.keys(contract_type_list || {})\n        .reduce((key, list) => ([...key, ...contract_type_list[list].map(contract => contract.value)]), []);\n\n    const contract_duration_list = contract_list\n        .map(list => ({ [list]: getPropertyValue(ContractType.getFullContractTypes(), [list, 'config', 'durations', 'units_display', contract_start_type]) }));\n\n    // Check whether rise fall equal is exists and has the current store duration unit\n    return hasCallPutEqual(contract_type_list) ? contract_duration_list\n        .filter(contract => contract.rise_fall_equal)[0].rise_fall_equal\n        .some(duration => duration.value === duration_unit) : false;\n};\n\nexport const isRiseFallEqual = (contract_type) => /^(rise_fall|rise_fall_equal)$/.test(contract_type);\n","import React                    from 'react';\nimport PropTypes                from 'prop-types';\nimport { localize }             from 'App/i18n';\nimport { Popover }              from 'App/Components/Elements/Popover';\nimport InputField               from 'App/Components/Form/InputField';\nimport {\n    hasCallPutEqual,\n    hasDurationForCallPutEqual,\n    isRiseFallEqual }           from 'Stores/Modules/Trading/Helpers/allow-equals';\n\nconst AllowEquals = ({\n    contract_start_type,\n    contract_type,\n    contract_types_list,\n    duration_unit,\n    expiry_type,\n    onChange,\n    value,\n}) => {\n    const has_callputequal_duration = hasDurationForCallPutEqual(contract_types_list,\n        duration_unit, contract_start_type);\n    const has_callputequal          = hasCallPutEqual(contract_types_list);\n\n    const has_allow_equals = isRiseFallEqual(contract_type) &&\n            ((has_callputequal_duration || expiry_type === 'endtime') && has_callputequal);\n\n    const changeValue = (e) => {\n        const { name, checked } = e.target;\n        onChange({ target: { name, value: Number(checked) } });\n    };\n\n    return (\n        has_allow_equals &&\n            <div className='allow-equals'>\n                <InputField\n                    className='allow-equals__input-field'\n                    classNameInput='allow-equals__input trade-container__input'\n                    checked={value}\n                    id='allow_equals'\n                    name='is_equal'\n                    onChange={changeValue}\n                    type='checkbox'\n                    value={value}\n                />\n                <label className='allow-equals__label' htmlFor='allow_equals'>{localize('Allow equals')}</label>\n                <Popover\n                    alignment='left'\n                    classNameTarget='allow-equals__tooltip'\n                    icon='info'\n                    message={localize('Win payout if exit spot is also equal to entry spot.')}\n                    margin={113}\n                />\n            </div>\n    );\n};\n\nAllowEquals.propTypes = {\n    contract_start_type: PropTypes.string,\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    duration_unit      : PropTypes.string,\n    expiry_type        : PropTypes.string,\n    onChange           : PropTypes.func,\n    value              : PropTypes.number,\n};\n\nexport default AllowEquals;\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport {\n    addComma,\n    getDecimalPlaces }                from '_common/base/currency_base';\nimport ButtonToggleMenu               from 'App/Components/Form/ButtonToggleMenu';\nimport Dropdown                       from 'App/Components/Form/DropDown';\nimport Fieldset                       from 'App/Components/Form/fieldset.jsx';\nimport InputField                     from 'App/Components/Form/InputField';\nimport { connect }                    from 'Stores/connect';\nimport AllowEquals                    from './allow-equals.jsx';\n\nconst Amount = ({\n    amount,\n    basis,\n    basis_list,\n    contract_start_type,\n    contract_type,\n    contract_types_list,\n    currencies_list,\n    currency,\n    duration_unit,\n    expiry_type,\n    is_equal,\n    is_minimized,\n    is_nativepicker,\n    is_single_currency,\n    onChange,\n    validation_errors,\n}) => {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized fieldset-minimized__amount'>\n                <span className='fieldset-minimized__basis'>{(basis_list.find(o => o.value === basis) || {}).text}</span>\n                &nbsp;\n                <i><span className={classNames('fieldset-minimized__currency', 'symbols', { [`symbols--${(currency || '').toLowerCase()}`]: currency })} /></i>\n                {addComma(amount, 2)}\n            </div>\n        );\n    }\n\n    const input =\n        <InputField\n            className='trade-container__amount'\n            classNameInlinePrefix='trade-container__currency'\n            classNameInput='trade-container__input'\n            currency={currency}\n            error_messages={validation_errors.amount}\n            fractional_digits={getDecimalPlaces(currency)}\n            id='amount'\n            inline_prefix={is_single_currency ? currency : null}\n            is_autocomplete_disabled\n            is_float\n            is_hj_whitelisted\n            is_incrementable\n            is_nativepicker={is_nativepicker}\n            is_negative_disabled\n            max_length={10}\n            name='amount'\n            onChange={onChange}\n            type='tel'\n            value={amount}\n        />;\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            <ButtonToggleMenu\n                buttons_arr={basis_list}\n                className='dropdown--no-margin'\n                is_animated={true}\n                name='basis'\n                onChange={onChange}\n                value={basis}\n            />\n            {!is_single_currency ?\n                <div className='trade-container__currency-options'>\n                    <Dropdown\n                        className={classNames({ 'trade-container__currency-options-dropdown': !is_single_currency })}\n                        classNameDisplay='trade-container__currency-options--display'\n                        has_symbol\n                        is_alignment_left\n                        is_nativepicker={false}\n                        list={currencies_list}\n                        name='currency'\n                        value={currency}\n                        onChange={onChange}\n                    />\n                    {input}\n                </div>\n                :\n                input\n\n            }\n            <AllowEquals\n                contract_start_type={contract_start_type}\n                contract_type={contract_type}\n                contract_types_list={contract_types_list}\n                duration_unit={duration_unit}\n                expiry_type={expiry_type}\n                onChange={onChange}\n                value={parseInt(is_equal)}\n            />\n        </Fieldset>\n    );\n};\n\nAmount.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    basis              : PropTypes.string,\n    basis_list         : MobxPropTypes.arrayOrObservableArray,\n    contract_start_type: PropTypes.string,\n    contract_type      : PropTypes.string,\n    contract_types_list: MobxPropTypes.observableObject,\n    currencies_list    : MobxPropTypes.observableObject,\n    currency           : PropTypes.string,\n    duration_unit      : PropTypes.string,\n    expiry_type        : PropTypes.string,\n    is_equal           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    is_minimized      : PropTypes.bool,\n    is_nativepicker   : PropTypes.bool,\n    is_single_currency: PropTypes.bool,\n    onChange          : PropTypes.func,\n    validation_errors : PropTypes.object,\n};\n\nexport default connect(({ modules, client }) => ({\n    amount             : modules.trade.amount,\n    basis              : modules.trade.basis,\n    basis_list         : modules.trade.basis_list,\n    contract_start_type: modules.trade.contract_start_type,\n    contract_type      : modules.trade.contract_type,\n    contract_types_list: modules.trade.contract_types_list,\n    currencies_list    : client.currencies_list,\n    currency           : modules.trade.currency,\n    duration_unit      : modules.trade.duration_unit,\n    expiry_type        : modules.trade.expiry_type,\n    is_equal           : modules.trade.is_equal,\n    is_single_currency : client.is_single_currency,\n    onChange           : modules.trade.onChange,\n    validation_errors  : modules.trade.validation_errors,\n}))(Amount);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Icon         from 'Assets/icon.jsx';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\nimport InputField   from 'App/Components/Form/InputField';\nimport { connect }  from 'Stores/connect';\nimport { localize } from 'App/i18n';\n\nconst Barrier = ({\n    barrier_1,\n    barrier_2,\n    barrier_count,\n    is_minimized,\n    onChange,\n    validation_errors,\n}) =>  {\n    const barrier_title = barrier_count === 1 ? localize('Barrier') : localize('Barriers');\n\n    if (is_minimized) {\n        return barrier_count !== 2 ? (\n            <div className='fieldset-minimized fieldset-minimized__barrier1'>\n                {barrier_1}\n            </div>\n        ) : (\n            <React.Fragment>\n                <div className='fieldset-minimized fieldset-minimized__barrier1'>\n                    {barrier_1}\n                </div>\n                <div className='fieldset-minimized fieldset-minimized__barrier2'>\n                    {barrier_2}\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    const input_class = barrier_count === 2 ? 'multiple' : 'single';\n    return (\n        <Fieldset\n            className='trade-container__fieldset trade-container__barriers'\n            header={barrier_title}\n            is_center\n        >\n            <div>\n                <InputField\n                    type='number'\n                    name='barrier_1'\n                    value={barrier_1}\n                    className={`trade-container__barriers-${input_class}`}\n                    classNameInput={classNames('trade-container__input', 'trade-container__barriers-input', `trade-container__barriers-${input_class}-input`)}\n                    onChange={onChange}\n                    error_messages={validation_errors.barrier_1 || []}\n                    is_float\n                    is_signed\n                />\n\n                {barrier_count === 2 &&\n                    <React.Fragment>\n                        <InputField\n                            type='number'\n                            name='barrier_2'\n                            value={barrier_2}\n                            className='multiple'\n                            classNameInput='trade-container__input'\n                            onChange={onChange}\n                            error_messages={validation_errors.barrier_2}\n                            is_float\n                            is_signed\n                        />\n                        <Icon icon='IconBarrierUp'   className='trade-container__barriers--up' />\n                        <Icon icon='IconBarrierDown' className='trade-container__barriers--down' />\n                    </React.Fragment>\n                }\n            </div>\n        </Fieldset>\n    );\n};\n\nBarrier.propTypes = {\n    barrier_1        : PropTypes.string,\n    barrier_2        : PropTypes.string,\n    barrier_count    : PropTypes.number,\n    is_minimized     : PropTypes.bool,\n    onChange         : PropTypes.func,\n    validation_errors: PropTypes.object,\n};\n\nexport default connect(({ modules }) => (\n    {\n        barrier_1        : modules.trade.barrier_1,\n        barrier_2        : modules.trade.barrier_2,\n        barrier_count    : modules.trade.barrier_count,\n        onChange         : modules.trade.onChange,\n        validation_errors: modules.trade.validation_errors,\n    }\n))(Barrier);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst TickSteps = ({\n    hover_value,\n    max_value,\n    min_value,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    value,\n}) => {\n    const arr_ticks = [...Array((max_value - min_value) + 1).keys()];\n\n    const isActive = (idx) => (idx + min_value) === value;\n    const isMarked = (idx) => (idx + min_value) < value;\n    const isMarkedOnHover = (idx) => (isMarked(idx)) ? false : (idx + min_value) <= hover_value;\n\n    return (\n        <React.Fragment>\n            {arr_ticks.map(idx =>\n                <span\n                    key={idx}\n                    className={classNames('range-slider__ticks-step', {\n                        'range-slider__ticks-step--active'      : isActive(idx),\n                        'range-slider__ticks-step--marked'      : isMarked(idx),\n                        'range-slider__ticks-step--marked-hover': isMarkedOnHover(idx),\n                    })}\n                    onClick={() => onClick(idx + min_value)}\n                    onMouseEnter={() => onMouseEnter(idx + min_value)}\n                    onMouseLeave={onMouseLeave}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nTickSteps.propTypes = {\n    hover_value : PropTypes.number,\n    max_value   : PropTypes.number,\n    min_value   : PropTypes.number,\n    onClick     : PropTypes.func,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    value       : PropTypes.number,\n};\n\nexport default TickSteps;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from 'App/i18n';\nimport TickSteps    from './tick-steps.jsx';\n\nclass RangeSlider extends React.PureComponent {\n    state = {\n        hover_value: 0,\n    }\n\n    handleChange = (e) => {\n        // e.target.value returns string, we need to convert them to number\n        const value = +e.target.value;\n        if (value !== this.props.value) {\n            this.resetOnHover();\n            this.props.onChange({ target: { name: this.props.name, value } });\n        }\n    };\n\n    handleClick = (index) => {\n        if (index !== this.props.value) {\n            this.resetOnHover();\n            this.props.onChange({ target: { name: this.props.name, value: index } });\n        }\n    };\n\n    onMouseEnter = (index) => {\n        if (index) {\n            this.setState({ hover_value: index });\n            this.rangeSliderTrack.style.width = this.getRangeSliderTrackWidth(index, true);\n        }\n    };\n\n    onMouseLeave = (e) => {\n        const { offsetX, offsetY } = e.nativeEvent;\n        if (offsetY <= -3 || offsetY >= 3 || offsetX < -3 || offsetX > 3) {\n            this.resetOnHover();\n        }\n    };\n\n    getRangeSliderTrackWidth = (value, is_hover) => {\n        const width = (value - this.props.min_value) * (10 / (this.props.max_value - this.props.min_value));\n        return `${(width * 2) + (is_hover ? 0.8 : 1.4)}em`;\n    };\n\n    resetOnHover = () => {\n        if (this.state.hover_value) {\n            this.setState({ hover_value: 0 });\n            this.rangeSliderTrack.style.width = 0;\n        }\n    };\n\n    render() {\n        const {\n            className,\n            max_value,\n            min_value,\n            name,\n            value,\n        } = this.props;\n\n        const display_value = this.state.hover_value || value;\n        return (\n            <div className={classNames('range-slider', className, { 'range-slider__error': ((value < min_value) || (value > max_value)) })}>\n                <label className='range-slider__label' htmlFor='range'>\n                    <input\n                        className='input trade-container__input range-slider__track'\n                        id='range'\n                        max={max_value}\n                        max_value={max_value}\n                        min={min_value}\n                        min_value={min_value}\n                        name={name}\n                        onChange={this.handleChange}\n                        tabIndex='0'\n                        type='range'\n                        steps={max_value - min_value}\n                        value={value}\n                    />\n                    {/* this element to be placed before <TickSteps /> to prevent overlapping colors */}\n                    <span\n                        ref={node => this.rangeSliderTrack = node}\n                        className='range-slider__line range-slider__line--fill'\n                        onMouseLeave={this.onMouseLeave}\n                    />\n                    <div className='range-slider__ticks'>\n                        <TickSteps\n                            hover_value={this.state.hover_value}\n                            max_value={max_value}\n                            min_value={min_value}\n                            onClick={this.handleClick}\n                            onMouseLeave={this.onMouseLeave}\n                            onMouseEnter={this.onMouseEnter}\n                            value={value}\n                        />\n                    </div>\n                    {/* Calculate line width based on active value and size of range thumb */}\n                    <div\n                        className='range-slider__line'\n                        style={{ width: `${this.getRangeSliderTrackWidth(value)}` }}\n                    />\n                </label>\n                <div className='range-slider__caption'>\n                    {\n                        !!display_value &&\n                        <span className='range-slider__caption-title'>\n                            {display_value === 1 && localize('{{display_value}} Tick', { display_value })}\n                            {display_value > 1 && localize('{{display_value}} Ticks', { display_value })}\n                        </span>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n// Keypress events do not trigger on Safari due to the way it handles input type='range' elements, using focus on the input element also doesn't work for Safari.\n\nRangeSlider.propTypes = {\n    className: PropTypes.string,\n    max_value: PropTypes.number,\n    min_value: PropTypes.number,\n    name     : PropTypes.string,\n    onChange : PropTypes.func,\n    value    : PropTypes.number,\n};\n\nexport default RangeSlider;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React, { Fragment } from 'react';\nimport Icon                from 'Assets/icon.jsx';\n\nconst DurationToggle = ({\n    name,\n    onChange,\n    value,\n}) => {\n    const toggle = () => {\n        onChange({ target: { value: !value, name } });\n    };\n    const icon_className = classNames(\n        'advanced-simple-toggle__icon',\n        'select-arrow',\n        { 'advanced-simple-toggle__icon--active': value },\n    );\n    return (\n        <Fragment>\n            <button className='advanced-simple-toggle' onClick={toggle}>\n                <Icon icon='IconArrow' className={icon_className} classNamePath={'advanced-simple-toggle__icon-path'} />\n            </button>\n        </Fragment>);\n};\n\nDurationToggle.propTypes = {\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.bool,\n};\n\nexport default DurationToggle;\n","\nimport { WS }               from 'Services';\nimport { getPropertyValue } from '_common/utility';\n\nconst trading_events = {};\nexport const getTradingEvents = async (date, underlying = null) => {\n    if (!date) {\n        return [];\n    }\n\n    if (!(date in trading_events)) {\n        const trading_times_response = await WS.getTradingTimes(date);\n\n        if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n            for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                if (submarkets) {\n                    for (let j = 0; j < submarkets.length; j++) {\n                        const symbols = submarkets[j].symbols;\n                        if (symbols) {\n                            for (let k = 0; k < symbols.length; k++) {\n                                const symbol = symbols[k];\n                                if (!trading_events[trading_times_response.echo_req.trading_times]) {\n                                    trading_events[trading_times_response.echo_req.trading_times] = {};\n                                }\n                                trading_events[trading_times_response.echo_req.trading_times][symbol.symbol] =\n                                    symbol.events;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return trading_events[date][underlying];\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    getStartOfMonth,\n    toMoment }        from 'Utils/Date';\nimport { localize }   from 'App/i18n';\nimport CalendarBody   from './calendar-body.jsx';\nimport CalendarFooter from './calendar-footer.jsx';\nimport CalendarHeader from './calendar-header.jsx';\n\nclass Calendar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        const { date_format, start_date, value } = props;\n        const current_date = toMoment(value || start_date).format(date_format);\n        this.state = {\n            calendar_date: current_date, // calendar date reference\n            selected_date: value,        // selected date\n            calendar_view: 'date',\n            hovered_date : '',\n            duration_date: '',\n        };\n    }\n\n    switchView = (view) => {\n        this.setState({ calendar_view: view });\n    };\n\n    navigateTo = (new_date) => {\n        this.setState({\n            calendar_date: toMoment(new_date).format(this.props.date_format),\n        }, () => {\n            if (this.props.onChangeCalendarMonth) {\n                const start_of_month = getStartOfMonth(new_date);\n                this.props.onChangeCalendarMonth(start_of_month);\n            }\n        });\n    };\n\n    onMouseOver = (event) => {\n        const target = event.currentTarget;\n\n        if (!target.classList.contains('calendar__cell--disabled') && !target.classList.contains('calendar__cell--hover')) {\n            target.className += ' calendar__cell--hover';\n            this.setState({\n                hovered_date : target.getAttribute('data-date'),\n                duration_date: target.getAttribute('data-duration'),\n            });\n        }\n    };\n\n    onMouseLeave = (event) => {\n        const target = event.currentTarget;\n\n        if (target.classList.contains('calendar__cell--hover')) {\n            target.classList.remove('calendar__cell--hover');\n\n            this.setState({\n                hovered_date : null,\n                duration_date: null,\n            });\n        }\n    };\n\n    updateSelectedDate = (e) => {\n        const { date_format, max_date, min_date, onSelect } = this.props;\n\n        const moment_date = toMoment(e.target.dataset.date).startOf('day');\n        const is_before   = moment_date.isBefore(toMoment(min_date));\n        const is_after    = moment_date.isAfter(toMoment(max_date));\n\n        if (is_before || is_after) {\n            return;\n        }\n\n        const formatted_date = moment_date.format(date_format);\n        this.setState({\n            calendar_date: formatted_date,\n            selected_date: formatted_date,\n        });\n\n        if (onSelect) {\n            onSelect(formatted_date);\n        }\n    };\n\n    updateSelected = (e, type) => {\n        if (e) e.stopPropagation();\n\n        if (type === 'day') {\n            this.updateSelectedDate(e);\n            return;\n        }\n\n        const view_map = {\n            month : 'date',\n            year  : 'month',\n            decade: 'year',\n        };\n        const date = toMoment(this.state.calendar_date)[type === 'decade' ? 'year' : type](e.target.dataset[type].split('-')[0]).format(this.props.date_format);\n\n        if (this.isPeriodDisabled(date, type)) return;\n\n        this.setState({\n            calendar_date: date,\n            calendar_view: view_map[type],\n        }, () => {\n            if (this.props.onChangeCalendarMonth) {\n                const start_of_month = getStartOfMonth(date);\n                this.props.onChangeCalendarMonth(start_of_month);\n            }\n        });\n    };\n\n    resetCalendar = () => {\n        const { date_format, start_date } = this.props;\n\n        const default_date = toMoment(start_date).format(date_format);\n        this.setState({\n            calendar_date: default_date,\n            selected_date: '',\n            calendar_view: 'date',\n        });\n    };\n\n    setToday = () => {\n        const { date_format, onSelect } = this.props;\n\n        const now = toMoment().format(date_format);\n        this.setState({\n            calendar_date: now,\n            selected_date: now,\n            calendar_view: 'date',\n        });\n\n        if (onSelect) {\n            onSelect(now, true);\n        }\n    };\n\n    isPeriodDisabled = (date, unit) => {\n        const { max_date, min_date } = this.props;\n\n        const start_of_period = toMoment(date).clone().startOf(unit);\n        const end_of_period   = toMoment(date).clone().endOf(unit);\n        return end_of_period.isBefore(toMoment(min_date))\n            || start_of_period.isAfter(toMoment(max_date));\n    };\n\n    render() {\n        const { date_format, duration_date, footer, has_today_btn, has_range_selection,\n            holidays, start_date, weekends } = this.props;\n        const { calendar_date, calendar_view, selected_date  } = this.state;\n        let default_message, is_minimum;\n\n        if (duration_date) {\n            default_message = `${duration_date} ${duration_date === 1 ? localize('Day') : localize('Days')}`;\n            is_minimum = false;\n        } else {\n            default_message = localize('Minimum duration is 1 day');\n            is_minimum = true;\n        }\n        \n        return (\n            <div className='calendar' data-value={selected_date}>\n                <CalendarHeader\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    navigateTo={this.navigateTo}\n                    switchView={this.switchView}\n                />\n                <CalendarBody\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    date_format={date_format}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    start_date={start_date}\n                    selected_date={selected_date}\n                    updateSelected={this.updateSelected}\n                    holidays={holidays}\n                    has_range_selection={has_range_selection}\n                    hovered_date={this.state.hovered_date}\n                    weekends={weekends}\n                    onMouseOver={this.onMouseOver}\n                    onMouseLeave={this.onMouseLeave}\n                />\n                <CalendarFooter\n                    footer={footer}\n                    duration_date={this.state.duration_date || default_message}\n                    is_minimum={is_minimum}\n                    has_today_btn={has_today_btn}\n                    has_range_selection={has_range_selection}\n                    onClick={this.setToday}\n                />\n            </div>\n        );\n    }\n}\n\nCalendar.defaultProps = {\n    date_format: 'YYYY-MM-DD',\n    min_date   : toMoment(0).format('YYYY-MM-DD'),               // by default, min_date is set to Unix Epoch (January 1st 1970)\n    max_date   : toMoment().add(120, 'y').format('YYYY-MM-DD'), // by default, max_date is set to 120 years after today\n};\n\nCalendar.propTypes = {\n    date_format  : PropTypes.string,\n    duration_date: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    footer             : PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    has_today_btn      : PropTypes.bool,\n    holidays           : PropTypes.arrayOf(\n        PropTypes.shape({\n            dates  : PropTypes.array,\n            descrip: PropTypes.string,\n        }),\n    ),\n    max_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onChangeCalendarMonth: PropTypes.func,\n    onSelect             : PropTypes.func,\n    start_date           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    value   : PropTypes.string,\n    weekends: PropTypes.arrayOf(PropTypes.number),\n};\n\nexport default Calendar;\n","import classNames           from 'classnames';\nimport { observer }         from 'mobx-react';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { CSSTransition }    from 'react-transition-group';\nimport Icon                 from 'Assets/icon.jsx';\nimport InputField           from 'App/Components/Form/InputField';\nimport {\n    addDays,\n    daysFromTodayTo,\n    formatDate,\n    getStartOfMonth,\n    isDateValid,\n    toMoment }              from 'Utils/Date';\nimport { localize }         from 'App/i18n';\nimport { getTradingEvents } from './helpers';\nimport Calendar             from '../../Elements/Calendar';\n\nclass DatePicker extends React.Component {\n    state = {\n        date_value           : '',\n        holidays             : [],\n        is_datepicker_visible: false,\n        is_clear_btn_visible : false,\n        value                : this.props.value,\n        weekends             : [],\n    };\n\n    is_mounted = false;\n\n    componentDidMount() {\n        this.is_mounted = true;\n\n        document.addEventListener('click', this.onClickOutside, true);\n        const { mode, value } = this.props;\n        const initial_value = mode === 'duration' ? formatDate(addDays(toMoment(), value || 1), 'DD MMM YYYY') : formatDate(value, 'DD MMM YYYY');\n\n        this.updateDatePickerValue(initial_value);\n\n        if (this.props.disable_trading_events) {\n            this.onChangeCalendarMonth(getStartOfMonth(this.state.value));\n        }\n    }\n\n    componentWillUnmount() {\n        this.is_mounted = false;\n        document.removeEventListener('click', this.onClickOutside, true);\n    }\n\n    handleVisibility = () => {\n        this.setState(state => ({ is_datepicker_visible: !state.is_datepicker_visible }));\n    };\n\n    onClickOutside = (e) => {\n        if (/purchase_/ig.test(e.target.id)) {\n            return;\n        }\n        if (!this.mainNode.contains(e.target) && this.state.is_datepicker_visible) {\n            this.setState({ is_datepicker_visible: false });\n            if (!!this.state.value && this.props.mode !== 'duration') {\n                this.updateDatePickerValue(formatDate(this.state.value, 'DD MMM YYYY'));\n            }\n        }\n    };\n\n    onMouseEnter = () => {\n        if (this.state.value && (('is_clearable' in this.props) || this.props.is_clearable)) {\n            this.setState({ is_clear_btn_visible: true });\n        }\n    };\n\n    onMouseLeave = () => {\n        this.setState({ is_clear_btn_visible: false });\n    };\n\n    onSelectCalendar = (selected_date, is_datepicker_visible = true) => {\n        let value = selected_date;\n        if (!isDateValid(value)) { value = ''; }\n\n        if (this.props.mode === 'duration') {\n            this.updateDatePickerValue(value);\n        } else {\n            this.updateDatePickerValue(formatDate(value, 'DD MMM YYYY'));\n        }\n        this.setState({ is_datepicker_visible });\n    };\n\n    onChangeInput = (e) => {\n        const value = e.target.value;\n        const formatted_value = formatDate(addDays(toMoment(), value), 'DD MMM YYYY');\n        this.updateDatePickerValue(formatted_value);\n        this.props.onChange(e);\n    };\n\n    clearDatePickerInput = () => {\n        this.setState({ value: null }, this.updateStore);\n        if (this.calendar) {\n            this.calendar.resetCalendar();\n        }\n    };\n\n    // TODO: handle cases where user inputs date before min_date and date after max_date\n    updateDatePickerValue = (value) => {\n        const { date_format, mode, start_date } = this.props;\n        this.setState({ value }, this.updateStore);\n\n        if (mode === 'duration') {\n            const new_value      = daysFromTodayTo(value);\n            const new_date_value = formatDate(value, 'DD MMM YYYY');\n            this.setState({ value: new_value, date_value: new_date_value }, this.updateStore);\n        }\n\n        // update Calendar\n        const new_date = (mode === 'duration') ? formatDate(value, 'DD MMM YYYY') : value;\n        if (this.calendar && (isDateValid(new_date) || !new_date)) {\n            if (!new_date) {\n                const current_date = formatDate(start_date, date_format);\n                this.calendar.setState({\n                    calendar_date: current_date,\n                    selected_date: current_date,\n                });\n            } else {\n                this.calendar.setState({\n                    calendar_date: formatDate(new_date),\n                    selected_date: formatDate(new_date),\n                });\n            }\n        }\n    };\n\n    // update MobX store\n    updateStore = () => {\n        const { name, onChange } = this.props;\n        if (onChange) {\n            onChange({ target: { name, value: this.state.value } });\n        }\n    };\n\n    async onChangeCalendarMonth(calendar_date) {\n        const trading_events = await getTradingEvents(calendar_date, this.props.underlying);\n        const holidays = [];\n        let weekends   = [];\n        trading_events.forEach(events => {\n            const dates = events.dates.split(', '); // convert dates str into array\n            const idx = dates.indexOf('Fridays');\n            if (idx !== -1) {\n                weekends = [6, 0]; // Sat, Sun\n            }\n            holidays.push({\n                dates,\n                descrip: events.descrip,\n            });\n        });\n\n        if (this.is_mounted) {\n            this.setState({\n                holidays,\n                weekends,\n            });\n        }\n    }\n\n    renderInputField = () => {\n        const { is_read_only, mode, name, label, error_messages } = this.props;\n        let { placeholder } = this.props;\n        let value, type, onChange;\n\n        switch (mode) {\n            case 'duration':\n                onChange = this.onChangeInput;\n                type = 'text';\n                value = this.state.value;\n                break;\n            default:\n                placeholder = placeholder || localize('Select a date');\n                type = 'text';\n                value = formatDate(this.props.value, 'DD MMM YYYY');\n        }\n\n        return (\n            <InputField\n                className='datepicker__input-field'\n                classNameInput='datepicker__input trade-container__input'\n                data-tip={false}\n                data-value={this.state.value}\n                error_messages={error_messages}\n                is_autocomplete_disabled={true}\n                is_hj_whitelisted\n                label={label}\n                is_read_only={is_read_only}\n                name={name}\n                onChange={onChange}\n                onClick={this.handleVisibility}\n                placeholder={placeholder}\n                type={type}\n                value={value}\n            />\n        );\n    };\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <div ref={node => { this.mainNode = node; }} className='datepicker'>\n                    <input\n                        id={this.props.name}\n                        name={this.props.name}\n                        className='input trade-container__input datepicker__input'\n                        type='date'\n                        value={this.state.value}\n                        min={this.props.min_date}\n                        max={this.props.max_date}\n                        onChange={(e) => {\n                            // fix for ios issue: clear button doesn't work\n                            // https://github.com/facebook/react/issues/8938\n                            const target = e.nativeEvent.target;\n                            function iosClearDefault() { target.defaultValue = ''; }\n                            window.setTimeout(iosClearDefault, 0);\n\n                            this.onSelectCalendar(e.target.value);\n                        }}\n                    />\n                    <label className='datepicker__native-overlay' htmlFor={this.props.name}>\n                        {this.state.value || this.props.placeholder}\n                        <Icon icon='IconArrow' className='datepicker__arrowhead' />\n                    </label>\n                </div>\n            );\n        }\n\n        return (\n            <div\n                id={this.props.id}\n                ref={node => { this.mainNode = node; }}\n                className='datepicker'\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}\n            >\n                { this.renderInputField() }\n                <Icon\n                    icon='IconCalendar'\n                    className={classNames('datepicker__icon datepicker__icon--calendar', {\n                        'datepicker__icon--is-hidden' : this.state.is_clear_btn_visible,\n                        'datepicker__icon--with-label': this.props.label,\n                    })}\n                    onClick={this.handleVisibility}\n                />\n                {this.props.is_clearable &&\n                    <Icon\n                        icon='IconClear'\n                        className={classNames('datepicker__icon datepicker__icon--clear', {\n                            'datepicker__icon--is-hidden': !this.state.is_clear_btn_visible,\n                        })}\n                        onClick={this.state.is_clear_btn_visible ? this.clearDatePickerInput : undefined}\n                    />\n                }\n                <CSSTransition\n                    in={this.state.is_datepicker_visible}\n                    timeout={100}\n                    classNames={{\n                        enter    : `datepicker__picker--enter datepicker__picker--${this.props.alignment}-enter`,\n                        enterDone: `datepicker__picker--enter-done datepicker__picker--${this.props.alignment}-enter-done`,\n                        exit     : `datepicker__picker--exit datepicker__picker--${this.props.alignment}-exit`,\n                    }}\n                    unmountOnExit\n                >\n                    <div\n                        className={classNames('datepicker__picker', {\n                            'datepicker__picker--left': this.props.alignment === 'left',\n                        })}\n                    >\n                        <Calendar\n                            ref={node => { this.calendar = node; }}\n                            onSelect={this.onSelectCalendar}\n                            onChangeCalendarMonth={this.props.disable_trading_events ?\n                                this.onChangeCalendarMonth.bind(this) : undefined}\n                            holidays={this.state.holidays}\n                            weekends={this.state.weekends}\n                            duration_date={this.state.value}\n                            date_format={this.props.date_format}\n                            has_today_btn={this.props.has_today_btn}\n                            has_range_selection={this.props.has_range_selection}\n                            footer={this.props.footer}\n                            max_date={this.props.max_date}\n                            min_date={this.props.min_date}\n                            start_date={this.props.start_date}\n                            value={this.props.mode === 'duration' ? this.state.date_value : this.props.value}\n                        />\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nDatePicker.defaultProps = {\n    date_format: Calendar.defaultProps.date_format,\n    mode       : 'date',\n};\n\nDatePicker.propTypes = {\n    ...Calendar.propTypes,\n    error_messages: PropTypes.array,\n    label         : PropTypes.string,\n};\n\nexport default observer(DatePicker);\n","import PropTypes                      from 'prop-types';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport React                          from 'react';\nimport DatePicker                     from 'App/Components/Form/DatePicker';\nimport { connect }                    from 'Stores/connect';\nimport { hasIntradayDurationUnit }    from 'Stores/Modules/Trading/Helpers/duration';\nimport {\n    isTimeValid,\n    setTime,\n    toMoment }                        from 'Utils/Date';\n\nconst TradingDatePicker = ({\n    duration_d,\n    duration_min_max,\n    duration_units_list,\n    expiry_date,\n    expiry_type,\n    is_24_hours_contract,\n    mode,\n    name,\n    onChange,\n    server_time,\n    start_time,\n    start_date,\n    symbol,\n    validation_errors,\n}) => {\n    let max_date_duration,\n        min_date_expiry,\n        has_today_btn,\n        is_read_only;\n    const has_intraday_unit = hasIntradayDurationUnit(duration_units_list);\n    const min_duration = has_intraday_unit ? toMoment(server_time).clone() : toMoment(server_time).clone().add(duration_min_max.daily.min, 'second');\n    const moment_contract_start_date_time =\n        setTime(toMoment(min_duration), (isTimeValid(start_time) ? start_time : server_time.format('HH:mm:ss')));\n\n    const max_daily_duration   = duration_min_max.daily ? duration_min_max.daily.max : 365 * 24 * 3600;\n    const is_duration_contract = expiry_type === 'duration';\n\n    if (is_24_hours_contract) {\n        min_date_expiry   = moment_contract_start_date_time.clone().startOf('day');\n        max_date_duration = moment_contract_start_date_time.clone().add(\n            start_date ? 24 * 3600 : (max_daily_duration), 'second');\n    } else {\n        min_date_expiry   = moment_contract_start_date_time.clone().startOf('day');\n        max_date_duration = moment_contract_start_date_time.clone().add(max_daily_duration, 'second');\n    }\n    if (is_duration_contract) {\n        if (has_intraday_unit) {\n            min_date_expiry.add(1, 'day');\n        }\n        has_today_btn = false;\n        is_read_only = false;\n    } else {\n        has_today_btn = true;\n        is_read_only = true;\n    }\n\n    const error_messages = is_duration_contract ? validation_errors.duration : validation_errors.expiry_date;\n    const date_value = is_duration_contract ? (duration_d || '').toString() : expiry_date;\n\n    return (\n        <DatePicker\n            alignment='left'\n            disable_year_selector\n            disable_trading_events\n            error_messages={error_messages || []}\n            has_today_btn={has_today_btn}\n            has_range_selection={mode === 'duration'}\n            is_nativepicker={false}\n            is_read_only={is_read_only}\n            label={duration_units_list.length === 1 ? duration_units_list[0].text : null}\n            mode={mode}\n            name={name}\n            onChange={onChange}\n            min_date={min_date_expiry}\n            max_date={max_date_duration}\n            start_date={start_date}\n            underlying={symbol}\n            value={date_value}\n        />\n    );\n};\n\nTradingDatePicker.propTypes = {\n    duration: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    duration_min_max   : PropTypes.object,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_type         : PropTypes.string,\n    is_24_hours_contract: PropTypes.bool,\n    mode                : PropTypes.string,\n    name                : PropTypes.string,\n    onChange            : PropTypes.func,\n    server_time         : PropTypes.object,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    symbol           : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, common, ui }) => ({\n        duration_min_max   : modules.trade.duration_min_max,\n        duration_units_list: modules.trade.duration_units_list,\n        expiry_date        : modules.trade.expiry_date,\n        expiry_type        : modules.trade.expiry_type,\n        onChange           : modules.trade.onChange,\n        server_time        : common.server_time,\n        start_date         : modules.trade.start_date,\n        start_time         : modules.trade.start_time,\n        symbol             : modules.trade.symbol,\n        validation_errors  : modules.trade.validation_errors,\n        duration_d         : ui.duration_d,\n    })\n)(TradingDatePicker);\n","import PropTypes    from 'prop-types';\nimport classNames   from 'classnames';\nimport React        from 'react';\nimport { localize } from 'App/i18n';\nimport { toMoment } from 'Utils/Date';\n\nconst Dialog = ({\n    preClass,\n    selected_time,\n    end_time,\n    start_time,\n    onChange,\n    className,\n}) => {\n    const start_time_moment     = start_time\n        ? toMoment(start_time)\n        : toMoment();\n    const end_time_moment       = end_time\n        ? toMoment(end_time)\n        : toMoment().hour('23').minute('59').seconds('59').milliseconds('999');\n    const to_compare_moment     = toMoment();\n    const [ hour, minute ]      = selected_time.split(':');\n    const hours    = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes  = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const selectOption = (type, current_value, prev_value, is_enabled = true) => {\n        if (is_enabled && prev_value) {\n            const [ prev_hour, prev_minute ] = prev_value.split(':');\n            if ((type === 'h' && current_value !== prev_hour) || (type === 'm' && current_value !== prev_minute)) {\n                onChange(`${type === 'h' ? current_value : prev_hour}:${type === 'm' ? current_value : prev_minute}`);\n            }\n        }\n    };\n\n    return (\n        <div className={classNames(`${preClass}__dialog`, `${className}`)}>\n            <div className={`${preClass}__selector`}>\n                <div className={`${preClass}__selector--hours`}>\n                    <div className={classNames(`${preClass}__selector-list-title`, 'center-text')}><strong>{localize('Hour')}</strong></div>\n                    <div>\n                        {hours.map((h, key) => {\n                            to_compare_moment.hour(h);\n                            const start_time_reset_minute = start_time_moment.clone().minute(0);\n                            const is_hour_enabled = to_compare_moment.isBetween(\n                                start_time_reset_minute,\n                                end_time_moment);\n                            const is_minute_enabled = to_compare_moment.isBetween(\n                                start_time_moment,\n                                end_time_moment,\n                                'minute');\n                            // The minute number after which the last block/interval of `Minutes` selection will be disabled\n                            const last_interval_of_hour = 52;\n                            const is_enabled = to_compare_moment.minutes() > last_interval_of_hour\n                                ? is_hour_enabled && is_minute_enabled\n                                : is_hour_enabled;\n                            return (\n                                <div\n                                    className={classNames(`${preClass}__selector-list-item`,\n                                        { [`${preClass}__selector-list-item--selected`]: (hour === h) },\n                                        { [`${preClass}__selector-list-item--disabled`]: !is_enabled })}\n                                    key={key}\n                                    onClick={() => { selectOption('h', h, selected_time, is_enabled); }}\n                                >\n                                    {h}\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n                <div className={`${preClass}__selector--minutes`}>\n                    <div className={classNames(`${preClass}__selector-list-title`, 'center-text')}><strong>{localize('Minute')}</strong></div>\n                    <div>\n                        {minutes.map((mm, key) => {\n                            to_compare_moment.hour(hour).minute(mm);\n                            const is_enabled = to_compare_moment.isBetween(start_time_moment, end_time_moment, 'minute');\n                            return (\n                                <div\n                                    className={classNames(`${preClass}__selector-list-item`,\n                                        { [`${preClass}__selector-list-item--selected`]: (minute === mm) },\n                                        { [`${preClass}__selector-list-item--disabled`]: !is_enabled })}\n                                    key={key}\n                                    onClick={() => { selectOption('m', mm, selected_time, is_enabled); }}\n                                >\n                                    {mm}\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDialog.propTypes = {\n    className: PropTypes.string,\n    end_time : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    onChange     : PropTypes.func,\n    preClass     : PropTypes.string,\n    selected_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    start_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n};\n\nexport default Dialog;\n","import classNames        from 'classnames';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport Icon              from 'Assets/icon.jsx';\nimport Dialog            from './dialog.jsx';\nimport InputField        from '../InputField';\n\nclass TimePicker extends React.Component {\n    state = { is_open: false };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    toggleDropDown = () => {\n        this.setState((state) => ({ is_open: !state.is_open }));\n    };\n\n    handleChange = (arg) => {\n        // To handle nativepicker;\n        const value = typeof arg === 'object' ? arg.target.selected_time : arg;\n\n        if (value !== this.props.selected_time) {\n            this.props.onChange({ target: { name: this.props.name, value } });\n        }\n    };\n\n    saveRef = (node) => {\n        if (!node) return;\n        if (node.nodeName === 'INPUT') {\n            this.target_element = node;\n            return;\n        }\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)) {\n            if (this.state.is_open) {\n                this.setState({ is_open: false });\n            }\n        }\n    };\n\n    render() {\n        const prefix_class = 'time-picker';\n        const {\n            selected_time,\n            name,\n            is_nativepicker,\n            placeholder,\n            end_time,\n            start_time,\n            validation_errors,\n        } = this.props;\n        return (\n            <div\n                ref={this.saveRef}\n                className={classNames(prefix_class,\n                    { [`${prefix_class}--padding`]: this.props.padding })}\n            >\n                {\n                    is_nativepicker\n                        ? <input\n                            type='time'\n                            id={`${prefix_class}-input`}\n                            value={selected_time}\n                            onChange={this.handleChange}\n                            name={name}\n                            min={start_time}\n                            max={end_time}\n                        />\n                        : (\n                            <React.Fragment>\n                                <InputField\n                                    error_messages={validation_errors}\n                                    type='text'\n                                    is_hj_whitelisted\n                                    is_read_only\n                                    id={`${prefix_class}-input`}\n                                    className={classNames(`${prefix_class}-input`)}\n                                    value={`${selected_time} GMT`}\n                                    onClick={this.toggleDropDown}\n                                    name={name}\n                                    placeholder={placeholder}\n                                />\n                                <Icon icon='IconClock' className={`${prefix_class}__icon`} />\n                                <CSSTransition\n                                    in={ this.state.is_open }\n                                    classNames={{\n                                        enter    : 'time-picker__dialog--enter',\n                                        enterDone: 'time-picker__dialog--enter-done',\n                                        exit     : 'time-picker__dialog--exit',\n                                    }}\n                                    timeout={100}\n                                    unmountOnExit\n                                >\n                                    <Dialog\n                                        end_time={end_time}\n                                        start_time={start_time}\n                                        className={'from-left'}\n                                        onChange={this.handleChange}\n                                        preClass={prefix_class}\n                                        selected_time={selected_time}\n                                    />\n                                </CSSTransition>\n                            </React.Fragment>\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nTimePicker.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    is_clearable   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    padding        : PropTypes.string,\n    placeholder    : PropTypes.string,\n    selected_time  : PropTypes.string,\n    start_time     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n};\n\nexport default observer(TimePicker);\n","const getClosestTime = (\n    time,\n    interval,\n) => time.minute((Math.ceil(time.minute() / interval) * interval));\n\nexport const getSelectedTime = (\n    server_time,\n    selected_time,\n    market_open_time,\n) => {\n    if (selected_time.isAfter(market_open_time)) {\n        return getClosestTime(selected_time, 5).format('HH:mm');\n    }\n    if (market_open_time.isAfter(server_time)) {\n        return getClosestTime(market_open_time, 5).format('HH:mm');\n    }\n\n    return getClosestTime(server_time, 5).format('HH:mm');\n};\n\nexport const getBoundaries = (\n    server_time,\n    market_open_time,\n    market_close_time,\n) => {\n    const boundaries = {\n        start: server_time.isBefore(market_open_time)\n            ? market_open_time\n            : server_time,\n        end: market_close_time,\n    };\n\n    boundaries.start = getClosestTime(boundaries.start, 5);\n    return boundaries;\n};\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport {\n    setTime,\n    toMoment }     from 'Utils/Date';\nimport TimePicker  from 'App/Components/Form/TimePicker';\nimport {\n    getSelectedTime,\n    getBoundaries } from 'Stores/Modules/Trading/Helpers/end-time';\n\nconst TradingTimePicker = ({\n    expiry_date,\n    expiry_time,\n    market_close_times,\n    market_open_times,\n    onChange,\n    server_time,\n}) => {\n    const moment_expiry_date = toMoment(expiry_date);\n    const market_open_datetime = setTime(moment_expiry_date.clone(), market_open_times.slice(-1)[0]);\n    const market_close_datetime = setTime(moment_expiry_date.clone(), market_close_times.slice(-1)[0]);\n    const expiry_datetime = setTime(moment_expiry_date.clone(), expiry_time);\n    const server_datetime = toMoment(server_time);\n\n    const boundaries = getBoundaries(\n        server_datetime.clone(),\n        market_open_datetime.clone(),\n        market_close_datetime);\n    const selected_time = getSelectedTime(\n        server_datetime.clone(),\n        expiry_datetime,\n        market_open_datetime);\n    return (\n        <TimePicker\n            end_time={boundaries.end}\n            onChange={onChange}\n            name='expiry_time'\n            placeholder='12:00'\n            start_time={boundaries.start}\n            selected_time={selected_time}\n        />\n    );\n};\n\nTradingTimePicker.propTypes = {\n    expiry_date: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time       : PropTypes.string,\n    market_close_times: PropTypes.array,\n    name              : PropTypes.string,\n    onChange          : PropTypes.func,\n    server_time       : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, common }) => ({\n        duration_units_list: modules.trade.duration_units_list,\n        expiry_time        : modules.trade.expiry_time,\n        expiry_date        : modules.trade.expiry_date,\n        market_close_times : modules.trade.market_close_times,\n        market_open_times  : modules.trade.market_open_times,\n        onChange           : modules.trade.onChange,\n        server_time        : common.server_time,\n    })\n)(TradingTimePicker);\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport Dropdown                       from 'App/Components/Form/DropDown';\nimport ButtonToggleMenu               from 'App/Components/Form/ButtonToggleMenu';\nimport InputField                     from 'App/Components/Form/InputField';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { connect }                    from 'Stores/connect';\nimport { hasIntradayDurationUnit }    from 'Stores/Modules/Trading/Helpers/duration';\nimport { toMoment }                   from 'Utils/Date';\nimport TradingDatePicker              from '../../DatePicker';\nimport TradingTimePicker              from '../../TimePicker';\n\nconst AdvancedDuration = ({\n    advanced_duration_unit,\n    advanced_expiry_type,\n    duration_units_list,\n    duration_t,\n    changeDurationUnit,\n    getDurationFromUnit,\n    expiry_date,\n    expiry_list,\n    expiry_type,\n    number_input_props,\n    onChange,\n    onChangeUiStore,\n    server_time,\n    shared_input_props,\n    start_date,\n    validation_errors,\n}) => {\n    let is_24_hours_contract = false;\n\n    if (expiry_type === 'endtime') {\n        const has_intraday_duration_unit = hasIntradayDurationUnit(duration_units_list);\n        is_24_hours_contract = (!!start_date || toMoment(expiry_date || server_time).isSame(toMoment(server_time), 'day')) && has_intraday_duration_unit;\n    }\n\n    const endtime_container_class = classNames('endtime-container', {\n        'has-time': is_24_hours_contract,\n    });\n\n    const changeExpiry = ({ target }) => {\n        const { name, value } = target;\n\n        onChange({ target: { name: 'expiry_type', value } });\n        onChangeUiStore({ name, value });\n    };\n\n    return (\n        <Fragment>\n            { expiry_list.length > 1 &&\n                <ButtonToggleMenu\n                    buttons_arr={expiry_list}\n                    name='advanced_expiry_type'\n                    is_animated={true}\n                    onChange={changeExpiry}\n                    value={advanced_expiry_type}\n                />\n            }\n            { expiry_type === 'duration' ?\n                <Fragment>\n                    <div className='duration-container'>\n                        { duration_units_list.length > 1 &&\n                            <Dropdown\n                                is_alignment_left\n                                is_nativepicker={false}\n                                list={duration_units_list}\n                                name='advanced_duration_unit'\n                                onChange={changeDurationUnit}\n                                value={advanced_duration_unit}\n                            />\n                        }\n                        { advanced_duration_unit === 't' &&\n                            <RangeSlider\n                                name='duration'\n                                ticks={10}\n                                value={duration_t}\n                                {...shared_input_props}\n                            />\n                        }\n                        { advanced_duration_unit === 'd' &&\n                            <TradingDatePicker\n                                mode='duration'\n                                name='duration'\n                                is_24_hours_contract={is_24_hours_contract}\n                            />\n                        }\n                        { (advanced_duration_unit !== 't' && advanced_duration_unit !== 'd') &&\n                            <InputField\n                                classNameInput='trade-container__input'\n                                error_messages={validation_errors.duration}\n                                label={duration_units_list.length === 1 ? duration_units_list[0].text : null}\n                                name='duration'\n                                value={getDurationFromUnit(advanced_duration_unit)}\n                                {...number_input_props}\n                                {...shared_input_props}\n                            />\n                        }\n                    </div>\n                </Fragment> :\n                <Fragment>\n                    <div className={endtime_container_class}>\n                        <TradingDatePicker\n                            name='expiry_date'\n                            is_24_hours_contract={is_24_hours_contract}\n                        />\n                        {is_24_hours_contract &&\n                            <TradingTimePicker />\n                            // validation_errors={validation_errors.end_time} TODO: add validation_errors for end time\n                        }\n                    </div>\n                </Fragment>\n            }\n        </Fragment>\n    );\n};\n\nAdvancedDuration.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    changeDurationUnit    : PropTypes.func,\n    duration_t            : PropTypes.number,\n    duration_units_list   : MobxPropTypes.arrayOrObservableArray,\n    expiry_date           : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_list        : PropTypes.array,\n    expiry_type        : PropTypes.string,\n    getDurationFromUnit: PropTypes.func,\n    number_input_props : PropTypes.object,\n    onChange           : PropTypes.func,\n    onChangeUiStore    : PropTypes.func,\n    server_time        : PropTypes.object,\n    shared_input_props : PropTypes.object,\n    start_date         : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    validation_errors: PropTypes.object,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        validation_errors: modules.trade.validation_errors,\n    })\n)(AdvancedDuration);\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport ButtonToggleMenu               from 'App/Components/Form/ButtonToggleMenu';\nimport InputField                     from 'App/Components/Form/InputField';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { connect }                    from 'Stores/connect';\nimport TradingDatePicker              from '../../DatePicker';\n\nconst SimpleDuration = ({\n    changeDurationUnit,\n    duration_t,\n    duration_units_list,\n    getDurationFromUnit,\n    number_input_props,\n    shared_input_props,\n    simple_duration_unit,\n    validation_errors,\n}) => {\n    const filterMinutesAndTicks = (arr) => {\n        const filtered_arr = arr.filter(du => du.value === 't' || du.value === 'm');\n        if (filtered_arr.length <= 1) return [];\n\n        return filtered_arr;\n    };\n    const has_label = !duration_units_list.some(du => du.value === 't');\n\n    return (\n        <Fragment>\n            { duration_units_list.length > 1 &&\n                <ButtonToggleMenu\n                    buttons_arr={filterMinutesAndTicks(duration_units_list)}\n                    is_animated={true}\n                    name='simple_duration_unit'\n                    onChange={changeDurationUnit}\n                    value={simple_duration_unit}\n                />\n            }\n            { simple_duration_unit === 't' &&\n                <RangeSlider\n                    name='duration'\n                    value={duration_t}\n                    ticks={10}\n                    {...shared_input_props}\n                />\n            }\n            { simple_duration_unit === 'd' &&\n                <TradingDatePicker\n                    alignment='left'\n                    mode='duration'\n                    name='duration'\n                />\n            }\n            { (simple_duration_unit !== 't' && simple_duration_unit !== 'd') &&\n                <InputField\n                    classNameInput='trade-container__input'\n                    error_messages={validation_errors.duration}\n                    name='duration'\n                    label={has_label ? duration_units_list[0].text : null}\n                    value={getDurationFromUnit(simple_duration_unit)}\n                    {...number_input_props}\n                    {...shared_input_props}\n                />\n            }\n        </Fragment>\n    );\n};\n\nSimpleDuration.propTypes = {\n    changeDurationUnit  : PropTypes.func,\n    duration_t          : PropTypes.number,\n    duration_units_list : MobxPropTypes.arrayOrObservableArray,\n    getDurationFromUnit : PropTypes.func,\n    number_input_props  : PropTypes.object,\n    shared_input_props  : PropTypes.object,\n    simple_duration_unit: PropTypes.string,\n    validation_errors   : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        validation_errors: modules.trade.validation_errors,\n    })\n)(SimpleDuration);\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport { localize }                   from 'App/i18n';\nimport Fieldset                       from 'App/Components/Form/fieldset.jsx';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { toMoment }                   from 'Utils/Date';\nimport DurationToggle                 from './duration-toggle.jsx';\nimport AdvancedDuration               from './advanced-duration.jsx';\nimport SimpleDuration                 from './simple-duration.jsx';\n\nconst Duration = ({\n    advanced_duration_unit,\n    advanced_expiry_type,\n    duration,\n    duration_unit,\n    duration_units_list,\n    duration_t,\n    expiry_date,\n    expiry_time,\n    expiry_type,\n    getDurationFromUnit,\n    hasDurationUnit,\n    is_advanced_duration,\n    is_minimized,\n    min_value,\n    max_value,\n    onChange,\n    onChangeUiStore,\n    onChangeMultiple,\n    simple_duration_unit,\n    server_time,\n    start_date,\n    market_open_times,\n}) => {\n    const expiry_list = [\n        { text: localize('Duration'), value: 'duration' },\n    ];\n\n    const has_end_time = expiry_list.find(expiry => expiry.value === 'endtime');\n    if (duration_units_list.length === 1 && duration_unit === 't') {\n        if (has_end_time) {\n            expiry_list.pop(); // remove end time for contracts with only tick duration\n        }\n    } else if (!has_end_time) {\n        expiry_list.push({ text: localize('End time'), value: 'endtime' });\n    }\n\n    if (is_minimized) {\n        const moment_expiry = toMoment(expiry_date);\n        const duration_unit_text = (duration_units_list.find(o => o.value === duration_unit) || {}).text;\n        return (\n            <div className='fieldset-minimized fieldset-minimized__duration'>\n                {expiry_type === 'duration'\n                    ? `${duration} ${duration_unit_text}`\n                    : `${moment_expiry.format('ddd - DD MMM, YYYY')}\\n${expiry_time}`\n                }\n            </div>\n        );\n    }\n\n    const changeDurationUnit = ({ target }) => {\n        const { name, value } = target;\n        const duration_value  = getDurationFromUnit(value);\n\n        onChangeUiStore({ name, value });\n        onChangeMultiple({\n            duration_unit: value,\n            duration     : duration_value,\n        });\n    };\n\n    const changeDurationValue = ({ target }) => {\n        const { name, value } = target;\n        const duration_name   = `duration_${is_advanced_duration ? advanced_duration_unit : simple_duration_unit}`;\n\n        // e.target.value returns string, we need to convert them to number\n        onChangeUiStore({ name: duration_name, value: +value });\n        onChange({ target: { name, value: +value } });\n    };\n\n    const onToggleDurationType = ({ target }) => {\n        const { name, value } = target;\n        onChangeUiStore({ name, value });\n\n        // replace selected duration unit and duration if the contract doesn't have that duration unit\n        let current_duration_unit = value ? advanced_duration_unit : simple_duration_unit;\n        if (!hasDurationUnit(current_duration_unit)) {\n            current_duration_unit = duration_units_list[0].value;\n            onChangeUiStore({ name: `${value ? 'advanced' : 'simple'}_duration_unit`, value: current_duration_unit });\n        }\n\n        const duration_value         = getDurationFromUnit(current_duration_unit);\n        const new_trade_store_values = {\n            duration_unit: current_duration_unit,\n            duration     : duration_value,\n        };\n\n        // simple only has expiry type of duration\n        if (!value && expiry_type !== 'duration') {\n            new_trade_store_values.expiry_type = 'duration';\n        }\n\n        if (value && expiry_type !== advanced_expiry_type) {\n            new_trade_store_values.expiry_type = advanced_expiry_type;\n        }\n\n        onChangeMultiple({ ...new_trade_store_values });\n    };\n\n    const props = {\n        shared_input: {\n            is_hj_whitelisted: true,\n            onChange         : changeDurationValue,\n            max_value,\n            min_value,\n        },\n        number_input: {\n            type            : 'number',\n            is_incrementable: true,\n        },\n    };\n\n    // e.g. digit contracts only has range slider - does not have toggle between advanced / simple\n    const has_toggle = expiry_list.length > 1 || duration_units_list.length > 1;\n\n    return (\n        <Fieldset className={classNames('trade-container__fieldset', {\n            'trade-container__fieldset--advanced': is_advanced_duration,\n        })}\n        >\n            { !has_toggle &&\n                <RangeSlider\n                    name='duration'\n                    value={duration_t}\n                    {...props.shared_input}\n                />\n            }\n            { has_toggle &&\n                <Fragment>\n                    { is_advanced_duration &&\n                        <AdvancedDuration\n                            advanced_expiry_type={advanced_expiry_type}\n                            advanced_duration_unit={advanced_duration_unit}\n                            changeDurationUnit={changeDurationUnit}\n                            duration_t={duration_t}\n                            duration_units_list={duration_units_list}\n                            expiry_date={expiry_date}\n                            expiry_list={expiry_list}\n                            expiry_type={expiry_type}\n                            getDurationFromUnit={getDurationFromUnit}\n                            market_open_times={market_open_times}\n                            number_input_props={props.number_input}\n                            onChange={onChange}\n                            onChangeUiStore={onChangeUiStore}\n                            server_time={server_time}\n                            shared_input_props={props.shared_input}\n                            start_date={start_date}\n                        /> }\n                    { !is_advanced_duration &&\n                        <SimpleDuration\n                            getDurationFromUnit={getDurationFromUnit}\n                            changeDurationUnit={changeDurationUnit}\n                            duration_t={duration_t}\n                            duration_units_list={duration_units_list}\n                            number_input_props={props.number_input}\n                            shared_input_props={props.shared_input}\n                            simple_duration_unit={simple_duration_unit}\n                        /> }\n                    <DurationToggle\n                        name={'is_advanced_duration'}\n                        onChange={onToggleDurationType}\n                        value={is_advanced_duration}\n                    />\n                </Fragment>\n            }\n        </Fieldset>\n    );\n};\n\nDuration.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    duration              : PropTypes.number,\n    duration_t            : PropTypes.number,\n    duration_unit         : PropTypes.string,\n    duration_units_list   : MobxPropTypes.arrayOrObservableArray,\n    expiry_date           : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time         : PropTypes.string,\n    expiry_type         : PropTypes.string,\n    getDurationFromUnit : PropTypes.func,\n    hasDurationUnit     : PropTypes.func,\n    is_advanced_duration: PropTypes.bool,\n    is_minimized        : PropTypes.bool,\n    market_open_times   : PropTypes.array,\n    max_value           : PropTypes.number,\n    min_value           : PropTypes.number,\n    onChange            : PropTypes.func,\n    onChangeUiStore     : PropTypes.func,\n    server_time         : PropTypes.object,\n    simple_duration_unit: PropTypes.string,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    validation_errors: PropTypes.object,\n};\n\nexport default Duration;\n","import PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport { connect }                    from 'Stores/connect';\nimport { convertDurationLimit }       from 'Stores/Modules/Trading/Helpers/duration';\nimport Duration                       from './duration.jsx';\n\nclass DurationWrapper extends React.Component {\n    hasDurationUnit = (duration_unit) => {\n        let duration_list = [...this.props.duration_units_list];\n\n        if (this.props.duration_units_list.length > 1 && !this.props.is_advanced_duration) {\n            duration_list = duration_list.filter(du => du.value === 'm' || du.value === 't');\n        }\n        return duration_list.some(du => du.value === duration_unit);\n    };\n\n    setDurationUnit() {\n        const new_duration_unit  = this.props.duration_units_list[0].value;\n        const new_duration_value = this.props.getDurationFromUnit(new_duration_unit);\n\n        this.props.onChangeUiStore({ name: `${this.props.is_advanced_duration ? 'advanced' : 'simple'}_duration_unit`, value: new_duration_unit });\n        this.props.onChangeMultiple({\n            duration_unit: new_duration_unit,\n            duration     : +new_duration_value,\n        });\n    }\n\n    advancedHasWrongExpiry = () => (this.props.is_advanced_duration\n        && this.props.expiry_type !== this.props.advanced_expiry_type);\n\n    handleEndTime = () => {\n        const symbol_has_endtime = this.props.duration_units_list.length > 1  || this.props.is_advanced_duration;\n\n        if (symbol_has_endtime) {\n            // simple duration does not have endtime\n            if (!this.props.is_advanced_duration) this.props.onChangeUiStore({ name: 'is_advanced_duration', value: true });\n\n            this.props.onChangeUiStore({ name: 'advanced_expiry_type', value: 'endtime' });\n        } else {\n            // If query string contains endtime but contract type does not e.g. digits (only ticks contracts)\n            this.props.onChange({ target: { name: 'expiry_type', value: 'duration' } });\n        }\n    };\n\n    getDurationMinMaxValues = (duration_min_max, contract_expiry_type, duration_unit) => {\n        const max_value = convertDurationLimit(+duration_min_max[contract_expiry_type].max, duration_unit);\n        const min_value = convertDurationLimit(+duration_min_max[contract_expiry_type].min, duration_unit);\n\n        return [min_value, max_value];\n    };\n\n    componentDidMount() {\n        const {\n            advanced_duration_unit,\n            advanced_expiry_type,\n            contract_expiry_type,\n            duration,\n            duration_min_max,\n            duration_unit,\n            expiry_type,\n            getDurationFromUnit,\n            is_advanced_duration,\n            onChange,\n            onChangeUiStore,\n            simple_duration_unit,\n        } = this.props;\n\n        const current_unit = is_advanced_duration ? advanced_duration_unit : simple_duration_unit;\n        const current_duration = getDurationFromUnit(current_unit);\n        const [min_value, max_value] =\n            this.getDurationMinMaxValues(duration_min_max, contract_expiry_type, duration_unit);\n\n        if (duration_unit !== current_unit) {\n            onChangeUiStore({ name: `${is_advanced_duration ? 'advanced' : 'simple'}_duration_unit`, value: duration_unit });\n        }\n\n        if (+duration !== +current_duration) {\n            onChangeUiStore({ name: `duration_${duration_unit}`, value: duration });\n        }\n\n        if (expiry_type === 'endtime') this.handleEndTime();\n\n        if (this.advancedHasWrongExpiry()) {\n            onChange({ target: { name: 'expiry_type', value: advanced_expiry_type } });\n        }\n\n        if (current_duration < min_value) {\n            onChangeUiStore({ name: `duration_${duration_unit}`, value: min_value });\n            onChange({ target: { name: 'duration', value: min_value } });\n        } else if (current_duration > max_value) {\n            onChangeUiStore({ name: `duration_${duration_unit}`, value: max_value });\n            onChange({ target: { name: 'duration', value: max_value } });\n        }\n    }\n\n    // intercept changes to contract duration and check that trade_store and ui_store are aligned.\n    componentWillReact() {\n        const {\n            advanced_expiry_type,\n            duration,\n            duration_unit,\n            expiry_type,\n            getDurationFromUnit,\n            is_advanced_duration,\n            onChange,\n            onChangeUiStore,\n        } = this.props;\n\n        const current_duration            = getDurationFromUnit(duration_unit);\n        const simple_is_not_type_duration = (!is_advanced_duration && expiry_type !== 'duration');\n\n        // simple only has expiry type duration\n        if (simple_is_not_type_duration) {\n            onChange({ target: { name: 'expiry_type', value: 'duration' } });\n        }\n\n        if (this.advancedHasWrongExpiry()) {\n            onChange({ target: { name: 'expiry_type', value: advanced_expiry_type } });\n        }\n\n        if (duration !== current_duration) {\n            onChangeUiStore({ name: `duration_${duration_unit}`, value: duration });\n        }\n    }\n\n    render() {\n        const {\n            advanced_duration_unit,\n            contract_expiry_type,\n            duration_min_max,\n            duration_unit,\n            duration_units_list,\n            is_advanced_duration,\n            simple_duration_unit,\n        } = this.props;\n\n        const current_duration_unit           = (is_advanced_duration ? advanced_duration_unit : simple_duration_unit);\n        const has_missing_duration_unit       = !this.hasDurationUnit(current_duration_unit);\n        const simple_is_missing_duration_unit =\n            (!is_advanced_duration && simple_duration_unit === 'd' && duration_units_list.length === 4);\n        const [min_value, max_value]          =\n            this.getDurationMinMaxValues(duration_min_max, contract_expiry_type, duration_unit);\n\n        if (has_missing_duration_unit || simple_is_missing_duration_unit) {\n            this.setDurationUnit();\n        }\n\n        return (\n            <Duration\n                hasDurationUnit={this.hasDurationUnit}\n                max_value={max_value}\n                min_value={min_value}\n                {...this.props}\n            />\n        );\n    }\n}\n\nDurationWrapper.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    contract_expiry_type  : PropTypes.string,\n    duration              : PropTypes.number,\n    duration_d            : PropTypes.number,\n    duration_h            : PropTypes.number,\n    duration_m            : PropTypes.number,\n    duration_min_max      : PropTypes.object,\n    duration_s            : PropTypes.number,\n    duration_t            : PropTypes.number,\n    duration_unit         : PropTypes.string,\n    duration_units_list   : MobxPropTypes.arrayOrObservableArray,\n    expiry_date           : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time         : PropTypes.string,\n    expiry_type         : PropTypes.string,\n    getDurationFromUnit : PropTypes.func,\n    is_advanced_duration: PropTypes.bool,\n    is_minimized        : PropTypes.bool,\n    market_open_times   : PropTypes.array,\n    onChange            : PropTypes.func,\n    onChangeMultiple    : PropTypes.func,\n    onChangeUiStore     : PropTypes.func,\n    sessions            : MobxPropTypes.arrayOrObservableArray,\n    simple_duration_unit: PropTypes.string,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time: PropTypes.string,\n    symbol    : PropTypes.string,\n};\n\nexport default connect(({ modules, ui }) => ({\n    advanced_duration_unit: ui.advanced_duration_unit,\n    advanced_expiry_type  : ui.advanced_expiry_type,\n    contract_expiry_type  : modules.trade.contract_expiry_type,\n    duration              : modules.trade.duration,\n    duration_unit         : modules.trade.duration_unit,\n    duration_units_list   : modules.trade.duration_units_list,\n    duration_min_max      : modules.trade.duration_min_max,\n    duration_t            : ui.duration_t,\n    expiry_date           : modules.trade.expiry_date,\n    expiry_time           : modules.trade.expiry_time,\n    expiry_type           : modules.trade.expiry_type,\n    getDurationFromUnit   : ui.getDurationFromUnit,\n    is_advanced_duration  : ui.is_advanced_duration,\n    onChange              : modules.trade.onChange,\n    onChangeUiStore       : ui.onChangeUiStore,\n    onChangeMultiple      : modules.trade.onChangeMultiple,\n    simple_duration_unit  : ui.simple_duration_unit,\n    start_date            : modules.trade.start_date,\n    market_open_times     : modules.trade.market_open_times,\n}))(DurationWrapper);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\n// arr_arr_numbers is an array of arrays where each nested array indicates one row\n// for example [[1, 2, 3]] will be a single row of these three numbers\n// but [[1, 2, 3], [4, 5, 6]] will be two rows:\n// first row with the first three numbers and second row with the last three numbers\nconst NumberSelector = ({\n    arr_arr_numbers,\n    name,\n    onChange,\n    selected_number,\n}) => {\n    const handleSelect = (item) => {\n        if (+item.target.getAttribute('data-value') !== selected_number) {\n            onChange({ target: { name, value: +item.target.getAttribute('data-value') } });\n        }\n    };\n\n    return (\n        <div className='number-selector'>\n            {arr_arr_numbers.map((arr_numbers, idx) =>\n                <div className='number-selector__row' key={idx}>\n                    {arr_numbers.map(i =>\n                        <span\n                            key={i}\n                            className={classNames('number-selector__selection', { 'number-selector__selection--selected': selected_number === i })}\n                            data-value={i}\n                            onClick={handleSelect}\n                        >\n                            {i}\n                        </span>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nNumberSelector.propTypes = {\n    arr_arr_numbers: PropTypes.arrayOf(PropTypes.array),\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    selected_number: PropTypes.number,\n};\n\nexport default NumberSelector;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from 'App/i18n';\nimport NumberSelector from 'App/Components/Form/number-selector.jsx';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\nimport { connect }    from 'Stores/connect';\n\nconst LastDigit = ({\n    is_minimized,\n    last_digit,\n    onChange,\n}) =>  {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized'>\n                {`${localize('Last Digit')}: ${last_digit}`}\n            </div>\n        );\n    }\n    const arr_five = [...Array(5).keys()];\n    return (\n        <Fieldset\n            className='trade-container__fieldset'\n            header={localize('Last Digit Prediction')}\n            is_center\n        >\n            <NumberSelector\n                arr_arr_numbers={[arr_five, arr_five.map(i => i + 5)]}\n                name='last_digit'\n                onChange={onChange}\n                selected_number={+last_digit}\n            />\n        </Fieldset>\n    );\n};\n\nLastDigit.propTypes = {\n    is_minimized: PropTypes.bool,\n    last_digit  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    onChange: PropTypes.func,\n};\n\nexport default connect(({ modules }) => ({\n    last_digit: modules.trade.last_digit,\n    onChange  : modules.trade.onChange,\n}))(LastDigit);\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport Amount                         from 'Modules/Trading/Components/Form/TradeParams/amount.jsx';\nimport Barrier                        from 'Modules/Trading/Components/Form/TradeParams/barrier.jsx';\nimport Duration                       from 'Modules/Trading/Components/Form/TradeParams/Duration';\nimport LastDigit                      from 'Modules/Trading/Components/Form/TradeParams/last-digit.jsx';\nimport { connect }                    from 'Stores/connect';\n\nclass TradeParams extends React.Component {\n    isVisible(component_key) {\n        return this.props.form_components.includes(component_key);\n    }\n\n    render () {\n        const { is_minimized } = this.props;\n        return (\n            <React.Fragment>\n                {\n                    this.isVisible('duration') &&\n                    <Duration key={'duration'} is_minimized={is_minimized} />\n                }\n                {\n                    this.isVisible('barrier') &&\n                    <Barrier key={'barrier'} is_minimized={is_minimized} />\n                }\n                {\n                    this.isVisible('last_digit') &&\n                    <LastDigit key={'last_digit'} is_minimized={is_minimized} />\n                }\n                {\n                    this.isVisible('amount') &&\n                    <Amount key={'amount'} is_minimized={is_minimized} />\n                }\n            </React.Fragment>\n        );\n    }\n}\nTradeParams.propTypes = {\n    form_components: MobxPropTypes.arrayOrObservableArray,\n    is_minimized   : PropTypes.bool,\n};\n\nexport default connect(({ modules }) => ({\n    form_components: modules.trade.form_components,\n}))(TradeParams);\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full-screen-dialog.jsx';\n\nconst ContractTypeDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n}) => (\n    is_mobile ?\n        <React.Fragment>\n            <span className='contract-type-widget__select-arrow' />\n            <FullScreenDialog\n                title='Select Trading Type'\n                visible={open}\n                onClose={onClose}\n            >\n                {children}\n            </FullScreenDialog>\n        </React.Fragment>\n        :\n        <CSSTransition\n            in={open}\n            timeout={100}\n            classNames={{\n                enter    : 'contracts-type-dialog--enter',\n                enterDone: 'contracts-type-dialog--enterDone',\n                exit     : 'contracts-type-dialog--exit',\n            }}\n            unmountOnExit\n        >\n            <div className='contracts-type-dialog'>\n                <div className='contracts-type-dialog__list-wrapper'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nContractTypeDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n};\n\nexport default ContractTypeDialog;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport classNames                     from 'classnames';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport Icon                           from 'Assets/icon.jsx';\n\nconst ContractTypeItem = ({\n    contracts,\n    name,\n    value,\n    is_equal,\n    handleInfoClick,\n    handleSelect,\n}) => (\n    contracts.map((contract, idx) => (\n        <div\n            key={idx}\n            className={classNames('contract-type-item', {\n                'contract-type-item--selected' : value === contract.value,\n                'contract-type-item--invisible': (contract.value === 'rise_fall' && is_equal) || (contract.value === 'rise_fall_equal' && !is_equal),\n            })}\n            name={name}\n            value={contract.value}\n            onClick={(e) => handleSelect(contract, e)}\n        >\n            <Icon icon='IconTradeCategory' category={contract.value} className='contract-type-item__icon-wrapper' />\n            <span className='contract-type-item__title'>\n                {contract.text}\n            </span>\n            <div id='info-icon' className='contract-type-item__icon' onClick={() => handleInfoClick(contract)}>\n                <Icon icon='IconInfoOutline' />\n            </div>\n        </div>\n    ))\n);\n\nContractTypeItem.propTypes = {\n    contracts      : MobxPropTypes.arrayOrObservableArray,\n    handleInfoClick: PropTypes.func,\n    handleSelect   : PropTypes.func,\n    is_equal       : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    name : PropTypes.string,\n    value: PropTypes.string,\n};\n\nexport default ContractTypeItem;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport ContractTypeItem               from './contract-type-item.jsx';\n\nconst ContractTypeList = ({\n    handleInfoClick,\n    handleSelect,\n    is_equal,\n    list,\n    name,\n    value,\n}) =>\n    (\n        Object.keys(list).map(key => (\n            // TODO: Remove this line after other contracts are ready to be served\n            !['In/Out', 'Asians'].includes(key) &&\n            <React.Fragment key={key}>\n                <div className='contract-type-list'>\n                    <div className='contract-type-list__label'><span>{key}</span></div>\n                    <div className='contract-type-list__contracts-wrapper'>\n                        <ContractTypeItem\n                            contracts={list[key]}\n                            name={name}\n                            value={value}\n                            handleSelect={handleSelect}\n                            handleInfoClick={handleInfoClick}\n                            is_equal={is_equal}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        ))\n    );\n\nContractTypeList.propTypes = {\n    handleInfoClick: PropTypes.func,\n    handleSelect   : PropTypes.func,\n    is_equal       : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    list : MobxPropTypes.objectOrObservableObject,\n    name : PropTypes.string,\n    value: PropTypes.string,\n};\n\nexport default ContractTypeList;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full-screen-dialog.jsx';\n\nconst TradeTypeInfoDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n    title,\n}) => (\n    is_mobile ?\n        <FullScreenDialog\n            visible={open}\n            onClose={onClose}\n            title={title}\n            wrapperClassName='trade-type-info-modal'\n        >\n            {children}\n        </FullScreenDialog>\n        :\n        <CSSTransition\n            classNames={{\n                enter    : 'trade-type-info-dialog--enter',\n                enterDone: 'trade-type-info-dialog--enterDone',\n                exit     : 'trade-type-info-dialog--exit',\n            }}\n            in={open}\n            timeout={100}\n            unmountOnExit\n        >\n            <div className='trade-type-info-dialog'>\n                <div className='trade-type-info-dialog__info-wrapper'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nTradeTypeInfoDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n    title    : PropTypes.string,\n};\n\nexport default TradeTypeInfoDialog;\n","import classNames         from 'classnames';\nimport PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { Scrollbars }     from 'tt-react-custom-scrollbars';\nimport Icon               from 'Assets/icon.jsx';\nimport Button             from 'App/Components/Form/button.jsx';\nimport { localize }       from 'App/i18n';\n\nconst TradeTypeInfoItem = ({\n    handleNavigationClick,\n    handleNextClick,\n    handlePrevClick,\n    is_dark_theme,\n    is_mobile,\n    item,\n    item_index,\n    itemList,\n    onBackButtonClick,\n    onSubmitButtonClick,\n}) => (\n    <React.Fragment>\n        {!is_mobile &&\n        <div className='trade-type-info-dialog__header'>\n            <span onClick={() => onBackButtonClick()}>\n                <Icon icon='IconBack' />\n            </span>\n            <span className='title'>{item.text}</span>\n        </div>\n        }\n        <div className='trade-type-info-dialog__body'>\n            <div\n                className='trade-type-info-dialog__card-wrapper'\n                // total calculated below is from 258px and 16px horizontal margin set in trade-info-dialog css\n                style={{ 'transform': `translate3d(-${(274 * item_index)}px, 0, 0)`  }}\n            >\n                {\n                    itemList.map((type, idx) => (\n                        <div className='trade-type-info-dialog__card' key={idx}>\n                            <div className='trade-type-info-dialog__gif'>\n                                <Icon\n                                    icon='TradeCategoriesGIF'\n                                    category={type.value}\n                                    className='trade-type-info-dialog__gif-image'\n                                    is_dark_theme={is_dark_theme}\n                                />\n                            </div>\n                            <div className='trade-type-info-dialog__content'>\n                                <Scrollbars\n                                    autoHide\n                                    style={{ height: '100%' }}\n                                >\n                                    <Icon icon='TradeCategories' category={type.value} />\n                                </Scrollbars>\n                            </div>\n                            <div>\n                                <Button\n                                    className='btn--primary--orange trade-type-info-dialog__choose-button'\n                                    onClick={() => onSubmitButtonClick(type)}\n                                    text={localize('Choose')}\n                                />\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n        <div className='trade-type-info-navigation'>\n            <div className='trade-type-info-navigation__icon' onClick={() => handlePrevClick(itemList)} >\n                <Icon icon='IconChevronLeft' />\n            </div>\n            <div className='trade-type-info-navigation__list'>\n                <i\n                    className={classNames(\n                        'trade-type-info-navigation__circle-button',\n                        'trade-type-info-navigation__circle-button--active')}\n                    style={{ 'transform': `translate3d(${16 * item_index}px, 0, 0)` }}\n                />\n                {\n                    itemList.map((contract, idx) => (\n                        <React.Fragment key={idx}>\n                            <div\n                                className='trade-type-info-navigation__circle-button'\n                                onClick={() => handleNavigationClick(contract)}\n                            />\n                        </React.Fragment>\n                    ))\n                }\n            </div>\n            <div className='trade-type-info-navigation__icon' onClick={() => handleNextClick(itemList)} >\n                <Icon icon='IconChevronRight' />\n            </div>\n        </div>\n    </React.Fragment>\n);\n\nTradeTypeInfoItem.propTypes = {\n    handleNavigationClick: PropTypes.func,\n    handleNextClick      : PropTypes.func,\n    handlePrevClick      : PropTypes.func,\n    is_dark_theme        : PropTypes.bool,\n    is_mobile            : PropTypes.bool,\n    item                 : PropTypes.object,\n    item_index           : PropTypes.number,\n    itemList             : PropTypes.array,\n    onBackButtonClick    : PropTypes.func,\n    onSubmitButtonClick  : PropTypes.func,\n};\n\nexport default TradeTypeInfoItem;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport Icon                from 'Assets/icon.jsx';\nimport ContractTypeDialog  from './contract-type-dialog.jsx';\nimport ContractTypeList    from './contract-type-list.jsx';\nimport TradeTypeInfoDialog from '../TradeTypeInfo/trade-type-info-dialog.jsx';\nimport TradeTypeInfoItem   from '../TradeTypeInfo/trade-type-info-item.jsx';\n\nclass ContractTypeWidget extends React.PureComponent {\n    state = {\n        is_dialog_open     : false,\n        is_info_dialog_open: false,\n        item               : {},\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item, e) => {\n        if (item.value !== this.props.value && e.target.id !== 'info-icon') {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    };\n\n    onSubmitButtonClick = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleInfoVisibility();\n    };\n\n    handleInfoClick = (item) => {\n        this.setState({ item });\n        this.handleInfoVisibility();\n        this.handleVisibility();\n    };\n\n    handleNavigationClick = (item) => {\n        this.setState({ item });\n    };\n\n    handleNextClick = (itemList) => {\n        const navigationLength = itemList.length;\n        const item = this.state.item;\n        const currentIndex = itemList.findIndex((list_item) => list_item.value === item.value);\n        const nextIndex = currentIndex + 1;\n        if (nextIndex < navigationLength) {\n            this.handleNavigationClick(itemList[nextIndex]);\n        } else {\n            this.handleNavigationClick(itemList[0]);\n        }\n    };\n\n    handlePrevClick = (itemList) => {\n        const navigationLength = itemList.length;\n        const item = this.state.item;\n        const currentIndex = itemList.findIndex((list_item) => list_item.value === item.value);\n        const prevIndex = currentIndex - 1;\n        if (prevIndex > -1) {\n            this.handleNavigationClick(itemList[prevIndex]);\n        } else {\n            this.handleNavigationClick(itemList[navigationLength - 1]);\n        }\n    };\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_dialog_open) {\n            this.setState({ is_dialog_open: false });\n        } else if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_info_dialog_open) {\n            this.setState({\n                is_dialog_open     : false,\n                is_info_dialog_open: false,\n            });\n        }\n    };\n\n    handleInfoVisibility = () => {\n        this.setState((state) => ({\n            is_info_dialog_open: !state.is_info_dialog_open,\n        }));\n    };\n\n    handleVisibility = () => {\n        this.setState({ is_dialog_open: !this.state.is_dialog_open });\n    };\n\n    onWidgetClick = () => {\n        this.setState((state) => ({ is_dialog_open: !state.is_dialog_open, is_info_dialog_open: false }));\n    };\n\n    onBackButtonClick = () => {\n        this.setState((state) => ({ is_dialog_open: !state.is_dialog_open, is_info_dialog_open: false }));\n    };\n\n    getDisplayText = () => {\n        const { list, value } = this.props;\n        const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n        let text = '';\n        if (list) {\n            Object.keys(list).some(key => {\n                text = findInArray(list[key]);\n                return text;\n            });\n        }\n        return text;\n    };\n\n    getItemIndex = (curr_item, itemList) => itemList.findIndex((list_item) => list_item.value === curr_item.value);\n\n    getItemList = () => {\n        const itemList = [];\n        const list = this.props.list;\n        /* eslint-disable */\n        Object.keys(list).map(key => {\n            !['In/Out', 'Asians'].includes(key) && list[key].map(contract => {\n                (contract.value !== 'rise_fall_equal') && itemList.push(contract);\n            });\n        });\n        /* eslint-disable */\n        return itemList;\n    };\n\n    render() {\n        const { is_dark_theme, is_equal, is_mobile, list, name, value } = this.props;\n        const { is_dialog_open, is_info_dialog_open, item }             = this.state;\n        const item_index = this.getItemIndex(item, this.getItemList());\n        return (\n            <div\n                className='contract-type-widget dropdown--left'\n                ref={this.setWrapperRef}\n                tabIndex='0'\n            >\n                <div\n                    className={classNames('contract-type-widget__display', {\n                        'contract-type-widget__display--clicked': (is_dialog_open || is_info_dialog_open),\n                    })}\n                    onClick={this.onWidgetClick}\n                >\n                    <Icon\n                        icon='IconTradeCategory'\n                        category={value}\n                        className='contract-type-widget__icon-wrapper'\n                    />\n                    <span name={name} value={value}>\n                        {this.getDisplayText()}\n                    </span>\n                    <Icon\n                        icon='IconArrow'\n                        className={classNames(\n                          'contract-type-widget__select-arrow',\n                          'contract-type-widget__select-arrow--left')}\n                    />\n                </div>\n\n                <ContractTypeDialog\n                    is_mobile={is_mobile}\n                    onClose={this.handleVisibility}\n                    open={is_dialog_open}\n                >\n                    <ContractTypeList\n                        handleInfoClick={this.handleInfoClick}\n                        handleSelect={this.handleSelect}\n                        is_equal={is_equal}\n                        list={list}\n                        name={name}\n                        value={value}\n                    />\n                </ContractTypeDialog>\n                <TradeTypeInfoDialog\n                    is_mobile={is_mobile}\n                    onClose={this.handleInfoClick}\n                    open={is_info_dialog_open}\n                    title={item.text}\n                >\n                    <TradeTypeInfoItem\n                        handleNavigationClick={this.handleNavigationClick}\n                        handleNextClick={this.handleNextClick}\n                        handlePrevClick={this.handlePrevClick}\n                        is_dark_theme={is_dark_theme}\n                        is_mobile={is_mobile}\n                        item={item}\n                        item_index={item_index < 0 ? undefined : item_index}\n                        itemList={this.getItemList()}\n                        onBackButtonClick={this.onBackButtonClick}\n                        onSubmitButtonClick={this.onSubmitButtonClick}\n                    />\n                </TradeTypeInfoDialog>\n            </div>\n        );\n    }\n}\n\nContractTypeWidget.propTypes = {\n    is_dark_theme: PropTypes.bool,\n    is_equal           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    is_mobile: PropTypes.bool,\n    list     : PropTypes.object,\n    name     : PropTypes.string,\n    onChange : PropTypes.func,\n    value    : PropTypes.string,\n};\n\nexport default ContractTypeWidget;\n","import PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { connect }        from 'Stores/connect';\nimport ContractTypeWidget from '../Components/Form/ContractType/contract-type-widget.jsx';\n\nconst Contract = ({\n    contract_type,\n    contract_types_list,\n    is_dark_theme,\n    is_equal,\n    is_mobile,\n    onChange,\n}) => (\n    <ContractTypeWidget\n        is_dark_theme={is_dark_theme}\n        is_equal={is_equal}\n        is_mobile={is_mobile}\n        list={contract_types_list}\n        name='contract_type'\n        onChange={onChange}\n        value={contract_type}\n    />\n);\n\nContract.propTypes = {\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    is_equal           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    is_mobile: PropTypes.bool,\n    onChange : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        contract_type      : modules.trade.contract_type,\n        contract_types_list: modules.trade.contract_types_list,\n        is_equal           : modules.trade.is_equal,\n        onChange           : modules.trade.onChange,\n        is_dark_theme      : ui.is_dark_mode_on,\n        is_mobile          : ui.is_mobile,\n    })\n)(Contract);\n","import PropTypes from 'prop-types';\n\nexport const CommonPropTypes = {\n    calendar_date: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    isPeriodDisabled: PropTypes.func,\n    selected_date   : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    updateSelected: PropTypes.func,\n};\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { padLeft }         from '_common/string_util';\nimport { localize }        from 'App/i18n';\nimport { Popover }         from 'App/Components/Elements/Popover';\nimport {\n    getDaysOfTheWeek,\n    week_headers_abbr }    from 'Constants/date-time';\nimport {\n    addDays,\n    addMonths,\n    daysFromTodayTo,\n    epochToMoment,\n    subDays,\n    subMonths,\n    toMoment }             from 'Utils/Date';\nimport { CommonPropTypes } from './types';\n\nconst getDays = ({\n    calendar_date,\n    date_format,\n    has_range_selection,\n    hide_others,\n    holidays,\n    hovered_date,\n    isPeriodDisabled,\n    start_date,\n    selected_date,\n    updateSelected,\n    weekends,\n    onMouseOver,\n    onMouseLeave,\n}) => {\n    // adjust Calendar week by 1 day so that Calendar week starts on Monday\n    // change to zero to set Calendar week to start on Sunday\n    const day_offset = 1;\n\n    const dates = [];\n    const days  = [];\n    const moment_today       = toMoment().startOf('day');\n    const moment_cur_date    = toMoment(calendar_date);\n    const num_of_days        = moment_cur_date.daysInMonth() + 1;\n    const moment_month_start = moment_cur_date.clone().startOf('month');\n    const moment_month_end   = moment_cur_date.clone().endOf('month');\n    const moment_selected    = typeof selected_date === 'number' ? epochToMoment(selected_date).startOf('day') : toMoment(selected_date).startOf('day');\n\n    // populate previous months' dates\n    const end_of_prev_month = subMonths(moment_cur_date, 1).endOf('month').day();\n    for (let i = end_of_prev_month; i > 0; i--) {\n        dates.push(subDays(moment_month_start, i).format(date_format));\n    }\n    // populate current months' dates\n    for (let idx = 1; idx < num_of_days; idx += 1) {\n        dates.push(moment_cur_date.clone().format(date_format.replace('DD', padLeft(idx, 2, '0'))));\n    }\n    // populate next months' dates\n    const start_of_next_month = addMonths(moment_cur_date, 1).startOf('month').day();\n    if (start_of_next_month - day_offset > 0 || dates.length <= 28) {\n        // if start_of_next_month doesn't falls on Monday, append rest of the week\n        for (let i = 1; i <= 7 - start_of_next_month + day_offset; i++) {\n            dates.push(addDays(moment_month_end, i, 'day').format(date_format));\n        }\n    } else if (!start_of_next_month) {\n        // if start_of_next_month falls on Sunday, append 1 day\n        dates.push(addDays(moment_month_end, 1).format(date_format));\n    }\n\n    const moment_start_date = toMoment(start_date).startOf('day');\n\n    dates.map((date) => {\n        const moment_date    = toMoment(date).startOf('day');\n        const moment_hovered = toMoment(hovered_date).startOf('day');\n        const is_active      = selected_date && moment_date.isSame(moment_selected);\n        const is_today       = moment_date.isSame(moment_today, 'day');\n\n        const events          = holidays.filter(event =>\n            // filter by date or day of the week\n            event.dates.find(d => d === date || getDaysOfTheWeek(d) === toMoment(date).day()));\n        const has_events           = !!events.length;\n        const is_closes_early      = events.map(event => !!event.descrip.match(/Closes early|Opens late/))[0];\n        const message              = events.map(event => event.descrip)[0] || '';\n        const duration_from_today  = daysFromTodayTo(date);\n        const is_between           = moment_date.isBetween(moment_today, moment_selected);\n        const is_between_hover     = moment_date.isBetween(moment_today, moment_hovered);\n        const is_before_min_or_after_max_date = isPeriodDisabled(moment_date, 'day');\n        const is_disabled =\n            // check if date is before min_date or after_max_date\n            is_before_min_or_after_max_date\n            // for forward starting accounts, only show same day as start date and the day after\n            || ((start_date && (moment_date.isBefore(moment_start_date))))\n            // check if weekends are disabled\n            || weekends.some(day => toMoment(date).day() === day)\n            // check if date falls on holidays, and doesn't close early or opens late\n            || has_events && !is_closes_early;\n\n        // show 'disabled' style for dates that is not in the same calendar month, it should still be clickable\n        const is_other_month = moment_date.month() !== moment_cur_date.month();\n\n        days.push(\n            <span\n                key={date}\n                className={classNames('calendar__cell', {\n                    'calendar__cell--active'         : is_active,\n                    'calendar__cell--today'          : is_today,\n                    'calendar__cell--active-duration': is_active && has_range_selection && !is_today,\n                    'calendar__cell--today-duration' : is_today && has_range_selection,\n                    'calendar__cell--disabled'       : is_disabled,\n                    'calendar__cell--is-hidden'      : is_other_month && hide_others,\n                    'calendar__cell--other'          : is_other_month,\n                    'calendar__cell--between-hover'  : is_between_hover && has_range_selection,\n                    'calendar__cell--between'        : is_between && has_range_selection,\n                })}\n                onClick={is_disabled ? undefined : (e) => updateSelected(e, 'day')}\n                data-date={date}\n                data-duration={`${duration_from_today} ${ duration_from_today === 1 ? localize('Day') : localize('Days') }`}\n                onMouseOver={onMouseOver}\n                onMouseLeave={onMouseLeave}\n            >\n                {((has_events || is_closes_early) && !is_other_month && !is_before_min_or_after_max_date) &&\n                    <Popover\n                        alignment='top'\n                        classNameTarget='calendar__cell-tooltip'\n                        classNameTargetIcon='calendar__cell-tooltip-icon'\n                        icon='dot'\n                        message={message}\n                    />\n                }\n                {moment_date.date()}\n            </span>\n        );\n    });\n\n    return days;\n};\n\nexport const CalendarDays = (props) => {\n    const days = getDays(props).map(day => day);\n\n    return (\n        <div className='calendar__body calendar__body--date'>\n            { Object.keys(week_headers_abbr)\n                .map((item, idx) => (\n                    <span key={idx} className='calendar__text calendar__text--bold'>{week_headers_abbr[item]}</span>\n                ))\n            }\n            { days }\n        </div>\n    );\n};\n\nCalendarDays.defaultProps = {\n    holidays: [],\n    weekends: [],\n};\n\nCalendarDays.propTypes = {\n    ...CommonPropTypes,\n    date_format        : PropTypes.string,\n    has_range_selection: PropTypes.bool,\n    holidays           : PropTypes.arrayOf(\n        PropTypes.shape({\n            dates  : PropTypes.array,\n            descrip: PropTypes.string,\n        }),\n    ),\n    hovered_date: PropTypes.string,\n    onMouseLeave: PropTypes.func,\n    onMouseOver : PropTypes.func,\n    start_date  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    weekends: PropTypes.arrayOf(PropTypes.number),\n};\n","import classNames        from 'classnames';\nimport React             from 'react';\nimport { month_headers } from 'Constants/date-time';\nimport { toMoment }      from 'Utils/Date';\nimport { CommonPropTypes }   from './types';\n\nexport const CalendarMonths = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_date          = toMoment(calendar_date);\n    const moment_selected_date = toMoment(selected_date);\n\n    return (\n        <div className='calendar__body calendar__body--month'>\n            { Object.keys(month_headers).map((month, idx) => {\n                const is_active   = month === moment_selected_date.clone().format('MMM') && moment_selected_date.isSame(moment_date, 'year');\n                const is_disabled = isPeriodDisabled(moment_date.clone().month(month), 'month');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'month')}\n                        data-month={month}\n                    >\n                        {month_headers[month]}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarMonths.propTypes = { ...CommonPropTypes };\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport { toMoment }    from 'Utils/Date';\nimport { CommonPropTypes } from './types';\nimport { getDecade }   from '../helper';\n\nexport const CalendarYears = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const [start_of_decade, end_of_decade] = getDecade(moment_date).split('-');\n\n    const years = [];\n    for (let year = +start_of_decade - 1; year <= +end_of_decade + 1; year++) {\n        years.push(year);\n    }\n    return (\n        <div className='calendar__body calendar__body--year'>\n            { years.map((year, idx) => {\n                const is_other_decade = idx === 0 || idx === 11;\n                const is_disabled     = isPeriodDisabled(moment_date.clone().year(year), 'year');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : year === moment_selected.year(),\n                            'calendar__cell--other'   : is_other_decade,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'year')}\n                        data-year={year}\n                    >\n                        {year}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarYears.propTypes = { ...CommonPropTypes };\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport { toMoment }    from 'Utils/Date';\nimport { CommonPropTypes } from './types';\nimport {\n    getCentury,\n    getDecade }        from '../helper';\n\nexport const CalendarDecades = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const start_year      = getCentury(moment_date).split('-')[0];\n\n    const decades = [];\n    let min_year = +start_year - 10;\n    for (let i = 0; i < 12; i++) {\n        const decade = getDecade(toMoment().year(min_year));\n        decades.push(decade);\n        min_year = +decade.split('-')[1] + 1;\n    }\n    return (\n        <div className='calendar__body calendar__body--decade'>\n            { decades.map((decade, idx) => {\n                const [start_of_decade, end_of_decade] = decade.split('-');\n                const is_active    = +start_of_decade === moment_selected.year();\n                const is_disabled  = isPeriodDisabled(moment_date.clone().year(start_of_decade), 'year') &&\n                    isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year');\n                const is_other_century = idx === 0 || idx === 11;\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                            'calendar__cell--other'   : is_other_century,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'decade')}\n                        data-decade={decade}\n                    >\n                        {decade}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarDecades.propTypes = { ...CommonPropTypes };\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    CalendarDays,\n    CalendarMonths,\n    CalendarYears,\n    CalendarDecades } from './panels';\n\nconst CalendarBody = (props) => {\n    const calendar_body = {\n        date  : <CalendarDays    {...props} />,\n        month : <CalendarMonths  {...props} />,\n        year  : <CalendarYears   {...props} />,\n        decade: <CalendarDecades {...props} />,\n    };\n\n    return (\n        <React.Fragment>\n            { calendar_body[props.calendar_view] }\n        </React.Fragment>\n    );\n};\n\nCalendarBody.propTypes = {\n    calendar_view: PropTypes.string,\n};\n\nexport default CalendarBody;\n","import classNames            from 'classnames';\nimport PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { getLocalizedBasis } from 'Stores/Modules/Trading/Constants/contract';\nimport { localize }          from 'App/i18n';\nimport Money                 from 'App/Components/Elements/money.jsx';\nimport { Popover }           from 'App/Components/Elements/Popover';\nimport Icon                  from 'Assets/icon.jsx';\n\nconst ContractInfo = ({\n    basis,\n    currency,\n    has_increased,\n    is_loading,\n    should_fade,\n    is_visible,\n    proposal_info,\n}) => {\n    const localized_basis = getLocalizedBasis();\n    const stakeOrPayout = () => {\n        switch (basis) {\n            case 'stake':\n                return localized_basis.payout;\n            case 'payout':\n                return localized_basis.stake;\n            default:\n                return basis;\n        }\n    };\n\n    const has_error_or_not_loaded = proposal_info.has_error || !proposal_info.id;\n    return (\n        <div className='trade-container__price'>\n            <div className={classNames(\n                'trade-container__price-info',\n                {\n                    'trade-container__price-info--disabled': has_error_or_not_loaded,\n                    'trade-container__price-info--slide'   : is_loading && !should_fade,\n                    'trade-container__price-info--fade'    : is_loading && should_fade,\n                })}\n            >\n                <div className='trade-container__price-info-basis'>\n                    {has_error_or_not_loaded\n                        ? stakeOrPayout()\n                        : localize('{{value}}', { value: proposal_info.obj_contract_basis.text })\n                    }\n                </div>\n                <div className='trade-container__price-info-value'>\n                    {!has_error_or_not_loaded &&\n                    <Money amount={proposal_info.obj_contract_basis.value} className='trade-container__price-info-currency' currency={currency} />\n                    }\n                </div>\n                {is_visible &&\n                <div className='trade-container__price-info-movement'>\n                    {(!has_error_or_not_loaded && has_increased !== null) &&\n                        <Icon icon='IconPriceMove' type={has_increased ? 'profit' : 'loss'} />\n                    }\n                </div>\n                }\n            </div>\n            <Popover\n                alignment='left'\n                icon='info'\n                margin={210}\n                message={has_error_or_not_loaded ? '' : proposal_info.message }\n            />\n        </div>\n    );\n};\nContractInfo.propTypes = {\n    basis        : PropTypes.string,\n    currency     : PropTypes.string,\n    has_increased: PropTypes.bool,\n    is_loading   : PropTypes.bool,\n    is_visible   : PropTypes.bool,\n    proposal_info: PropTypes.object,\n};\n\nexport default ContractInfo;\n","import classNames                 from 'classnames';\nimport PropTypes                  from 'prop-types';\nimport React                      from 'react';\nimport { localize }               from 'App/i18n';\nimport Button                     from 'App/Components/Form/button.jsx';\nimport Icon                       from 'Assets/icon.jsx';\nimport { getContractTypeDisplay } from 'Constants/contract';\n\nconst PurchaseButton = ({\n    buy_info,\n    index,\n    info,\n    is_contract_mode,\n    is_disabled,\n    is_high_low,\n    is_loading,\n    is_proposal_empty,\n    purchased_states_arr,\n    setPurchaseState,\n    should_fade,\n    onClickPurchase,\n    type,\n}) => {\n    const getIconType = () => {\n        if (!should_fade && is_loading) return '';\n        return (is_high_low) ? `${type.toLowerCase()}_barrier` : type.toLowerCase();\n    };\n    const is_button_disabled = ((is_contract_mode || is_disabled) && !is_loading) || is_proposal_empty;\n\n    return (\n        <Button\n            is_disabled={is_contract_mode || is_disabled}\n            id={`purchase_${type}`}\n            className={classNames(\n                'btn-purchase',\n                {\n                    'btn-purchase--disabled'       : is_button_disabled || !!(buy_info.error),\n                    'btn-purchase--animated--slide': is_loading && !should_fade,\n                    'btn-purchase--animated--fade' : is_loading && should_fade,\n                    'btn-purchase--swoosh'         : !!(purchased_states_arr[index]),\n                })}\n            onClick={() => {\n                setPurchaseState(index);\n                onClickPurchase(info.id, info.stake, type);\n            }}\n        >\n            <React.Fragment>\n                <div className='btn-purchase__info btn-purchase__info--left'>\n                    <div className='btn-purchase__type-wrapper'>\n                        <div className='btn-purchase__icon_wrapper'>\n                            <Icon\n                                icon='IconTradeType'\n                                className='btn-purchase__icon'\n                                type={getIconType()}\n                            />\n                        </div>\n                        <div className='btn-purchase__text_wrapper'>\n                            <span className='btn-purchase__text'>\n                                {(!should_fade && is_loading) ? '' : localize('{{value}}', { value: getContractTypeDisplay(type, is_high_low) })}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                <div className='btn-purchase__effect-detail' />\n                <div className='btn-purchase__effect-detail--arrow' />\n                <div className='btn-purchase__info btn-purchase__info--right'>\n                    <div className='btn-purchase__text_wrapper'>\n                        <span className='btn-purchase__text'>{!(is_loading || is_disabled) ? info.returns : ''}</span>\n                    </div>\n                </div>\n            </React.Fragment>\n        </Button>\n    );\n};\n\nPurchaseButton.propTypes = {\n    buy_info            : PropTypes.object,\n    currency            : PropTypes.string,\n    index               : PropTypes.number,\n    info                : PropTypes.object,\n    is_contract_mode    : PropTypes.bool,\n    is_disabled         : PropTypes.bool,\n    is_high_low         : PropTypes.bool,\n    is_loading          : PropTypes.bool,\n    is_proposal_empty   : PropTypes.bool,\n    onClickPurchase     : PropTypes.func,\n    purchased_states_arr: PropTypes.array,\n    setPurchaseState    : PropTypes.func,\n    type                : PropTypes.string,\n};\n\nexport default PurchaseButton;\n","import classNames     from 'classnames';\nimport React          from 'react';\nimport PropTypes      from 'prop-types';\n// import { localize }   from 'App/i18n';\n// import { PopConfirm } from 'App/Components/Elements/PopConfirm';\nimport { Popover }    from 'App/Components/Elements/Popover';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\nimport ContractInfo   from 'Modules/Trading/Components/Form/Purchase/contract-info.jsx';\n// import PurchaseLock   from 'Modules/Trading/Components/Form/Purchase/PurchaseLock';\nimport PurchaseButton from 'Modules/Trading/Components/Elements/purchase-button.jsx';\n\nclass PurchaseFieldset extends React.PureComponent {\n    state = { should_fade: false };\n\n    componentDidMount() {\n        this.setState({ should_fade: true });\n    }\n\n    render() {\n        const {\n            basis,\n            buy_info,\n            currency,\n            // index,\n            info,\n            index,\n            is_contract_mode,\n            is_disabled,\n            is_high_low,\n            is_loading,\n            is_proposal_empty,\n            is_proposal_error,\n            purchased_states_arr,\n            // is_purchase_confirm_on,\n            // is_purchase_locked,\n            onClickPurchase,\n            onHoverPurchase,\n            // togglePurchaseLock,\n            setPurchaseState,\n            type,\n        } = this.props;\n\n        const purchase_button = (\n            <PurchaseButton\n                buy_info={buy_info}\n                currency={currency}\n                info={info}\n                index={index}\n                is_contract_mode={is_contract_mode}\n                is_disabled={is_disabled}\n                is_high_low={is_high_low}\n                is_loading={is_loading}\n                is_proposal_empty={is_proposal_empty}\n                purchased_states_arr={purchased_states_arr}\n                onClickPurchase={onClickPurchase}\n                setPurchaseState={setPurchaseState}\n                should_fade={this.state.should_fade}\n                type={type}\n            />\n        );\n\n        return (\n            <Fieldset\n                className='trade-container__fieldset purchase-container__option'\n            >\n                {/* {(is_purchase_locked && index === 0) && */}\n                {/* <PurchaseLock onClick={togglePurchaseLock} /> */}\n                {/* } */}\n                <React.Fragment>\n                    <ContractInfo\n                        basis={basis}\n                        currency={currency}\n                        proposal_info={info}\n                        has_increased={info.has_increased}\n                        is_loading={is_loading}\n                        should_fade={this.state.should_fade}\n                        is_visible={!is_contract_mode}\n                    />\n                    <div\n                        className={classNames(\n                            'btn-purchase__shadow-wrapper', {\n                                'btn-purchase__shadow-wrapper--disabled': (is_proposal_error || is_disabled),\n                            },\n                        )}\n                        onMouseEnter={() => {\n                            if (!is_disabled) {\n                                onHoverPurchase(true, type);\n                            }\n                        }}\n                        onMouseLeave={() => {\n                            if (!is_disabled) {\n                                onHoverPurchase(false);\n                            }\n                        }}\n                    >\n                        <div className='btn-purchase__box-shadow' />\n                        {(is_proposal_error) ?\n                            <Popover\n                                alignment='left'\n                                classNameBubble='purchase-container__popover-bubble'\n                                message={info.message}\n                            >\n                                { purchase_button }\n                            </Popover>\n                            :\n                            purchase_button\n                        }\n                        {\n                            // is_purchase_confirm_on ?\n                            //     <PopConfirm\n                            //         alignment='left'\n                            //         cancel_text={localize('Cancel')}\n                            //         confirm_text={localize('Purchase')}\n                            //         message={localize('Are you sure you want to purchase this contract?')}\n                            //     >\n                            //         {purchase_button}\n                            //     </PopConfirm>\n                            //     :\n                            //     purchase_button\n                        }\n                    </div>\n                </React.Fragment>\n            </Fieldset>\n        );\n    }\n}\n\nPurchaseFieldset.propTypes = {\n    basis               : PropTypes.string,\n    buy_info            : PropTypes.object,\n    currency            : PropTypes.string,\n    index               : PropTypes.number,\n    info                : PropTypes.object,\n    is_contract_mode    : PropTypes.bool,\n    is_disabled         : PropTypes.bool,\n    is_high_low         : PropTypes.bool,\n    is_loading          : PropTypes.bool,\n    is_proposal_empty   : PropTypes.bool,\n    is_proposal_error   : PropTypes.bool,\n    onClickPurchase     : PropTypes.func,\n    // is_purchase_confirm_on: PropTypes.bool,\n    // is_purchase_locked    : PropTypes.bool,\n    onHoverPurchase     : PropTypes.func,\n    purchased_states_arr: PropTypes.array,\n    // togglePurchaseLock    : PropTypes.func,\n    setPurchaseState    : PropTypes.func,\n    type                : PropTypes.string,\n};\n\nexport default PurchaseFieldset;\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport { isEmptyObject }           from '_common/utility';\nimport PurchaseFieldset            from 'Modules/Trading/Components/Elements/purchase-fieldset.jsx';\nimport { getContractTypePosition } from 'Constants/contract';\nimport { connect }                 from 'Stores/connect';\n\nconst Purchase = ({\n    basis,\n    contract_type,\n    currency,\n    is_contract_mode,\n    is_client_allowed_to_visit,\n    // is_purchase_confirm_on,\n    purchased_states_arr,\n    // is_purchase_locked,\n    is_trade_enabled,\n    onClickPurchase,\n    onHoverPurchase,\n    // togglePurchaseLock,\n    purchase_info,\n    proposal_info,\n    setPurchaseState,\n    trade_types,\n    validation_errors,\n}) => {\n    const is_high_low = /high_low/.test(contract_type.toLowerCase());\n    const isLoading = info => {\n        const has_validation_error = Object.values(validation_errors).some(e => e.length);\n        return !has_validation_error && !info.has_error && !info.id;\n    };\n    const is_proposal_empty = isEmptyObject(proposal_info);\n\n    const components = [];\n    Object.keys(trade_types).map((type, index) => {\n        const getSortedIndex = () => {\n            if (getContractTypePosition(type) === 'top') return 0;\n            if (getContractTypePosition(type) === 'bottom') return 1;\n            return index;\n        };\n        const info              = proposal_info[type] || {};\n        const is_disabled       = is_contract_mode\n            || !is_trade_enabled || !info.id || !is_client_allowed_to_visit;\n        const is_proposal_error = info.has_error && !info.has_error_details;\n        const purchase_fieldset = (\n            <PurchaseFieldset\n                basis={basis}\n                buy_info={purchase_info}\n                currency={currency}\n                info={info}\n                key={index}\n                index={getSortedIndex()}\n                is_contract_mode={is_contract_mode}\n                is_disabled={is_disabled}\n                is_high_low={is_high_low}\n                is_loading={isLoading(info)}\n                // is_purchase_confirm_on={is_purchase_confirm_on}\n                is_proposal_empty={is_proposal_empty}\n                is_proposal_error={is_proposal_error}\n                purchased_states_arr={purchased_states_arr}\n                // is_purchase_locked={is_purchase_locked}\n                // togglePurchaseLock={togglePurchaseLock}\n                onHoverPurchase={onHoverPurchase}\n                onClickPurchase={onClickPurchase}\n                setPurchaseState={setPurchaseState}\n                type={type}\n            />\n        );\n\n        switch (getContractTypePosition(type)) {\n            case 'top':\n                components.unshift(purchase_fieldset);\n                break;\n            case 'bottom':\n                components.push(purchase_fieldset);\n                break;\n            default:\n                components.push(purchase_fieldset);\n                break;\n        }\n    });\n\n    return components;\n};\n\nPurchase.propTypes = {\n    basis                     : PropTypes.string,\n    currency                  : PropTypes.string,\n    is_client_allowed_to_visit: PropTypes.bool,\n    is_contract_mode          : PropTypes.bool,\n    // is_purchase_confirm_on    : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    is_trade_enabled          : PropTypes.bool,\n    onClickPurchase           : PropTypes.func,\n    onHoverPurchase           : PropTypes.func,\n    proposal_info             : PropTypes.object,\n    purchase_info             : PropTypes.object,\n    purchased_states_arr      : PropTypes.array,\n    setPurchaseState          : PropTypes.func,\n    // togglePurchaseLock        : PropTypes.func,\n    trade_types               : PropTypes.object,\n    validation_errors         : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, modules, ui }) => ({\n        currency                  : client.currency,\n        is_client_allowed_to_visit: client.is_client_allowed_to_visit,\n        is_contract_mode          : modules.smart_chart.is_contract_mode,\n        basis                     : modules.trade.basis,\n        contract_type             : modules.trade.contract_type,\n        is_trade_enabled          : modules.trade.is_trade_enabled,\n        onClickPurchase           : modules.trade.onPurchase,\n        onHoverPurchase           : modules.trade.onHoverPurchase,\n        proposal_info             : modules.trade.proposal_info,\n        purchase_info             : modules.trade.purchase_info,\n        trade_types               : modules.trade.trade_types,\n        validation_errors         : modules.trade.validation_errors,\n        purchased_states_arr      : ui.purchase_states,\n        setPurchaseState          : ui.setPurchaseState,\n        // is_purchase_confirm_on    : ui.is_purchase_confirm_on,\n        // is_purchase_locked        : ui.is_purchase_lock_on,\n        // togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(Purchase);\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CloseButton = ({ onClick, className }) => (\n    <button\n        className={className}\n        type='button'\n        onClick={onClick}\n    />\n);\n\nCloseButton.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func.isRequired,\n};\n\nexport default CloseButton;\n","export const default_delay = 3000;\n\nexport const max_display_notifications = 3;\n\nexport const types = {\n    danger       : 'notification--danger',\n    info         : 'notification--info',\n    success      : 'notification--success',\n    warning      : 'notification--warning',\n    contract_sold: 'notification--info',\n};\n\nexport const sortNotifications = (() => {\n    const notification_order = {\n        contract_sold: 1,\n        danger       : 2,\n        warning      : 3,\n        info         : 4,\n        success      : 5,\n    };\n\n    return (a, b) => notification_order[a.type] - notification_order[b.type];\n})();\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport classNames  from 'classnames';\nimport Icon        from 'Assets/icon.jsx';\nimport CloseButton from './close-button.jsx';\nimport {\n    default_delay,\n    types }        from './constants';\n\nconst Notification = ({\n    data,\n    removeNotification,\n}) => {\n    const destroy = (is_closed_by_user) => {\n        removeNotification(data);\n\n        if (data.closeOnClick) {\n            data.closeOnClick(data, is_closed_by_user);\n        }\n    };\n\n    const onClick = () => destroy(true);\n\n    if (data.is_auto_close) {\n        setTimeout(destroy, data.delay || default_delay);\n    }\n\n    return (\n        <div className={\n            classNames('notification', types[data.type], {\n                'notification--small': (data.size === 'small'),\n            })}\n        >\n            <div className='notification__icon'>\n                { data.type === 'danger'  && <Icon icon='IconDanger' className='notification__icon-type' /> }\n                { (data.type === 'info' || data.type === 'contract_sold')\n                    && <Icon icon='IconInformation' className='notification__icon-type' /> }\n                { data.type === 'success' && <Icon icon='IconSuccess' className='notification__icon-type' /> }\n                { data.type === 'warning' && <Icon icon='IconWarning' className='notification__icon-type' /> }\n            </div>\n            <div className='notification__text-container'>\n                <h4 className='notification__header'>{data.header}</h4>\n                <p className='notification__text-body'> {data.message}</p>\n            </div>\n            { data.should_hide_close_btn ? undefined : <CloseButton onClick={onClick} className='notification__close-button' />}\n        </div>\n    );\n};\n\nNotification.propTypes = {\n    data: PropTypes.shape({\n        closeOnClick         : PropTypes.func,\n        delay                : PropTypes.number,\n        header               : PropTypes.string,\n        is_auto_close        : PropTypes.bool,\n        message              : PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n        should_hide_close_btn: PropTypes.bool,\n        size                 : PropTypes.oneOf(['small']),\n        type                 : PropTypes.oneOf(['warning', 'info', 'success', 'danger', 'contract_sold']).isRequired,\n    }),\n    removeNotification: PropTypes.func,\n};\n\nexport default Notification;\n","import moment       from 'moment';\nimport { localize } from 'App/i18n';\n\nexport const addCommaToNumber = (num, decimal_places) => {\n    if (!num || isNaN(num)) {\n        return num;\n    }\n    const n = String(decimal_places ? (+num).toFixed(decimal_places) : num);\n    const p = n.indexOf('.');\n    return n.replace(\n        /\\d(?=(?:\\d{3})+(?:\\.|$))/g,\n        (m, i) => p <= 0 || i < p ? `${m},` : m\n    );\n};\n\nexport const getTimePercentage = (server_time, start_time, expiry_time) => {\n    const duration_from_purchase = moment.duration(moment.unix(expiry_time).diff(moment.unix(start_time)));\n    const duration_from_now = moment.duration(moment.unix(expiry_time).diff(server_time));\n    let percentage = (duration_from_now.asMilliseconds() / duration_from_purchase.asMilliseconds()) * 100;\n\n    if (percentage < 0.5) {\n        percentage = 0;\n    } else if (percentage > 100) {\n        percentage = 100;\n    }\n\n    return Math.round(percentage);\n};\n\nexport const getBarrierLabel = (contract_info) => {\n    if (isDigitType(contract_info.contract_type)) {\n        return localize('Target');\n    }\n    return localize('Barrier');\n};\n\nexport const getBarrierValue = (contract_info) => {\n    if (isDigitType(contract_info.contract_type)) {\n        return digitTypeMap(contract_info)[contract_info.contract_type];\n    }\n    return addCommaToNumber(contract_info.barrier);\n};\n\nexport const isDigitType = (contract_type) => (/digit/.test(contract_type.toLowerCase()));\n\nconst digitTypeMap = (contract_info) => ({\n    DIGITDIFF : localize('Not {{barrier}}', { barrier: contract_info.barrier }),\n    DIGITEVEN : localize('Even'),\n    DIGITMATCH: localize('Equals {{barrier}}', { barrier: contract_info.barrier }),\n    DIGITODD  : localize('Odd'),\n    DIGITOVER : localize('Over {{barrier}}', { barrier: contract_info.barrier }),\n    DIGITUNDER: localize('Under {{barrier}}', { barrier: contract_info.barrier }),\n});\n","export * from './positions-helper';\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport PageError     from 'Modules/PageError';\nimport { routes }    from 'Constants/index';\nimport Localize      from '../localize.jsx';\n\nconst ErrorComponent = ({\n    header,\n    message,\n    redirect_label,\n    redirectOnClick,\n    should_show_refresh = true,\n}) => {\n    const refresh_message = should_show_refresh ? <Localize i18n_default_text='Please refresh this page to continue.' /> : '';\n\n    return (\n        <PageError\n            header={header || <Localize i18n_default_text='Oops, something went wrong.' />}\n            messages={\n                message\n                    ? [\n                        message,\n                        refresh_message,\n                    ]\n                    : [\n                        <Localize key={0} i18n_default_text='Sorry, an error occured while processing your request.' />,\n                        refresh_message,\n                    ]}\n            redirect_url={routes.trade}\n            redirect_label={redirect_label || <Localize i18n_default_text='Refresh' />}\n            buttonOnClick={redirectOnClick || (() => location.reload())}\n        />\n    );\n};\n\nErrorComponent.propTypes = {\n    message: PropTypes.oneOfType([\n        PropTypes.node,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    type: PropTypes.string,\n};\n\nexport default ErrorComponent;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport ReactDOM          from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport Icon              from 'Assets/icon.jsx';\nimport VerticalTab       from 'App/Components/Elements/VerticalTabs';\n\nclass ModalElement extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.el = document.createElement('div');\n        this.state = {\n            modal_root: document.getElementById('modal_root'),\n        };\n    }\n\n    componentDidMount = () => {\n        document.addEventListener('mousedown', this.handleClickOutside);\n        this.el.classList.add('modal');\n        this.props.showFullBlur();\n        this.state.modal_root.appendChild(this.el);\n    };\n\n    componentWillUnmount = () => {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n        this.state.modal_root.removeChild(this.el);\n        this.props.hideFullBlur();\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.props.is_open) {\n            this.props.hideFullBlur();\n            this.props.toggleModal();\n        }\n    };\n\n    render() {\n        return ReactDOM.createPortal(\n            <div ref={this.setWrapperRef} className={classNames('modal__container', this.props.className && `modal__${this.props.className}`)}>\n                <div className='modal-header'>\n                    <h3 className='modal-header__sidebar'>{this.props.title}</h3>\n                    <div className='modal-header__main'>\n                        { this.props.header &&\n                            <div className='modal-header__section'>\n                                {this.props.header}\n                            </div>\n                        }\n                        <div className='modal-header__close' onClick={this.props.toggleModal}>\n                            <Icon icon='ModalIconClose' />\n                        </div>\n                    </div>\n                </div>\n                <VerticalTab\n                    alignment='center'\n                    classNameHeader='modal__tab-header'\n                    list={this.props.modal_content}\n                    selected_index={this.props.selected_index}\n                />\n            </div>,\n            this.el\n        );\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n}\n\nModalElement.propTypes = {\n    className     : PropTypes.string,\n    header        : PropTypes.node,\n    hideFullBlur  : PropTypes.func,\n    is_open       : PropTypes.bool,\n    modal_content : PropTypes.array,\n    selected_index: PropTypes.number,\n    showFullBlur  : PropTypes.func,\n    title         : PropTypes.string,\n    toggleModal   : PropTypes.func,\n};\n\nconst Modal = ({\n    className,\n    header,\n    hideFullBlur,\n    is_open,\n    modal_content,\n    selected_index,\n    showFullBlur,\n    title,\n    toggleModal,\n}) => (\n    <CSSTransition\n        appear\n        in={is_open}\n        timeout={250}\n        classNames={{\n            appear   : 'modal__container--enter',\n            enter    : 'modal__container--enter',\n            enterDone: 'modal__container--enter-done',\n            exit     : 'modal__container--exit',\n        }}\n        unmountOnExit\n    >\n        <ModalElement\n            className={className}\n            header={header}\n            hideFullBlur={hideFullBlur}\n            is_open={is_open}\n            modal_content={modal_content}\n            selected_index={selected_index}\n            showFullBlur={showFullBlur}\n            title={title}\n            toggleModal={toggleModal}\n        />\n    </CSSTransition>\n);\n\nModal.propTypes = {\n    className     : PropTypes.string,\n    header        : PropTypes.node,\n    hideFullBlur  : PropTypes.func,\n    is_open       : PropTypes.bool,\n    modal_content : PropTypes.array,\n    selected_index: PropTypes.number,\n    showFullBlur  : PropTypes.func,\n    title         : PropTypes.string,\n    toggleModal   : PropTypes.func,\n};\n\nexport {\n    Modal,\n    ModalElement,\n};\n","import { get, getAll, urlFor } from '_common/language';\n\nexport const currentLanguage = get();\n\nexport const getAllowedLanguages = () => {\n    const exclude_languages = [\n        'ACH',\n    ];\n    // TODO Change language_list to const when design is ready.\n    let language_list = Object.keys(getAll())\n        .filter(key => !(exclude_languages.includes(key)))\n        .reduce((obj, key) => {\n            obj[key] = getAll()[key];\n            return obj;\n        }, {});\n\n    // TODO Remove this one line below when design is ready.\n    language_list = { EN: 'English' };\n    return language_list;\n};\n\nexport const getURL = lang => urlFor(lang);\n","export * from './language';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CalendarButton = ({\n    children,\n    className,\n    is_hidden,\n    label,\n    onClick,\n}) => (\n    <React.Fragment>\n        { !is_hidden &&\n            <div\n                className={className}\n                onClick={onClick}\n            >\n                {label}\n                {children}\n            </div>\n        }\n    </React.Fragment>\n);\n\nCalendarButton.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    className: PropTypes.string,\n    is_hidden: PropTypes.bool,\n    label    : PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport default CalendarButton;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport Icon              from 'Assets/icon.jsx';\nimport { month_headers } from 'Constants/date-time';\nimport {\n    addMonths,\n    addYears,\n    subMonths,\n    subYears,\n    toMoment }           from 'Utils/Date';\nimport CalendarButton    from './calendar-button.jsx';\nimport {\n    getCentury,\n    getDecade }          from './helper';\n\nconst CalendarHeader = ({\n    calendar_date,\n    calendar_view,\n    disable_month_selector,\n    disable_year_selector,\n    hide_disabled_periods,\n    isPeriodDisabled,\n    navigateTo,\n    switchView,\n}) => {\n    const is_date_view   = calendar_view === 'date';\n    const is_month_view  = calendar_view === 'month';\n    const is_year_view   = calendar_view === 'year';\n    const is_decade_view = calendar_view === 'decade';\n    const moment_date    = toMoment(calendar_date);\n\n    let num_of_years = 1;\n    if (is_year_view)   num_of_years = 10;\n    if (is_decade_view) num_of_years = 100;\n\n    const century = getCentury(moment_date.clone());\n    const decade  = getDecade(moment_date.clone());\n    const end_of_decade = (is_year_view ? decade : century).split('-')[1];\n\n    const is_prev_month_disabled  = isPeriodDisabled(subMonths(moment_date, 1), 'month');\n    const is_prev_year_disabled   = isPeriodDisabled(subYears(moment_date, num_of_years), 'month');\n    const is_next_month_disabled  = isPeriodDisabled(addMonths(moment_date, 1), 'month');\n    const is_next_year_disabled   = isPeriodDisabled(addYears(moment_date, num_of_years), 'month');\n    const is_select_year_disabled = isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year') || disable_year_selector;\n    const should_hide_next_month  = is_next_month_disabled && hide_disabled_periods;\n    const should_hide_prev_month  = is_prev_month_disabled && hide_disabled_periods;\n    const should_hide_prev_year   = is_prev_year_disabled && hide_disabled_periods;\n    const should_hide_next_year   = is_next_year_disabled && hide_disabled_periods;\n\n    const onClickPrevYear = !(is_prev_year_disabled || should_hide_prev_year) ?\n        () => navigateTo(subYears(calendar_date, num_of_years)) :\n        undefined;\n\n    const onClickNextYear = !(is_next_year_disabled || should_hide_next_year) ?\n        () => navigateTo(addYears(calendar_date, num_of_years)) :\n        undefined;\n\n    const onClickPrevMonth = !(is_prev_month_disabled || should_hide_prev_month) ?\n        () => navigateTo(subMonths(calendar_date, 1)) :\n        undefined;\n\n    const onClickNextMonth = !(is_next_month_disabled || should_hide_next_month) ?\n        () => navigateTo(addMonths(calendar_date, 1)) :\n        undefined;\n\n    return (\n        <div className='calendar__header'>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-year', {\n                    'calendar__nav--disabled' : is_prev_year_disabled,\n                    'calendar__nav--is-hidden': should_hide_prev_year,\n                })}\n                onClick={onClickPrevYear}\n            >\n                <Icon icon='IconChevronDoubleLeft' className='calendar__icon' />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-month', {\n                    'calendar__nav--disabled' : is_prev_month_disabled,\n                    'calendar__nav--is-hidden': should_hide_prev_month,\n                })}\n                is_hidden={!is_date_view}\n                onClick={onClickPrevMonth}\n            >\n                <Icon icon='IconChevronLeft' className='calendar__icon' />\n            </CalendarButton>\n\n            <React.Fragment>\n                { is_date_view &&\n                    <CalendarButton\n                        className='calendar__btn calendar__btn--select'\n                        is_hidden={!is_date_view}\n                        label={month_headers[moment_date.format('MMM')]}\n                        onClick={() => disable_month_selector ? undefined : switchView('month')}\n                    />\n                }\n                { (is_date_view || is_month_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        label={moment_date.format('YYYY')}\n                        onClick={() => is_select_year_disabled ? undefined : switchView('year')}\n                    />\n                }\n                { (is_year_view || is_decade_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        onClick={is_select_year_disabled ? undefined : () => switchView('decade')}\n                    >\n                        { is_year_view   && `${decade}`  }\n                        { is_decade_view && `${century}` }\n                    </CalendarButton>\n                }\n            </React.Fragment>\n\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-month', {\n                    'calendar__nav--disabled' : is_next_month_disabled,\n                    'calendar__nav--is-hidden': should_hide_next_month,\n                })}\n                is_hidden={!is_date_view}\n                onClick={onClickNextMonth}\n            >\n                <Icon icon='IconChevronRight' className='calendar__icon' />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-year', {\n                    'calendar__nav--disabled' : is_next_year_disabled,\n                    'calendar__nav--is-hidden': should_hide_next_year,\n                })}\n                onClick={onClickNextYear}\n            >\n                <Icon icon='IconChevronDoubleRight' className='calendar__icon' />\n            </CalendarButton>\n        </div>\n    );\n};\n\nCalendarHeader.propTypes = {\n    calendar_date: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.object,\n        PropTypes.number,\n    ]),\n    calendar_view         : PropTypes.string,\n    disable_month_selector: PropTypes.bool,\n    disable_year_selector : PropTypes.bool,\n    hide_disabled_periods : PropTypes.bool,\n    isPeriodDisabled      : PropTypes.func,\n    navigateTo            : PropTypes.func,\n    switchView            : PropTypes.func,\n};\n\nexport default CalendarHeader;\n","import ContentLoader from 'react-content-loader';\nimport React         from 'react';\nimport PropTypes     from 'prop-types';\n\nconst PositionsCardLoader = ({ is_dark_theme, speed }) => (\n    <ContentLoader\n        height={173}\n        width={218}\n        speed={speed}\n        primaryColor={is_dark_theme ? 'rgba(127, 131, 151, 0.16)' : '#f4f4f6'}\n        secondaryColor={is_dark_theme ? '#303342' : '#eaeaec'}\n    >\n        <rect x='43'  y='19'  rx='0' ry='0' width='56'  height='8' />\n        <rect x='147' y='19'  rx='0' ry='0' width='56'  height='8' />\n        <rect x='12'  y='50'  rx='0' ry='0' width='44'  height='8' />\n        <rect x='13'  y='68'  rx='0' ry='0' width='192' height='8' />\n        <rect x='5'   y='89'  rx='0' ry='0' width='208' height='1' />\n        <rect x='12'  y='104' rx='0' ry='0' width='44'  height='8' />\n        <rect x='12'  y='9'   rx='0' ry='0' width='24'  height='24' />\n        <rect x='116' y='11'  rx='0' ry='0' width='24'  height='24' />\n        <rect x='12'  y='118' rx='0' ry='0' width='88'  height='8' />\n        <rect x='116' y='104' rx='0' ry='0' width='44'  height='8' />\n        <rect x='116' y='118' rx='0' ry='0' width='88'  height='8' />\n        <rect x='12'  y='139' rx='0' ry='0' width='44'  height='8' />\n        <rect x='12'  y='153' rx='0' ry='0' width='88'  height='8' />\n        <rect x='116' y='139' rx='0' ry='0' width='44'  height='8' />\n        <rect x='116' y='153' rx='0' ry='0' width='88'  height='8' />\n    </ContentLoader>\n);\n\nPositionsCardLoader.propTypes = {\n    is_dark_theme: PropTypes.bool,\n    speed        : PropTypes.number,\n};\n\nexport { PositionsCardLoader };\n","export * from './positions-card.jsx';\n","const Cookies          = require('js-cookie');\nconst moment           = require('moment');\nconst ClientBase       = require('./client_base');\nconst Login            = require('./login');\nconst ServerTime       = require('./server_time');\nconst BinarySocket     = require('./socket_base');\nconst getLanguage      = require('../language').get;\nconst LocalStore       = require('../storage').LocalStore;\nconst State            = require('../storage').State;\nconst getPropertyValue = require('../utility').getPropertyValue;\nconst getAppId         = require('../../config').getAppId;\n\nconst GTM = (() => {\n    const isGtmApplicable = () => (/^(16303|16929)$/.test(getAppId()));\n\n    const getCommonVariables = () => ({\n        language: getLanguage(),\n        ...ClientBase.isLoggedIn() && {\n            visitorId: ClientBase.get('loginid'),\n            currency : ClientBase.get('currency'),\n        },\n        ...('is_dark_mode_on' in LocalStore.getObject('ui_store')) && {\n            theme: LocalStore.getObject('ui_store').is_dark_mode_on ? 'dark' : 'light',\n        },\n    });\n\n    const pushDataLayer = (data) => {\n        if (isGtmApplicable() && !Login.isLoginPages()) {\n            dataLayer.push({\n                ...getCommonVariables(),\n                ...data,\n            });\n        }\n    };\n\n    const eventHandler = (get_settings) => {\n        if (!isGtmApplicable()) return;\n        const login_event       = localStorage.getItem('GTM_login');\n        const is_new_account    = localStorage.getItem('GTM_new_account') === '1';\n\n        localStorage.removeItem('GTM_login');\n        localStorage.removeItem('GTM_new_account');\n\n        const affiliate_token = Cookies.getJSON('affiliate_tracking');\n        if (affiliate_token) {\n            pushDataLayer({ bom_affiliate_token: affiliate_token.t });\n        }\n\n        // Get current time (moment, set by server), else fallback to client time\n        const moment_now = window.time || moment().utc();\n        const data = {\n            visitorId         : ClientBase.get('loginid'),\n            bom_account_type  : ClientBase.getAccountType(),\n            bom_currency      : ClientBase.get('currency'),\n            bom_country       : get_settings.country,\n            bom_country_abbrev: get_settings.country_code,\n            bom_email         : get_settings.email,\n            url               : window.location.href,\n            bom_today         : moment_now.unix(),\n        };\n\n        if (is_new_account) {\n            data.event = 'new_account';\n            data.bom_date_joined = data.bom_today;\n        }\n\n        if (!ClientBase.get('is_virtual')) {\n            data.bom_age       = moment_now.diff(moment.unix(get_settings.date_of_birth).utc(), 'year');\n            data.bom_firstname = get_settings.first_name;\n            data.bom_lastname  = get_settings.last_name;\n            data.bom_phone     = get_settings.phone;\n        }\n\n        if (login_event) {\n            data.event = login_event;\n            BinarySocket.wait('mt5_login_list').then((response) => {\n                (response.mt5_login_list || []).forEach((obj) => {\n                    const acc_type = (ClientBase.getMT5AccountType(obj.group) || '')\n                        .replace('real_vanuatu', 'financial').replace('vanuatu_', '').replace(/svg/, 'gaming'); // i.e. financial_cent, demo_cent, demo_gaming, real_gaming\n                    if (acc_type) {\n                        data[`mt5_${acc_type}_id`] = obj.login;\n                    }\n                });\n                pushDataLayer(data);\n            });\n        } else {\n            pushDataLayer(data);\n        }\n\n        // check if there are any transactions in the last 30 days for UX interview selection\n        BinarySocket.send({ statement: 1, limit: 1 }).then((response) => {\n            const last_transaction_timestamp = getPropertyValue(response, ['statement', 'transactions', '0', 'transaction_time']);\n            pushDataLayer({\n                bom_transaction_in_last_30d: !!last_transaction_timestamp && moment(last_transaction_timestamp * 1000).isAfter(ServerTime.get().subtract(30, 'days')),\n            });\n        });\n    };\n\n    const mt5NewAccount = (response) => {\n        const acc_type = response.mt5_new_account.mt5_account_type ?\n            `${response.mt5_new_account.account_type}_${response.mt5_new_account.mt5_account_type}` : // financial_cent, demo_cent, ...\n            `${response.mt5_new_account.account_type === 'demo' ? 'demo' : 'real'}_gaming`;           // demo_gaming, real_gaming\n\n        const gtm_data = {\n            event          : 'mt5_new_account',\n            bom_email      : ClientBase.get('email'),\n            bom_country    : State.getResponse('get_settings.country'),\n            mt5_last_signup: acc_type,\n        };\n\n        gtm_data[`mt5_${acc_type}_id`] = response.mt5_new_account.login;\n\n        if (/demo/.test(acc_type) && !ClientBase.get('is_virtual')) {\n            gtm_data.visitorId = ClientBase.getAccountOfType('virtual').loginid;\n        }\n\n        pushDataLayer(gtm_data);\n    };\n\n    // Pushes deposit & withdrawal data from transaction-stream to GTM\n    const pushTransactionData = (response, extra_data = {}) => {\n        if (!isGtmApplicable() || ClientBase.get('is_virtual')) return;\n        if (!response.transaction || !response.transaction.action) return;\n        if (!['deposit', 'withdrawal'].includes(response.transaction.action)) return;\n\n        const moment_now  = window.time || moment().utc();\n        const storage_key = 'GTM_transactions';\n\n        // Remove values from prev days so localStorage doesn't grow to infinity\n        let gtm_transactions = JSON.parse(localStorage.getItem(storage_key)) || {};\n        if (Object.prototype.hasOwnProperty.call(gtm_transactions, 'timestamp')) {\n            if (moment_now.isAfter(moment.unix(gtm_transactions.timestamp).utc(), 'day')) {\n                localStorage.removeItem(storage_key);\n                gtm_transactions = { timestamp: moment_now.unix() };\n            }\n        }\n        const transactions_arr = gtm_transactions.transactions || [];\n        if (!transactions_arr.includes(response.transaction.transaction_id)) {\n            const data = {\n                event           : 'transaction',\n                bom_account_type: ClientBase.getAccountType(),\n                bom_today       : moment_now.unix(),\n                transaction     : {\n                    id     : response.transaction.transaction_id,\n                    type   : response.transaction.action,\n                    time   : response.transaction.transaction_time,\n                    amount : response.transaction.amount,\n                    balance: response.transaction.balance,\n                },\n            };\n            Object.assign(data, extra_data);\n            pushDataLayer(data);\n\n            transactions_arr.push(response.transaction.transaction_id);\n            gtm_transactions.transactions = transactions_arr;\n            gtm_transactions.timestamp    = gtm_transactions.timestamp || moment_now.unix();\n\n            localStorage.setItem(storage_key, JSON.stringify(gtm_transactions));\n        }\n    };\n\n    return {\n        pushDataLayer,\n        eventHandler,\n        pushTransactionData,\n        mt5NewAccount,\n    };\n})();\n\nmodule.exports = GTM;\n","const BinarySocket = require('./socket_base');\nconst localize     = require('../../App/i18n').localize;\n\n/*\n * Monitors the network status and initialises the WebSocket connection\n * 1. online : check the WS status (init/send: blink after timeout, open/message: online)\n * 2. offline: it is offline\n */\nconst NetworkMonitorBase = (() => {\n    const StatusConfig = (() => {\n        let status_config;\n\n        const initStatusConfig = () => ({\n            online  : { class: 'online',  tooltip: localize('Online') },\n            offline : { class: 'offline', tooltip: localize('Offline') },\n            blinking: { class: 'blinker', tooltip: localize('Connecting to server') },\n        });\n\n        return {\n            get: (status) => {\n                if (!status_config) {\n                    status_config = initStatusConfig();\n                }\n                return status_config[status];\n            },\n        };\n    })();\n\n    const pendings = {};\n    const pending_keys = {\n        ws_init   : 'ws_init',\n        ws_request: 'ws_request',\n    };\n    const pending_timeouts = {\n        [pending_keys.ws_init]   : 5000,\n        [pending_keys.ws_request]: 10000,\n    };\n\n    let ws_config,\n        network_status,\n        updateUI;\n\n    const init = (socket_general_functions, fncUpdateUI) => {\n        updateUI  = fncUpdateUI;\n        ws_config = Object.assign({ wsEvent, isOnline }, socket_general_functions);\n\n        if ('onLine' in navigator) {\n            window.addEventListener('online',  setStatus);\n            window.addEventListener('offline', setStatus);\n        } else { // if not supported, default to online and fallback to WS checks\n            navigator.onLine = true;\n        }\n\n        if (isOnline()) {\n            BinarySocket.init(ws_config);\n        }\n\n        setStatus(isOnline() ? 'online' : 'offline');\n    };\n\n    const isOnline = () => navigator.onLine;\n\n    const wsReconnect = () => {\n        if (isOnline() && BinarySocket.hasReadyState(2, 3)) { // CLOSING or CLOSED\n            BinarySocket.init(ws_config);\n        } else {\n            BinarySocket.send({ ping: 1 }); // trigger a request to get stable status sooner\n        }\n    };\n\n    const setStatus = (status) => {\n        if (!isOnline()) {\n            network_status = 'offline';\n        } else if (pending_keys[status] || network_status === 'offline') {\n            network_status = 'blinking';\n            wsReconnect();\n        } else {\n            network_status = 'online';\n        }\n\n        if (typeof updateUI === 'function') {\n            updateUI(StatusConfig.get(network_status), isOnline());\n        }\n    };\n\n    const ws_events_map = {\n        init   : () => setPending(pending_keys.ws_init),\n        open   : () => clearPendings(pending_keys.ws_init),\n        send   : () => setPending(pending_keys.ws_request),\n        message: () => clearPendings(),\n        close  : () => setPending(pending_keys.ws_init),\n    };\n\n    const wsEvent = (event) => {\n        if (typeof ws_events_map[event] === 'function') {\n            ws_events_map[event]();\n        }\n    };\n\n    const setPending = (key) => {\n        if (!pendings[key]) {\n            pendings[key] = setTimeout(() => {\n                pendings[key] = undefined;\n                setStatus(key);\n            }, pending_timeouts[key]);\n        }\n    };\n\n    const clearPendings = (key) => {\n        const clear = (k) => {\n            clearTimeout(pendings[k]);\n            pendings[k] = undefined;\n            if (k === pending_keys.ws_request) {\n                setStatus('online');\n            }\n        };\n\n        if (key) {\n            clear(key);\n        } else {\n            Object.keys(pendings).forEach(clear);\n        }\n    };\n\n    return {\n        init,\n        wsEvent,\n    };\n})();\n\nmodule.exports = NetworkMonitorBase;\n","const urlForLanguage             = require('./language').urlFor;\nconst getLanguage                = require('./language').get;\nconst getCurrentProductionDomain = require('../config').getCurrentProductionDomain;\nrequire('url-polyfill');\n\nconst Url = (() => {\n    let location_url,\n        static_host;\n\n    const reset = () => {\n        location_url = window ? window.location : location_url;\n    };\n\n    const params = (href) => {\n        const arr_params = [];\n        const parsed     = ((href ? new URL(href) : location_url).search || '').substr(1).split('&');\n        let p_l          = parsed.length;\n        while (p_l--) {\n            const param = parsed[p_l].split('=');\n            arr_params.push(param);\n        }\n        return arr_params;\n    };\n\n    const paramsHash = (href) => {\n        const param_hash = {};\n        const arr_params = params(href);\n        let param        = arr_params.length;\n        while (param--) {\n            if (arr_params[param][0]) {\n                param_hash[arr_params[param][0]] = arr_params[param][1] || '';\n            }\n        }\n        return param_hash;\n    };\n\n    const normalizePath = path => (path ? path.replace(/(^\\/|\\/$|[^a-zA-Z0-9-_/])/g, '') : '');\n\n    const urlFor = (path, pars, language, should_change_to_legacy = false) => {\n        const lang = (language || getLanguage()).toLowerCase();\n        let domain = `https://${window.location.hostname}/`;\n        if (should_change_to_legacy) {\n            if (/localhost|binary\\.sx/.test(domain)) {\n                domain = `https://binary.com/${lang || 'en'}/`;\n            } else {\n                domain = domain.replace(/deriv\\.app/, `binary.com/${lang || 'en'}`);\n            }\n        }\n        const new_url = `${domain}${(normalizePath(path) || 'home')}.html${(pars ? `?${pars}` : '')}`;\n        // replace old lang with new lang\n        return urlForLanguage(lang, new_url);\n    };\n\n    const default_domain = 'binary.com';\n    const host_map = { // the exceptions regarding updating the URLs\n        'bot.binary.com'       : 'www.binary.bot',\n        'developers.binary.com': 'developers.binary.com', // same, shouldn't change\n        'academy.binary.com'   : 'academy.binary.com',\n        'tech.binary.com'      : 'tech.binary.com',\n        'blog.binary.com'      : 'blog.binary.com',\n    };\n\n    const urlForCurrentDomain = (href) => {\n        const current_domain = getCurrentProductionDomain();\n\n        if (!current_domain) {\n            return href; // don't change when domain is not supported\n        }\n\n        const url_object = new URL(href);\n        if (Object.keys(host_map).includes(url_object.hostname)) {\n            url_object.hostname = host_map[url_object.hostname];\n        } else if (url_object.hostname.indexOf(default_domain) !== -1) {\n            // to keep all non-Binary links unchanged, we use default domain for all Binary links in the codebase (javascript and templates)\n            url_object.hostname = url_object.hostname.replace(new RegExp(`\\\\.${default_domain}`, 'i'), `.${current_domain}`);\n        } else {\n            return href;\n        }\n\n        return url_object.href;\n    };\n\n    const urlForStatic = (path = '') => {\n        if (!static_host || static_host.length === 0) {\n            static_host = document.querySelector('script[src*=\"vendor.min.js\"]');\n            if (static_host) {\n                static_host = static_host.getAttribute('src');\n            }\n\n            if (static_host && static_host.length > 0) {\n                static_host = static_host.substr(0, static_host.indexOf('/js/') + 1);\n            } else {\n                static_host = Url.websiteUrl();\n            }\n        }\n\n        return static_host + path.replace(/(^\\/)/g, '');\n    };\n\n    const getUrlBase = (path = '') => {\n        const l = window.location;\n\n        if (!/^\\/br_/.test(l.pathname)) return path;\n\n        return `/${l.pathname.split('/')[1]}${/^\\//.test(path) ? path : `/${path}`}`;\n    };\n\n    return {\n        getUrlBase,\n        reset,\n        paramsHash,\n        urlFor,\n        urlForCurrentDomain,\n        urlForStatic,\n\n        param          : name => paramsHash()[name],\n        websiteUrl     : () => `${location.protocol}//${location.hostname}/`,\n        getHostMap     : () => host_map,\n        resetStaticHost: () => { static_host = undefined; },\n    };\n})();\n\nmodule.exports = Url;\n","const moment           = require('moment');\nconst isCryptocurrency = require('./currency_base').isCryptocurrency;\nconst SocketCache      = require('./socket_cache');\nconst localize         = require('../../App/i18n').localize;\nconst LocalStore       = require('../storage').LocalStore;\nconst State            = require('../storage').State;\nconst getPropertyValue = require('../utility').getPropertyValue;\nconst isEmptyObject    = require('../utility').isEmptyObject;\n\nconst ClientBase = (() => {\n    const storage_key = 'client.accounts';\n    let client_object = {};\n    let current_loginid;\n\n    const init = () => {\n        current_loginid = LocalStore.get('active_loginid');\n        client_object   = getAllAccountsObject();\n    };\n\n    const isLoggedIn = () => (\n        !isEmptyObject(getAllAccountsObject()) &&\n        get('loginid') &&\n        get('token')\n    );\n\n    const isValidLoginid = () => {\n        if (!isLoggedIn()) return true;\n        const valid_login_ids = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG)[0-9]+$', 'i');\n        return getAllLoginids().every(loginid => valid_login_ids.test(loginid));\n    };\n\n    /**\n     * Stores the client information in local variable and localStorage\n     *\n     * @param {String} key                 The property name to set\n     * @param {String|Number|Object} value The regarding value\n     * @param {String|null} loginid        The account to set the value for\n     */\n    const set = (key, value, loginid = current_loginid) => {\n        if (key === 'loginid' && value !== current_loginid) {\n            LocalStore.set('active_loginid', value);\n            current_loginid = value;\n        } else {\n            if (!(loginid in client_object)) {\n                client_object[loginid] = {};\n            }\n            client_object[loginid][key] = value;\n            LocalStore.setObject(storage_key, client_object);\n        }\n    };\n\n    /**\n     * Returns the client information\n     *\n     * @param {String|null} key     The property name to return the value from, if missing returns the account object\n     * @param {String|null} loginid The account to return the value from\n     */\n    const get = (key, loginid = current_loginid) => {\n        let value;\n        if (key === 'loginid') {\n            value = loginid || LocalStore.get('active_loginid');\n        } else {\n            const current_client = client_object[loginid] || getAllAccountsObject()[loginid] || client_object;\n\n            value = key ? current_client[key] : current_client;\n        }\n        if (!Array.isArray(value) && (+value === 1 || +value === 0 || value === 'true' || value === 'false')) {\n            value = JSON.parse(value || false);\n        }\n        return value;\n    };\n\n    const getAllAccountsObject = () => LocalStore.getObject(storage_key);\n\n    const getAllLoginids = () => Object.keys(getAllAccountsObject());\n\n    const getAccountType = (loginid = current_loginid) => {\n        let account_type;\n        if (/^VR/.test(loginid))          account_type = 'virtual';\n        else if (/^MF/.test(loginid))     account_type = 'financial';\n        else if (/^MLT|MX/.test(loginid)) account_type = 'gaming';\n        return account_type;\n    };\n\n    const isAccountOfType = (type, loginid = current_loginid, only_enabled = false) => {\n        const this_type   = getAccountType(loginid);\n        return ((\n            (type === 'virtual' && this_type === 'virtual') ||\n            (type === 'real'    && this_type !== 'virtual') ||\n            type === this_type) &&\n            (only_enabled ? !get('is_disabled', loginid) : true));\n    };\n\n    const getAccountOfType = (type, only_enabled) => {\n        const id = getAllLoginids().find(loginid => isAccountOfType(type, loginid, only_enabled));\n        return id ? Object.assign({ loginid: id }, get(null, id)) : {};\n    };\n\n    const hasAccountType = (type, only_enabled) => !isEmptyObject(getAccountOfType(type, only_enabled));\n\n    // only considers currency of real money accounts\n    // @param {String} type = crypto|fiat\n    const hasCurrencyType = (type) => {\n        const loginids = getAllLoginids();\n        if (type === 'crypto') {\n            // find if has crypto currency account\n            return loginids.find(loginid =>\n                !get('is_virtual', loginid) && isCryptocurrency(get('currency', loginid)));\n        }\n        // else find if have fiat currency account\n        return loginids.find(loginid =>\n            !get('is_virtual', loginid) && !isCryptocurrency(get('currency', loginid)));\n    };\n\n    const TypesMapConfig = (() => {\n        let types_map_config;\n\n        const initTypesMap = () => ({\n            default  : localize('Real'),\n            financial: localize('Investment'),\n            gaming   : localize('Gaming'),\n            virtual  : localize('Virtual'),\n        });\n\n        return {\n            get: () => {\n                if (!types_map_config) {\n                    types_map_config = initTypesMap();\n                }\n                return types_map_config;\n            },\n        };\n    })();\n\n    const getAccountTitle = loginid => {\n        const types_map = TypesMapConfig.get();\n        return (types_map[getAccountType(loginid)] || types_map.default);\n    };\n\n    const responseAuthorize = (response) => {\n        const authorize = response.authorize;\n        set('email',      authorize.email);\n        set('currency',   authorize.currency);\n        set('is_virtual', +authorize.is_virtual);\n        set('session_start', parseInt(moment().valueOf() / 1000));\n        set('landing_company_shortcode', authorize.landing_company_name);\n        updateAccountList(authorize.account_list);\n    };\n\n    const updateAccountList = (account_list) => {\n        account_list.forEach((account) => {\n            set('excluded_until', account.excluded_until || '', account.loginid);\n            Object.keys(account).forEach((param) => {\n                const param_to_set = param === 'country' ? 'residence' : param;\n                const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                if (param_to_set !== 'loginid') {\n                    set(param_to_set, value_to_set, account.loginid);\n                }\n            });\n        });\n    };\n\n    const shouldAcceptTnc = () => {\n        if (get('is_virtual')) return false;\n        const website_tnc_version = State.getResponse('website_status.terms_conditions_version');\n        const client_tnc_status   = State.getResponse('get_settings.client_tnc_status');\n        return typeof client_tnc_status !== 'undefined' && client_tnc_status !== website_tnc_version;\n    };\n\n    const clearAllAccounts = () => {\n        current_loginid = undefined;\n        client_object   = {};\n        LocalStore.setObject(storage_key, client_object);\n    };\n\n    const setNewAccount = (options) => {\n        if (!options.email || !options.loginid || !options.token) {\n            return false;\n        }\n\n        SocketCache.clear();\n        localStorage.setItem('GTM_new_account', '1');\n\n        set('token',      options.token,       options.loginid);\n        set('email',      options.email,       options.loginid);\n        set('is_virtual', +options.is_virtual, options.loginid);\n        set('loginid',    options.loginid);\n\n        return true;\n    };\n\n    const currentLandingCompany = () => {\n        const landing_company_response = State.getResponse('landing_company') || {};\n        const this_shortcode           = get('landing_company_shortcode');\n        const landing_company_prop     = Object.keys(landing_company_response).find((key) => (\n            this_shortcode === landing_company_response[key].shortcode\n        ));\n        return landing_company_response[landing_company_prop] || {};\n    };\n\n    const shouldCompleteTax = () => isAccountOfType('financial') &&\n        !/crs_tin_information/.test((State.getResponse('get_account_status') || {}).status);\n\n    // remove manager id or master distinction from group\n    // remove EUR or GBP distinction from group\n    const getMT5AccountType = group => (group ? group.replace('\\\\', '_').replace(/_(\\d+|master|EUR|GBP)/, '') : '');\n\n    const getBasicUpgradeInfo = () => {\n        const upgradeable_landing_companies = State.getResponse('authorize.upgradeable_landing_companies');\n\n        let can_open_multi = false;\n        let type,\n            can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            const current_landing_company = get('landing_company_shortcode');\n\n            can_open_multi = upgradeable_landing_companies.indexOf(current_landing_company) !== -1;\n\n            // only show upgrade message to landing companies other than current\n            const canUpgrade = (...landing_companies) => landing_companies.find(landing_company => (\n                landing_company !== current_landing_company &&\n                upgradeable_landing_companies.indexOf(landing_company) !== -1\n            ));\n\n            can_upgrade_to = canUpgrade('svg', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    };\n\n    const getLandingCompanyValue = (loginid, landing_company, key) => {\n        let landing_company_object;\n        if (loginid.financial || isAccountOfType('financial', loginid)) {\n            landing_company_object = getPropertyValue(landing_company, 'financial_company');\n        } else if (loginid.real || isAccountOfType('real', loginid)) {\n            landing_company_object = getPropertyValue(landing_company, 'gaming_company');\n\n            // handle accounts that don't have gaming company\n            if (!landing_company_object) {\n                landing_company_object = getPropertyValue(landing_company, 'financial_company');\n            }\n        } else {\n            const financial_company = (getPropertyValue(landing_company, 'financial_company') || {})[key] || [];\n            const gaming_company    = (getPropertyValue(landing_company, 'gaming_company') || {})[key] || [];\n            landing_company_object  = financial_company.concat(gaming_company);\n            return landing_company_object;\n        }\n        return (landing_company_object || {})[key];\n    };\n\n    const getRiskAssessment = () => {\n        const status       = State.getResponse('get_account_status.status');\n        const is_high_risk = /high/.test(State.getResponse('get_account_status.risk_classification'));\n\n        return (\n            isAccountOfType('financial') ?\n                /(financial_assessment|trading_experience)_not_complete/.test(status) :\n                (is_high_risk && /financial_assessment_not_complete/.test(status))\n        );\n    };\n\n    // API_V3: send a list of accounts the client can transfer to\n    const canTransferFunds = (account) => {\n        if (account) {\n            // this specific account can be used to transfer funds to\n            return canTransferFundsTo(account.loginid);\n        }\n        // at least one account can be used to transfer funds to\n        return Object.keys(client_object).some(loginid => canTransferFundsTo(loginid));\n    };\n\n    const canTransferFundsTo = (to_loginid) => {\n        if (to_loginid === current_loginid || get('is_virtual', to_loginid) || get('is_virtual') ||\n            get('is_disabled', to_loginid)) {\n            return false;\n        }\n        const from_currency = get('currency');\n        const to_currency   = get('currency', to_loginid);\n        if (!from_currency || !to_currency) {\n            return false;\n        }\n        // only transfer to other accounts that have the same currency as current account if one is maltainvest and one is malta\n        if (from_currency === to_currency) {\n            // these landing companies are allowed to transfer funds to each other if they have the same currency\n            const same_cur_allowed = {\n                maltainvest: 'malta',\n                malta      : 'maltainvest',\n            };\n            const from_landing_company = get('landing_company_shortcode');\n            const to_landing_company   = get('landing_company_shortcode', to_loginid);\n            // if same_cur_allowed[from_landing_company] is undefined and to_landing_company is also undefined, it will return true\n            // so we should compare '' === undefined instead\n            return (same_cur_allowed[from_landing_company] || '') === to_landing_company;\n        }\n        // or for other clients if current account is cryptocurrency it should only transfer to fiat currencies and vice versa\n        const is_from_crypto = isCryptocurrency(from_currency);\n        const is_to_crypto   = isCryptocurrency(to_currency);\n        return (is_from_crypto ? !is_to_crypto : is_to_crypto);\n    };\n\n    const hasSvgAccount = () => !!(getAllLoginids().find(loginid => /^CR/.test(loginid)));\n\n    const canChangeCurrency = (statement, mt5_login_list, is_current = true) => {\n        const currency             = get('currency');\n        const has_no_mt5           = mt5_login_list.length === 0;\n        const has_no_transaction   = (statement.count === 0 && statement.transactions.length === 0);\n        const has_account_criteria = has_no_transaction && has_no_mt5;\n\n        // Current API requirements for currently logged-in user successfully changing their account's currency:\n        // 1. User must not have made any transactions\n        // 2. User must not have any MT5 account\n        // 3. Not be a crypto account\n        // 4. Not be a virtual account\n        return is_current ? currency && !get('is_virtual') && has_account_criteria && !isCryptocurrency(currency) : has_account_criteria;\n    };\n\n    return {\n        init,\n        isLoggedIn,\n        isValidLoginid,\n        set,\n        get,\n        getAllLoginids,\n        getAccountType,\n        isAccountOfType,\n        getAccountOfType,\n        hasAccountType,\n        hasCurrencyType,\n        getAccountTitle,\n        responseAuthorize,\n        shouldAcceptTnc,\n        clearAllAccounts,\n        setNewAccount,\n        currentLandingCompany,\n        shouldCompleteTax,\n        getAllAccountsObject,\n        getMT5AccountType,\n        getBasicUpgradeInfo,\n        getLandingCompanyValue,\n        getRiskAssessment,\n        canTransferFunds,\n        hasSvgAccount,\n        canChangeCurrency,\n    };\n})();\n\nmodule.exports = ClientBase;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Button = ({\n    children,\n    className = '',\n    classNameSpan,\n    has_effect,\n    id,\n    is_disabled,\n    onClick,\n    tabIndex,\n    text,\n    wrapperClassName,\n}) => {\n    const classes = classNames('btn', { effect: has_effect }, className);\n    const button = (\n        <button\n            id={id}\n            className={classes}\n            onClick={onClick || undefined}\n            disabled={is_disabled}\n            tabIndex={tabIndex || '0'}\n        >\n            { text &&\n                <span className={classNames('btn__text', classNameSpan)}>\n                    {text}\n                </span>\n            }\n            {children}\n        </button>\n    );\n    const wrapper = (<div className={wrapperClassName}>{button}</div>);\n\n    return wrapperClassName ? wrapper : button;\n};\n\nButton.propTypes = {\n    children        : PropTypes.node,\n    className       : PropTypes.string,\n    has_effect      : PropTypes.bool,\n    id              : PropTypes.string,\n    is_disabled     : PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n    onClick         : PropTypes.func,\n    text            : PropTypes.string,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default Button;\n","import { str as crc32 }     from 'crc-32';\nimport i18n                 from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport * as messages        from 'Translations/messages.json';\n\nconst i18n_config = {\n    resources: {\n        EN: {\n            translation: {\n                ...messages,\n            },\n        },\n    },\n    react: {\n        hashTransKey(defaultValue) {\n            return crc32(defaultValue);\n        },\n    },\n    lng: window.location.search ?\n        window.location.search.includes('lang=') ?\n            window.location.search\n                .substr(1).split('&')\n                .find(query => query.includes('lang='))\n                .split('=')[1]\n                .toUpperCase()\n            : undefined\n        : undefined,\n    fallbackLng: 'EN',\n};\n\ni18n\n    .use(initReactI18next) // passes i18n down to react-i18next\n    .init(i18n_config);\n\nexport const localize = (string, values) => i18n.t(crc32(string), { defaultValue: string, ...values });\n\nexport default i18n;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport UILoader  from 'App/Components/Elements/ui-loader.jsx';\n\nconst Lazy = ({\n    should_load = true,\n    ctor,\n    has_progress,\n    ...component_props\n}) => {\n    if (!should_load) {\n        return null;\n    }\n    const LazyLoadedComponent = React.lazy(ctor);\n\n    return (\n        <React.Suspense fallback={has_progress ? <UILoader /> : <div />}>\n            <LazyLoadedComponent {...component_props} />\n        </React.Suspense>\n    );\n};\n\n// Lazy Load the component by default.\nLazy.defaultProps = {\n    should_load : true,\n    has_progress: false,\n};\n\nLazy.propTypes = {\n    ctor        : PropTypes.func.isRequired,\n    has_progress: PropTypes.bool,\n    should_load : PropTypes.bool,\n};\n\nexport default Lazy;\n","export *      from './contract';\nexport routes from './routes';\nexport *      from './ui';\n","const routes = {\n    error404        : '/404',\n    account_password: '/settings/account_password',\n    apps            : '/settings/apps',\n    cashier_password: '/settings/cashier_password',\n    contract        : '/contract/:contract_id',\n    exclusion       : '/settings/exclusion',\n    financial       : '/settings/financial',\n    history         : '/settings/history',\n    index           : '/index',\n    limits          : '/settings/limits',\n    personal        : '/settings/personal',\n    positions       : '/reports/positions',\n    profit          : '/reports/profit',\n    reports         : '/reports',\n    root            : '/',\n    redirect        : '/redirect',\n    settings        : '/settings',\n    statement       : '/reports/statement',\n    token           : '/settings/token',\n    trade           : '/',\n};\n\nexport default routes;\n","const moment       = require('moment');\nconst BinarySocket = require('./socket_base');\nconst PromiseClass = require('../utility').PromiseClass;\n\nconst ServerTime = (() => {\n    let clock_started = false;\n    const pending = new PromiseClass();\n    let server_time,\n        performance_request_time,\n        get_time_interval,\n        update_time_interval,\n        onTimeUpdated;\n\n    const init = (fncTimeUpdated) => {\n        if (!clock_started) {\n            onTimeUpdated = fncTimeUpdated;\n            requestTime();\n            clearInterval(get_time_interval);\n            get_time_interval = setInterval(requestTime, 30000);\n            clock_started = true;\n        }\n    };\n\n    const requestTime = () => {\n        performance_request_time = performance.now();\n        BinarySocket.send({ time: 1 }).then(timeCounter);\n    };\n\n    const timeCounter = (response) => {\n        if (response.error) return;\n\n        if (!clock_started) {\n            init();\n            return;\n        }\n\n        clearInterval(update_time_interval);\n\n        const start_timestamp = response.time;\n        const performance_response_time = performance.now();\n        const time_taken = performance_response_time - performance_request_time;\n        const server_time_at_response = ((start_timestamp * 1000) + time_taken);\n\n        const updateTime = () => {\n            const time_since_response = performance.now() - performance_response_time;\n            server_time = moment(server_time_at_response + time_since_response).utc();\n\n            if (typeof onTimeUpdated === 'function') {\n                onTimeUpdated();\n            }\n        };\n        updateTime();\n        pending.resolve();\n        update_time_interval = setInterval(updateTime, 1000);\n    };\n\n    const get = () => server_time ? server_time.clone() : undefined;\n\n    return {\n        init,\n        get,\n        timePromise: pending.promise,\n    };\n})();\n\nmodule.exports = ServerTime;\n","const Cookies       = require('js-cookie');\nconst CookieStorage = require('./storage').CookieStorage;\n\nconst Language = (() => {\n    const all_languages = {\n        ACH  : 'Translations',\n        EN   : 'English',\n        DE   : 'Deutsch',\n        ES   : 'Español',\n        FR   : 'Français',\n        ID   : 'Indonesia',\n        IT   : 'Italiano',\n        PL   : 'Polish',\n        PT   : 'Português',\n        RU   : 'Русский',\n        TH   : 'Thai',\n        VI   : 'Tiếng Việt',\n        ZH_CN: '简体中文',\n        ZH_TW: '繁體中文',\n    };\n    const default_language = 'EN';\n\n    const setCookieLanguage = (lang) => {\n        if (!Cookies.get('language') || lang) {\n            const cookie = new CookieStorage('language');\n            cookie.write((lang || getLanguage()).toUpperCase());\n        }\n    };\n\n    let url_lang = null;\n\n    const lang_regex = new RegExp(`^(${Object.keys(all_languages).join('|')})$`, 'i');\n\n    const languageFromUrl = (custom_url) => {\n        if (url_lang && !custom_url) return url_lang;\n        const url_params = (custom_url || window.location.href).split('/').slice(3);\n        const language   = (url_params.find(lang => lang_regex.test(lang)) || '');\n        if (!custom_url) {\n            url_lang = language;\n        }\n        return language;\n    };\n\n    let current_lang = null;\n\n    const getLanguage = () => {\n        if (/ach/i.test(current_lang) || /ach/i.test(languageFromUrl())) {\n            const crowdin_lang_key = 'jipt_language_code_binary-static';\n            const crowdin_lang     = localStorage.getItem(crowdin_lang_key) || Cookies.get(crowdin_lang_key); // selected language for in-context translation\n            if (crowdin_lang) {\n                current_lang = crowdin_lang.toUpperCase().replace('-', '_').toUpperCase();\n                if (document.body) {\n                    document.body.classList.add(current_lang); // set the body class removed by crowdin code\n                }\n            }\n        }\n        current_lang = (current_lang || (languageFromUrl() || Cookies.get('language') || default_language).toUpperCase());\n        return current_lang;\n    };\n\n    const urlForLanguage = (lang, url = window.location.href) =>\n        url.replace(new RegExp(`/${getLanguage()}/`, 'i'), `/${(lang || default_language).trim().toLowerCase()}/`);\n\n    return {\n        getAll   : () => all_languages,\n        setCookie: setCookieLanguage,\n        get      : getLanguage,\n        urlFor   : urlForLanguage,\n        urlLang  : languageFromUrl,\n        reset    : () => { url_lang = null; current_lang = null; },\n    };\n})();\n\nmodule.exports = Language;\n","import { localize } from 'App/i18n';\nimport { toMoment } from 'Utils/Date';\n\nconst getDurationMaps = () => ({\n    t: { display: localize('ticks'),   order: 1 },\n    s: { display: localize('seconds'), order: 2, to_second: 1 },\n    m: { display: localize('minutes'), order: 3, to_second: 60 },\n    h: { display: localize('hours'),   order: 4, to_second: 60 * 60 },\n    d: { display: localize('days'),    order: 5, to_second: 60 * 60 * 24 },\n});\n\nexport const buildDurationConfig = (contract, durations = { min_max: {}, units_display: {} }) => {\n    durations.min_max[contract.start_type]       = durations.min_max[contract.start_type] || {};\n    durations.units_display[contract.start_type] = durations.units_display[contract.start_type] || [];\n\n    const obj_min = getDurationFromString(contract.min_contract_duration);\n    const obj_max = getDurationFromString(contract.max_contract_duration);\n\n    durations.min_max[contract.start_type][contract.expiry_type] = {\n        min: convertDurationUnit(obj_min.duration, obj_min.unit, 's'),\n        max: convertDurationUnit(obj_max.duration, obj_max.unit, 's'),\n    };\n\n    const arr_units = [];\n    durations.units_display[contract.start_type].forEach(obj => {\n        arr_units.push(obj.value);\n    });\n\n    const duration_maps = getDurationMaps();\n\n    if (/^tick|daily$/.test(contract.expiry_type)) {\n        if (arr_units.indexOf(obj_min.unit) === -1) {\n            arr_units.push(obj_min.unit);\n        }\n    } else {\n        Object.keys(duration_maps).forEach(u => {\n            if (\n                u !== 'd' && // when the expiray_type is intraday, the supported units are seconds, minutes and hours.\n                arr_units.indexOf(u) === -1 &&\n                duration_maps[u].order >= duration_maps[obj_min.unit].order &&\n                duration_maps[u].order <= duration_maps[obj_max.unit].order) {\n                arr_units.push(u);\n            }\n        });\n    }\n\n    durations.units_display[contract.start_type] = arr_units\n        .sort((a, b) => (duration_maps[a].order > duration_maps[b].order ? 1 : -1))\n        .reduce((o, c) => (\n            [...o, { text: duration_maps[c].display, value: c }]\n        ), []);\n\n    return durations;\n};\n\nexport const convertDurationUnit = (value, from_unit, to_unit) => {\n    if (!value || !from_unit || !to_unit || isNaN(parseInt(value))) {\n        return null;\n    }\n\n    const duration_maps = getDurationMaps();\n\n    if (from_unit === to_unit || !('to_second' in duration_maps[from_unit])) {\n        return value;\n    }\n\n    return (value * duration_maps[from_unit].to_second) / duration_maps[to_unit].to_second;\n};\n\nconst getDurationFromString = (duration_string) => {\n    const duration = duration_string.toString().match(/[a-zA-Z]+|[0-9]+/g);\n    return {\n        duration: +duration[0], // converts string to numbers\n        unit    : duration[1],\n    };\n};\n\nexport const getExpiryType = (store) => {\n    const { duration_unit, expiry_date, expiry_type, duration_units_list } = store;\n    const server_time = store.root_store.common.server_time;\n\n    const duration_is_day       = expiry_type === 'duration' && duration_unit === 'd';\n    const expiry_is_after_today = expiry_type === 'endtime' && (toMoment(expiry_date).isAfter(toMoment(server_time), 'day') ||\n        !hasIntradayDurationUnit(duration_units_list));\n\n    let contract_expiry_type = 'daily';\n    if (!duration_is_day && !expiry_is_after_today) {\n        contract_expiry_type = duration_unit === 't' ? 'tick' : 'intraday';\n    }\n\n    return contract_expiry_type;\n};\n\nexport const convertDurationLimit = (value, unit) => {\n    if (!(value >= 0) || !unit || !Number.isInteger(value)) {\n        return null;\n    }\n\n    if (unit === 'm') {\n        const minute = value / 60;\n        return minute >= 1 ? Math.floor(minute) : 1;\n    } else if (unit === 'h') {\n        const hour = value / (60 * 60);\n        return hour >= 1 ? Math.floor(hour) : 1;\n    } else if (unit === 'd') {\n        const day = value / (60 * 60 * 24);\n        return day >= 1 ? Math.floor(day) : 1;\n    }\n\n    return value;\n};\n\nexport const hasIntradayDurationUnit = (duration_units_list) => (\n    duration_units_list.some(unit => ['m', 'h'].indexOf(unit.value) !== -1)\n);\n\n/**\n * On switching symbols, end_time value of volatility indices should be set to today\n *\n * @param {String} symbol\n * @param {String} expiry_type\n * @returns {*}\n */\nexport const resetEndTimeOnVolatilityIndices = (symbol, expiry_type) => (\n    (/^R_/.test(symbol) && expiry_type === 'endtime') ? toMoment(null).format('DD MMM YYYY') : null\n);\n","if (window.NodeList && !NodeList.prototype.forEach) {\n    NodeList.prototype.forEach = function (callback, thisArg) {\n        thisArg = thisArg || window;\n        for (var i = 0; i < this.length; i++) {\n            callback.call(thisArg, this[i], i, this);\n        }\n    };\n}\n","if (!Element.prototype.closest) {\n    Element.prototype.closest = function(s) {\n        var el = this;\n        if (!document.documentElement.contains(el)) return null;\n        do {\n            if (el.matches(s)) return el;\n            el = el.parentElement || el.parentNode;\n        } while (el !== null && el.nodeType === 1); \n        return null;\n    };\n}\n","Element.prototype.hide = function() {\n    this.style.display = 'none';\n    return this;\n};\n\nElement.prototype.show = function() {\n    this.style.display = '';\n    return this;\n};\n\nif (!('remove' in Element.prototype)) {\n    Element.prototype.remove = function() {\n        if (this.parentNode) {\n            this.parentNode.removeChild(this);\n        }\n        return this;\n    };\n}\n\nElement.prototype.toggleClass = function(class_name, should_add) {\n    if (typeof should_add === 'undefined') { // toggle\n        should_add = !this.classList.contains(class_name);\n    }\n    this.classList[should_add ? 'add' : 'remove'](class_name);\n    return this;\n};\n\nElement.prototype.setVisibility = function(make_visible) {\n    this.toggleClass('invisible', !make_visible);\n    return this;\n};\n\n\nElement.prototype.html = function(content) {\n    if (typeof content === 'object') {\n        this.innerHTML = '';\n        this.appendChild(content);\n    } else {\n        this.innerHTML = content;\n    }\n    return this;\n};\n","import BinarySocket   from './socket_base';\nimport {\n    cloneObject,\n    getPropertyValue,\n    isDeepEqual,\n    isEmptyObject }   from '../utility';\n\n/**\n * A layer over BinarySocket to handle subscribing to streaming calls\n * in order to keep track of subscriptions, manage forget, prevent multiple subscription at the same time, ...\n *\n * structure of the the subscription object is:\n * {\n *     1: { msg_type: 'proposal', request: { ... }, stream_id: '...', subscribers: [ ... ] },\n *     2: ...\n * }\n * object keys: subscription_id that assigned to each subscription\n * msg_type   : msg_type of the request for faster filtering\n * request    : the request object, used to subscribe to the same stream when there is a new subscribe request with exactly the same values\n * stream_id  : id of the stream which stored from its response and used to forget the stream when needed\n * subscribers: an array of callbacks to dispatch the response to\n */\nconst SubscriptionManager = (() => {\n    const subscriptions    = {};\n    const forget_requested = {};\n\n    let subscription_id = 0;\n\n    /**\n     * To submit request for a new subscription\n     *\n     * @param {String}   msg_type             msg_type of the request\n     * @param {Object}   request_obj          the whole object of the request to be made\n     * @param {Function} fncCallback          callback function to pass the responses to\n     * @param {Boolean}  should_forget_first  when it's true: forgets the previous subscription, then subscribes after receiving the forget response (if any)\n     */\n    const subscribe = (msg_type, request_obj, fncCallback, should_forget_first = false) => {\n        if (should_forget_first) {\n            forget(msg_type, fncCallback).then(() => {\n                subscribe(msg_type, request_obj, fncCallback);\n            });\n            return;\n        }\n\n        let sub_id = Object.keys(subscriptions).find(id => isDeepEqual(request_obj, subscriptions[id].request));\n\n        if (!sub_id) {\n            sub_id = ++subscription_id;\n\n            subscriptions[sub_id] = {\n                msg_type,\n                request    : cloneObject(request_obj),\n                stream_id  : '',             // stream_id will be updated after receiving the response\n                subscribers: [fncCallback],\n            };\n\n            BinarySocket.send(request_obj, {\n                callback: (response) => dispatch(response, sub_id),\n            });\n        } else if (!hasCallbackFunction(sub_id, fncCallback)) {\n            // there is already an active subscription for the very same request which fncCallback is not subscribed to it yet\n            subscriptions[sub_id].subscribers.push(fncCallback);\n        }\n    };\n\n    /**\n     * Add subscription without subscribers from request\n     * E.g. open subscription to proposal_open_contract on buy request\n     * @param {String}   msg_type               msg_type of the subscription\n     * @param {Object}   send_request           the object of the request to be made\n     * @param {Object}   subscribe_request      the object of the subscription request\n     * @param {Array}    subscription_props     Array of prop strings to add to subscribe_request from initial request, e.g. contract_id\n     */\n    const addSubscriptionFromRequest = (msg_type, send_request, subscribe_request, subscription_props) =>\n        new Promise((resolve) => {\n            let sub_id;\n            let is_stream = false;\n\n            BinarySocket.send(send_request, {\n                callback: (response) => {\n                    if (response.error) {\n                        return resolve(response);\n                    }\n                    if (!is_stream) {\n                        is_stream = true;\n                        sub_id    = ++subscription_id;\n\n                        if (subscription_props && Array.isArray(subscription_props)) {\n                            subscription_props.forEach((prop) => {\n                                if (response[response.msg_type][prop]) {\n                                    subscribe_request[prop] = response[response.msg_type][prop];\n                                }\n                            });\n                        }\n\n                        subscriptions[sub_id] = {\n                            msg_type,\n                            request    : cloneObject(subscribe_request),\n                            stream_id  : '',             // stream_id will be updated after receiving the response\n                            subscribers: [],\n                        };\n                        return resolve(response);\n                    }\n                    return dispatch(response, sub_id);\n                },\n            });\n        });\n\n    // dispatches the response to subscribers of the specific subscription id (internal use only)\n    const dispatch = (response, sub_id) => {\n        const stream_id = getPropertyValue(response, [response.msg_type, 'id']) || getPropertyValue(response.subscription, ['id']);\n\n        if (!subscriptions[sub_id]) {\n            if (!forget_requested[stream_id]) {\n                forgetStream(stream_id);\n            }\n            return;\n        }\n\n        const sub_info = subscriptions[sub_id];\n        // set the stream_id\n        if (!sub_info.stream_id && stream_id) {\n            sub_info.stream_id = stream_id;\n        }\n\n        // callback subscribers\n        const subscribers = sub_info.subscribers;\n        if (subscribers.length) {\n            if (\n                // it is the first response\n                !sub_info.stream_id &&\n                    (\n                        // the first response returned error\n                        response.error\n                        || (\n                            // not a subscription (i.e. subscribed proposal_open_contract for an expired contract)\n                            // also to filter out streams with no stream id but later it will continue streaming (i.e. proposal_open_contract without contract id)\n                            !isEmptyObject(response[response.msg_type]) &&\n                            // check msg_type to filter out those calls which don't return stream `id` on first response (tick_history, ...)\n                            response.msg_type === sub_info.msg_type\n                        )\n                    )\n                ||\n                // remove when response isn't first and response has no stream_id\n                !stream_id && sub_info.stream_id\n            ) {\n                delete subscriptions[sub_id];\n            }\n            sub_info.subscribers.forEach((fnc) => {\n                fnc(response);\n            });\n        } else {\n            delete subscriptions[sub_id];\n            forgetStream(sub_info.stream_id);\n        }\n    };\n\n    /**\n     * To forget a subscription which submitted for a specific callback function\n     *\n     * @param  {String}   msg_type      msg_type to forget\n     * @param  {Function} fncCallback   the same function passed to subscribe()\n     *     (this is the way to distinguish between different subscribers of the same stream at the same time)\n     * @param  {Object}   match_values  optional, to only forget subscriptions having request that \"contains\" provided values\n     * @return {Promise}  the promise object of all possible forget requests\n     */\n    const forget = (msg_type, fncCallback, match_values) => {\n        if (typeof fncCallback !== 'function') {\n            throw new Error(`Missing callback function. To forget all subscriptions of msg_type: ${msg_type}, please call forgetAll().`);\n        }\n\n        const forgets_list = [];\n        Object.keys(subscriptions).forEach((id) => {\n            if (subscriptions[id].msg_type === msg_type) { // it's the msg_type we are looking for\n                if (!match_values || hasValues(subscriptions[id].request, match_values)) { // the value matches as well\n                    const stream_id = subscriptions[id].stream_id;\n                    if (stream_id && subscriptions[id].subscribers.length === 1) { // there is only one subscriber, so we can forget the call\n                        delete subscriptions[id];\n                        forgets_list.push(forgetStream(stream_id));\n                    } else if (hasCallbackFunction(id, fncCallback)) {\n                        // there are other subscribers, or for some reason there is no stream_id:\n                        // (i.e. returned an error, or forget() being called before the first response)\n                        subscriptions[id].subscribers.splice(subscriptions[id].subscribers.indexOf(fncCallback), 1);\n                    }\n                }\n            }\n        });\n        return Promise.all(forgets_list);\n    };\n\n    /**\n     * To forget all active subscriptions of a list of msg_types\n     *\n     * @param  {String}  msg_types  list of msg_types to forget\n     * @return {Promise} the promise object of all possible forget_all requests\n     */\n    const forgetAll = (...msg_types) => {\n        const types_to_forget = {};\n\n        msg_types.forEach((msg_type) => {\n            const sub_ids = Object.keys(subscriptions).filter(id => subscriptions[id].msg_type === msg_type);\n            if (sub_ids.length) {\n                sub_ids.forEach((id) => {\n                    delete subscriptions[id];\n                });\n                types_to_forget[msg_type] = true;\n            }\n        });\n\n        return Promise.resolve(\n            !isEmptyObject(types_to_forget) ?\n                BinarySocket.send({ forget_all: Object.keys(types_to_forget) }) :\n                {}\n        );\n    };\n\n    const forgetStream = (stream_id) => {\n        forget_requested[stream_id] = true; // to prevent forgetting multiple times\n        return Promise.resolve(\n            stream_id ?\n                BinarySocket.send({ forget: stream_id }).then(() => { delete forget_requested[stream_id]; }) :\n                {}\n        );\n    };\n\n    const hasCallbackFunction = (sub_id, fncCallback) =>\n        (subscriptions[sub_id] && subscriptions[sub_id].subscribers.indexOf(fncCallback) !== -1);\n\n    const hasValues = (request_obj, values_obj) => (\n        typeof request_obj === 'object' &&\n        typeof values_obj  === 'object' &&\n        Object.keys(values_obj).every(key => request_obj[key] === values_obj[key])\n    );\n\n    return {\n        addSubscriptionFromRequest,\n        subscribe,\n        forget,\n        forgetAll,\n        forgetStream,\n    };\n})();\n\nexport default SubscriptionManager;\n","/*\n Responses that should be ignored upon receiving errors.\n We still log them, but having an error inside of these\n will not break the queue and send them to trackjs.\n This will look for predefined `ignored_responses_in_trackjs` from GTM, if\n there is none, then it just does not filter out any response.\n*/\nconst ignored_responses_in_trackjs = window.ignored_responses_in_trackjs || [];\n\nclass ResponseQueue {\n    constructor() {\n        this.list = [];\n        this.size = 3;\n    }\n\n    add (response) {\n        this.list.unshift(response);\n    }\n\n    remove () {\n        this.list.pop();\n    }\n\n    push (response) {\n        if (this.list.length >= this.size) {\n            this.remove();\n        }\n        this.add(response);\n    }\n\n    fresh () {\n        this.list = [];\n    }\n}\n\nconst queue = new ResponseQueue();\n\n/**\n * Listen on method calls and inspect the response to see if error is thrown.\n * Handling the response status is NOT this function's responsibility\n */\nexport const ApiCallProxyHandler = {\n    get(target, prop_key, receiver) {\n        try {\n            const target_value = Reflect.get(target, prop_key, receiver);\n            if (typeof target_value === 'function') {\n                return function(...args) {\n                    const result = target_value.apply(this, args);\n                    if (result instanceof Promise) {\n                        return new Promise((resolve) => {\n                            let return_value;\n                            result.then(response => {\n                                if (response.error) {\n                                    queue.push(response);\n                                    if (window.TrackJS) window.TrackJS.console.log(queue.list);\n                                    queue.fresh();\n                                    if (\n                                        window.TrackJS &&\n                                        !ignored_responses_in_trackjs.some(item => item === response.error.code)\n                                    ) {\n                                        window.TrackJS.track(response.error.code);\n                                    }\n                                }\n                                queue.push(response);\n                                return_value = response;\n                            }).catch(error => {\n                                if (window.TrackJS) {\n                                    window.TrackJS.console.log(queue.list);\n                                    window.TrackJS.track(error.getMessage());\n                                }\n                            }).finally(() => {\n                                resolve(return_value);\n                            });\n                        });\n                    }\n                    return result;\n                }.bind(this);\n            }\n            return target_value;\n        } catch (error) {\n            throw new Error(error.getMessage());\n        }\n    },\n};\n\nexport const trackJSNetworkMonitor = (obj) => new Proxy(obj, ApiCallProxyHandler);\n","import BinarySocket              from '_common/base/socket_base';\nimport SubscriptionManager       from '_common/base/subscription_manager';\nimport { isEmptyObject }         from '_common/utility';\nimport { trackJSNetworkMonitor } from './trackjs';\n\nconst WS = (() => {\n    const activeSymbols = (options) =>\n        BinarySocket.send({ active_symbols: 'brief' }, { msg_type: 'active_symbols', ...(options && options) });\n\n    const buy = (proposal_id, price) =>\n        BinarySocket.send({ buy: proposal_id, price });\n\n    const cashier = (action, verification_code) =>\n        BinarySocket.send({ cashier: action, ...(verification_code && { verification_code }) });\n\n    const contractsFor = (symbol) =>\n        BinarySocket.send({ contracts_for: symbol });\n\n    const getAccountStatus = () =>\n        BinarySocket.send({ get_account_status: 1 });\n\n    const getSelfExclusion = () =>\n        BinarySocket.send({ get_self_exclusion: 1 });\n\n    const getSettings = () =>\n        BinarySocket.send({ get_settings: 1 });\n\n    const getTradingTimes = (date) =>\n        BinarySocket.send({ trading_times: date });\n\n    const landingCompany = (residence) =>\n        BinarySocket.send({ landing_company: residence });\n\n    const logout = () =>\n        BinarySocket.send({ logout: 1 });\n\n    const mt5LoginList = () =>\n        BinarySocket.send({ mt5_login_list: 1 });\n\n    const newAccountVirtual = (verification_code, client_password, residence) =>\n        BinarySocket.send({\n            new_account_virtual: 1,\n            verification_code,\n            client_password,\n            residence,\n        });\n\n    const oauthApps = () =>\n        BinarySocket.send({ oauth_apps: 1 });\n\n    const payoutCurrencies = () =>\n        BinarySocket.send({ payout_currencies: 1 });\n\n    const portfolio = () =>\n        BinarySocket.send({ portfolio: 1 });\n\n    const profitTable = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ profit_table: 1, description: 1, limit, offset, ...date_boundaries });\n\n    const proposalOpenContract = (contract_id) =>\n        BinarySocket.send({ proposal_open_contract: 1, contract_id });\n\n    const sell = (contract_id, price) =>\n        BinarySocket.send({ sell: contract_id, price });\n\n    const residenceList = () =>\n        BinarySocket.send({ residence_list: 1 });\n\n    const sellExpired = () =>\n        BinarySocket.send({ sell_expired: 1 });\n\n    const sendRequest = (request_object, force_request) =>\n        Promise.resolve(!isEmptyObject(request_object) ? BinarySocket.send(request_object, force_request) : {});\n\n    const statement = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ statement: 1, description: 1, limit, offset, ...date_boundaries });\n\n    const verifyEmail = (email, type) =>\n        BinarySocket.send({ verify_email: email, type });\n\n    // ----- Streaming calls -----\n    const forget = (msg_type, cb, match_values) =>\n        SubscriptionManager.forget(msg_type, cb, match_values);\n\n    const forgetAll = (...msg_types) =>\n        SubscriptionManager.forgetAll(...msg_types);\n\n    const forgetStream = (stream_id) =>\n        SubscriptionManager.forgetStream(stream_id);\n\n    const subscribeBalance = (cb, is_forced) =>\n        SubscriptionManager.subscribe('balance', { balance: 1, subscribe: 1 }, cb, is_forced);\n\n    const subscribeProposal = (req, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal', req, cb, should_forget_first);\n\n    const subscribeProposalOpenContract = (contract_id = null, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal_open_contract', { proposal_open_contract: 1, subscribe: 1, ...(contract_id && { contract_id }) }, cb, should_forget_first);\n\n    const subscribeProposalOpenContractOnBuy = (buy_request) =>\n        SubscriptionManager.addSubscriptionFromRequest(\n            'proposal_open_contract',\n            { ...buy_request, subscribe: 1 },\n            { proposal_open_contract: 1, subscribe: 1 },\n            ['contract_id'],\n        );\n\n    const subscribeTicks = (symbol, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks', { ticks: symbol, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeTicksHistory = (request_object, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks_history', request_object, cb, should_forget_first);\n\n    const subscribeTransaction = (cb, should_forget_first) =>\n        SubscriptionManager.subscribe('transaction', { transaction: 1, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeWebsiteStatus = (cb) =>\n        SubscriptionManager.subscribe('website_status', { website_status: 1, subscribe: 1 }, cb);\n\n    return {\n        activeSymbols,\n        buy,\n        cashier,\n        contractsFor,\n        getAccountStatus,\n        getSelfExclusion,\n        getSettings,\n        getTradingTimes,\n        landingCompany,\n        logout,\n        mt5LoginList,\n        newAccountVirtual,\n        oauthApps,\n        portfolio,\n        payoutCurrencies,\n        profitTable,\n        proposalOpenContract,\n        residenceList,\n        sell,\n        sellExpired,\n        sendRequest,\n        statement,\n        verifyEmail,\n\n        // streams\n        forget,\n        forgetAll,\n        forgetStream,\n        subscribeBalance,\n        subscribeProposal,\n        subscribeProposalOpenContract,\n        subscribeProposalOpenContractOnBuy,\n        subscribeTicks,\n        subscribeTicksHistory,\n        subscribeTransaction,\n        subscribeWebsiteStatus,\n    };\n})();\n\nexport default trackJSNetworkMonitor(WS);\n","if (!Element.prototype.matches) {\n    Element.prototype.matches =\n        Element.prototype.matchesSelector ||\n        Element.prototype.mozMatchesSelector ||\n        Element.prototype.msMatchesSelector ||\n        Element.prototype.oMatchesSelector ||\n        Element.prototype.webkitMatchesSelector ||\n        function(s) {\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n                i = matches.length;\n            while (--i >= 0 && matches.item(i) !== this) {}\n            return i > -1;\n        };\n}\n","import moment       from 'moment';\nimport { localize } from 'App/i18n';\nimport ServerTime   from '_common/base/server_time';\n\n// Disables moment's fallback to native Date object\n// moment will return `Invalid Date` if date cannot be parsed\nmoment.createFromInputFallback = function (config) {\n    config._d = new Date(NaN); // eslint-disable-line no-underscore-dangle\n};\n\n/**\n * Convert epoch to moment object\n * @param  {Number} epoch\n * @return {moment} the moment object of provided epoch\n */\nexport const epochToMoment = epoch => moment.unix(epoch).utc();\n\n/**\n * Convert date string or epoch to moment object\n * @param  {Number} value   the date in epoch format\n * @param  {String} value   the date in string format\n * @return {moment} the moment object of 'now' or the provided date epoch or string\n */\nexport const toMoment = value => {\n    if (!value) return ServerTime.get() || moment().utc(); // returns 'now' moment object\n    if (value instanceof moment && value.isValid() && value.isUTC()) return value; // returns if already a moment object\n    if (typeof value === 'number') return epochToMoment(value); // returns epochToMoment() if not a date\n\n    if (/invalid/i.test(moment(value))) {\n        const today_moment = moment();\n        return value > today_moment.utc().daysInMonth() ? moment.utc(today_moment.add(value, 'd'), 'DD MMM YYYY') : moment.utc(value, 'DD MMM YYYY'); // returns target date\n    }\n    return moment.utc(value);\n};\n\n/**\n * Set specified time on moment object\n * @param  {moment} moment_obj  the moment to set the time on\n * @param  {String} time        24 hours format, may or may not include seconds\n * @return {moment} a new moment object of result\n */\nexport const setTime = (moment_obj, time) => {\n    const [hour, minute, second] = time ? time.split(':') : [0, 0, 0];\n    moment_obj.hour(hour).minute(minute || 0).second(second || 0);\n    return moment_obj;\n};\n\n/**\n * return the unix value of provided epoch and time\n * @param  {Number} epoch  the date to update with provided time\n * @param  {String} time   the time to set on the date\n * @return {Number} unix value of the result\n */\nexport const convertToUnix = (epoch, time) => setTime(toMoment(epoch), time).unix();\n\nexport const toGMTFormat = (time) => moment(time || undefined).utc().format('YYYY-MM-DD HH:mm:ss [GMT]');\n\nexport const formatDate = (date, date_format = 'YYYY-MM-DD') => toMoment(date).format(date_format);\n\n/**\n * return the number of days from today to date specified\n * @param  {String} date   the date to calculate number of days from today\n * @return {Number} an integer of the number of days\n */\nexport const daysFromTodayTo = (date) => {\n    const diff = toMoment(date).startOf('day').diff(toMoment().startOf('day'), 'days');\n    return (!date || diff < 0) ? '' : diff;\n};\n\n/**\n * return the number of months between two specified dates\n */\nexport const diffInMonths = (now, then) => then.diff(now, 'month');\n/**\n * return moment duration between two dates\n * @param  {Number} epoch start time\n * @param  {Number} epoch end time\n * @return {moment.duration} moment duration between start time and end time\n */\nexport const getDiffDuration = (start_time, end_time) =>\n    moment.duration(moment.unix(end_time).diff(moment.unix(start_time)));\n\n/**\n * return formatted duration `2 days 01:23:59`\n * @param  {moment.duration} moment duration object\n * @return {String} formatted display string\n */\nexport const formatDuration = (duration) => {\n    const d = Math.floor(duration.asDays()); // duration.days() does not include months/years\n    const h = duration.hours();\n    const m = duration.minutes();\n    const s = duration.seconds();\n    let formatted_str = moment(0).hour(h).minute(m).seconds(s).format('HH:mm:ss');\n    if (d > 0) {\n        formatted_str = `${d} ${d > 1 ? localize('days') : localize('day')} ${formatted_str}`;\n    }\n    return formatted_str;\n};\n\n/**\n * return true if the time_str is in \"HH:MM\" format, else return false\n * @param {String} time_str time\n */\nexport const isTimeValid = time_str => /^([0-9]|[0-1][0-9]|2[0-3]):([0-9]|[0-5][0-9])(:([0-9]|[0-5][0-9]))?$/.test(time_str);\n\n/**\n * return true if the time_str's hour is between 0 and 23, else return false\n * @param {String} time_str time\n */\nexport const isHourValid = time_str => isTimeValid(time_str) && /^([01][0-9]|2[0-3])$/.test(time_str.split(':')[0]);\n\n/**\n * return true if the time_str's minute is between 0 and 59, else return false\n * @param {String} time_str time\n */\nexport const isMinuteValid = time_str => isTimeValid(time_str) && /^[0-5][0-9]$/.test(time_str.split(':')[1]);\n\n/**\n * return true if the date is typeof string and a valid moment date, else return false\n * @param {String|moment} date date\n */\nexport const isDateValid = date => moment(date, 'DD MMM YYYY').isValid();\n\n/**\n * add the specified number of days to the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to add\n */\nexport const addDays = (date, num_of_days) => toMoment(date).clone().add(num_of_days, 'day');\n\n/**\n * add the specified number of months to the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to add\n */\nexport const addMonths = (date, num_of_months) => toMoment(date).clone().add(num_of_months, 'month');\n\n/**\n * add the specified number of years to the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to add\n */\nexport const addYears = (date, num_of_years) => toMoment(date).clone().add(num_of_years, 'year');\n\n/**\n * subtract the specified number of days from the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to subtract\n */\nexport const subDays = (date, num_of_days) => toMoment(date).clone().subtract(num_of_days, 'day');\n\n/**\n * subtract the specified number of months from the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to subtract\n */\nexport const subMonths = (date, num_of_months) => toMoment(date).clone().subtract(num_of_months, 'month');\n\n/**\n * subtract the specified number of years from the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to subtract\n */\nexport const subYears = (date, num_of_years) => toMoment(date).clone().subtract(num_of_years, 'year');\n\n/**\n * returns the minimum moment between the two passing parameters\n * @param {moment|string|epoch} first datetime parameter\n * @param {moment|string|epoch} second datetime parameter\n */\nexport const minDate = (date_1, date_2) => moment.min(toMoment(date_1), toMoment(date_2));\n\n/**\n * returns a new date\n * @param {moment|string|epoch} date date\n */\nexport const getStartOfMonth = (date) => toMoment(date).clone().startOf('month').format('YYYY-MM-DD');\n\n/**\n * returns miliseconds into UTC formatted string\n * @param {Number} miliseconds miliseconds\n * @param {String} str_format formatting using moment e.g - YYYY-MM-DD HH:mm\n */\nexport const formatMiliseconds = (miliseconds, str_format) => moment.utc(miliseconds).format(str_format);\n","export * from './date-time';\n","const isMobile = () => /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n\nmodule.exports = {\n    isMobile,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport ErrorComponent from './index';\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch = (error, info) => {\n        if (window.TrackJS) window.TrackJS.console.log(this.props.root_store);\n\n        this.setState({\n            hasError: true,\n            error,\n            info,\n        });\n    };\n\n    render = () => this.state.hasError ? (\n        <ErrorComponent should_show_refresh={true} />\n    ) : this.props.children;\n}\n\nErrorBoundary.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default connect((store) => (\n    {\n        root_store: store,\n    }\n))(ErrorBoundary);\n","import React     from 'react';\nimport PropTypes from 'prop-types';\n\nconst Loading = ({ id, is_slow_loading, status, theme }) => (\n    <div className='initial-loader'>\n        <div id={id} className={`initial-loader__barspinner barspinner barspinner-${ theme || 'light'}`}>\n            { Array.from(new Array(5)).map((x, inx) => (\n                <div key={inx} className={`initial-loader__barspinner--rect barspinner__rect barspinner__rect--${inx + 1} rect${inx + 1}`} />\n            ))}\n        </div>\n        { is_slow_loading && status.map((text, inx) => (\n            <h3 className='initial-loader__text' key={inx}>{text}</h3>\n        ))\n        }\n    </div>\n);\n\nLoading.propTypes = {\n    id: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    is_slow_loading: PropTypes.bool,\n    status         : PropTypes.array,\n    theme          : PropTypes.string,\n};\nexport default Loading;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { Scrollbars } from 'tt-react-custom-scrollbars';\nimport { connect }    from 'Stores/connect';\nimport routes         from 'Constants/routes';\n// import InstallPWA     from './install-pwa.jsx';\nimport Loading        from '../../../templates/app/components/loading.jsx';\n\nconst AppContents = ({\n    // addNotificationBar,\n    children,\n    is_app_blurred,\n    is_contract_mode,\n    is_dark_mode,\n    is_fully_blurred,\n    is_loading,\n    is_logged_in,\n    is_positions_drawer_on,\n    is_slow_loading,\n    location,\n    slow_loading_status,\n    // setPWAPromptEvent,\n}) => {\n    if (is_logged_in) {\n        // TODO: uncomment these after the issues with showing the prompt too often and in the app are fixed\n        // window.addEventListener('beforeinstallprompt', e => {\n        //     console.log('Going to show the installation prompt'); // eslint-disable-line no-console\n        //\n        //     e.preventDefault();\n        //\n        //     setPWAPromptEvent(e);\n        //     addNotificationBar({\n        //         content : <InstallPWA />,\n        //         autoShow: 10000, // show after 10 secs\n        //         msg_type: 'pwa',\n        //     });\n        // });\n    }\n\n    return (\n        <React.Fragment>\n            { is_loading && location.pathname === routes.trade &&\n                <Loading status={slow_loading_status} is_slow_loading={is_slow_loading} theme={is_dark_mode ? 'dark' : 'light'} />\n            }\n            <div\n                id='app_contents'\n                className={classNames('app-contents', {\n                    'app-contents--show-positions-drawer': is_positions_drawer_on,\n                    'app-contents--contract-mode'        : is_contract_mode,\n                    'app-contents--is-blurred'           : (is_fully_blurred || is_app_blurred),\n                })}\n            >\n                {/* Calculate height of user screen and offset height of header and footer */}\n                <Scrollbars\n                    autoHide\n                    style={{ height: 'calc(100vh - 83px)' }}\n                >\n                    {children}\n                </Scrollbars>\n            </div>\n        </React.Fragment>\n    );\n};\n\nAppContents.propTypes = {\n    addNotificationBar    : PropTypes.func,\n    children              : PropTypes.any,\n    is_app_blurred        : PropTypes.bool,\n    is_contract_mode      : PropTypes.bool,\n    is_dark_mode          : PropTypes.bool,\n    is_fully_blurred      : PropTypes.bool,\n    is_loading            : PropTypes.bool,\n    is_logged_in          : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    is_slow_loading       : PropTypes.bool,\n    pwa_prompt_event      : PropTypes.object,\n    setPWAPromptEvent     : PropTypes.func,\n    slow_loading_status   : PropTypes.array,\n};\n\nexport default withRouter(connect(\n    ({ client, modules, ui }) => ({\n        // addNotificationBar    : ui.addNotificationBar,\n        is_app_blurred        : ui.is_app_blurred,\n        is_contract_mode      : modules.smart_chart.is_contract_mode,\n        is_dark_mode          : ui.is_dark_mode_on,\n        is_fully_blurred      : ui.is_fully_blurred,\n        is_loading            : ui.is_loading,\n        is_logged_in          : client.is_logged_in,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        is_slow_loading       : ui.is_slow_loading,\n        pwa_prompt_event      : ui.pwa_prompt_event,\n        slow_loading_status   : ui.slow_loading_status,\n        // setPWAPromptEvent     : ui.setPWAPromptEvent,\n    })\n)(AppContents));\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { connect }     from 'Stores/connect';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst ServerTime = ({ server_time }) => {\n    const gmt_time = toGMTFormat(server_time);\n\n    return (\n        <div className='server-time'>{gmt_time}</div>\n    );\n};\n\nServerTime.propTypes = {\n    server_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        server_time: common.server_time,\n    })\n)(ServerTime);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from 'App/i18n';\nimport { connect }  from 'Stores/connect';\nimport { Popover }  from 'App/Components/Elements/Popover';\n\nconst NetworkStatus = ({ status }) => (\n    <div className='network-status__wrapper'>\n        <Popover\n            classNameBubble='network-status__tooltip'\n            alignment='top'\n            message={localize('Network status: {{status}}', { status: (status.tooltip || localize('Connecting to server')) })}\n        >\n            <div className={classNames(\n                'network-status__circle', {\n                    'network-status__circle--offline': (status.class === 'offline'),\n                    'network-status__circle--online' : (status.class === 'online'),\n                    'network-status__circle--blinker': (status.class === 'blinker'),\n                })}\n            />\n        </Popover>\n    </div>\n);\n\nNetworkStatus.propTypes = {\n    status: PropTypes.object,\n};\n\nexport { NetworkStatus };\n\nexport default connect(\n    ({ common }) => ({\n        status: common.network_status,\n    })\n)(NetworkStatus);\n","import classNames from 'classnames';\nimport React      from 'react';\nimport Icon       from 'Assets/icon.jsx';\n\nclass ToggleFullScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_full_screen: false,\n        };\n        this.fullscreen_map = {\n            event    : ['fullscreenchange',  'webkitfullscreenchange',  'mozfullscreenchange',  'MSFullscreenChange'],\n            element  : ['fullscreenElement', 'webkitFullscreenElement', 'mozFullScreenElement', 'msFullscreenElement'],\n            fnc_enter: ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'],\n            fnc_exit : ['exitFullscreen',    'webkitExitFullscreen',    'mozCancelFullScreen',  'msExitFullscreen'],\n        };\n\n    }\n\n    componentDidMount() {\n        this.fullscreen_map.event.forEach((event) => {\n            document.addEventListener(event, this.onFullScreen, false);\n        });\n    }\n\n    onFullScreen = () => {\n        const is_full_screen = this.fullscreen_map.element.some(el => document[el]);\n        this.setState({ is_full_screen });\n    };\n\n    toggleFullScreen = (e) => {\n        e.stopPropagation();\n\n        const to_exit   = this.state.is_full_screen;\n        const el        = to_exit ? document : document.documentElement;\n        const fncToCall = this.fullscreen_map[to_exit ? 'fnc_exit' : 'fnc_enter'].find(fnc => el[fnc]);\n\n        if (fncToCall) {\n            el[fncToCall]();\n        } else {\n            this.setState({ is_full_screen: false }); // fullscreen API is not enabled\n        }\n    }\n\n    render() {\n        const full_screen_icon_class = classNames('ic-fullscreen', 'footer__link', {\n            'ic-fullscreen--active': this.state.is_full_screen,\n        });\n        return (\n            <a\n                href='javascript:;'\n                className={full_screen_icon_class}\n                onClick={this.toggleFullScreen}\n            >\n                <Icon icon='IconMaximize' className='footer__icon' />\n            </a>\n        );\n    }\n}\n\nexport { ToggleFullScreen };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Icon       from 'Assets/icon.jsx';\n\nconst TogglePositions = ({\n    positions_count,\n    is_positions_drawer_on,\n    togglePositionsDrawer,\n}) => {\n    const toggle_positions_class = classNames(\n        'ic-positions',\n        'footer__link', {\n            'ic-positions--active'   : is_positions_drawer_on,\n            'ic-positions--has-count': (positions_count > 0),\n        }\n    );\n    return (\n        <a\n            href='javascript:;'\n            className={toggle_positions_class}\n            onClick={togglePositionsDrawer}\n            data-count={positions_count}\n        >\n            <Icon icon='IconPositions' className='footer__icon ic-positions__icon' />\n        </a>\n    );\n};\n\nTogglePositions.propTypes = {\n    is_positions_drawer_on: PropTypes.bool,\n    positions_count       : PropTypes.number,\n    togglePositionsDrawer : PropTypes.func,\n};\n\nexport { TogglePositions };\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { Modal }    from 'App/Components/Elements/modal.jsx';\nimport UILoader     from 'App/Components/Elements/ui-loader.jsx';\nimport { localize } from 'App/i18n';\nimport Icon         from 'Assets/icon.jsx';\nimport 'Sass/app/modules/settings.scss';\n\nconst modal_content = [\n    {\n        icon : 'IconTheme',\n        label: localize('Themes'),\n        value: React.lazy(() => import(/* webpackChunkName: \"settings-theme\", webpackPrefetch: true */'App/Containers/SettingsModal/settings-theme.jsx')),\n    }, {\n        icon : 'IconLanguage',\n        label: localize('Language'),\n        value: React.lazy(() => import(/* webpackChunkName: \"settings-language\", webpackPrefetch: true */'App/Containers/SettingsModal/settings-language.jsx')),\n    }, {\n        icon : 'IconCharts',\n        label: localize('Charts'),\n        value: React.lazy(() => import(/* webpackChunkName: \"settings-chart\", webpackPrefetch: true */'App/Containers/SettingsModal/settings-chart.jsx')), // uncomment below lines to bring back purchase lock and purchase confirmation\n        // }, {\n        //     icon : IconPurchase,\n        //     label: localize('Purchase'),\n        //     value: PurchaseSettings,\n    },\n];\n\nconst ToggleSettings = ({\n    hideFullBlur,\n    is_settings_visible,\n    showFullBlur,\n    toggleSettings,\n}) => {\n    const toggle_settings_class = classNames('ic-settings', 'footer__link', {\n        'ic-settings--active': is_settings_visible,\n    });\n    return (\n        <React.Fragment>\n            <a\n                href='javascript:;'\n                onClick={toggleSettings}\n                className={toggle_settings_class}\n            >\n                <Icon icon='IconSettings' className='footer__icon ic-settings__icon' />\n            </a>\n            <React.Suspense fallback={<UILoader />}>\n                <Modal\n                    modal_content={modal_content}\n                    hideFullBlur={hideFullBlur}\n                    is_open={is_settings_visible}\n                    showFullBlur={showFullBlur}\n                    title={localize('Platform settings')}\n                    toggleModal={toggleSettings}\n                />\n            </React.Suspense>\n        </React.Fragment>\n    );\n};\n\nToggleSettings.propTypes = {\n    hideFullBlur       : PropTypes.func,\n    is_settings_visible: PropTypes.bool,\n    showFullBlur       : PropTypes.func,\n    toggleSettings     : PropTypes.func,\n};\n\nexport { ToggleSettings };\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport { withRouter }                 from 'react-router';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport routes                         from 'Constants/routes';\nimport { connect }                    from 'Stores/connect';\nimport ServerTime                     from '../server-time.jsx';\nimport {\n    NetworkStatus,\n    ToggleFullScreen,\n    TogglePositions,\n    ToggleSettings }                  from '../../Components/Layout/Footer';\n\nconst Footer = ({\n    active_positions,\n    hideFullBlur,\n    is_fully_blurred,\n    is_loading,\n    is_logged_in,\n    is_positions_drawer_on,\n    is_route_blurred,\n    is_settings_modal_on,\n    location,\n    showFullBlur,\n    show_positions_toggle,\n    togglePositionsDrawer,\n    toggleSettingsModal,\n}) => (\n    <React.Fragment>\n        { (!is_loading || location.pathname !== routes.trade) &&\n            <footer className={classNames('footer', {\n                'footer--is-blurred': (is_fully_blurred || is_route_blurred),\n            })}\n            >\n                <div className='footer__links footer__links--left'>\n                    {\n                        (is_logged_in && show_positions_toggle) &&\n                        <TogglePositions\n                            is_positions_drawer_on={is_positions_drawer_on}\n                            togglePositionsDrawer={togglePositionsDrawer}\n                            positions_count={active_positions.length || 0}\n                        />\n                    }\n                </div>\n                <NetworkStatus />\n                <ServerTime />\n                <div className='footer__links'>\n                    <ToggleSettings\n                        is_settings_visible={is_settings_modal_on}\n                        toggleSettings={toggleSettingsModal}\n                        showFullBlur={showFullBlur}\n                        hideFullBlur={hideFullBlur}\n                    />\n                    <ToggleFullScreen />\n                </div>\n            </footer>\n        }\n    </React.Fragment>\n);\n\nFooter.propTypes = {\n    active_positions      : MobxPropTypes.arrayOrObservableArray,\n    is_fully_blurred      : PropTypes.bool,\n    is_logged_in          : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    is_route_blurred      : PropTypes.bool,\n    is_settings_modal_on  : PropTypes.bool,\n    location              : PropTypes.object,\n    show_positions_toggle : PropTypes.bool,\n    togglePositionsDrawer : PropTypes.func,\n    toggleSettingsModal   : PropTypes.func,\n};\n\nexport default withRouter(connect(\n    ({ client, modules, ui }) => ({\n        active_positions      : modules.portfolio.active_positions,\n        hideFullBlur          : ui.hideFullBlur,\n        is_fully_blurred      : ui.is_fully_blurred,\n        is_route_blurred      : ui.is_route_blurred,\n        is_logged_in          : client.is_logged_in,\n        is_loading            : ui.is_loading,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        is_settings_modal_on  : ui.is_settings_modal_on,\n        showFullBlur          : ui.showFullBlur,\n        show_positions_toggle : ui.show_positions_toggle,\n        togglePositionsDrawer : ui.togglePositionsDrawer,\n        toggleSettingsModal   : ui.toggleSettingsModal,\n    })\n)(Footer));\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { BinaryLink } from '../../Routes';\n\nconst MenuLinks = ({ is_logged_in, items }) => (\n    <React.Fragment>\n        {!!items.length &&\n        <div className='header__menu-links'>\n            {\n                items.map((item, idx) => (\n                    (item.login_only && (item.login_only !== is_logged_in)) ?\n                        null\n                        :\n                        <BinaryLink key={idx} to={item.link_to} className='header__menu-link' active_class='header__menu-link--active'>\n                            <React.Fragment>\n                                {item.text &&\n                                    <span title={item.text} className='header__menu-link-text'>{item.icon}{item.text}{item.logo}</span>\n                                }\n                                {item.image &&\n                                    <span className='header__menu-link-text'>{item.image}{item.logo}</span>\n                                }\n                            </React.Fragment>\n                        </BinaryLink>\n                ))\n            }\n        </div>\n        }\n    </React.Fragment>\n);\n\nMenuLinks.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        icon: PropTypes.shape({\n            className: PropTypes.string,\n        }),\n        is_logged_in: PropTypes.bool,\n        link_to     : PropTypes.string,\n        text        : PropTypes.string,\n    })),\n};\n\nexport { MenuLinks };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from 'App/i18n';\nimport Button              from '../../Form/button.jsx';\n\nconst LoginButton = ({ className }) => (\n    <Button\n        className={classNames(className, 'btn--secondary btn--secondary--orange')}\n        has_effect\n        text={localize('Log in')}\n        onClick={redirectToLogin}\n    />\n);\n\nLoginButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { LoginButton };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { localize }        from 'App/i18n';\nimport { urlFor }          from '_common/url';\nimport Button              from '../../Form/button.jsx';\n\nconst SignupButton = ({ className }) => (\n    <Button\n        className={classNames(className, 'btn--primary btn--primary--orange')}\n        has_effect\n        text={localize('Sign up')}\n        onClick={() => { window.open(urlFor('new-account', undefined, undefined, true)); }}\n    />\n);\n\nSignupButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { SignupButton };\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from 'App/i18n';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst UpgradeButton = ({ className, onClick }) => (\n    <Button\n        id='acc-balance-btn'\n        className={classNames(className, 'btn--primary btn--primary--orange')}\n        has_effect\n        text={localize('Upgrade')}\n        onClick={onClick}\n    />\n);\n\nUpgradeButton.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { UpgradeButton };\n","import * as PropTypes       from 'prop-types';\nimport React, { Component } from 'react';\nimport { formatMoney }      from '_common/base/currency_base';\nimport { urlFor }           from '_common/url';\nimport Button               from 'App/Components/Form/button.jsx';\nimport Lazy                 from 'App/Containers/Lazy';\nimport { localize }         from 'App/i18n';\nimport { LoginButton }      from './login-button.jsx';\nimport { SignupButton }     from './signup-button.jsx';\nimport { UpgradeButton }    from './upgrade-button.jsx';\nimport 'Sass/app/_common/components/account-switcher.scss';\n\nconst should_show_deposit = false; // TODO remove this and all commented props when Deposit is ready\n\nexport class AccountActions extends Component {\n    shouldComponentUpdate(nextProps) {\n        return (\n            // nextProps.active_cashier_tab !== this.props.active_cashier_tab ||\n            nextProps.balance !== this.props.balance ||\n            nextProps.can_upgrade !== this.props.can_upgrade ||\n            nextProps.can_upgrade_to !== this.props.can_upgrade_to ||\n            nextProps.currency !== this.props.currency ||\n            nextProps.is_acc_switcher_on !== this.props.is_acc_switcher_on ||\n            // nextProps.is_cashier_modal_on !== this.props.is_cashier_modal_on ||\n            nextProps.is_logged_in !== this.props.is_logged_in ||\n            nextProps.is_virtual !== this.props.is_virtual ||\n            nextProps.loginid !== this.props.loginid\n        );\n    }\n\n    render() {\n        const {\n            // active_cashier_tab,\n            balance,\n            can_upgrade,\n            can_upgrade_to,\n            currency,\n            // hideFullBlur,\n            is_acc_switcher_on,\n            // is_cashier_modal_on,\n            is_logged_in,\n            is_virtual,\n            loginid,\n            onClickUpgrade,\n            toggleAccountsDialog,\n            // toggleCashierModal,\n            // showFullBlur,\n        } = this.props;\n        if (is_logged_in) {\n            return (\n                <React.Fragment>\n                    <Lazy\n                        ctor={() => import(/* webpackChunkName: \"account-info\", webpackPreload: true */'App/Components/Layout/Header/account-info.jsx')}\n                        should_load={true}\n                        has_progress={false}\n                        balance={formatMoney(currency, balance, true)}\n                        is_upgrade_enabled={can_upgrade}\n                        is_virtual={is_virtual}\n                        onClickUpgrade={onClickUpgrade}\n                        currency={currency}\n                        loginid={loginid}\n                        is_dialog_on={is_acc_switcher_on}\n                        toggleDialog={toggleAccountsDialog}\n                    />\n                    {!!(\n                        can_upgrade_to && is_virtual\n                    ) && <UpgradeButton\n                        className='acc-info__button'\n                        onClick={() => {\n                            window.open(urlFor('user/accounts', undefined, undefined, true));\n                        }}\n                    />}\n                    { should_show_deposit &&\n                    <Lazy\n                        ctor={() => import(/* webpackChunkName: \"toggle-cashier\", webpackPrefetch: true */'App/Components/Layout/Header/toggle-cashier.jsx')}\n                        should_load={!is_virtual} // remove false when cashier is ready.\n                        // active_tab={active_cashier_tab}\n                        className='acc-info__button'\n                        // toggleCashier={toggleCashierModal}\n                        // is_cashier_visible={is_cashier_modal_on}\n                        // showFullBlur={showFullBlur}\n                        // hideFullBlur={hideFullBlur}\n                    />\n                    }\n                    {!(\n                        is_virtual\n                    ) && // TODO: remove this when cashier pop up is ready\n                    <Button\n                        className='btn--primary btn--primary--orange acc-info__button'\n                        has_effect\n                        text={localize('Deposit')}\n                        onClick={() => {\n                            window.open(urlFor('cashier', undefined, undefined, true),\n                                '_blank',\n                                'noopener',\n                                'noreferrer',\n                            );\n                        }}\n                    />}\n                </React.Fragment>\n            );\n        }\n        return (\n            <React.Fragment>\n                <LoginButton className='acc-info__button' />\n                <SignupButton className='acc-info__button' />\n            </React.Fragment>\n        );\n    }\n}\n\nAccountActions.propTypes = {\n    active_cashier_tab  : PropTypes.any,\n    balance             : PropTypes.any,\n    can_upgrade         : PropTypes.any,\n    can_upgrade_to      : PropTypes.any,\n    currency            : PropTypes.any,\n    hideFullBlur        : PropTypes.any,\n    is_acc_switcher_on  : PropTypes.any,\n    is_cashier_modal_on : PropTypes.any,\n    is_logged_in        : PropTypes.any,\n    is_virtual          : PropTypes.any,\n    loginid             : PropTypes.any,\n    onClickUpgrade      : PropTypes.any,\n    showFullBlur        : PropTypes.any,\n    toggleAccountsDialog: PropTypes.any,\n    toggleCashierModal  : PropTypes.any,\n};\n","import React           from 'react';\nimport { localize }    from 'App/i18n';\nimport Icon            from 'Assets/icon.jsx';\nimport { routes }      from 'Constants/index';\n\nconst header_links = [\n    {\n        logo   : <div className='header__logo'>{localize('BETA')}</div>,\n        image  : <Icon icon='IconDeriv' className='header__icon' />,\n        link_to: routes.trade,\n    },\n    {\n        icon      : <Icon icon='IconReports' className='header__icon' />,\n        text      : localize('Reports'),\n        link_to   : routes.reports,\n        login_only: true,\n    },\n];\n\nexport default header_links;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport {\n    AccountActions,\n    MenuLinks,\n    // ToggleCashier,\n}                     from 'App/Components/Layout/Header';\nimport header_links   from 'App/Constants/header-links';\nimport Lazy           from 'App/Containers/Lazy';\nimport routes         from 'Constants/routes';\nimport { connect }    from 'Stores/connect';\n\nconst Header = ({\n    // active_cashier_tab,\n    balance,\n    can_upgrade,\n    can_upgrade_to,\n    currency,\n    // hideFullBlur,\n    is_acc_switcher_on,\n    // is_cashier_modal_on,\n    is_fully_blurred,\n    is_loading,\n    is_logged_in,\n    is_mobile,\n    is_route_blurred,\n    is_virtual,\n    location,\n    loginid,\n    onClickUpgrade,\n    // showFullBlur,\n    toggleAccountsDialog,\n    // toggleCashierModal,\n}) => (\n    <React.Fragment>\n        {(!is_loading || location.pathname !== routes.trade) &&\n            <header className={classNames('header', {\n                'header--is-blurred': (is_fully_blurred || is_route_blurred),\n            })}\n            >\n                <div className='header__menu-items'>\n                    <div className='header__menu-left'>\n                        <Lazy\n                            has_progress={false}\n                            ctor={() => import(/* webpackChunkName: \"toggle-menu-drawer\", webpackPreload: true */'App/Components/Layout/Header/toggle-menu-drawer.jsx')}\n                            should_load={is_mobile}\n                        />\n                        <MenuLinks\n                            is_logged_in={is_logged_in}\n                            items={header_links}\n                        />\n                    </div>\n                    <div className='header__menu-right'>\n                        <div className='acc-info__container'>\n                            <AccountActions\n                                // active_cashier_tab={active_cashier_tab}\n                                balance={balance}\n                                can_upgrade_to={can_upgrade_to}\n                                currency={currency}\n                                can_upgrade={can_upgrade}\n                                // hideFullBlur={hideFullBlur}\n                                is_acc_switcher_on={is_acc_switcher_on}\n                                // is_cashier_modal_on={is_cashier_modal_on}\n                                is_logged_in={is_logged_in}\n                                is_virtual={is_virtual}\n                                loginid={loginid}\n                                onClickUpgrade={onClickUpgrade}\n                                toggleAccountsDialog={toggleAccountsDialog}\n                                // toggleCashierModal={toggleCashierModal}\n                                // showFullBlur={showFullBlur}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </header>\n        }\n    </React.Fragment>\n);\n\nHeader.propTypes = {\n    // active_cashier_tab  : PropTypes.string,\n    balance             : PropTypes.string,\n    can_upgrade         : PropTypes.bool,\n    can_upgrade_to      : PropTypes.string,\n    currency            : PropTypes.string,\n    // hideFullBlur        : PropTypes.func,\n    is_acc_switcher_on  : PropTypes.bool,\n    // is_cashier_modal_on : PropTypes.bool,\n    is_dark_mode        : PropTypes.bool,\n    is_fully_blurred    : PropTypes.bool,\n    is_loading          : PropTypes.bool,\n    is_logged_in        : PropTypes.bool,\n    is_mobile           : PropTypes.bool,\n    is_route_blurred    : PropTypes.bool,\n    is_virtual          : PropTypes.bool,\n    location            : PropTypes.object,\n    loginid             : PropTypes.string,\n    onClickUpgrade      : PropTypes.func,\n    // showFullBlur        : PropTypes.func,\n    toggleAccountsDialog: PropTypes.func,\n    // toggleCashierModal  : PropTypes.func,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <MenuLinks /> from being blocked\nexport default withRouter(connect(\n    ({ client, ui }) => ({\n        // active_cashier_tab  : ui.active_cashier_tab,\n        balance             : client.balance,\n        can_upgrade         : client.can_upgrade,\n        can_upgrade_to      : client.can_upgrade_to,\n        currency            : client.currency,\n        // hideFullBlur        : ui.hideFullBlur,\n        is_loading          : ui.is_loading,\n        is_logged_in        : client.is_logged_in,\n        is_virtual          : client.is_virtual,\n        loginid             : client.loginid,\n        is_acc_switcher_on  : ui.is_accounts_switcher_on,\n        // is_cashier_modal_on : ui.is_cashier_modal_on,\n        is_dark_mode        : ui.is_dark_mode_on,\n        is_fully_blurred    : ui.is_fully_blurred,\n        is_route_blurred    : ui.is_route_blurred,\n        is_mobile           : ui.is_mobile,\n        // showFullBlur        : ui.showFullBlur,\n        toggleAccountsDialog: ui.toggleAccountsDialog,\n        // toggleCashierModal  : ui.toggleCashierModal,\n    })\n)(Header));\n","import React       from 'react';\nimport { connect } from 'Stores/connect';\nimport { urlFor }  from '_common/url';\nimport Lazy        from '../Lazy';\nimport 'Sass/app/modules/modals.scss';\n\n// const AccountSignupModal       = React.lazy(() => import(/* webpackChunkName: \"AccountSignupModal\" */'./Containers/AccountSignupModal'));\n\nconst Modals = ({\n    clearPurchaseInfo,\n    is_initial_idle,\n    is_denial_of_service_modal_visible,\n    is_unsupported_contract_modal_visible,\n    is_market_unavailable_visible,\n    is_services_error_visible,\n    toggleUnsupportedContractModal,\n    setHasOnlyForwardingContracts,\n    resetPreviousSymbol,\n    toggleServicesErrorModal,\n    resetPurchase,\n    services_error,\n    switchAccount,\n    virtual_account_loginid,\n}) => {\n    const denialOfServiceOnCancel = () => {\n        window.open(urlFor('trading', undefined, undefined, true));\n    };\n\n    const denialOfServiceOnConfirm = async () => {\n        await switchAccount(virtual_account_loginid);\n    };\n\n    const marketUnavailableOnConfirm = () => {\n        setHasOnlyForwardingContracts(false);\n        resetPreviousSymbol();\n    };\n\n    const marketUnavailableOnCancel = () => window.open(urlFor('trading', undefined, undefined, true)) &&\n        setHasOnlyForwardingContracts(false);\n\n    const servicesErrorModalOnConfirm = () => {\n        toggleServicesErrorModal(false);\n        if (services_error.type === 'buy') {\n            clearPurchaseInfo();\n            resetPurchase();\n        }\n    };\n\n    const unsupportedContractOnConfirm = () => {\n        window.open(urlFor('user/portfoliows', undefined, undefined, true), '_blank');\n        unsupportedContractOnClose();\n    };\n\n    const unsupportedContractOnClose = () => {\n        toggleUnsupportedContractModal(false);\n    };\n\n    return (\n        <React.Fragment>\n            <Lazy\n                ctor={() => import(/* webpackChunkName: \"UnsupportedContractModal\" */'App/Components/Elements/Modals/UnsupportedContractModal')}\n                should_load={is_initial_idle && is_unsupported_contract_modal_visible}\n                onConfirm={unsupportedContractOnConfirm}\n                onClose={unsupportedContractOnClose}\n                is_visible={is_unsupported_contract_modal_visible}\n            />\n            <Lazy\n                ctor={() => import(/* webpackChunkName: \"DenialOfServiceModal\" */'App/Components/Elements/Modals/DenialOfServiceModal')}\n                should_load={is_initial_idle && is_denial_of_service_modal_visible}\n                onConfirm={denialOfServiceOnConfirm}\n                onCancel={denialOfServiceOnCancel}\n                is_visible={is_denial_of_service_modal_visible}\n            />\n            <Lazy\n                ctor={() => import(/* webpackChunkName: \"MarketUnavailableModal\" */'App/Components/Elements/Modals/MarketUnavailableModal')}\n                should_load={is_initial_idle && is_market_unavailable_visible}\n                onConfirm={marketUnavailableOnConfirm}\n                onCancel={marketUnavailableOnCancel}\n                is_visible={is_market_unavailable_visible}\n            />\n            <Lazy\n                ctor={() => import(/* webpackChunkName: \"ServicesErrorModal\" */'App/Components/Elements/Modals/ServicesErrorModal')}\n                should_load={is_initial_idle && is_services_error_visible}\n                onConfirm={servicesErrorModalOnConfirm}\n                services_error={services_error}\n                is_visible={is_services_error_visible}\n            />\n            {/* TODO: Enable AccountSignupModal once its UI component is ready */}\n            {/* <AccountSignupModal /> */}\n        </React.Fragment>\n    );\n};\n\nexport default connect(({ ui, client, modules, common }) => ({\n    is_initial_idle                      : !ui.is_loading,\n    is_denial_of_service_modal_visible   : !client.is_client_allowed_to_visit,\n    is_market_unavailable_visible        : ui.has_only_forward_starting_contracts,\n    is_services_error_visible            : ui.is_services_error_visible,\n    is_unsupported_contract_modal_visible: ui.is_unsupported_contract_modal_visible,\n    proposal_info                        : modules.trade.proposal_info,\n    purchase_info                        : modules.trade.purchase_info,\n    resetPreviousSymbol                  : modules.trade.resetPreviousSymbol,\n    clearPurchaseInfo                    : modules.trade.clearPurchaseInfo,\n    resetPurchase                        : modules.trade.requestProposal,\n    services_error                       : common.services_error,\n    switchAccount                        : client.switchAccount,\n    setHasOnlyForwardingContracts        : ui.setHasOnlyForwardingContracts,\n    toggleServicesErrorModal             : ui.toggleServicesErrorModal,\n    virtual_account_loginid              : client.virtual_account_loginid,\n}))(Modals);\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { withRouter }                 from 'react-router';\nimport BinaryRoutes                   from 'App/Components/Routes';\nimport Lazy                           from 'App/Containers/Lazy';\nimport { connect }                    from 'Stores/connect';\n\nconst Routes = (props) => {\n    if (props.has_error) {\n        return (\n            <Lazy\n                ctor={() => import(/* webpackChunkName: \"error-component\" */'App/Components/Elements/Errors')}\n                should_load={props.has_error}\n                has_progress={true}\n                {...props.error}\n            />\n        );\n    }\n\n    return <BinaryRoutes is_logged_in={props.is_logged_in} />;\n};\n\nRoutes.propTypes = {\n    error       : MobxPropTypes.objectOrObservableObject,\n    has_error   : PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <BinaryRoutes /> from being blocked\nexport default withRouter(connect(\n    ({ client, common }) => ({\n        is_logged_in: client.is_logged_in,\n        error       : common.error,\n        has_error   : common.has_error,\n    })\n)(Routes));\n","import { action }              from 'mobx';\nimport NetworkMonitorBase      from '_common/base/network_monitor_base'; // eslint-disable-line import/order\nimport { BinarySocketGeneral } from './index';\n\nlet common_store;\n\nconst NetworkMonitor = (() => {\n    const init = (store) => {\n        NetworkMonitorBase.init(BinarySocketGeneral.init(store), updateStore);\n        common_store = store.common;\n    };\n\n    const updateStore = action((status, is_online) => {\n        if (common_store) {\n            common_store.setNetworkStatus(status, is_online);\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default NetworkMonitor;\n","import { action }   from 'mobx';\nimport { localize } from 'App/i18n';\n\nlet common_store;\n\nconst OutdatedBrowser = (() => {\n    const init = (store) => {\n        common_store = store.common;\n\n        const src = '//browser-update.org/update.min.js';\n        if (document.querySelector(`script[src*=\"${src}\"]`)) return;\n        window.$buoop = {\n            vs       : { i: 11, f: -4, o: -4, s: 9, c: -4 },\n            api      : 4,\n            url      : 'https://whatbrowser.org/',\n            noclose  : true, // Do not show the 'ignore' button to close the notification\n            reminder : 0, // show all the time\n            onshow   : updateStore,\n            nomessage: true,\n            insecure : true,\n        };\n        if (document.body) {\n            const script = document.createElement('script');\n            script.setAttribute('src', src);\n            document.body.appendChild(script);\n        }\n    };\n\n    const updateStore = action('showError', () => {\n        if (common_store) { // TODO: i18n_issue\n            common_store.showError({\n                message: localize('Your web browser is out of date and may affect your trading experience. Please {{opening_tag}}update your browser{{closing_tag}}.', {\n                    opening_tag  : '<a href=\"http://outdatedbrowser.com\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"link\">',\n                    closing_tag  : '</a>',\n                    interpolation: { escapeValue: false },\n                }),\n                has_html: true,\n            });\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default OutdatedBrowser;\n","import React            from 'react';\nimport { formatDate }   from 'Utils/Date';\nimport { WS }           from 'Services';\nimport { getRiskAssessment,\n    isAccountOfType,\n    shouldAcceptTnc,\n    shouldCompleteTax } from '_common/base/client_base';\nimport { localize }     from 'App/i18n';\nimport {\n    LocalStore,\n    State }             from '_common/storage';\nimport { urlFor }       from '_common/url';\nimport Localize         from '../../App/Components/Elements/localize.jsx';\n\n// TODO: Update links to app_2 links when components are done.\n/* eslint-disable react/jsx-no-target-blank */\nconst client_notifications = {\n    currency: {\n        header : localize('Set Currency'),\n        message: (\n            <Localize\n                i18n_default_text='Please set the <0>currency</0> of your account to enable trading.'\n                components={[<a key={0} className='link link--white' target='_blank' href={urlFor('user/set-currency', undefined, undefined, true)} />]}\n            />\n        ),\n        type: 'danger',\n    },\n    self_exclusion: (excluded_until) => ({\n        header : localize('Self-exclusion Detected'),\n        message: (\n            <Localize\n                i18n_default_text='You have opted to be excluded from Binary.com until {{exclusion_end}}. Please <0>contact us</0> for assistance.'\n                values={{ exclusion_end: formatDate(excluded_until, 'DD/MM/YYYY'), interpolation: { escapeValue: false } }}\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('contact', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    }),\n    authenticate: {\n        header : localize('Account Authentication'),\n        message: (\n            <Localize\n                i18n_default_text='<0>Authenticate your account</0> now to take full advantage of all payment methods available.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/authenticate', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'info',\n    },\n    cashier_locked: {\n        header : localize('Cashier Disabled'),\n        message: localize('Deposits and withdrawals have been disabled on your account. Please check your email for more details.'),\n        type   : 'warning',\n    },\n    withdrawal_locked: {\n        header : localize('Withdrawal Disabled'),\n        message: localize('Withdrawals have been disabled on your account. Please check your email for more details.'),\n        type   : 'warning',\n    },\n    mt5_withdrawal_locked: {\n        header : localize('MT5 Withdrawal Disabled'),\n        message: localize('MT5 withdrawals have been disabled on your account. Please check your email for more details.'),\n        type   : 'warning',\n    },\n    document_needs_action: {\n        header : localize('Authentication Failed'),\n        message: (\n            <Localize\n                i18n_default_text='<0>Your Proof of Identity or Proof of Address</0> did not meet our requirements. Please check your email for further instructions.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/authenticate', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'warning',\n    },\n    unwelcome: {\n        header : localize('Trading and Deposits Disabled'),\n        message: (\n            <Localize\n                i18n_default_text='Trading and deposits have been disabled on your account. Kindly contact <0>customer support</0> for assistance.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('contact', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n    mf_retail: {\n        header : localize('Binary Options Trading Disabled'),\n        message: (\n            <Localize\n                i18n_default_text='Binary Options Trading has been disabled on your account. Kindly contact <0>customer support</0> for assistance.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('contact', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n    financial_limit: {\n        header : localize('Remove Deposit Limits'),\n        message: (\n            <Localize\n                i18n_default_text='Please set your <0>30-day turnover limit</0> to remove deposit limits.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/security/self_exclusionws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'warning',\n    },\n    risk: {\n        header : localize('Withdrawal and Trading Limits'),\n        message: (\n            <Localize\n                i18n_default_text='Please complete the <0>Financial Assessment form</0> to lift your withdrawal and trading limits.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/settings/assessmentws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'info',\n    },\n    tax: {\n        header : localize('Complete your personal details'),\n        message: (\n            <Localize\n                i18n_default_text='Please complete your <0>Personal Details</0> before you proceed.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/settings/detailsws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n    tnc: {\n        header : localize('Terms & Conditions Updated'),\n        message: (\n            <Localize\n                i18n_default_text='Please <0>accept the updated Terms and Conditions</0> to enable deposit and trading.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/tnc_approvalws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n    required_fields: {\n        header : localize('Complete your personal details'),\n        message: (\n            <Localize\n                i18n_default_text='Please complete your <0>Personal Details</0> before you proceed.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/settings/detailsws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n};\n\nconst hasMissingRequiredField = (response, client) => {\n    if (!response.get_settings) return false;\n\n    const { landing_company_shortcode } = client;\n    const is_svg = (landing_company_shortcode === 'svg' || landing_company_shortcode === 'costarica');\n\n    let required_fields;\n    if (is_svg) {\n        required_fields = getSVGRequiredFields();\n    } else {\n        required_fields = getRequiredFields();\n    }\n\n    const get_settings = response.get_settings;\n    return required_fields.some(field => !get_settings[field]);\n\n    function getSVGRequiredFields() {\n        const necessary_withdrawal_fields = State.getResponse('landing_company.financial_company.requirements.withdrawal');\n        const necessary_signup_fields     = State.getResponse('landing_company.financial_company.requirements.signup')\n            .map(field => (field === 'residence' ? 'country' : field));\n\n        return [...necessary_withdrawal_fields, ...necessary_signup_fields];\n    }\n\n    function getRequiredFields() {\n        if (!isAccountOfType('financial')) return [];\n        const { residence } = client;\n\n        const required_settings_fields = [\n            'account_opening_reason',\n            'address_line_1',\n            'address_city',\n            'phone',\n            'tax_identification_number',\n            'tax_residence'];\n        const address_postcode_is_required = (residence === 'gb' || landing_company_shortcode === 'iom');\n        if (address_postcode_is_required) required_settings_fields.push('address_postcode');\n\n        return [...required_settings_fields];\n    }\n};\n\nconst checkAccountStatus = (response, client, addNotification, loginid) => {\n    if (!response.get_account_status) return;\n    if (loginid !== LocalStore.get('active_loginid')) return;\n\n    const { prompt_client_to_authenticate, status } = response.get_account_status;\n\n    const {\n        document_under_review,\n        cashier_locked,\n        withdrawal_locked,\n        mt5_withdrawal_locked,\n        document_needs_action,\n        unwelcome,\n        ukrts_max_turnover_limit_not_set,\n        professional,\n    } = getStatusValidations(status);\n    const is_mf_retail = client.landing_company_shortcode === 'maltainvest' && !professional;\n\n    if (cashier_locked)        addNotification(client_notifications.cashier_locked);\n    if (withdrawal_locked)     addNotification(client_notifications.withdrawal_locked);\n    if (mt5_withdrawal_locked) addNotification(client_notifications.mt5_withdrawal_locked);\n    if (document_needs_action) addNotification(client_notifications.document_needs_action);\n    if (unwelcome)             addNotification(client_notifications.unwelcome);\n    if (is_mf_retail)          addNotification(client_notifications.mf_retail);\n    if (ukrts_max_turnover_limit_not_set) {\n        addNotification(client_notifications.financial_limit);\n    }\n    if (getRiskAssessment()) addNotification(client_notifications.risk);\n    if (shouldCompleteTax()) addNotification(client_notifications.tax);\n\n    if ((+prompt_client_to_authenticate) && !(document_under_review || document_needs_action)) {\n        addNotification(client_notifications.authenticate);\n    }\n\n    function getStatusValidations(status_arr) {\n        return status_arr.reduce((validations, account_status) => {\n            validations[account_status] = true;\n            return validations;\n        }, {});\n    }\n};\n\nexport const handleClientNotifications = (client, addNotification, loginid) => {\n    const { currency, excluded_until } = client;\n    if (!currency)         addNotification(client_notifications.currency);\n    if (excluded_until)    addNotification(client_notifications.self_exclusion(excluded_until));\n\n    WS.getAccountStatus().then((response) => checkAccountStatus(response, client, addNotification, loginid));\n\n    WS.sendRequest({ get_settings: 1 }, { forced: true }).then((response) => {\n        if (loginid !== LocalStore.get('active_loginid')) return;\n\n        if (shouldAcceptTnc()) addNotification(client_notifications.tnc);\n\n        if (hasMissingRequiredField(response, client)) {\n            addNotification(client_notifications.required_fields);\n        }\n    });\n};\n","import Client                    from '_common/base/client_base';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport { getElementById }        from '_common/common_functions';\nimport { localize }              from 'App/i18n';\nimport { compareBigUnsignedInt } from '_common/string_util';\nimport { cloneObject }           from '_common/utility';\n\n// ------------------------------\n// ----- Validation Methods -----\n// ------------------------------\nconst validRequired     = (value/* , options, field */) => {\n    if (value === undefined || value === null) {\n        return false;\n    }\n\n    const str = String(value).replace(/\\s/g, '');\n    return str.length > 0;\n};\nconst validEmail        = value => /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,63}$/.test(value);\nconst validPassword     = value => /(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]+/.test(value);\nconst validLetterSymbol = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><,|\\d]+/.test(value);\nconst validGeneral      = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><|]+/.test(value);\nconst validAddress      = value => !/[`~!$%^&*_=+[}{\\]\\\\\"?><|]+/.test(value);\nconst validPostCode     = value => /^[a-zA-Z\\d-\\s]*$/.test(value);\nconst validPhone        = value => /^\\+?[0-9\\s]*$/.test(value);\nconst validRegular      = (value, options) => options.regex.test(value);\nconst validEmailToken   = value => value.trim().length === 8;\nconst validTaxID        = value => /^[a-zA-Z0-9]*[\\w-]*$/.test(value);\nconst validBarrier      = value => /^[+-]?\\d+\\.?\\d*$/.test(value);\n\nconst validCompare  = (value, options) => value === getElementById(options.to.substr(1)).value;\nconst validNotEqual = (value, options) => value !== getElementById(options.to.substr(1)).value;\nconst validMin      = (value, options) => (options.min ? value.length >= options.min : true);\nconst validLength   = (value, options) => (\n    (options.min ? value.length >= options.min : true) &&\n    (options.max ? value.length <= options.max : true)\n);\n\nconst validNumber = (value, opts) => {\n    const options = cloneObject(opts);\n    let message = null;\n    if (options.allow_empty && value.length === 0) {\n        return true;\n    }\n\n    let is_ok = true;\n    if ('min' in options && typeof options.min === 'function') {\n        options.min = options.min();\n    }\n    if ('max' in options && typeof options.max === 'function') {\n        options.max = options.max();\n    }\n\n    if (!(options.type === 'float' ? /^\\d*(\\.\\d+)?$/ : /^\\d+$/).test(value) || isNaN(value)) {\n        is_ok   = false;\n        message = localize('Should be a valid number.');\n    } else if (options.type === 'float' && options.decimals &&\n        !(new RegExp(`^\\\\d+(\\\\.\\\\d{0,${options.decimals}})?$`).test(value))) {\n        is_ok   = false;\n        message = localize('Up to {{decimal_count}} decimal places are allowed.', { decimal_count: options.decimals });\n    } else if ('min' in options && 'max' in options && +options.min === +options.max && +value !== +options.min) {\n        is_ok   = false;\n        message = localize('Should be {{value}}', { value: addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined) });\n    } else if ('min' in options && 'max' in options && (+value < +options.min || isMoreThanMax(value, options))) {\n        is_ok   = false;\n        message = localize(\n            'Should be between {{min_value}} and {{max_value}}',\n            {\n                min_value: addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined),\n                max_value: addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined),\n            }\n        );\n    } else if ('min' in options && +value < +options.min) {\n        is_ok   = false;\n        message = localize('Should be more than {{min_value}}', { min_value: addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined) });\n    } else if ('max' in options && isMoreThanMax(value, options)) {\n        is_ok   = false;\n        message = localize('Should be less than {{max_value}}', { max_value: addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined) });\n    }\n\n    getPreBuildDVRs().number.message = message;\n    return is_ok;\n};\n\nconst isMoreThanMax = (value, options) =>\n    (options.type === 'float' ? +value > +options.max : compareBigUnsignedInt(value, options.max) === 1);\n\nconst initPreBuildDVRs = () => ({\n    address      : { func: validAddress,      message: localize('Only letters, numbers, space, and these special characters are allowed: {{permitted_characters}}', { permitted_characters: '- . \\' # ; : ( ) , @ /' }) },\n    barrier      : { func: validBarrier,      message: localize('Only numbers and these special characters are allowed: {{permitted_characters}}', { permitted_characters: '+ - .' }) },\n    compare      : { func: validCompare,      message: localize('The two passwords that you entered do not match.') },\n    email        : { func: validEmail,        message: localize('Invalid email address.') },\n    general      : { func: validGeneral,      message: localize('Only letters, numbers, space, hyphen, period, and apostrophe are allowed.') },\n    length       : { func: validLength,       message: localize('You should enter {{value}} characters.', { value: '{{value}}' }) },\n    letter_symbol: { func: validLetterSymbol, message: localize('Only letters, space, hyphen, period, and apostrophe are allowed.') },\n    min          : { func: validMin,          message: localize('Minimum of {{value}} characters required.', { value: '{{value}}' }) },\n    not_equal    : { func: validNotEqual,     message: localize('{{value_one}} and {{value_two}} cannot be the same.', { value_one: '{{value_one}}', value_two: '{{value_two}}' }) },\n    number       : { func: validNumber,       message: '' }, // TODO: i18n_issue\n    password     : { func: validPassword,     message: localize('Password should have lower and uppercase letters with numbers.') },\n    phone        : { func: validPhone,        message: localize('Only numbers and spaces are allowed.') },\n    postcode     : { func: validPostCode,     message: localize('Only letters, numbers, space, and hyphen are allowed.') },\n    regular      : { func: validRegular,      message: '' },\n    req          : { func: validRequired,     message: '' },\n    signup_token : { func: validEmailToken,   message: localize('The length of token should be 8.') },\n    tax_id       : { func: validTaxID,        message: localize('Should start with letter or number, and may contain hyphen and underscore.') },\n});\n\nlet pre_build_dvrs;\nexport const getPreBuildDVRs = () => {\n    if (!pre_build_dvrs) {\n        pre_build_dvrs = initPreBuildDVRs();\n    }\n    return pre_build_dvrs;\n};\n\nexport const getPasswordLengthConfig = type => ({ min: (/^mt$/.test(type) ? 8 : 6), max: 25 });\n","class Errors {\n    constructor() {\n        this.errors = {};\n    }\n\n    add(attribute, message) {\n        if (!this.has(attribute)) {\n            this.errors[attribute] = [];\n        }\n\n        if (this.errors[attribute].indexOf(message) === -1) {\n            this.errors[attribute].push(message);\n        }\n    }\n\n    all() {\n        return this.errors;\n    }\n\n    first(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute][0];\n        }\n        return null;\n    }\n\n    get(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute];\n        }\n\n        return [];\n    }\n\n    has(attribute) {\n        return Object.prototype.hasOwnProperty.call(this.errors, attribute);\n    }\n}\n\nexport default Errors;\n","import { template }        from '_common/utility';\nimport { getPreBuildDVRs } from './declarative-validation-rules';\nimport Error               from './errors';\n\nclass Validator {\n    constructor(input, rules, store = null) {\n        this.input  = input;\n        this.rules  = rules;\n        this.store  = store;\n        this.errors = new Error();\n\n        this.error_count = 0;\n    }\n\n    /**\n     * Add failure and error message for given rule\n     *\n     * @param {string} attribute\n     * @param {object} rule\n     */\n    addFailure(attribute, rule) {\n        let message = rule.options.message || getPreBuildDVRs()[rule.name].message;\n        if (rule.name === 'length') {\n            message = template(message, [rule.options.min === rule.options.max ? rule.options.min : `${rule.options.min}-${rule.options.max}`]);\n        } else if (rule.name === 'min') {\n            message = template(message, [rule.options.min]);\n        } else if (rule.name === 'not_equal') {\n            message = template(message, [rule.options.name1, rule.options.name2]);\n        }\n        this.errors.add(attribute, message);\n        this.error_count++;\n    }\n\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n    check() {\n        Object.keys(this.input).forEach(attribute => {\n            if (!Object.prototype.hasOwnProperty.call(this.rules, attribute)) {\n                return;\n            }\n\n            this.rules[attribute].forEach(rule => {\n                const ruleObject = Validator.getRuleObject(rule);\n\n                if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n                    return;\n                }\n\n                if (ruleObject.options.condition && !ruleObject.options.condition(this.store)) {\n                    return;\n                }\n\n                if (this.input[attribute] === '' && ruleObject.name !== 'req') {\n                    return;\n                }\n\n                const is_valid = ruleObject.validator(\n                    this.input[attribute],\n                    ruleObject.options,\n                    this.store,\n                    this.input\n                );\n\n                if (!is_valid) {\n                    this.addFailure(attribute, ruleObject);\n                }\n            });\n        });\n        return !this.error_count;\n    }\n\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n    isPassed() {\n        return this.check();\n    }\n\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n    static getRuleObject(rule) {\n        const is_rule_string = typeof rule === 'string';\n        const rule_object = {\n            name   : is_rule_string ? rule : rule[0],\n            options: is_rule_string ? {} : rule[1] || {},\n        };\n\n        rule_object.validator = rule_object.name === 'custom' ? rule[1].func : getPreBuildDVRs()[rule_object.name].func;\n\n        return rule_object;\n    }\n}\n\nexport default Validator;\n","import {\n    action,\n    intercept,\n    observable,\n    reaction,\n    toJS,\n    when }               from 'mobx';\nimport BinarySocket      from '_common/base/socket_base';\nimport { isEmptyObject } from '_common/utility';\nimport Validator         from 'Utils/Validator';\nimport { isProduction }  from '../config';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE  : Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    @observable\n    validation_errors = {};\n\n    @observable\n    validation_rules = {};\n\n    switchAccountDisposer = null;\n    switch_account_listener = null;\n\n    @observable partial_fetch_time = 0;\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     *     @property {String}   store_name - Explicit store name for browser application storage (to bypass minification)\n     */\n    constructor(options = {}) {\n        const {\n            root_store,\n            local_storage_properties,\n            session_storage_properties,\n            validation_rules,\n            store_name,\n        } = options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n\n        const has_local_or_session_storage = local_storage_properties && local_storage_properties.length\n            || session_storage_properties && session_storage_properties.length;\n\n        if (has_local_or_session_storage) {\n            if (!store_name) {\n                throw new Error('store_name is required for local/session storage');\n            }\n\n            Object.defineProperty(this, 'store_name', {\n                value     : store_name,\n                enumerable: false,\n                writable  : false,\n            });\n        }\n\n        this.root_store                 = root_store;\n        this.local_storage_properties   = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n        this.setValidationRules(validation_rules);\n\n        this.setupReactionForLocalStorage();\n        this.setupReactionForSessionStorage();\n        this.retrieveFromStorage();\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce(\n                (result, p) => Object.assign(result, { [p]: snapshot[p] }),\n                {},\n            );\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties), (key, value) => {\n            if (value !== null) return value;\n            return undefined;\n        });\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.store_name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.store_name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    @action\n    retrieveFromStorage() {\n        const local_storage_snapshot   = JSON.parse(localStorage.getItem(this.store_name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.store_name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach((k) => this[k] = snapshot[k]);\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param [{String}] messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    @action\n    setValidationErrorMessages(propertyName, messages) {\n        const is_different = () => !!this.validation_errors[propertyName]\n            .filter(x => !messages.includes(x))\n            .concat(messages.filter(x => !this.validation_errors[propertyName].includes(x)))\n            .length;\n        if (!this.validation_errors[propertyName] || is_different()) {\n            this.validation_errors[propertyName] = messages;\n        }\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    @action\n    setValidationRules(rules = {}) {\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    @action\n    addRule(property, rules) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    @action\n    validateProperty(property, value) {\n        const trigger          = this.validation_rules[property].trigger;\n        const inputs           = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: (this.validation_rules[property].rules || []) };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger]           = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(\n            inputs,\n            validation_rules,\n            this,\n        );\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    @action\n    validateAllProperties() {\n        const validation_rules  = Object.keys(this.validation_rules);\n        const validation_errors = Object.keys(this.validation_errors);\n\n        validation_rules.forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n\n        // Remove keys that are present in error, but not in rules:\n        validation_errors.forEach(error => {\n            if (!validation_rules.includes(error)) {\n                delete this.validation_errors[error];\n            }\n        });\n    }\n\n    @action.bound\n    onSwitchAccount(listener) {\n        this.switchAccountDisposer = when(\n            () => this.root_store.client.switch_broadcast,\n            async () => {\n                try {\n                    const result = this.switch_account_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.switchEndSignal();\n                            this.onSwitchAccount(this.switch_account_listener);\n                        });\n                    } else {\n                        throw new Error('Switching account listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            },\n        );\n        this.switch_account_listener = listener;\n    }\n\n    @action.bound\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n    }\n\n    @action.bound\n    assertHasValidCache(loginid, ...reactions) {\n        // account was changed when this was unmounted.\n        if (this.root_store.client.loginid !== loginid) {\n            reactions.forEach(act => act());\n            this.partial_fetch_time = false;\n        }\n    }\n\n    waitFor = async (...prerequisites) => {\n        await BinarySocket.wait(...prerequisites);\n    };\n}\n","import { isCryptocurrency } from '_common/base/currency_base';\nimport { localize }         from 'App/i18n';\n\nexport const buildCurrenciesList = (payout_currencies) => {\n    const fiat   = [];\n    const crypto = [];\n\n    payout_currencies.forEach((cur) => {\n        const isCrypto = isCryptocurrency(cur);\n        (isCrypto ? crypto : fiat).push({ text: cur, value: cur, has_tooltip: isCrypto });\n    });\n\n    return {\n        [localize('Fiat')]  : fiat,\n        [localize('Crypto')]: crypto,\n    };\n};\n\nexport const getDefaultCurrency = (currencies_list, currency = '') => {\n    const supported_currencies = Object.values(currencies_list).reduce((a, b) => [...a, ...b]);\n    const default_currency =\n              supported_currencies.find(c => c.value === currency) ? currency : supported_currencies[0].value;\n\n    return {\n        currency: default_currency,\n    };\n};\n","import {\n    action,\n    computed,\n    observable,\n    runInAction,\n    when,\n}                                    from 'mobx';\nimport moment                        from 'moment';\nimport {\n    requestLogout,\n    WS }                             from 'Services';\nimport { getAccountTitle }           from '_common/base/client_base';\nimport BinarySocket                  from '_common/base/socket_base';\nimport * as SocketCache              from '_common/base/socket_cache';\nimport { localize }                  from 'App/i18n';\nimport {\n    LocalStore,\n    State }                          from '_common/storage';\nimport BinarySocketGeneral           from 'Services/socket-general';\nimport { handleClientNotifications } from './Helpers/client-notifications';\nimport BaseStore                     from './base-store';\nimport { buildCurrenciesList }       from './Modules/Trading/Helpers/currency';\nimport { setCurrencies }             from '../_common/base/currency_base';\n\nconst storage_key = 'client.accounts';\nexport default class ClientStore extends BaseStore {\n    @observable loginid;\n    @observable upgrade_info;\n    @observable accounts;\n    @observable email;\n    @observable switched                   = '';\n    @observable switch_broadcast           = false;\n    @observable currencies_list            = {};\n    @observable residence_list             = [];\n    @observable selected_currency          = '';\n    @observable is_populating_account_list = false;\n    @observable website_status             = {};\n    @observable verification_code          = '';\n\n    constructor(root_store) {\n        super({ root_store });\n    }\n\n    @computed\n    get balance() {\n        if (!this.accounts) return '';\n        return (this.accounts[this.loginid] && this.accounts[this.loginid].balance) ?\n            this.accounts[this.loginid].balance.toString() :\n            '';\n    }\n\n    /**\n     * Temporary property. should be removed once we are fully migrated from the old app.\n     *\n     * @returns {boolean}\n     */\n    @computed\n    get is_client_allowed_to_visit() {\n        return !!(\n            !this.is_logged_in || this.is_virtual || this.accounts[this.loginid].landing_company_shortcode === 'svg'\n        );\n    }\n\n    @computed\n    get account_list() {\n        return this.all_loginids.map(id => (\n            !this.isDisabled(id) &&\n            this.getToken(id) ?\n                this.getAccountInfo(id) :\n                undefined\n        )).filter(account => account);\n    }\n\n    @computed\n    get active_accounts() {\n        return this.accounts instanceof Object\n            ? Object.values(this.accounts).filter(account => !account.is_disabled)\n            : [];\n    }\n\n    @computed\n    get all_loginids() {\n        return this.accounts instanceof Object ? Object.keys(this.accounts) : [];\n    }\n\n    @computed\n    get account_title() {\n        return getAccountTitle(this.loginid);\n    }\n\n    @computed\n    get currency() {\n        if (this.selected_currency.length) {\n            return this.selected_currency;\n        } else if (this.is_logged_in) {\n            return this.accounts[this.loginid].currency;\n        }\n        return this.default_currency;\n\n    }\n\n    @computed\n    get default_currency() {\n        if (Object.keys(this.currencies_list).length > 0) {\n            const keys = Object.keys(this.currencies_list);\n            return Object.values(this.currencies_list[`${keys[0]}`])[0].text;\n        } return 'USD';\n    }\n\n    @computed\n    get is_valid_login() {\n        if (!this.is_logged_in) return true;\n        const valid_login_ids_regex = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG)[0-9]+$', 'i');\n        return this.all_loginids.every(id => valid_login_ids_regex.test(id));\n    }\n\n    @computed\n    get is_logged_in() {\n        return !!(\n            this.accounts instanceof Object &&\n            Object.keys(this.accounts).length > 0 &&\n            this.loginid &&\n            this.accounts[this.loginid].token\n        );\n    }\n\n    @computed\n    get is_virtual() {\n        return this.accounts && this.accounts[this.loginid] && !!this.accounts[this.loginid].is_virtual;\n    }\n\n    @computed\n    get can_upgrade() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade || this.upgrade_info.can_open_multi);\n    }\n\n    @computed\n    get can_upgrade_to() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade_to);\n    }\n\n    @computed\n    get virtual_account_loginid() {\n        return this.all_loginids\n            .find(loginid => !!this.accounts[loginid].is_virtual);\n    }\n\n    @computed\n    get is_single_currency() {\n        return Object.keys(this.currencies_list).map(type => Object.values(this.currencies_list[type]).length)\n            .reduce((acc, cur) => acc + cur, 0) === 1;\n    }\n\n    /**\n     * Store Values relevant to the loginid to local storage.\n     *\n     * @param loginid\n     */\n    @action.bound\n    resetLocalStorageValues(loginid) {\n        this.accounts[loginid].accepted_bch = 0;\n        LocalStore.setObject(storage_key, this.accounts);\n        LocalStore.set('active_loginid', loginid);\n        this.loginid = loginid;\n    }\n\n    @action.bound\n    getBasicUpgradeInfo() {\n        const upgradeable_landing_companies = State.getResponse('authorize.upgradeable_landing_companies');\n        let can_open_multi                  = false;\n        let type,\n            can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            can_open_multi   = upgradeable_landing_companies.indexOf(\n                this.accounts[this.loginid].landing_company_shortcode) !== -1;\n            const canUpgrade = (...landing_companies) => landing_companies.find(landing_company => (\n                landing_company !== this.accounts[this.loginid].landing_company_shortcode &&\n                upgradeable_landing_companies.indexOf(landing_company) !== -1\n            ));\n            can_upgrade_to   = canUpgrade('svg', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    }\n\n    @action.bound\n    responsePayoutCurrencies(response) {\n        const list = response.payout_currencies || response;\n        this.currencies_list = buildCurrenciesList(list);\n        this.selectCurrency('');\n    }\n\n    @action.bound\n    responseAuthorize(response) {\n        this.accounts[this.loginid].email                     = response.authorize.email;\n        this.accounts[this.loginid].currency                  = response.authorize.currency;\n        this.accounts[this.loginid].is_virtual                = +response.authorize.is_virtual;\n        this.accounts[this.loginid].session_start             = parseInt(moment().utc().valueOf() / 1000);\n        this.accounts[this.loginid].landing_company_shortcode = response.authorize.landing_company_name;\n        this.updateAccountList(response.authorize.account_list);\n        this.upgrade_info = this.getBasicUpgradeInfo();\n        this.user_id      = response.authorize.user_id;\n    }\n\n    @action.bound\n    setWebsiteStatus(response) {\n        this.website_status = response.website_status;\n        setCurrencies(this.website_status);\n    }\n\n    @computed\n    get is_website_status_ready () {\n        return this.website_status &&\n        this.website_status.site_status === 'up';\n    }\n\n    @action.bound\n    updateAccountList(account_list) {\n        account_list.forEach((account) => {\n            if (this.accounts[account.loginid]) {\n                this.accounts[account.loginid].excluded_until = account.excluded_until || '';\n                Object.keys(account).forEach((param) => {\n                    const param_to_set = param === 'country' ? 'residence' : param;\n                    const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                    if (param_to_set !== 'loginid') {\n                        this.accounts[account.loginid][param_to_set] = value_to_set;\n                    }\n                });\n            }\n        });\n    }\n\n    /**\n     * Switch to the given loginid account.\n     *\n     * @param {string} loginid\n     */\n    @action.bound\n    switchAccount(loginid) {\n        this.root_store.ui.removeAllNotifications();\n        this.setSwitched(loginid);\n    }\n\n    @action.bound\n    switchEndSignal() {\n        this.switch_broadcast = false;\n        this.root_store.ui.is_app_blurred = false;\n    }\n\n    /**\n     * We initially fetch things from local storage, and then do everything inside the store.\n     * This will probably be the only place we are fetching data from Client_base.\n     */\n    @action.bound\n    async init() {\n        const authorize_response = await this.setUserLogin();\n        this.setLoginId(LocalStore.get('active_loginid'));\n        this.setAccounts(LocalStore.getObject(storage_key));\n        this.setSwitched('');\n        const client = this.accounts[this.loginid];\n\n        // If there is an authorize_response, it means it was the first login\n        if (authorize_response) {\n            // If this fails, it means the landing company check failed\n            if (this.loginid === authorize_response.authorize.loginid) {\n                BinarySocketGeneral.authorizeAccount(authorize_response);\n            } else { // So it will send an authorize with the accepted token, to be handled by socket-general\n                await BinarySocket.send({ authorize: client.token }, { forced: true });\n            }\n        }\n\n        if (client && !client.is_virtual) {\n            BinarySocket.wait('landing_company', 'website_status').then(() => {\n                handleClientNotifications(client, this.root_store.ui.addNotification, this.loginid);\n            });\n        }\n\n        this.selectCurrency('');\n\n        this.responsePayoutCurrencies(await WS.payoutCurrencies());\n\n        this.registerReactions();\n    }\n\n    @action.bound\n    setLoginId(loginid) {\n        this.loginid = loginid;\n    }\n\n    @action.bound\n    setAccounts(accounts) {\n        this.accounts = accounts;\n    }\n\n    @action.bound\n    setSwitched(switched) {\n        this.switched = switched;\n    }\n\n    /**\n     * Check if account is disabled or not\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    isDisabled(loginid = this.loginid) {\n        return this.getAccount(loginid).is_disabled;\n    }\n\n    /**\n     * Get accounts token from given login id.\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    getToken(loginid = this.loginid) {\n        return this.getAccount(loginid).token;\n    }\n\n    /**\n     * Get account object from given login id\n     *\n     * @param loginid\n     * @returns {object}\n     */\n    getAccount(loginid = this.loginid) {\n        return this.accounts[loginid];\n    }\n\n    /**\n     * Get information required by account switcher\n     *\n     * @param loginid\n     * @returns {{loginid: *, is_virtual: (number|number|*), icon: string, title: *}}\n     */\n    getAccountInfo(loginid = this.loginid) {\n        const account      = this.getAccount(loginid);\n        const currency     = account.currency;\n        const is_virtual   = account.is_virtual;\n        const account_type = !is_virtual && currency ? currency : getAccountTitle(loginid);\n\n        return {\n            loginid,\n            is_virtual,\n            icon : account_type.toLowerCase(), // TODO: display the icon\n            title: account_type.toLowerCase() === 'virtual' ? localize('DEMO') : account_type,\n        };\n    }\n\n    @action.bound\n    broadcastAccountChange() {\n        this.switch_broadcast = true;\n    }\n\n    @action.bound\n    async switchAccountHandler () {\n        if (!this.switched || !this.switched.length || !this.getAccount(this.switched).token) {\n            // Logout if the switched_account doesn't belong to any loginid.\n            if (!this.all_loginids.some(id => id !== this.switched) || this.switched === this.loginid) {\n                this.root_store.ui.addNotification({\n                    message: localize('Could not switch to default account.'),\n                    type   : 'danger',\n                });\n                // request a logout\n                requestLogout();\n                this.root_store.modules.trade.clearContract();\n                return;\n            }\n\n            this.root_store.modules.portfolio.clearTable();\n            // Send a toast message to let the user know we can't switch his account.\n            this.root_store.ui.addNotification({\n                message: localize('Switching to default account.'),\n                type   : 'info',\n            });\n\n            // switch to default account.\n            this.switchAccount(this.all_loginids[0]);\n            await this.switchAccountHandler();\n            return;\n        }\n        sessionStorage.setItem('active_tab', '1');\n        // set local storage\n        this.root_store.gtm.setLoginFlag();\n        this.resetLocalStorageValues(this.switched);\n        SocketCache.clear();\n        await BinarySocket.send({ 'authorize': this.getToken() }, { forced: true });\n        await this.init();\n        this.broadcastAccountChange();\n    }\n\n    @action.bound\n    registerReactions() {\n        // Switch account reactions.\n        when(\n            () => this.switched,\n            this.switchAccountHandler\n        );\n    }\n\n    @action.bound\n    setBalance(balance) {\n        this.accounts[this.loginid].balance = balance;\n    }\n\n    @action.bound\n    selectCurrency(value) {\n        this.selected_currency = value;\n    }\n\n    @action.bound\n    setResidence(residence) {\n        this.accounts[this.loginid].residence = residence;\n    }\n\n    @action.bound\n    setEmail(email) {\n        this.accounts[this.loginid].email = email;\n        this.email = email;\n    }\n\n    @action.bound\n    cleanUp() {\n        this.root_store.gtm.pushDataLayer({ event: 'log_out' });\n        this.loginid = null;\n        this.upgrade_info = undefined;\n        this.accounts = [];\n        this.currencies_list  = {};\n        this.selected_currency = '';\n        this.root_store.modules.smart_chart.should_refresh_active_symbols = true;\n        return new Promise(async (resolve) => {\n            await this.root_store.modules.trade.clearContract();\n            await this.root_store.modules.trade.resetErrorServices();\n            await this.root_store.ui.removeAllNotifications();\n            await this.root_store.modules.trade.refresh();\n            return resolve(this.root_store.modules.trade.debouncedProposal());\n        });\n    }\n\n    /* eslint-disable */\n    @action.bound\n    storeClientAccounts(obj_params, account_list) {\n        // store consistent names with other API calls\n        // API_V4: send consistent names\n        const map_names = {\n            country             : 'residence',\n            landing_company_name: 'landing_company_shortcode',\n        };\n        const client_object = {};\n        let active_loginid;\n\n        let is_allowed_real = true;\n        // Performs check to avoid login of landing companies that are currently not supported in app\n        account_list.forEach(function(account) {\n            if (!/^virtual|svg$/.test(account.landing_company_name)) {\n                is_allowed_real = false;\n            }\n        });\n\n        account_list.forEach(function(account) {\n            Object.keys(account).forEach(function(param) {\n                if (param === 'loginid') {\n                    if (!active_loginid && !account.is_disabled) {\n                        if (is_allowed_real && !account.is_virtual) {\n                            active_loginid = account[param];\n                        } else if (account.is_virtual) { // TODO: [only_virtual] remove this to stop logging non-SVG clients into virtual\n                            active_loginid = account[param];\n                        }\n                    }\n                } else {\n                    const param_to_set = map_names[param] || param;\n                    const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                    if (!(account.loginid in client_object)) {\n                        client_object[account.loginid] = {};\n                    }\n                    client_object[account.loginid][param_to_set] = value_to_set;\n                }\n            });\n        });\n\n        let i = 1;\n        while (obj_params[`acct${  i}`]) {\n            const loginid = obj_params[`acct${  i}`];\n            const token   = obj_params[`token${  i}`];\n            if (loginid && token) {\n                client_object[loginid].token = token;\n            }\n            i++;\n        }\n\n        // if didn't find any login ID that matched the above condition\n        // or the selected one doesn't have a token, set the first one\n        if (!active_loginid || !client_object[active_loginid].token) {\n            active_loginid = obj_params.acct1;\n        }\n\n        // TODO: send login flag to GTM if needed\n\n        if (active_loginid && Object.keys(client_object).length) {\n            localStorage.setItem('active_loginid', active_loginid);\n            localStorage.setItem('client.accounts', JSON.stringify(client_object));\n        }\n    }\n\n    @action.bound\n    async setUserLogin() {\n        const obj_params = {};\n        const search     = window.location.search;\n        if (search) {\n            const arr_params = window.location.search.substr(1).split('&');\n            arr_params.forEach(function(param) {\n                if (param) {\n                    const param_value = param.split('=');\n                    if (param_value) {\n                        obj_params[param_value[0]] = param_value[1];\n                    }\n                }\n            });\n        }\n        const is_client_logging_in = obj_params.token1;\n\n        if (is_client_logging_in) {\n            window.history.replaceState({}, document.title, '/');\n\n            // is_populating_account_list is used for socket general to know not to filter the first-time logins\n            this.is_populating_account_list = true;\n            const authorize_response = await BinarySocket.send({ authorize: obj_params.token1 });\n            this.is_populating_account_list = false;\n            runInAction(() => {\n                const account_list = (authorize_response.authorize || {}).account_list;\n                if (account_list && !this.accounts) {\n                    this.storeClientAccounts(obj_params, account_list);\n                }\n            });\n            return authorize_response;\n        }\n    }\n\n    @action.bound\n    setVerificationCode(code) {\n        this.verification_code = code;\n        if (code) {\n            LocalStore.set('verification_code', code);\n        } else {\n            LocalStore.remove('verification_code');\n        }\n        // TODO: add await if error handling needs to happen before AccountSignup is initialised\n        // this.fetchResidenceList(); // Prefetch for use in account signup process\n    }\n\n    @action.bound\n    onSignup({ password, residence }) {\n        if (!this.verification_code || !password || !residence) return;\n\n        // Currently the code doesn't reach here and the console log is needed for debugging.\n        // TODO: remove console log when AccountSignup component and validation are ready\n        WS.newAccountVirtual(this.verification_code, password, residence).then(response => console.log(response));\n    }\n\n    fetchResidenceList() {\n        WS.residenceList().then(response => {\n            runInAction(() => {\n                this.residence_list = response.residence_list || [];\n            })\n        });\n    }\n}\n/* eslint-enable */\n","import {\n    action,\n    observable }           from 'mobx';\nimport moment              from 'moment';\nimport { currentLanguage } from 'Utils/Language/index';\nimport BaseStore           from './base-store';\n\nexport default class CommonStore extends BaseStore {\n    @observable server_time      = moment.utc();\n    @observable current_language = currentLanguage;\n    @observable has_error        = false;\n\n    @observable error = {\n        type   : 'info',\n        message: '',\n    };\n\n    @observable network_status    = {};\n    @observable is_network_online = false;\n    @observable is_socket_opened  = false;\n\n    @observable services_error = {};\n\n    @observable deposit_url = '';\n    @observable withdraw_url = '';\n\n    @action.bound\n    setIsSocketOpened(is_socket_opened) {\n        this.is_socket_opened = is_socket_opened;\n    }\n\n    @action.bound\n    setNetworkStatus(status, is_online) {\n        if (this.network_status.class) {\n            this.network_status.class   = status.class;\n            this.network_status.tooltip = status.tooltip;\n        } else {\n            this.network_status = status;\n        }\n        this.is_network_online = is_online;\n    }\n\n    @action.bound\n    setError(has_error, error) {\n        this.has_error = has_error;\n        this.error     = {\n            type: error ? error.type : 'info',\n            ...(error && {\n                header             : error.header,\n                message            : error.message,\n                redirect_label     : error.redirect_label,\n                redirectOnClick    : error.redirectOnClick,\n                should_show_refresh: error.should_show_refresh,\n            }),\n        };\n    }\n\n    @action.bound\n    showError(message, header, redirect_label, redirectOnClick, should_show_refresh) {\n        this.setError(true, {\n            header,\n            message,\n            redirect_label,\n            redirectOnClick,\n            should_show_refresh,\n            type: 'error',\n        });\n    }\n\n    @action.bound\n    setDepositURL(deposit_url) {\n        this.deposit_url = deposit_url;\n    }\n\n    @action.bound\n    setWithdrawURL(withdraw_url) {\n        this.withdraw_url = withdraw_url;\n    }\n}\n","import {\n    action,\n    computed,\n    observable }              from 'mobx';\nimport BinarySocket           from '_common/base/socket_base';\nimport { isLoginPages }       from '_common/base/login';\nimport { get as getLanguage } from '_common/language';\nimport BaseStore              from './base-store';\nimport { getAppId }           from '../config';\n\nexport default class GTMStore extends BaseStore {\n    @observable is_gtm_applicable = /^(16303|16929)$/.test(getAppId());\n\n    constructor(root_store) {\n        super({ root_store });\n\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    @computed\n    get visitorId() {\n        return this.root_store.client.loginid;\n    }\n\n    @computed\n    get currency() {\n        return this.root_store.client.currency;\n    }\n\n    /**\n     * Contains common data that will be passed to GTM on each datalayer push\n     *\n     * @returns {object}\n     */\n    @computed\n    get common_variables() {\n        return {\n            language: getLanguage(),\n            ...this.root_store.client.is_logged_in && {\n                visitorId: this.visitorId,\n                currency : this.currency,\n                userId   : this.root_store.client.user_id,\n            },\n            ...this.root_store.ui.is_dark_mode_on && {\n                theme: this.root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n            },\n        };\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => resolve(this.pushDataLayer({ event: 'account switch' })));\n    }\n\n    /**\n     * Pushes provided data as GTM DataLayer\n     *\n     * @param {object} data\n     */\n    @action.bound\n    async pushDataLayer(data) {\n        if (this.is_gtm_applicable && !isLoginPages()) {\n            BinarySocket.wait('authorize').then(() => {\n                dataLayer.push({\n                    ...this.common_variables,\n                    ...data,\n                });\n            });\n        }\n    }\n\n    @action.bound\n    pushPurchaseData(contract_data) {\n        const data = {\n            event   : 'buy_contract',\n            bom_ui  : 'new',\n            contract: {\n                amount       : contract_data.amount,\n                barrier1     : contract_data.barrier,\n                barrier2     : contract_data.barrier2,\n                basis        : contract_data.basis,\n                buy_price    : contract_data.buy_price,\n                contract_type: contract_data.contract_type,\n                currency     : contract_data.currency,\n                date_expiry  : contract_data.date_expiry,\n                date_start   : contract_data.date_start,\n                duration     : contract_data.duration,\n                duration_unit: contract_data.duration_unit,\n                payout       : contract_data.payout,\n                symbol       : contract_data.symbol,\n            },\n            settings: {\n                theme           : this.root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n                positions_drawer: this.root_store.ui.is_positions_drawer_on ? 'open' : 'closed',\n                // purchase_confirm: this.root_store.ui.is_purchase_confirm_on ? 'enabled' : 'disabled',\n                chart           : {\n                    toolbar_position: this.root_store.ui.is_chart_layout_default ? 'bottom' : 'left',\n                    chart_asset_info: this.root_store.ui.is_chart_asset_info_visible ? 'visible' : 'hidden',\n                    chart_type      : this.root_store.modules.smart_chart.chart_type,\n                    granularity     : this.root_store.modules.smart_chart.granularity,\n                },\n            },\n        };\n        this.pushDataLayer(data);\n    }\n\n    @action.bound\n    setLoginFlag(event_name) {\n        if (this.is_gtm_applicable) {\n            localStorage.setItem('GTM_login', event_name);\n        }\n    }\n}\n","import {\n    action,\n    observable }            from 'mobx';\nimport { isCryptocurrency } from '_common/base/currency_base';\nimport { WS }               from 'Services';\nimport BaseStore            from '../../base-store';\n\nexport default class CashierStore extends BaseStore {\n    @observable is_loading       = false;\n    @observable container_height = 0;\n    @observable error_message    = '';\n\n    @observable container_urls = {\n        deposit : '',\n        withdraw: '',\n    };\n\n    @observable is_session_timeout = {\n        deposit : false,\n        withdraw: false,\n    };\n\n    @observable is_verification_button_clicked = false;\n    @observable is_verification_email_sent     = false;\n\n    containers = {\n        deposit : 'deposit',\n        withdraw: 'withdraw',\n    };\n\n    default_cashier_height = 1200;\n\n    timeout_cashier_url = {\n        deposit : '',\n        withdraw: '',\n    };\n\n    timeout_verification_button;\n\n    constructor({ root_store }) {\n        super({ root_store });\n\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    @action.bound\n    async onMount(container, verification_code) {\n        if (!['deposit', 'withdraw'].includes(container)) {\n            throw new Error('Cahshier Store onMount requires deposit or cashier as a container name');\n        }\n        this.setErrorMessage('');\n        this.setContainerHeight(0);\n        this.setLoading(true);\n\n        if (this.container_urls[container] && !this.is_session_timeout[container]) {\n            this.checkIframeLoaded();\n            return;\n        }\n\n        this.setSessionTimeout(false, this.containers[container]);\n\n        this.setContainerUrl('', this.containers[container]);\n        const response_cashier = await WS.cashier(this.containers[container], verification_code);\n\n        // TODO: uncomment this if cross origin access is allowed\n        // const xhttp = new XMLHttpRequest();\n        // const that = this;\n        // xhttp.onreadystatechange = function() {\n        //     if (this.readyState !== 4 || this.status !== 200) {\n        //         return;\n        //     }\n        //     that.setContainerUrl(this.responseText, this.containers[container]);\n        // };\n        // xhttp.open('GET', response_cashier.cashier, true);\n        // xhttp.send();\n\n        // TODO: error handling UI & custom messages\n        if (response_cashier.error) {\n            this.setLoading(false);\n            this.setErrorMessage(response_cashier.error.message);\n            if (verification_code) {\n                // clear verification code on error\n                this.clearVerification();\n            }\n        } else {\n            await this.checkIframeLoaded();\n            this.setContainerUrl(response_cashier.cashier, this.containers[container]);\n            this.setTimeoutCashierUrl(container);\n        }\n    }\n\n    @action.bound\n    async onMountDeposit() {\n        await this.onMount('deposit');\n    }\n\n    @action.bound\n    async checkIframeLoaded() {\n        window.removeEventListener('message', this.onIframeLoaded);\n        if (isCryptocurrency(this.root_store.client.currency)) {\n            this.setLoading(false);\n            this.setContainerHeight('540');\n            // crypto cashier can only be accessed once and the session expires\n            this.clearTimeoutCashierUrl(this.root_store.ui.active_cashier_tab);\n            this.setSessionTimeout(true, this.root_store.ui.active_cashier_tab);\n        } else {\n            window.addEventListener('message', this.onIframeLoaded, false);\n        }\n    }\n\n    @action.bound\n    onIframeLoaded(e) {\n        this.setLoading(false);\n        // set the height of the container after content loads so that the\n        // loading bar stays vertically centered until the end\n        this.setContainerHeight(+e.data || this.default_cashier_height);\n    }\n\n    @action.bound\n    setContainerUrl(url, container) {\n        if (this.container_urls[container] !== url) {\n            this.container_urls[container] = url;\n        }\n    }\n\n    @action.bound\n    setContainerHeight(height) {\n        this.container_height = height;\n    }\n\n    @action.bound\n    setErrorMessage(message) {\n        this.error_message = message;\n    }\n\n    @action.bound\n    setLoading(is_loading) {\n        this.is_loading = is_loading;\n    }\n\n    @action.bound\n    setSessionTimeout(is_session_time_out, container) {\n        this.is_session_timeout[container] = is_session_time_out;\n    }\n\n    @action.bound\n    setVerificationButtonClicked(is_verification_button_clicked) {\n        this.is_verification_button_clicked = is_verification_button_clicked;\n    }\n\n    @action.bound\n    setVerificationEmailSent(is_verification_email_sent) {\n        this.is_verification_email_sent = is_verification_email_sent;\n    }\n\n    clearTimeoutCashierUrl(container) {\n        if (this.timeout_cashier_url[container]) {\n            clearTimeout(this.timeout_cashier_url[container]);\n        }\n    }\n\n    // cashier session expires after one minute\n    // so we should resend the request for container (deposit|withdraw) url on next mount\n    @action.bound\n    setTimeoutCashierUrl(container) {\n        this.clearTimeoutCashierUrl(container);\n        this.timeout_cashier_url[container] = setTimeout(() => {\n            this.setSessionTimeout(true, container);\n        }, 60000);\n    }\n\n    clearTimeoutVerification() {\n        if (this.timeout_verification_button) {\n            clearTimeout(this.timeout_verification_button);\n        }\n    }\n\n    // verification token expires after one hour\n    // so we should show the verification request button again after that\n    @action.bound\n    setTimeoutVerification() {\n        this.clearTimeoutVerification();\n        this.timeout_verification_button = setTimeout(() => {\n            this.clearVerification();\n        }, 3600000);\n    }\n\n    @action.bound\n    async onMountWithdraw(verification_code) {\n        await this.onMount('withdraw', verification_code);\n    }\n\n    @action.bound\n    async sendVerificationEmail(email) {\n        if (this.is_verification_button_clicked) {\n            return;\n        }\n\n        this.setVerificationButtonClicked(true);\n        const response_verify_email = await WS.verifyEmail(email, 'payment_withdraw');\n\n        if (response_verify_email.error) {\n            this.setVerificationButtonClicked(false);\n            this.setErrorMessage(response_verify_email.error.message);\n        } else {\n            this.setVerificationEmailSent(true);\n            this.setTimeoutVerification();\n        }\n    }\n\n    clearVerification() {\n        this.clearTimeoutVerification();\n        this.setVerificationButtonClicked(false);\n        this.setVerificationEmailSent(false);\n        this.root_store.client.setVerificationCode('');\n    }\n\n    @action.bound\n    setActiveTab(container) {\n        // used to detect if old tabs with withdrawal tab open should be closed after verification token is opened in new tab\n        this.root_store.ui.setCashierActiveTab(container);\n    }\n\n    onUnmount() {\n        this.clearVerification();\n        Object.keys(this.containers).forEach((container) => {\n            this.clearTimeoutCashierUrl(container);\n            this.setSessionTimeout(true, container);\n        });\n    }\n\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => resolve(this.onUnmount()));\n    }\n}\n","export const CONTRACT_SHADES = {\n    CALL       : 'ABOVE',\n    PUT        : 'BELOW',\n    CALLE      : 'ABOVE',\n    PUTE       : 'BELOW',\n    EXPIRYRANGE: 'BETWEEN',\n    EXPIRYMISS : 'OUTSIDE',\n    RANGE      : 'BETWEEN',\n    UPORDOWN   : 'OUTSIDE',\n    ONETOUCH   : 'NONE_SINGLE', // no shade\n    NOTOUCH    : 'NONE_SINGLE', // no shade\n    ASIANU     : 'ABOVE',\n    ASIAND     : 'BELOW',\n};\n\n// Default non-shade according to number of barriers\nexport const DEFAULT_SHADES = {\n    1: 'NONE_SINGLE',\n    2: 'NONE_DOUBLE',\n};\n\nexport const BARRIER_COLORS = {\n    GREEN    : '#39b19d',\n    RED      : 'red',\n    GRAY     : '#999cac',\n    DARK_GRAY: '#555975',\n};\n\nexport const BARRIER_LINE_STYLES = {\n    DASHED: 'dashed',\n    DOTTED: 'dotted',\n    SOLID : 'solid',\n};\n","import {\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES } from '../../SmartChart/Constants/barriers';\n\nexport const createChartBarrier = (SmartChartStore, contract_info, is_dark_mode) => {\n    SmartChartStore.removeBarriers();\n\n    if (contract_info) {\n        const { contract_type, barrier, high_barrier, low_barrier } = contract_info;\n\n        if (barrier || high_barrier) { // create barrier only when it's available in response\n            SmartChartStore.createBarriers(\n                contract_type,\n                barrier || high_barrier,\n                low_barrier,\n                null,\n                {   color        : is_dark_mode ? BARRIER_COLORS.DARK_GRAY : BARRIER_COLORS.GRAY,\n                    line_style   : BARRIER_LINE_STYLES.SOLID,\n                    not_draggable: true,\n                },\n            );\n\n            SmartChartStore.updateBarrierShade(true, contract_type);\n        }\n    }\n};\n","import classNames           from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Icon         from 'Assets/icon.jsx';\n\nconst MarkerLine = ({\n    label,\n    line_style,\n    marker_config,\n    status,\n}) => {\n    // TODO: Find a more elegant solution\n    if (!marker_config) return <div />;\n    return (\n        <div className={classNames('chart-marker-line__wrapper', `chart-marker-line--${line_style}`)}>\n            { label === marker_config.LINE_END.content_config.label &&\n                <Icon\n                    icon='IconEndTime'\n                    className={classNames('chart-marker-line__icon', {\n                        'chart-marker-line__icon--won' : status === 'won',\n                        'chart-marker-line__icon--lost': status === 'lost',\n                    })}\n                />\n            }\n            { label === marker_config.LINE_START.content_config.label &&\n                <Icon\n                    icon='IconStartTime'\n                    className={classNames(\n                        'chart-marker-line__icon',\n                        'chart-marker-line__icon--time',\n                    )}\n                />\n            }\n        </div>\n    );\n};\n\nMarkerLine.propTypes = {\n    label        : PropTypes.string,\n    line_style   : PropTypes.string,\n    marker_config: PropTypes.object,\n    status       : PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerLine);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes     from 'prop-types';\nimport React        from 'react';\n\nconst MarkerSpot = ({\n    className,\n    spot_count,\n}) => (\n    <div\n        className={classNames('chart-spot', className)}\n    >{spot_count}\n    </div>\n);\n\nMarkerSpot.propTypes = {\n    className : PropTypes.string,\n    spot_count: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n};\n\nexport default observer(MarkerSpot);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { addComma } from '_common/base/currency_base';\nimport { toMoment } from 'Utils/Date';\nimport Icon         from 'Assets/icon.jsx';\nimport MarkerSpot   from './marker-spot.jsx';\n\nclass MarkerSpotLabel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show_label: !this.props.has_hover_toggle,\n        };\n    }\n\n    handleHoverToggle = () => {\n        this.setState((state) =>  ({ show_label: !state.show_label }));\n    }\n\n    render() {\n        let marker_spot =\n            <MarkerSpot\n                className={this.props.spot_className}\n                spot_count={this.props.spot_count}\n            />;\n\n        if (this.props.has_hover_toggle) {\n            marker_spot =\n                <div className='marker-hover-container' onMouseEnter={this.handleHoverToggle} onMouseLeave={this.handleHoverToggle}>\n                    { marker_spot }\n                </div>;\n        }\n\n        return (\n            <div className={'chart-spot-label'}>\n                {this.state.show_label &&\n                    <div className='chart-spot-label__info-container'>\n                        <div className={`chart-spot-label__time-value-container chart-spot-label__time-value-container--${this.props.align_label}`}>\n                            <div className='chart-spot-label__time-container'>\n                                <Icon icon='IconClock' height='10' width='10' className='chart-spot-label__time-icon' />\n                                <p className='chart-spot-label__time'>{toMoment(+this.props.spot_epoch).format('HH:mm:ss')}</p>\n                            </div>\n                            <div\n                                className={classNames('chart-spot-label__value-container', {\n                                    'chart-spot-label__value-container--won' : this.props.status === 'won',\n                                    'chart-spot-label__value-container--lost': this.props.status === 'lost',\n                                })}\n                            >\n                                <p>{addComma(this.props.spot_value)}</p>\n                            </div>\n                        </div>\n                    </div>\n                }\n                { marker_spot }\n            </div>\n        );\n    }\n}\n\nMarkerSpotLabel.defaultProps = {\n    align_label: 'top',\n};\n\nMarkerSpotLabel.propTypes = {\n    align_label     : PropTypes.oneOf(['top', 'bottom']),\n    has_hover_toggle: PropTypes.bool,\n    spot_className  : PropTypes.string,\n    spot_count      : PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    spot_epoch      : PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    spot_value      : PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    status          : PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerSpotLabel);\n","import { localize }    from 'App/i18n';\nimport MarkerLine      from 'Modules/SmartChart/Components/Markers/marker-line.jsx';\nimport MarkerSpotLabel from 'Modules/SmartChart/Components/Markers/marker-spot-label.jsx';\nimport MarkerSpot      from 'Modules/SmartChart/Components/Markers/marker-spot.jsx';\n\nexport const MARKER_TYPES_CONFIG = {\n    LINE_END: {\n        type          : 'LINE_END',\n        marker_config : {\n            ContentComponent: MarkerLine,\n            className       : 'chart-marker-line',\n        },\n        content_config: { line_style: 'dash',  label: localize('End Time') },\n    },\n    LINE_PURCHASE: {\n        type          : 'LINE_PURCHASE',\n        marker_config : {\n            ContentComponent: MarkerLine,\n            className       : 'chart-marker-line',\n        },\n        content_config: { line_style: 'solid', label: localize('Purchase Time') },\n    },\n    LINE_START: {\n        type          : 'LINE_START',\n        marker_config : {\n            ContentComponent: MarkerLine,\n            className       : 'chart-marker-line',\n        },\n        content_config: { line_style: 'solid', label: localize('Start Time') },\n    },\n    SPOT_ENTRY: {\n        type          : 'SPOT_ENTRY',\n        marker_config : {\n            ContentComponent: MarkerSpot,\n        },\n        content_config: { className: 'chart-spot__entry' },\n    },\n    SPOT_SELL: {\n        type          : 'SPOT_SELL',\n        marker_config : {\n            ContentComponent: MarkerSpot,\n        },\n        content_config: { className: 'chart-spot__sell' },\n    },\n    SPOT_EXIT: {\n        type          : 'SPOT_EXIT',\n        marker_config : {\n            ContentComponent: MarkerSpotLabel,\n        },\n        content_config: { spot_className: 'chart-spot__spot' },\n    },\n    SPOT_MIDDLE: {\n        type          : 'SPOT_MIDDLE',\n        marker_config : {\n            ContentComponent: MarkerSpotLabel,\n        },\n        content_config: { spot_className: 'chart-spot__spot' },\n    },\n};\n","import extend                  from 'extend';\nimport { isDigitContract }     from 'Stores/Modules/Contract/Helpers/digits';\nimport {\n    isUserSold,\n    getEndTime }               from 'Stores/Modules/Contract/Helpers/logic';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nconst createMarkerConfig = (marker_type, x, y, content_config) => (\n    extend(true, {}, MARKER_TYPES_CONFIG[marker_type], {\n        marker_config: {\n            x: +x,\n            y,\n        },\n        content_config,\n    })\n);\n\nexport const getSpotCount = (contract_info, spot_count) =>\n    isDigitContract(contract_info.contract_type) ? spot_count + 1 : spot_count;\n\n// -------------------- Lines --------------------\nexport const createMarkerEndTime = (contract_info) => {\n    const end_time = getEndTime(contract_info);\n    if (!end_time) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_END.type,\n        +end_time,\n        null,\n        {\n            status       : `${contract_info.profit > 0 ? 'won' : 'lost' }`,\n            marker_config: MARKER_TYPES_CONFIG,\n        },\n    );\n};\n\nexport const createMarkerPurchaseTime = (contract_info) => {\n    if (!contract_info.purchase_time || !contract_info.date_start ||\n        +contract_info.purchase_time === +contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_PURCHASE.type,\n        +contract_info.purchase_time,\n    );\n};\n\nexport const createMarkerStartTime = (contract_info) => {\n    if (!contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_START.type,\n        +contract_info.date_start,\n        null,\n        {\n            marker_config: MARKER_TYPES_CONFIG,\n        }\n    );\n};\n\n// -------------------- Spots --------------------\nexport const createMarkerSpotEntry = (contract_info) => {\n    if (!contract_info.entry_tick_time) return false;\n\n    let marker_type      = MARKER_TYPES_CONFIG.SPOT_ENTRY.type;\n    let component_props  = {};\n\n    const entry_tick = contract_info.entry_tick_display_value;\n\n    const spot_has_label = isDigitContract(contract_info.contract_type);\n    if (spot_has_label) {\n        marker_type = MARKER_TYPES_CONFIG.SPOT_MIDDLE.type;\n\n        component_props = {\n            spot_value: `${entry_tick}`,\n            spot_epoch: `${contract_info.entry_tick_time}`,\n            spot_count: 1,\n        };\n    }\n\n    return createMarkerConfig(\n        marker_type,\n        contract_info.entry_tick_time,\n        entry_tick,\n        component_props,\n    );\n};\n\nexport const createMarkerSpotExit = (contract_info, tick, idx) => {\n    if (!contract_info.exit_tick_time) return false;\n    const is_user_sold = isUserSold(contract_info);\n\n    let spot_count, align_label;\n    if (tick) {\n        spot_count = getSpotCount(contract_info, idx);\n        align_label = tick.align_label;\n    }\n\n    const exit_tick = contract_info.exit_tick_display_value;\n\n    return createMarkerConfig(\n        !is_user_sold ? MARKER_TYPES_CONFIG.SPOT_EXIT.type : MARKER_TYPES_CONFIG.SPOT_SELL.type,\n        +contract_info.exit_tick_time,\n        +exit_tick,\n        !is_user_sold ?\n            {\n                spot_value: `${exit_tick}`,\n                spot_epoch: `${contract_info.exit_tick_time}`,\n                status    : `${+contract_info.profit > 0 ? 'won' : 'lost' }`,\n                align_label,\n                spot_count,\n            } : {},\n    );\n};\n\nexport const createMarkerSpotMiddle = (contract_info, tick, idx) => {\n    const spot_count = getSpotCount(contract_info, idx);\n    const spot       = tick.tick_display_value;\n\n    const marker_config = createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_MIDDLE.type,\n        +tick.epoch,\n        +spot,\n        {\n            spot_value : `${spot}`,\n            spot_epoch : `${tick.epoch}`,\n            align_label: tick.align_label,\n            spot_count,\n        },\n    );\n    marker_config.type = `${marker_config.type}_${idx}`;\n\n    return marker_config;\n};\n","import { unique }              from '_common/utility';\nimport {\n    createMarkerEndTime,\n    createMarkerPurchaseTime,\n    createMarkerSpotEntry,\n    createMarkerSpotExit,\n    createMarkerStartTime,\n    createMarkerSpotMiddle,\n    getSpotCount }             from './chart-marker-helpers';\nimport {\n    getChartType,\n    getEndTime }               from './logic';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nexport const createChartMarkers = (SmartChartStore, contract_info) => {\n    if (contract_info) {\n        const end_time = getEndTime(contract_info);\n        const chart_type = getChartType(contract_info.date_start, end_time);\n        if (contract_info.tick_count) {\n            addTickMarker(SmartChartStore, contract_info);\n        } else if (chart_type !== 'candle') {\n            addMarker(marker_spots, SmartChartStore, contract_info);\n        }\n        addMarker(marker_lines, SmartChartStore, contract_info);\n    }\n};\n\nconst marker_spots = {\n    [MARKER_TYPES_CONFIG.SPOT_ENTRY.type]: createMarkerSpotEntry,\n    [MARKER_TYPES_CONFIG.SPOT_EXIT.type] : createMarkerSpotExit,\n};\n\nconst marker_lines = {\n    [MARKER_TYPES_CONFIG.LINE_START.type]   : createMarkerStartTime,\n    [MARKER_TYPES_CONFIG.LINE_END.type]     : createMarkerEndTime,\n    [MARKER_TYPES_CONFIG.LINE_PURCHASE.type]: createMarkerPurchaseTime,\n};\n\nconst addMarker = async (marker_obj, SmartChartStore, contract_info) => {\n    Object.keys(marker_obj).forEach(createMarker);\n\n    function createMarker(marker_type) {\n        if (marker_type in SmartChartStore.markers) return;\n\n        const marker_config = marker_obj[marker_type](contract_info);\n        if (marker_config) {\n            SmartChartStore.createMarker(marker_config);\n        }\n    }\n};\n\nconst addLabelAlignment = (tick, idx, arr) => {\n    if (idx > 0 && arr.length) {\n        const prev_tick = arr[idx - 1];\n\n        if (+tick > +prev_tick.tick) tick.align_label = 'top';\n        if (+tick.tick < +prev_tick.tick) tick.align_label = 'bottom';\n        if (+tick.tick === +prev_tick.tick) tick.align_label = prev_tick.align_label;\n    }\n\n    return tick;\n};\n\nconst addTickMarker = async (SmartChartStore, contract_info) => {\n    const tick_stream = unique(contract_info.tick_stream, 'epoch').map(addLabelAlignment);\n\n    tick_stream.forEach((tick, idx) => {\n        const is_entry_spot  = idx === 0 && +tick.epoch !== contract_info.exit_tick_time;\n        const is_middle_spot = idx > 0 && +tick.epoch !== +contract_info.exit_tick_time;\n        const is_exit_spot   = +tick.epoch === +contract_info.exit_tick_time ||\n            getSpotCount(contract_info, idx) === contract_info.tick_count;\n\n        let marker_config;\n        if (is_entry_spot) {\n            marker_config = createMarkerSpotEntry(contract_info);\n        } else if (is_middle_spot) {\n            marker_config = createMarkerSpotMiddle(contract_info, tick, idx);\n        } else if (is_exit_spot) {\n            tick.align_label = 'top'; // force exit spot label to be 'top' to avoid overlapping\n            marker_config = createMarkerSpotExit(contract_info, tick, idx);\n        }\n\n        if (marker_config) {\n            if (marker_config.type in SmartChartStore.markers) return;\n\n            SmartChartStore.createMarker(marker_config);\n        }\n    });\n};\n","import React        from 'react';\nimport { localize } from 'App/i18n';\nimport Money        from '../../../../App/Components/Elements/money.jsx';\nimport Localize     from '../../../../App/Components/Elements/localize.jsx';\n\nexport const contractSold = (currency, sold_for) => ({\n    header : localize('Contract sold'),\n    message: (\n        <Localize\n            i18n_default_text='Contract was sold for <0 />.'\n            components={[ <Money key={sold_for} amount={sold_for} currency={currency} /> ]}\n        />\n    ),\n    type                 : 'contract_sold',\n    size                 : 'small',\n    should_hide_close_btn: true,\n    is_auto_close        : true,\n});\n","import {\n    action,\n    computed,\n    extendObservable,\n    observable }              from 'mobx';\nimport { localize }           from 'App/i18n';\nimport BinarySocket           from '_common/base/socket_base';\nimport { isEmptyObject }      from '_common/utility';\nimport { WS }                 from 'Services';\nimport { createChartBarrier } from './Helpers/chart-barriers';\nimport { createChartMarkers } from './Helpers/chart-markers';\nimport {\n    getDigitInfo,\n    isDigitContract }         from './Helpers/digits';\nimport {\n    getChartConfig,\n    getDisplayStatus,\n    getEndTime,\n    isEnded }                 from './Helpers/logic';\nimport { contractSold }       from '../Portfolio/Helpers/portfolio-notifcations';\nimport BaseStore              from '../../base-store';\n\nexport default class ContractReplayStore extends BaseStore {\n    // --- Observable properties ---\n    @observable digits_info = observable.object({});\n    @observable sell_info   = observable.object({});\n\n    @observable has_error         = false;\n    @observable error_message     = '';\n    @observable is_sell_requested = false;\n\n    // ---- Replay Contract Config ----\n    @observable contract_id;\n    @observable indicative_status;\n    @observable contract_info   = observable.object({});\n    @observable is_static_chart = false;\n\n    // ---- Normal properties ---\n    chart_type          = 'mountain';\n    is_ongoing_contract = false;\n\n    // Replay Contract Indicative Movement\n    prev_indicative = 0;\n    indicative      = 0;\n\n    // Forget old proposal_open_contract stream on account switch from ErrorComponent\n    should_forget_first = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    handleSubscribeProposalOpenContract = (contract_id, cb) => {\n        const proposal_open_contract_request = [contract_id, cb, false];\n\n        if (this.should_forget_first) {\n            WS.forgetAll('proposal_open_contract').then(() => {\n                this.should_forget_first = false;\n                WS.subscribeProposalOpenContract(...proposal_open_contract_request);\n            });\n        } else {\n            WS.subscribeProposalOpenContract(...proposal_open_contract_request);\n        }\n    }\n\n    @action.bound\n    onMount(contract_id) {\n        if (contract_id) {\n            this.smart_chart = this.root_store.modules.smart_chart;\n            this.smart_chart.setContractMode(true);\n            this.contract_id = contract_id;\n            BinarySocket.wait('authorize').then(() => {\n                this.handleSubscribeProposalOpenContract(this.contract_id, this.populateConfig);\n            });\n            WS.activeSymbols({ skip_cache_update: true });\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.forgetProposalOpenContract(this.contract_id, this.populateConfig);\n        this.contract_id         = null;\n        this.digits_info         = {};\n        this.is_ongoing_contract = false;\n        this.is_static_chart     = false;\n        this.is_sell_requested   = false;\n        this.contract_info       = {};\n        this.indicative_status   = null;\n        this.prev_indicative     = 0;\n        this.indicative          = 0;\n        this.sell_info           = {};\n        this.smart_chart.setContractMode(false);\n        this.smart_chart.cleanupContractChartView();\n    }\n\n    @action.bound\n    populateConfig(response) {\n        if ('error' in response) {\n            this.has_error       = true;\n            this.smart_chart.setIsChartLoading(false);\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error           = true;\n            this.error_message       = localize('Sorry, you can\\'t view this contract because it doesn\\'t belong to this account.');\n            this.should_forget_first = true;\n            this.smart_chart.setContractMode(false);\n            this.smart_chart.setIsChartLoading(false);\n            return;\n        }\n        if (+response.proposal_open_contract.contract_id !== this.contract_id) return;\n\n        this.contract_info = response.proposal_open_contract;\n\n        // Add indicative status for contract\n        const prev_indicative  = this.prev_indicative;\n        const new_indicative   = +this.contract_info.bid_price;\n        this.indicative = new_indicative;\n        if (new_indicative > prev_indicative) {\n            this.indicative_status = 'profit';\n        } else if (new_indicative < prev_indicative) {\n            this.indicative_status = 'loss';\n        } else {\n            this.indicative_status = null;\n        }\n        this.prev_indicative = this.indicative;\n\n        const end_time = getEndTime(this.contract_info);\n\n        this.smart_chart.updateMargin(\n            (end_time || this.contract_info.date_expiry) - this.contract_info.date_start);\n\n        if (!end_time) this.is_ongoing_contract = true;\n\n        // finish contracts if end_time exists\n        if (end_time) {\n            if (!this.is_ongoing_contract) {\n                this.is_static_chart = true;\n            } else {\n                this.is_static_chart = false;\n            }\n        }\n\n        createChartBarrier(this.smart_chart, this.contract_info, this.root_store.ui.is_dark_mode_on);\n        createChartMarkers(this.smart_chart, this.contract_info);\n        this.handleDigits(this.contract_info);\n\n        this.smart_chart.setIsChartLoading(false);\n    }\n\n    @action.bound\n    handleDigits(contract_info) {\n        if (this.is_digit_contract) {\n            extendObservable(this.digits_info, getDigitInfo(this.digits_info, contract_info));\n        }\n    }\n\n    @action.bound\n    onClickSell(contract_id) {\n        const { bid_price } = this.contract_info;\n        if (contract_id && bid_price) {\n            this.is_sell_requested = true;\n            WS.sell(contract_id, bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        if (response.error) {\n            // If unable to sell due to error, give error via pop up if not in contract mode\n            this.is_sell_requested = false;\n            this.root_store.common.services_error = {\n                type: response.msg_type,\n                ...response.error,\n            };\n            this.root_store.ui.toggleServicesErrorModal(true);\n        } else if (!response.error && response.sell) {\n            this.is_sell_requested = false;\n            // update contract store sell info after sell\n            this.sell_info = {\n                sell_price    : response.sell.sold_for,\n                transaction_id: response.sell.transaction_id,\n            };\n            this.root_store.ui.addNotification(contractSold(this.root_store.client.currency, response.sell.sold_for));\n        }\n    }\n\n    forgetProposalOpenContract = (contract_id, cb) => {\n        WS.forget('proposal_open_contract', cb, { contract_id });\n    }\n\n    @action.bound\n    removeErrorMessage() {\n        delete this.error_message;\n    }\n\n    @action.bound\n    clearError() {\n        this.error_message = null;\n        this.has_error = false;\n    }\n\n    // ---------------------------\n    // ----- Computed values -----\n    // ---------------------------\n    // TODO: currently this runs on each response, even if contract_info is deep equal previous one\n\n    @computed\n    get contract_config() {\n        return getChartConfig(this.contract_info, this.is_digit_contract, false);\n    }\n\n    @computed\n    get display_status() {\n        return getDisplayStatus(this.contract_info);\n    }\n\n    @computed\n    get is_ended() {\n        return isEnded(this.contract_info);\n    }\n\n    @computed\n    get is_digit_contract() {\n        return isDigitContract(this.contract_info.contract_type);\n    }\n}\n","import {\n    action,\n    computed,\n    extendObservable,\n    observable }              from 'mobx';\nimport BinarySocket           from '_common/base/socket_base';\nimport { isEmptyObject }      from '_common/utility';\nimport { localize }           from 'App/i18n';\nimport { WS }                 from 'Services';\nimport { createChartBarrier } from './Helpers/chart-barriers';\nimport { createChartMarkers } from './Helpers/chart-markers';\nimport {\n    getDigitInfo,\n    isDigitContract }         from './Helpers/digits';\nimport {\n    getChartGranularity,\n    getChartType,\n    getDisplayStatus,\n    getEndTime,\n    isEnded }                 from './Helpers/logic';\nimport BaseStore              from '../../base-store';\n\nexport default class ContractTradeStore extends BaseStore {\n    // --- Observable properties ---\n    @observable contract_id;\n    @observable contract_info = observable.object({});\n    @observable digits_info   = observable.object({});\n\n    @observable has_error     = false;\n    @observable error_message = '';\n\n    // ---- Normal properties ---\n    is_from_positions   = false;\n    is_ongoing_contract = false;\n\n    // Forget old proposal_open_contract stream on account switch from ErrorComponent\n    should_forget_first = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    @action.bound\n    drawChart() {\n        const {\n            date_expiry,\n            date_start,\n            tick_count,\n        } = this.contract_info;\n\n        const end_time = getEndTime(this.contract_info);\n\n        // Set chart granularity and chart_type\n        this.handleChartType(date_start, end_time || null);\n\n        // Set chart view to date_start\n        this.smart_chart.setChartView(date_start);\n\n        if (!end_time) this.is_ongoing_contract = true;\n\n        // finish contracts if end_time exists\n        if (end_time) {\n            const is_one_tick_contract = (tick_count < 2);\n            if (!this.is_ongoing_contract && !is_one_tick_contract) {\n                // set to static chart to true for non one tick contract\n                // to avoid chart from reloading\n                this.smart_chart.setStaticChart(true);\n            } else {\n                this.smart_chart.setStaticChart(false);\n            }\n            this.smart_chart.setContractStart(date_start);\n            this.smart_chart.setContractEnd(end_time);\n\n            // Clear chart loading status once ChartListener returns ready for completed contract\n            if (!this.is_ongoing_contract) {\n                this.smart_chart.setIsChartLoading(false);\n            }\n\n        // setters for ongoing contracts, will only init once onMount after left_epoch is set\n        } else if (this.is_from_positions) {\n            this.smart_chart.setContractStart(date_start);\n        }\n\n        this.smart_chart.updateMargin((end_time || date_expiry) - date_start);\n\n        createChartBarrier(this.smart_chart, this.contract_info, this.root_store.ui.is_dark_mode_on);\n        createChartMarkers(this.smart_chart, this.contract_info);\n\n        if (this.smart_chart.is_chart_ready) {\n            this.smart_chart.setIsChartLoading(false);\n        }\n    }\n\n    handleSubscribeProposalOpenContract = (contract_id, cb) => {\n        const proposal_open_contract_request = [contract_id, cb, false];\n\n        if (this.should_forget_first) {\n            WS.forgetAll('proposal_open_contract').then(() => {\n                this.should_forget_first = false;\n                WS.subscribeProposalOpenContract(...proposal_open_contract_request);\n            });\n        } else {\n            WS.subscribeProposalOpenContract(...proposal_open_contract_request);\n        }\n    }\n\n    @action.bound\n    drawContractStartTime(date_start, longcode, contract_id) {\n        this.contract_info.longcode = longcode;\n        createChartMarkers(this.root_store.modules.smart_chart, { date_start });\n        this.onMountBuy(contract_id);\n    }\n\n    @action.bound\n    onMountBuy(contract_id) {\n        if (contract_id === this.contract_id) return;\n        this.contract_id = contract_id;\n        // clear proposal and purchase info once contract is mounted\n        this.root_store.modules.trade.proposal_info = {};\n        this.root_store.modules.trade.purchase_info = {};\n        BinarySocket.wait('authorize').then(() => {\n            this.handleSubscribeProposalOpenContract(this.contract_id, this.updateProposal);\n        });\n    }\n\n    @action.bound\n    onMount(contract_id, is_from_positions) {\n        if (contract_id === this.contract_id) return;\n        this.smart_chart       = this.root_store.modules.smart_chart;\n        if (this.smart_chart.is_contract_mode) this.onCloseContract();\n        this.has_error         = false;\n        this.error_message     = '';\n        this.contract_id       = contract_id;\n        this.is_from_positions = is_from_positions;\n\n        // clear proposal and purchase info once contract is mounted\n        this.root_store.modules.trade.proposal_info = {};\n        this.root_store.modules.trade.purchase_info = {};\n\n        if (contract_id) {\n            if (this.is_from_positions) {\n                this.smart_chart.setIsChartLoading(true);\n                this.smart_chart.switchToContractMode(true);\n            }\n            BinarySocket.wait('authorize').then(() => {\n                this.handleSubscribeProposalOpenContract(this.contract_id, this.updateProposal);\n            });\n        }\n    }\n\n    @action.bound\n    onCloseContract() {\n        this.forgetProposalOpenContract(this.contract_id, this.updateProposal);\n        this.contract_id         = null;\n        this.contract_info       = {};\n        this.digits_info         = {};\n        this.error_message       = '';\n        this.has_error           = false;\n        this.is_from_positions   = false;\n        this.is_ongoing_contract = false;\n\n        if (!this.smart_chart) this.smart_chart = this.root_store.modules.smart_chart;\n        this.smart_chart.cleanupContractChartView();\n        this.smart_chart.applySavedTradeChartLayout();\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.onCloseContract();\n    }\n\n    @action.bound\n    updateProposal(response) {\n        if ('error' in response) {\n            this.has_error     = true;\n            this.error_message = response.error.message;\n            this.contract_info = {};\n            this.smart_chart.setIsChartLoading(false);\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error           = true;\n            this.error_message       = localize('Sorry, you can\\'t view this contract because it doesn\\'t belong to this account.');\n            this.should_forget_first = true;\n            this.contract_info       = {};\n            this.contract_id         = null;\n            this.smart_chart.setContractMode(false);\n            this.smart_chart.setIsChartLoading(false);\n            return;\n        }\n        if (+response.proposal_open_contract.contract_id !== this.contract_id) return;\n\n        this.contract_info = response.proposal_open_contract;\n\n        // Set contract symbol if trade_symbol and contract_symbol don't match\n        if (this.root_store.modules.trade.symbol !== this.contract_info.underlying) {\n            this.root_store.modules.trade.symbol = this.contract_info.underlying;\n        }\n\n        this.drawChart(this.contract_info);\n\n        this.handleDigits(this.contract_info);\n    }\n\n    @action.bound\n    handleDigits(contract_info) {\n        if (this.is_digit_contract) {\n            extendObservable(this.digits_info, getDigitInfo(this.digits_info, contract_info));\n        }\n    }\n\n    handleChartType(start, expiry) {\n        if (!this.smart_chart) {\n            this.smart_chart = this.root_store.modules.smart_chart;\n        }\n\n        const chart_type  = getChartType(start, expiry);\n        const granularity = getChartGranularity(start, expiry);\n\n        this.smart_chart.updateChartType(chart_type);\n        this.smart_chart.updateGranularity(granularity);\n    }\n\n    forgetProposalOpenContract = (contract_id, cb) => {\n        WS.forget('proposal_open_contract', cb, { contract_id });\n    }\n\n    @action.bound\n    removeErrorMessage() {\n        delete this.error_message;\n    }\n\n    @action.bound\n    clearError() {\n        this.error_message = null;\n        this.has_error = false;\n    }\n\n    @action.bound\n    setIsDigitContract(contract_type) {\n        this.contract_info.contract_type = contract_type;\n    }\n    // ---------------------------\n    // ----- Computed values -----\n    // ---------------------------\n    // TODO: currently this runs on each response, even if contract_info is deep equal previous one\n\n    @computed\n    get display_status() {\n        return getDisplayStatus(this.contract_info);\n    }\n\n    @computed\n    get is_ended() {\n        return isEnded(this.contract_info);\n    }\n\n    @computed\n    get is_digit_contract() {\n        return isDigitContract(this.contract_info.contract_type);\n    }\n}\n","import { flow }            from 'mobx';\nimport BinarySocket        from '_common/base/socket_base';\nimport { localize }        from 'App/i18n';\nimport { LocalStore }      from '_common/storage';\nimport { redirectToLogin } from '_common/base/login';\nimport { WS }              from 'Services';\n\nexport const showUnavailableLocationError = flow(function* (showError) {\n    const website_status = yield BinarySocket.wait('website_status');\n    const residence_list = yield WS.residenceList();\n\n    const clients_country_code = website_status.website_status.clients_country;\n    const clients_country_text =\n        (residence_list.residence_list.find(obj_country =>\n            obj_country.value === clients_country_code) || {}).text;\n\n    showError(\n        localize('If you have an account, log in to continue.'),\n        (clients_country_text ? localize('Sorry, this app is unavailable in {{clients_country}}.', { clients_country: clients_country_text }) : localize('Sorry, this app is unavailable in your current location.')),\n        localize('Log in'),\n        redirectToLogin,\n        false,\n    );\n});\n\nexport const isMarketClosed = (active_symbols = [], symbol) => {\n    if (!active_symbols.length) return false;\n    return (active_symbols.filter(x => x.symbol === symbol)[0]) ?\n        !active_symbols.filter(symbol_info => symbol_info.symbol === symbol)[0].exchange_is_open\n        :\n        false;\n};\n\nexport const pickDefaultSymbol = (active_symbols = []) => {\n    if (!active_symbols.length) return '';\n    return getFavoriteOpenSymbol(active_symbols) || getFirstOpenSymbol(active_symbols);\n};\n\nconst getFavoriteOpenSymbol = (active_symbols) => {\n    const chart_favorites = LocalStore.get('cq-favorites');\n    if (!chart_favorites) return undefined;\n    const client_favorite_markets = JSON.parse(chart_favorites)['chartTitle&Comparison'];\n\n    const client_favorite_list = client_favorite_markets\n        .map(client_fav_symbol => active_symbols\n            .find(symbol_info => symbol_info.symbol === client_fav_symbol));\n    if (client_favorite_list) {\n        const client_first_open_symbol = client_favorite_list\n            .filter(symbol => symbol).find(isSymbolOpen);\n        if (client_first_open_symbol) return client_first_open_symbol.symbol;\n    }\n    return undefined;\n};\n\nconst getFirstOpenSymbol = (active_symbols) => {\n    const first_open_symbol = active_symbols\n        .filter(symbol_info => /major_pairs|random_index/.test(symbol_info.submarket))\n        .find(isSymbolOpen);\n    if (first_open_symbol) return first_open_symbol.symbol;\n    return active_symbols.find(symbol_info => symbol_info.submarket === 'major_pairs').symbol;\n};\n\nconst isSymbolOpen = (symbol) => (\n    symbol.exchange_is_open === 1\n);\n\nexport const getSymbolDisplayName = (active_symbols = [], symbol) => (\n    (active_symbols.find(symbol_info => symbol_info.symbol.toUpperCase() === symbol.toUpperCase()) || { display_name: '' })\n        .display_name\n);\n","import { getUnsupportedContracts } from 'Constants';\nimport { getSymbolDisplayName }    from '../../Trading/Helpers/active-symbols';\nimport { getMarketInformation }    from '../../../../Modules/Reports/Helpers/market-underlying';\n\nexport const formatPortfolioPosition = (portfolio_pos, active_symbols = []) => {\n    const purchase     = parseFloat(portfolio_pos.buy_price);\n    const payout       = parseFloat(portfolio_pos.payout);\n    const display_name = getSymbolDisplayName(\n        active_symbols,\n        getMarketInformation(portfolio_pos.shortcode).underlying\n    );\n\n    return {\n        contract_info : portfolio_pos,\n        details       : portfolio_pos.longcode.replace(/\\n/g, '<br />'),\n        display_name,\n        id            : portfolio_pos.contract_id,\n        indicative    : 0,\n        payout,\n        purchase,\n        reference     : +portfolio_pos.transaction_id,\n        type          : portfolio_pos.contract_type,\n        is_unsupported: !!getUnsupportedContracts()[portfolio_pos.contract_type],\n    };\n};\n","import {\n    action,\n    computed,\n    observable,\n    reaction }                     from 'mobx';\nimport { createTransformer }       from 'mobx-utils';\nimport { WS }                      from 'Services';\nimport { formatPortfolioPosition } from './Helpers/format-response';\nimport { contractSold }            from './Helpers/portfolio-notifcations';\nimport {\n    getCurrentTick,\n    getDurationPeriod,\n    getDurationTime,\n    getDurationUnitText }          from './Helpers/details';\nimport {\n    getDisplayStatus,\n    getEndTime,\n    isEnded,\n    isUserSold,\n    isValidToSell }                from '../Contract/Helpers/logic';\nimport BaseStore                   from '../../base-store';\n\nexport default class PortfolioStore extends BaseStore {\n    @observable positions  = [];\n    @observable is_loading = false;\n    @observable error      = '';\n    getPositionById        = createTransformer((id) => this.positions.find((position) => +position.id === +id));\n\n    @action.bound\n    initializePortfolio = async () => {\n        this.is_loading = true;\n        await this.waitFor('authorize');\n        WS.portfolio().then(this.portfolioHandler);\n        WS.subscribeProposalOpenContract(null, this.proposalOpenContractHandler, false);\n        WS.subscribeTransaction(this.transactionHandler, false);\n    };\n\n    @action.bound\n    clearTable() {\n        this.positions  = [];\n        this.is_loading = false;\n        this.error      = '';\n    }\n\n    @action.bound\n    portfolioHandler(response) {\n        this.is_loading = false;\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n        this.error = '';\n        if (response.portfolio.contracts) {\n            this.positions = response.portfolio.contracts\n                .map(pos => formatPortfolioPosition(pos, this.root_store.modules.trade.active_symbols))\n                .sort((pos1, pos2) => pos2.reference - pos1.reference); // new contracts first\n        }\n    }\n\n    @action.bound\n    async transactionHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n        }\n        if (!response.transaction) return;\n        const { contract_id, action: act } = response.transaction;\n\n        if (act === 'buy') {\n            const res = await WS.portfolio();\n            const new_pos = res.portfolio.contracts.find(pos => +pos.contract_id === +contract_id);\n            if (!new_pos) return;\n            this.pushNewPosition(new_pos);\n            WS.subscribeProposalOpenContract(contract_id, this.proposalOpenContractHandler, false);\n        } else if (act === 'sell') {\n            const i = this.getPositionIndexById(contract_id);\n\n            // Currently, if the contract has ended before the response is sent\n            // the Portfolio API returns an empty `contracts` array.\n            // This causes the contract to not be pushed to the `positions` property here.\n            // The statement below prevents accessing undefined values caused by the above explanation.\n            if (i === -1) return;\n\n            this.positions[i].is_loading = true;\n            WS.subscribeProposalOpenContract(contract_id, this.populateResultDetails, false);\n        }\n    }\n\n    @action.bound\n    proposalOpenContractHandler(response) {\n        if ('error' in response) return;\n\n        const proposal = response.proposal_open_contract;\n        const portfolio_position = this.positions.find((position) => +position.id === +proposal.contract_id);\n\n        if (!portfolio_position) return;\n\n        const prev_indicative = portfolio_position.indicative;\n        const new_indicative  = +proposal.bid_price;\n        const profit_loss     = +proposal.profit;\n\n        // fix for missing barrier and entry_spot in proposal_open_contract API response, only re-assign if valid\n        if (proposal.barrier) portfolio_position.barrier = +proposal.barrier;\n        if (proposal.entry_spot) portfolio_position.entry_spot = +proposal.entry_spot;\n\n        // store contract proposal details that require modifiers\n        portfolio_position.indicative       = new_indicative;\n        portfolio_position.profit_loss      = profit_loss;\n        portfolio_position.is_valid_to_sell = isValidToSell(proposal);\n        // store contract proposal details that do not require modifiers\n        portfolio_position.contract_info    = proposal;\n\n        // for tick contracts\n        if (proposal.tick_count) {\n            const current_tick = (portfolio_position.current_tick > getCurrentTick(proposal)) ?\n                portfolio_position.current_tick : getCurrentTick(proposal);\n            portfolio_position.current_tick = current_tick;\n        }\n\n        if (new_indicative > prev_indicative) {\n            portfolio_position.status = 'profit';\n        } else if (new_indicative < prev_indicative) {\n            portfolio_position.status = 'loss';\n        } else {\n            portfolio_position.status = null;\n        }\n    }\n\n    @action.bound\n    onClickSell(contract_id) {\n        const i = this.getPositionIndexById(contract_id);\n        const { bid_price } = this.positions[i].contract_info;\n        this.positions[i].is_sell_requested = false;\n        if (contract_id && bid_price) {\n            WS.sell(contract_id, bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        if (response.error) {\n            // If unable to sell due to error, give error via pop up if not in contract mode\n            const i = this.getPositionIndexById(response.echo_req.sell);\n            this.positions[i].is_sell_requested = false;\n            this.root_store.common.services_error = {\n                type: response.msg_type,\n                ...response.error,\n            };\n            this.root_store.ui.toggleServicesErrorModal(true);\n        } else if (!response.error && response.sell) {\n            const i = this.getPositionIndexById(response.sell.contract_id);\n            this.positions[i].is_sell_requested = false;\n            // update contract store sell info after sell\n            this.root_store.modules.contract_trade.sell_info = {\n                sell_price    : response.sell.sold_for,\n                transaction_id: response.sell.transaction_id,\n            };\n            this.root_store.ui.addNotification(contractSold(this.root_store.client.currency, response.sell.sold_for));\n        }\n    }\n\n    @action.bound\n    populateResultDetails = (response) => {\n        const contract_response = response.proposal_open_contract;\n        const i = this.getPositionIndexById(contract_response.contract_id);\n\n        this.positions[i].contract_info    = contract_response;\n        this.positions[i].duration         = getDurationTime(contract_response);\n        this.positions[i].duration_unit    = getDurationUnitText(getDurationPeriod(contract_response));\n        this.positions[i].exit_spot        = contract_response.exit_tick || contract_response.current_spot; // workaround if no exit_tick in proposal_open_contract, use latest spot\n        this.positions[i].is_valid_to_sell = isValidToSell(contract_response);\n        this.positions[i].result           = getDisplayStatus(contract_response);\n        this.positions[i].profit_loss      = +contract_response.profit;\n        this.positions[i].sell_time        = getEndTime(contract_response) || contract_response.current_spot_time; // same as exit_spot, use latest spot time if no exit_tick_time\n        this.positions[i].sell_price       = contract_response.sell_price;\n        this.positions[i].status           = 'complete';\n\n        // fix for missing barrier and entry_spot\n        if (!this.positions[i].contract_info.barrier || !this.positions[i].contract_info.entry_spot) {\n            this.positions[i].contract_info.barrier    = this.positions[i].barrier;\n            this.positions[i].contract_info.entry_spot = this.positions[i].entry_spot;\n        }\n\n        // remove exit_spot for manually sold contracts\n        if (isUserSold(contract_response)) this.positions[i].exit_spot = '-';\n\n        this.positions[i].is_loading = false;\n\n        if (isEnded(contract_response)) {\n            // also forget for buy\n            [this.populateResultDetails, this.proposalOpenContractHandler].forEach(cb => {\n                WS.forget('proposal_open_contract', cb, { contract_id: contract_response.contract_id });\n            });\n        }\n    };\n\n    @action.bound\n    pushNewPosition(new_pos) {\n        this.positions.unshift(formatPortfolioPosition(new_pos, this.root_store.modules.trade.active_symbols));\n    }\n\n    @action.bound\n    removePositionById(contract_id) {\n        const { is_contract_mode } = this.root_store.modules.smart_chart;\n        const contract_idx         = this.getPositionIndexById(contract_id);\n\n        this.positions.splice(contract_idx, 1);\n\n        // check if contract is in view in contract_mode before removing contract details from chart\n        if (is_contract_mode && (+this.root_store.modules.contract_trade.contract_id === +contract_id)) {\n            this.root_store.modules.contract_trade.onCloseContract();\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener () {\n        return new Promise(async (resolve) => {\n            await this.clearTable();\n            await WS.forgetAll('proposal_open_contract', 'transaction');\n            return resolve(this.initializePortfolio());\n        });\n    }\n\n    @action.bound\n    onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener.bind(null));\n        if (this.positions.length === 0) {\n            // TODO: Optimise the way is_logged_in changes are detected for \"logging in\" and \"already logged on\" states\n            if (this.root_store.client.is_logged_in) {\n                this.initializePortfolio();\n            } else {\n                reaction(() => this.root_store.client.is_logged_in, () => {\n                    if (this.root_store.client.is_logged_in) {\n                        this.initializePortfolio();\n                    }\n                });\n            }\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        // keep data and connections for portfolio drawer on desktop\n        if (this.root_store.ui.is_mobile) {\n            this.clearTable();\n            WS.forgetAll('proposal_open_contract', 'transaction');\n        }\n    }\n\n    getPositionIndexById(contract_id) {\n        return this.positions.findIndex(pos => +pos.id === +contract_id);\n    }\n\n    @computed\n    get totals() {\n        let indicative = 0;\n        let payout     = 0;\n        let purchase   = 0;\n\n        this.positions.forEach((portfolio_pos) => {\n            indicative += (+portfolio_pos.indicative);\n            payout     += (+portfolio_pos.payout);\n            purchase   += (+portfolio_pos.purchase);\n        });\n        return {\n            indicative,\n            payout,\n            purchase,\n        };\n    }\n\n    @computed\n    get active_positions_totals() {\n        let indicative = 0;\n        let purchase   = 0;\n\n        this.active_positions.forEach((portfolio_pos) => {\n            indicative += (+portfolio_pos.indicative);\n            purchase   += (+portfolio_pos.purchase);\n        });\n        return {\n            indicative,\n            purchase,\n        };\n    }\n\n    @computed\n    get active_positions() {\n        return this.positions.filter((portfolio_pos) => !portfolio_pos.result);\n    }\n\n    @computed\n    get all_positions() {\n        return this.positions;\n    }\n\n    @computed\n    get is_active_empty() {\n        return !this.is_loading && this.active_positions.length === 0;\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.all_positions.length === 0;\n    }\n}\n","import {\n    epochToMoment,\n    toMoment,\n} from 'Utils/Date';\n\nconst getDateTo = (partial_fetch_time, date_to) => {\n    const today = toMoment().startOf('day').unix();\n    if (date_to && today > date_to) {\n        return date_to;\n    } else if (partial_fetch_time) {\n        return epochToMoment(today).add(1, 'd').subtract(1, 's').unix();\n    }\n    return epochToMoment(today).add(1, 'd').subtract(1, 's').unix();\n};\n\nconst getDateFrom = (should_load_partially, partial_fetch_time, date_from, date_to) => {\n    const today = toMoment().startOf('day').unix();\n    if (today > date_to) {\n        return date_from;\n    }\n    return should_load_partially && partial_fetch_time ? partial_fetch_time : date_from;\n};\n\nconst shouldSendDateFrom = (date_from, should_load_partially, partial_fetch_time, date_to) => {\n    const today = toMoment().startOf('day').unix();\n    if (today > date_to) {\n        return (!!date_from || should_load_partially);\n    }\n    return should_load_partially ? (partial_fetch_time || date_from) : !!date_from || false;\n};\n\nconst getDateBoundaries = (date_from, date_to, partial_fetch_time, should_load_partially = false) => (\n    {\n        // eslint-disable-next-line max-len\n        ...(shouldSendDateFrom(date_from, should_load_partially, partial_fetch_time, date_to)) && { date_from: getDateFrom(should_load_partially, partial_fetch_time, date_from, date_to) },\n        ...(date_to || should_load_partially) && { date_to: getDateTo(partial_fetch_time, date_to) },\n    }\n);\n\nexport default getDateBoundaries;\n","import { formatMoney }          from '_common/base/currency_base';\nimport { toMoment }             from 'Utils/Date';\nimport { getMarketInformation } from '../../../../Modules/Reports/Helpers/market-underlying';\nimport { getSymbolDisplayName } from '../../Trading/Helpers/active-symbols';\n\nexport const formatProfitTableTransactions = (transaction, currency, active_symbols = []) => {\n    const format_string           = 'DD MMM YYYY HH:mm:ss';\n    const purchase_time           = `${toMoment(+transaction.purchase_time).format(format_string)}`;\n    const sell_time               = `${toMoment(+transaction.sell_time).format(format_string)}`;\n    const payout                  = parseFloat(transaction.payout);\n    const sell_price              = parseFloat(transaction.sell_price);\n    const buy_price               = parseFloat(transaction.buy_price);\n    const profit_loss             = formatMoney(currency, Number(sell_price - buy_price), true);\n    const should_exclude_currency = true;\n    const display_name            = getSymbolDisplayName(\n        active_symbols,\n        getMarketInformation(transaction.shortcode).underlying\n    );\n\n    return {\n        ...transaction,\n        ...{\n            payout    : isNaN(payout) ? '-' : formatMoney(currency, payout, should_exclude_currency),\n            sell_price: isNaN(sell_price) ? '-' : formatMoney(currency, sell_price, should_exclude_currency),\n            buy_price : isNaN(buy_price) ? '-' : formatMoney(currency, buy_price, should_exclude_currency),\n            profit_loss,\n            sell_time,\n            purchase_time,\n            display_name,\n        },\n    };\n};\n","import debounce                          from 'lodash.debounce';\nimport {\n    action,\n    computed,\n    observable,\n}                                        from 'mobx';\nimport { WS }                            from 'Services';\nimport { toMoment }                      from 'Utils/Date';\nimport getDateBoundaries                 from './Helpers/format-request';\nimport { formatProfitTableTransactions } from './Helpers/format-response';\nimport BaseStore                         from '../../base-store';\n\nconst batch_size = 50;\nconst delay_on_scroll_time = 150;\n\nexport default class ProfitTableStore extends BaseStore {\n    @observable data           = [];\n    @observable date_from      =  null;\n    @observable date_to        = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n    @observable error          = '';\n    @observable has_loaded_all = false;\n    @observable is_loading     = false;\n\n    // `client_loginid` is only used to detect if this is in sync with the client-store, don't rely on\n    // this for calculations. Use the client.currency instead.\n    @observable client_loginid = '';\n\n    @computed\n    get total_profit () {\n        return this.data.reduce((previous, current) => {\n            const buy_price  = Number(parseFloat(current.buy_price));\n            const sell_price = Number(parseFloat(current.sell_price));\n            const pl         = sell_price - buy_price;\n            return previous + pl;\n        }, 0);\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    @computed\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    shouldFetchNextBatch(should_load_partially) {\n        if (!should_load_partially && (this.has_loaded_all || this.is_loading)) return false;\n        const today = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n        if (this.date_to < today) return (!should_load_partially && this.partial_fetch_time);\n        return true;\n    }\n\n    @action.bound\n    async fetchNextBatch(should_load_partially = false) {\n        if (!this.shouldFetchNextBatch(should_load_partially)) return;\n        this.is_loading = true;\n\n        const response = await WS.profitTable(\n            batch_size,\n            !should_load_partially ? this.data.length : undefined,\n            getDateBoundaries(this.date_from, this.date_to, this.partial_fetch_time, should_load_partially)\n        );\n\n        this.profitTableResponseHandler(response, should_load_partially);\n    }\n\n    @action.bound\n    profitTableResponseHandler(response, should_load_partially = false) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.profit_table.transactions\n            .map(transaction => formatProfitTableTransactions(\n                transaction,\n                this.root_store.client.currency,\n                this.root_store.modules.trade.active_symbols,\n            ));\n\n        if (should_load_partially) {\n            this.data = [...formatted_transactions, ...this.data];\n        } else {\n            this.data = [...this.data, ...formatted_transactions];\n        }\n        this.has_loaded_all      = !should_load_partially && formatted_transactions.length < batch_size;\n        this.is_loading          = false;\n        if (formatted_transactions.length > 0) {\n            this.partial_fetch_time = toMoment().unix();\n        }\n    }\n\n    fetchOnScroll = debounce((left) => {\n        if (left < 2000) {\n            this.fetchNextBatch();\n        }\n    }, delay_on_scroll_time);\n\n    @action.bound\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll                            = scrollHeight - (scrollTop + clientHeight);\n        this.fetchOnScroll(left_to_scroll);\n    }\n\n    @action.bound\n    async onMount() {\n        this.assertHasValidCache(\n            this.client_loginid,\n            this.clearDateFilter,\n            this.clearTable,\n            WS.forgetAll.bind(null, 'proposal')\n        );\n        this.client_loginid = this.root_store.client.loginid;\n        this.onSwitchAccount(this.accountSwitcherListener);\n        await this.waitFor('authorize');\n        this.fetchNextBatch(true);\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal');\n    }\n\n    @computed\n    get totals() {\n        let profit_loss = 0;\n\n        this.data.forEach((transaction) => {\n            if (transaction.profit_loss.indexOf('-') !== -1) {\n                profit_loss -= parseFloat(transaction.profit_loss.split('-')[1]);\n            } else {\n                profit_loss += parseFloat(transaction.profit_loss);\n            }\n        });\n        return {\n            profit_loss: profit_loss.toString(),\n        };\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise((resolve) => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    @action.bound\n    clearTable() {\n        this.data           = [];\n        this.has_loaded_all = false;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    clearDateFilter() {\n        this.date_from = null;\n        this.date_to   = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n        this.partial_fetch_time = 0;\n    }\n\n    @action.bound\n    handleDateChange(date_values) {\n        Object.keys(date_values).forEach(key => {\n            this[`date_${key}`] = date_values[key];\n        });\n        this.clearTable();\n        this.fetchNextBatch();\n    }\n}\n","import { toJS }            from 'mobx';\nimport { isEmptyObject }   from '_common/utility';\nimport { CONTRACT_SHADES } from '../Constants/barriers';\n\nexport const isBarrierSupported = (contract_type) => contract_type in CONTRACT_SHADES;\n\nexport const barriersToString = (is_relative, ...barriers_list) => barriers_list\n    .filter(barrier => barrier !== undefined && barrier !== null)\n    .map(barrier => `${is_relative && !/^[+-]/.test(barrier) ? '+' : ''}${barrier}`);\n\nexport const barriersObjectToArray = (barriers, reference_array) => {\n    Object.keys(barriers).forEach(barrier => {\n        const js_object = toJS(barriers[barrier]);\n        if (!isEmptyObject(js_object)) {\n            reference_array.push(js_object);\n        }\n    });\n\n    return reference_array;\n};\n","import {\n    action,\n    computed,\n    observable }            from 'mobx';\nimport {\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES,\n    CONTRACT_SHADES,\n    DEFAULT_SHADES }        from './Constants/barriers';\nimport { barriersToString } from './Helpers/barriers';\n\nexport class ChartBarrierStore {\n    @observable color;\n    @observable lineStyle;\n    @observable shade;\n\n    @observable high;\n    @observable low;\n\n    @observable relative;\n    @observable draggable;\n    @observable hidePriceLines;\n\n    onChartBarrierChange;\n\n    constructor(\n        high_barrier,\n        low_barrier,\n        onChartBarrierChange = null,\n        { color, line_style, not_draggable } = {}\n    ) {\n        this.color     = color;\n        this.lineStyle = line_style || BARRIER_LINE_STYLES.SOLID;\n        this.onChange  = this.onBarrierChange;\n\n        // trade_store's action to process new barriers on dragged\n        this.onChartBarrierChange = typeof onChartBarrierChange === 'function' ? onChartBarrierChange.bind(this) : () => {};\n\n        this.high = +high_barrier || 0; // 0 to follow the price\n        if (low_barrier) {\n            this.low = +low_barrier;\n        }\n\n        this.shade = this.default_shade;\n\n        const has_barrier   = !!high_barrier;\n        this.relative       = !has_barrier || /^[+-]/.test(high_barrier);\n        this.draggable      = !not_draggable && has_barrier;\n        this.hidePriceLines = !has_barrier;\n    }\n\n    @action.bound\n    updateBarriers(high, low, isFromChart = false) {\n        if (!isFromChart) {\n            this.relative       = /^[+-]/.test(high);\n        }\n        this.high = +high || undefined;\n        this.low  = +low  || undefined;\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        this.shade = (should_display && CONTRACT_SHADES[contract_type]) || this.default_shade;\n    }\n\n    @action.bound\n    onBarrierChange({ high, low }) {\n        this.updateBarriers(high, low, true);\n        this.onChartBarrierChange(...barriersToString(this.relative, high, low));\n    }\n\n    @action.bound\n    updateBarrierColor(is_dark_mode) {\n        this.color = is_dark_mode ? BARRIER_COLORS.DARK_GRAY : BARRIER_COLORS.GRAY;\n    }\n\n    @computed\n    get barrier_count() {\n        return (typeof this.high !== 'undefined') + (typeof this.low !== 'undefined');\n    }\n\n    @computed\n    get default_shade() {\n        return DEFAULT_SHADES[this.barrier_count];\n    }\n}\n","import { observable } from 'mobx';\n\nexport class ChartMarkerStore {\n    @observable marker_config  = observable.object({});\n    @observable content_config = observable.object({});\n\n    constructor(marker_config, content_config) {\n        this.marker_config  = marker_config;\n        this.content_config = content_config;\n    }\n}\n","import extend                 from 'extend';\nimport {\n    action,\n    computed,\n    observable }              from 'mobx';\nimport { isEmptyObject }      from '_common/utility';\nimport ServerTime             from '_common/base/server_time';\nimport BinarySocket           from '_common/base/socket_base';\nimport { WS }                 from 'Services';\nimport { ChartBarrierStore }  from './chart-barrier-store';\nimport { ChartMarkerStore }   from './chart-marker-store';\nimport {\n    barriersObjectToArray,\n    isBarrierSupported }      from './Helpers/barriers';\nimport BaseStore              from '../../base-store';\n\nexport default class SmartChartStore extends BaseStore {\n    @observable chart_type;\n    @observable granularity;\n    @observable barriers = observable.object({});\n    @observable markers  = observable.object({});\n    barriers_empty_array = [];\n    markers_empty_array = [];\n\n    @observable is_contract_mode = false;\n    @observable is_static_chart  = false;\n    @observable is_title_enabled = true;\n\n    @observable start_epoch;\n    @observable end_epoch;\n    @observable margin;\n\n    @observable scroll_to_left_epoch        = null;\n    @observable scroll_to_left_epoch_offset = 0;\n\n    @observable chart_id             = 'trade';\n    @observable is_chart_loading     = false;\n    @observable is_chart_ready       = false;\n    @observable should_import_layout = false;\n    @observable should_export_layout = false;\n    @observable should_clear_chart   = false;\n    @observable trade_chart_layout   = null;\n    @observable should_refresh_active_symbols = false;\n    trade_chart_symbol               = null;\n    trade_chart_granularity          = null;\n    trade_chart_type                 = null;\n\n    @action.bound\n    switchToContractMode(is_from_positions = false, granularity = 0, chart_type = 'mountain') {\n        this.saveAndClearTradeChartLayout('contract');\n        this.setContractMode(true);\n        if (!is_from_positions) {\n            this.updateGranularity(granularity);\n            this.updateChartType(chart_type);\n        }\n    }\n\n    @action.bound\n    getChartStatus(status) {\n        this.is_chart_ready = status;\n    }\n\n    @action.bound\n    updateChartType(type) {\n        this.chart_type = type;\n        this.trade_chart_type = type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.granularity = granularity;\n        this.trade_chart_granularity = granularity;\n    }\n\n    @action.bound\n    updateMargin(duration) {\n        this.margin = Math.floor(!this.granularity ?\n            (Math.max(300, (30 * duration) / (60 * 60) || 0))\n            :\n            3 * this.granularity);\n    }\n\n    @action.bound\n    updateEpochScrollToValue(epoch) {\n        this.scroll_to_left_epoch = epoch;\n    }\n\n    @action.bound\n    updateEpochScrollToOffset(offset) {\n        this.scroll_to_left_epoch_offset = offset;\n    }\n\n    @action.bound\n    cleanupContractChartView() {\n        this.margin = null;\n        this.removeBarriers();\n        this.removeMarkers();\n        this.resetScrollToLeft();\n        this.setContractMode(false);\n        this.setContractStart(null);\n        this.setContractEnd(null);\n        this.setStaticChart(false);\n        this.root_store.ui.resetPurchaseStates();\n    }\n\n    @action.bound\n    resetScrollToLeft() {\n        this.scroll_to_left_epoch = null;\n        this.scroll_to_left_epoch_offset = null;\n    }\n\n    @action.bound\n    setContractMode(is_contract_mode) {\n        this.is_contract_mode = is_contract_mode;\n        this.is_title_enabled = !is_contract_mode;\n    }\n\n    @action.bound\n    onMount = () => {\n        // remove any barriers and markers before chart is ready\n        if (this.trade_chart_layout && !isEmptyObject(this.trade_chart_layout)) {\n            this.applySavedTradeChartLayout();\n        }\n    };\n\n    @action.bound\n    onUnmount = () => {\n        this.symbol = null;\n        this.trade_chart_layout = null;\n        this.should_import_layout = false;\n        this.setIsChartLoading(false);\n        this.cleanupContractChartView();\n    };\n\n    // --------- Set Contract Scroll to Left ---------\n    @action.bound\n    setChartView(scroll_to_left_epoch) {\n        this.updateEpochScrollToOffset(1);\n        this.updateEpochScrollToValue(scroll_to_left_epoch);\n    }\n\n    // --------- All Contracts ---------\n    @action.bound\n    setContractStart(start) {\n        this.start_epoch = start;\n\n        // SmartChart doesn't need scrollToEpoch when startEpoch has value.\n        if (start) {\n            this.resetScrollToLeft();\n        }\n    }\n\n    @action.bound\n    setContractEnd(end) {\n        this.end_epoch = end;\n    }\n\n    @action.bound\n    setIsChartLoading(bool) {\n        this.is_chart_loading = bool;\n    }\n\n    // ---------- Barriers ----------\n    @action.bound\n    createBarriers = (contract_type, high_barrier, low_barrier, onChartBarrierChange, barrier_config) => {\n        if (isEmptyObject(this.barriers.main)) {\n            let main_barrier = {};\n            if (isBarrierSupported(contract_type)) {\n                main_barrier = new ChartBarrierStore(high_barrier, low_barrier, onChartBarrierChange, barrier_config);\n            }\n\n            this.barriers = {\n                main: main_barrier,\n            };\n        }\n    };\n\n    @action.bound\n    updateBarriers(barrier_1, barrier_2) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarriers(barrier_1, barrier_2);\n        }\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarrierShade(should_display, contract_type);\n        }\n    }\n\n    @action.bound\n    updateBarrierColor(is_dark_mode) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarrierColor(is_dark_mode);\n        }\n    }\n\n    @action.bound\n    removeBarriers() {\n        this.barriers = {};\n    }\n\n    @action.bound\n    saveAndClearTradeChartLayout(chart_id) {\n        this.should_export_layout    = true;\n        this.should_import_layout    = false;\n        this.trade_chart_symbol      = this.root_store.modules.trade.symbol;\n        this.trade_chart_granularity = this.root_store.modules.smart_chart.granularity;\n        this.trade_chart_type        = this.root_store.modules.smart_chart.chart_type;\n        this.chart_id                = chart_id;\n    }\n\n    @action.bound\n    applySavedTradeChartLayout() {\n        if (!this.trade_chart_layout) return;\n\n        this.setIsChartLoading(true);\n        this.should_export_layout = false;\n        this.should_import_layout = true;\n        this.should_clear_chart   = false;\n        this.chart_id             = 'trade';\n\n        this.trade_chart_layout.isDone = action(() => {\n            this.trade_chart_layout   = null;\n            this.should_import_layout = false;\n\n            // Reset back to symbol before loading contract if trade_symbol and contract_symbol don't match\n            if (this.trade_chart_symbol !== this.root_store.modules.trade.symbol) {\n                this.root_store.modules.trade.symbol = this.trade_chart_symbol;\n            }\n            WS.forgetAll('proposal').then(this.root_store.modules.trade.requestProposal());\n\n            // Clear chart loading status once ChartListener returns ready\n            if (this.is_chart_ready) {\n                this.setIsChartLoading(false);\n            }\n        });\n    }\n\n    @action.bound\n    exportLayout(layout) {\n        this.trade_chart_layout = layout;\n        this.should_clear_chart = true;\n    }\n\n    @action.bound\n    setStaticChart(bool) {\n        this.is_static_chart = bool;\n    }\n\n    @computed\n    get barriers_array() {\n        let has_differing = false;\n        const barriers_array = barriersObjectToArray(this.barriers, []);\n\n        if (this.barriers_empty_array.length !== barriers_array.length) {\n            has_differing = true;\n        } else {\n            this.barriers_empty_array.forEach(barrier => {\n                barriers_array.forEach(next_barrier => {\n                    Object.keys(barrier).forEach(key => {\n                        if (barrier[key] !== next_barrier[key]) {\n                            has_differing = true;\n                        }\n                    });\n                });\n            });\n        }\n\n        if (has_differing) {\n            this.barriers_empty_array = [];\n        } else {\n            this.barriers_empty_array.length = 0;\n        }\n\n        return barriersObjectToArray(this.barriers, this.barriers_empty_array);\n    }\n\n    // ---------- Markers ----------\n    @action.bound\n    createMarker(config) {\n        this.markers = extend({}, this.markers, {\n            [config.type]: new ChartMarkerStore(config.marker_config, config.content_config),\n        });\n    }\n\n    @action.bound\n    removeMarkers() {\n        this.markers = {};\n    }\n\n    @computed\n    get markers_array() {\n        let has_differing   = false;\n        const markers_array = barriersObjectToArray(this.markers, []);\n\n        if (this.markers_empty_array.length !== markers_array.length) {\n            has_differing = true;\n        } else {\n            this.markers_empty_array.forEach(marker => {\n                markers_array.forEach(next_marker => {\n                    Object.keys(marker).forEach(key => {\n                        if (marker[key] !== next_marker[key]) {\n                            has_differing = true;\n                        }\n                    });\n                });\n            });\n        }\n\n        if (has_differing) {\n            this.markers_empty_array = [];\n        } else {\n            this.markers_empty_array.length = 0;\n        }\n\n        return barriersObjectToArray(this.markers, this.markers_empty_array);\n    }\n\n    // ---------- Chart Settings ----------\n    @computed\n    get settings() {\n        return (({ common, ui } = this.root_store) => ({\n            assetInformation            : false, // ui.is_chart_asset_info_visible,\n            countdown                   : ui.is_chart_countdown_visible,\n            isHighestLowestMarkerEnabled: false, // !this.is_contract_mode, // TODO: Pending UI\n            lang                        : common.current_language,\n            position                    : ui.is_chart_layout_default ? 'bottom' : 'left',\n            theme                       : ui.is_dark_mode_on ? 'dark' : 'light',\n        }))();\n    }\n\n    // ---------- WS ----------\n    wsSubscribe = (request_object, callback) => {\n        if (request_object.subscribe !== 1) return;\n        WS.subscribeTicksHistory({ ...request_object }, callback); // use a copy of the request_object to prevent updating the source\n    };\n\n    wsForget = (match_values, callback) => (\n        WS.forget('ticks_history', callback, match_values)\n    );\n\n    wsForgetStream = (stream_id) => (\n        WS.forgetStream(stream_id)\n    );\n\n    wsSendRequest = (request_object) => {\n        if (request_object.time) {\n            return ServerTime.timePromise.then(() => ({\n                msg_type: 'time',\n                time    : ServerTime.get().unix(),\n            }));\n        }\n        if (request_object.active_symbols) {\n            if (this.should_refresh_active_symbols) {\n                return WS.sendRequest(request_object, { forced: true });\n            }\n            return BinarySocket.wait('active_symbols');\n        }\n        return WS.sendRequest(request_object);\n    };\n}\n","import debounce                       from 'lodash.debounce';\nimport {\n    action,\n    computed,\n    observable,\n}                                     from 'mobx';\nimport { WS }                         from 'Services';\nimport { toMoment }                   from 'Utils/Date';\nimport { formatStatementTransaction } from './Helpers/format-response';\nimport getDateBoundaries              from '../Profit/Helpers/format-request';\nimport BaseStore                      from '../../base-store';\n\nconst batch_size = 100; // request response limit\nconst delay_on_scroll_time = 150; // fetch debounce delay on scroll\n\nexport default class StatementStore extends BaseStore {\n    @observable data           = [];\n    @observable is_loading     = false;\n    @observable has_loaded_all = false;\n    @observable date_from      = null;\n    @observable date_to        = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n    @observable error          = '';\n\n    // `client_loginid` is only used to detect if this is in sync with the client-store, don't rely on\n    // this for calculations. Use the client.currency instead.\n    @observable client_loginid = '';\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    @computed\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    @action.bound\n    clearTable() {\n        this.data               = [];\n        this.has_loaded_all     = false;\n        this.is_loading         = false;\n    }\n\n    @action.bound\n    clearDateFilter() {\n        this.date_from = null;\n        this.date_to   = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n        this.partial_fetch_time = 0;\n    }\n\n    shouldFetchNextBatch(should_load_partially) {\n        if (!should_load_partially && (this.has_loaded_all || this.is_loading)) return false;\n        const today = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n        if (this.date_to < today) return (!should_load_partially && this.partial_fetch_time);\n        return true;\n    }\n\n    @action.bound\n    async fetchNextBatch(should_load_partially = false) {\n        if (!this.shouldFetchNextBatch(should_load_partially)) return;\n        this.is_loading = true;\n\n        const response = await WS.statement(\n            batch_size,\n            !should_load_partially ? this.data.length : undefined,\n            getDateBoundaries(this.date_from, this.date_to, this.partial_fetch_time, should_load_partially),\n        );\n        this.statementHandler(response, should_load_partially);\n    }\n\n    @action.bound\n    statementHandler(response, should_load_partially) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.statement.transactions\n            .map(transaction => formatStatementTransaction(transaction,\n                this.root_store.client.currency,\n                this.root_store.modules.trade.active_symbols,\n            ));\n\n        if (should_load_partially) {\n            this.data = [...formatted_transactions, ...this.data];\n        } else {\n            this.data = [...this.data, ...formatted_transactions];\n        }\n        this.has_loaded_all = !should_load_partially && formatted_transactions.length < batch_size;\n        this.is_loading     = false;\n        if (formatted_transactions.length > 0) {\n            this.partial_fetch_time = toMoment().unix();\n        }\n    }\n\n    @action.bound\n    handleDateChange(date_values) {\n        Object.keys(date_values).forEach(key => {\n            if (date_values[key]) {\n                this[`date_${key}`] = date_values[key];\n            }\n        });\n        this.clearTable();\n        this.fetchNextBatch();\n    }\n\n    fetchOnScroll = debounce((left) => {\n        if (left < 2000) {\n            this.fetchNextBatch();\n        }\n    }, delay_on_scroll_time);\n\n    @action.bound\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll  = scrollHeight - (scrollTop + clientHeight);\n\n        this.fetchOnScroll(left_to_scroll);\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise((resolve) => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        this.assertHasValidCache(\n            this.client_loginid,\n            this.clearDateFilter,\n            this.clearTable,\n            WS.forgetAll.bind(null, 'proposal')\n        );\n        this.client_loginid = this.root_store.client.loginid;\n        this.onSwitchAccount(this.accountSwitcherListener);\n        await this.waitFor('authorize');\n        this.fetchNextBatch(true);\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal');\n    }\n}\n","import { formatMoney }          from '_common/base/currency_base';\nimport { toTitleCase }          from '_common/string_util';\nimport { localize }             from 'App/i18n';\nimport { getMarketInformation } from 'Modules/Reports/Helpers/market-underlying';\nimport { toMoment }             from 'Utils/Date';\nimport { getSymbolDisplayName } from '../../Trading/Helpers/active-symbols';\n\nexport const formatStatementTransaction = (transaction, currency, active_symbols = []) => {\n    const format_string           = 'DD MMM YYYY HH:mm:ss';\n    const transaction_time        = toMoment(transaction.transaction_time).format(format_string);\n    const payout                  = parseFloat(transaction.payout);\n    const amount                  = parseFloat(transaction.amount);\n    const balance                 = parseFloat(transaction.balance_after);\n    const should_exclude_currency = true;\n    const shortcode               = ['buy', 'sell'].includes(transaction.action_type) ? transaction.shortcode : null;\n    const display_name            = shortcode ? getSymbolDisplayName(\n        active_symbols,\n        getMarketInformation(shortcode).underlying\n    ) : '';\n\n    return {\n        action     : localize(toTitleCase(transaction.action_type) /* localize-ignore */), // handled in static_strings_app.js: 'Buy', 'Sell', 'Deposit', 'Withdrawal'\n        date       : transaction_time,\n        display_name,\n        refid      : transaction.transaction_id,\n        payout     : isNaN(payout) ? '-' : formatMoney(currency, payout, should_exclude_currency),\n        amount     : isNaN(amount) ? '-' : formatMoney(currency, amount, should_exclude_currency),\n        balance    : isNaN(balance) ? '-' : formatMoney(currency, balance, should_exclude_currency),\n        desc       : transaction.longcode.replace(/\\n/g, '<br />'),\n        id         : transaction.contract_id,\n        app_id     : transaction.app_id,\n        shortcode,\n        action_type: transaction.action_type,\n    };\n};\n","import { WS } from 'Services';\n\nexport const processPurchase = async(proposal_id, price) =>\n    WS.subscribeProposalOpenContractOnBuy({ buy: proposal_id, price });\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeSymbolAsync = async(symbol) => {\n    await ContractType.buildContractTypesConfig(symbol);\n};\n","import { localize }           from 'App/i18n';\nimport { isSessionAvailable } from 'Stores/Modules/Trading/Helpers/start-date';\nimport {\n    isHourValid,\n    isMinuteValid,\n    isTimeValid,\n    toMoment }                from 'Utils/Date';\n\nconst getValidationRules = () => ({\n    amount: {\n        rules: [\n            ['req'    , { message: localize('Amount is a required field.') }],\n            ['number' , { min: 0, type: 'float' }],\n        ],\n    },\n    barrier_1: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.barrier_count }],\n            ['custom' , { func: (value, options, store, inputs) => store.barrier_count > 1 ? +value > +inputs.barrier_2 : true, message: localize('Higher barrier must be higher than lower barrier.') }],\n        ],\n        trigger: 'barrier_2',\n    },\n    barrier_2: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count > 1 && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.barrier_count }],\n            ['custom' , { func: (value, options, store, inputs) => (/^[+-]/g.test(inputs.barrier_1) && /^[+-]/g.test(value)) || (/^(?![+-])/g.test(inputs.barrier_1) && /^(?![+-])/g.test(value)), message: localize('Both barriers should be relative or absolute') }],\n            ['custom' , { func: (value, options, store, inputs) => +inputs.barrier_1 > +value, message: localize('Lower barrier must be lower than higher barrier.') }],\n        ],\n        trigger: 'barrier_1',\n    },\n    duration: {\n        rules: [\n            ['req'    , { message: localize('Duration is a required field.') }],\n        ],\n    },\n    start_date: {\n        trigger: 'start_time',\n    },\n    expiry_date: {\n        trigger: 'expiry_time',\n    },\n    start_time: {\n        rules: [\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isTimeValid(value)  , message: localize('Please enter the start time in the format \"HH:MM\".') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isHourValid(value)  , message: localize('Hour must be between 0 and 23.') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isMinuteValid(value), message: localize('Minute must be between 0 and 59.') }],\n            ['custom' , { func: (value, options, store) => {\n                if (store.contract_start_type === 'spot') return true;\n                if (!isTimeValid(value)) return false;\n                const start_moment       = toMoment(store.start_date);\n                const start_moment_clone = start_moment.clone();\n                const [h, m] = value.split(':');\n                return isSessionAvailable(store.sessions, start_moment_clone.hour(h).minute(m), start_moment);\n            }, message: localize('Start time cannot be in the past.') }],\n        ],\n    },\n    expiry_time: {\n        rules: [\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isTimeValid(value)  , message: localize('Please enter the start time in the format \"HH:MM\".') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isHourValid(value)  , message: localize('Hour must be between 0 and 23.') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isMinuteValid(value), message: localize('Minute must be between 0 and 59.') }],\n            ['custom' , { func: (value, options, store) => {\n                if (store.contract_start_type === 'spot') return true;\n                if (!isTimeValid(value)) return false;\n                const start_moment       = toMoment(store.start_date);\n                const start_moment_clone = start_moment.clone();\n                const [h, m] = value.split(':');\n                return isSessionAvailable(store.sessions, start_moment_clone.hour(h).minute(m), start_moment);\n            }, message: localize('Expiry time cannot be in the past.') }],\n        ],\n    },\n});\n\nexport default getValidationRules;\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeContractTypeList = ({ contract_types_list, contract_type }) => (\n    ContractType.getContractType(contract_types_list, contract_type)\n);\n\nexport const onChangeContractType = (store) => (\n    ContractType.getContractValues(store)\n);\n","import ContractType      from '../Helpers/contract-type';\nimport { getExpiryType } from '../Helpers/duration';\n\nexport const onChangeExpiry = (store) => {\n    const contract_expiry_type = getExpiryType(store);\n\n    // TODO: there will be no barrier available if contract is only daily but client chooses intraday endtime. we should find a way to handle this.\n    const obj_barriers = store.contract_expiry_type !== contract_expiry_type && // barrier value changes for tick/intraday/daily\n        ContractType.getBarriers(store.contract_type, contract_expiry_type);\n\n    return {\n        contract_expiry_type,\n        ...obj_barriers,\n    };\n};\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeStartDate = async (store) => {\n    const {\n        contract_type,\n        duration_unit,\n        expiry_time,\n        start_date,\n        symbol } = store;\n    const server_time = store.root_store.common.server_time;\n    let {\n        start_time,\n        expiry_date,\n        expiry_type } = store;\n\n    start_time = start_time || server_time.clone().add(6, 'minute').format('HH:mm'); // when there is not a default value for start_time, it should be set more than 5 min after server_time\n\n    const obj_contract_start_type = ContractType.getStartType(start_date);\n    const contract_start_type     = obj_contract_start_type.contract_start_type;\n    const obj_sessions            = ContractType.getSessions(contract_type, start_date);\n    const sessions                = obj_sessions.sessions;\n    const obj_start_time          = ContractType.getStartTime(sessions, start_date, start_time);\n    start_time                    = obj_start_time.start_time;\n\n    const obj_duration_units_list = ContractType.getDurationUnitsList(contract_type, contract_start_type);\n    const duration_units_list     = obj_duration_units_list.duration_units_list;\n    const obj_duration_unit       = ContractType.getDurationUnit(duration_unit, contract_type, contract_start_type);\n\n    const obj_expiry_type = ContractType.getExpiryType(duration_units_list, expiry_type);\n    expiry_type           = obj_expiry_type.expiry_type;\n    const obj_expiry_date = ContractType.getExpiryDate(duration_units_list, expiry_date, expiry_type, start_date);\n    expiry_date           = obj_expiry_date.expiry_date;\n    \n    const trading_times          = await ContractType.getTradingTimes(expiry_date, symbol);\n    const obj_market_open_times  = { market_open_times: trading_times.open };\n    const obj_market_close_times = { market_close_times: trading_times.close };\n\n    const market_close_times     = obj_market_close_times.market_close_times;\n    const obj_expiry_time        = ContractType.getExpiryTime(\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    );\n\n    const obj_duration_min_max = ContractType.getDurationMinMax(contract_type, contract_start_type);\n\n    return {\n        ...obj_contract_start_type,\n        ...obj_duration_units_list,\n        ...obj_duration_min_max,\n        ...obj_duration_unit,\n        ...obj_sessions,\n        ...obj_start_time,\n        ...obj_expiry_date,\n        ...obj_expiry_time,\n        ...obj_expiry_type,\n        ...obj_market_open_times,\n        ...obj_market_close_times,\n    };\n};\n","import extend from 'extend';\n\nimport ContractTypeHelper from './contract-type';\nimport * as ContractType  from '../Actions/contract-type';\nimport * as Duration      from '../Actions/duration';\nimport * as StartDate     from '../Actions/start-date';\n\nexport const processTradeParams = async(store, new_state) => {\n    const snapshot = store.getSnapshot();\n    const functions = getMethodsList(store, new_state);\n\n    // To make sure that every function is invoked and affects the snapshot respectively, we have to use for instead of forEach\n    for (let i = 0; i < functions.length; i++){\n        extendOrReplace(snapshot, await functions[i](snapshot)); // eslint-disable-line no-await-in-loop\n    }\n\n    return snapshot;\n};\n\nconst getMethodsList = (store, new_state) => ([\n    ContractTypeHelper.getContractCategories,\n    ContractType.onChangeContractTypeList,\n    ...(/\\b(symbol|contract_type)\\b/.test(Object.keys(new_state)) || !store.contract_type ? // symbol/contract_type changed or contract_type not set yet\n        [ContractType.onChangeContractType] : []),\n    StartDate.onChangeStartDate,\n    Duration.onChangeExpiry, // it should be always after StartDate.onChangeStartDate\n]);\n\n// Some values need to be replaced, not extended\nconst extendOrReplace = (source, new_values) => {\n    const to_replace = ['contract_types_list', 'duration_units_list', 'form_components', 'market_close_times', 'trade_types'];\n\n    to_replace.forEach((key) => {\n        if (key in new_values) {\n            source[key] = undefined;\n        }\n    });\n\n    extend(true, source, new_values);\n};\n","import { getDecimalPlaces }                from '_common/base/currency_base';\nimport { isVisible }                       from '_common/common_functions';\nimport {\n    getPropertyValue,\n    isDeepEqual }                          from '_common/utility';\nimport {\n    convertToUnix,\n    toMoment }                             from 'Utils/Date';\n\nconst map_error_field = {\n    barrier    : 'barrier_1',\n    barrier2   : 'barrier_2',\n    date_expiry: 'expiry_date',\n};\n\nexport const getProposalErrorField = (response) => {\n    const error_field = getPropertyValue(response, ['error', 'details', 'field']);\n    if (!error_field) {\n        return null;\n    }\n    const error_id = map_error_field[error_field] || error_field;\n    const el_error = document.getElementsByName(error_id)[0];\n    return (el_error && isVisible(el_error)) ? error_id : null;\n};\n\nexport const getProposalInfo = (store, response, obj_prev_contract_basis) => {\n    const proposal   = response.proposal || {};\n    const profit     = (proposal.payout - proposal.ask_price) || 0;\n    const returns    = profit * 100 / (proposal.ask_price || 1);\n    const stake      = proposal.display_value;\n    const basis_list = store.basis_list;\n\n    const contract_basis = (basis_list.find(o => o.value !== store.basis));\n    const is_stake       = contract_basis.text === 'Stake';\n    const price          = is_stake ? stake : proposal[contract_basis.value];\n    let has_increased    = price > obj_prev_contract_basis.value;\n\n    if (!obj_prev_contract_basis.value || price === obj_prev_contract_basis.value) {\n        has_increased = null;\n    }\n\n    const obj_contract_basis = {\n        text : contract_basis.text || '',\n        value: price || '',\n    };\n\n    return {\n        id               : proposal.id || '',\n        has_error        : !!response.error,\n        has_error_details: !!getProposalErrorField(response),\n        has_increased,\n        message          : proposal.longcode || response.error.message,\n        obj_contract_basis,\n        payout           : proposal.payout,\n        profit           : profit.toFixed(getDecimalPlaces(store.currency)),\n        returns          : `${returns.toFixed(2)}%`,\n        stake,\n    };\n};\n\nexport const createProposalRequests = (store) => {\n    const requests = {};\n\n    Object.keys(store.trade_types).forEach((type) => {\n        const new_req     = createProposalRequestForContract(store, type);\n        const current_req = store.proposal_requests[type];\n        if (!isDeepEqual(new_req, current_req)) {\n            requests[type] = new_req;\n        }\n    });\n\n    return requests;\n};\n\nconst createProposalRequestForContract = (store, type_of_contract) => {\n    const obj_expiry = {};\n    if (store.expiry_type === 'endtime') {\n        const expiry_date = toMoment(store.expiry_date);\n        obj_expiry.date_expiry = convertToUnix(expiry_date.unix(), store.expiry_time);\n    }\n\n    return {\n        proposal     : 1,\n        subscribe    : 1,\n        amount       : parseFloat(store.amount),\n        basis        : store.basis,\n        contract_type: type_of_contract,\n        currency     : store.root_store.client.currency,\n        symbol       : store.symbol,\n        ...(\n            store.start_date &&\n            { date_start: convertToUnix(store.start_date, store.start_time) }\n        ),\n        ...(\n            store.expiry_type === 'duration' ?\n                {\n                    duration     : parseInt(store.duration),\n                    duration_unit: store.duration_unit,\n                }\n                :\n                obj_expiry\n        ),\n        ...(\n            (store.barrier_count > 0 || store.form_components.indexOf('last_digit') !== -1) &&\n            { barrier: store.barrier_1 || store.last_digit }\n        ),\n        ...(\n            store.barrier_count === 2 &&\n            { barrier2: store.barrier_2 }\n        ),\n    };\n};\n","import debounce                       from 'lodash.debounce';\nimport {\n    action,\n    computed,\n    observable,\n    reaction,\n    runInAction }                     from 'mobx';\nimport BinarySocket                   from '_common/base/socket_base';\nimport { localize }                   from 'App/i18n';\nimport {\n    cloneObject,\n    isEmptyObject,\n    getPropertyValue }                from '_common/utility';\nimport {\n    getMinPayout,\n    isCryptocurrency }                from '_common/base/currency_base';\nimport { WS }                         from 'Services';\nimport { isDigitTradeType }           from 'Modules/Trading/Helpers/digits';\nimport { processPurchase }            from './Actions/purchase';\nimport * as Symbol                    from './Actions/symbol';\nimport getValidationRules             from './Constants/validation-rules';\nimport {\n    pickDefaultSymbol,\n    showUnavailableLocationError,\n    isMarketClosed,\n}                                     from './Helpers/active-symbols';\nimport { setChartBarrier }            from './Helpers/chart';\nimport ContractType                   from './Helpers/contract-type';\nimport {\n    convertDurationLimit,\n    resetEndTimeOnVolatilityIndices } from './Helpers/duration';\nimport { processTradeParams }         from './Helpers/process';\nimport {\n    createProposalRequests,\n    getProposalErrorField,\n    getProposalInfo }                 from './Helpers/proposal';\nimport { BARRIER_COLORS }             from '../SmartChart/Constants/barriers';\nimport BaseStore                      from '../../base-store';\n\nconst store_name = 'trade_store';\n\nexport default class TradeStore extends BaseStore {\n    // Control values\n    @observable is_trade_component_mounted = false;\n    @observable is_purchase_enabled        = false;\n    @observable is_trade_enabled           = false;\n    @observable is_equal                   = 0;\n\n    // Underlying\n    @observable symbol;\n    @observable is_market_closed = false;\n    @observable previous_symbol = '';\n    @observable active_symbols = [];\n\n    // Contract Type\n    @observable contract_expiry_type = '';\n    @observable contract_start_type  = '';\n    @observable contract_type        = '';\n    @observable contract_types_list  = {};\n    @observable form_components      = [];\n    @observable trade_types          = {};\n\n    // Amount\n    @observable amount     = 10;\n    @observable basis      = '';\n    @observable basis_list = [];\n    @observable currency   = '';\n\n    // Duration\n    @observable duration            = 5;\n    @observable duration_unit       = '';\n    @observable duration_units_list = [];\n    @observable duration_min_max    = {};\n    @observable expiry_date         = '';\n    @observable expiry_time         = '';\n    @observable expiry_type         = 'duration';\n\n    // Barrier\n    @observable barrier_1     = '';\n    @observable barrier_2     = '';\n    @observable barrier_count = 0;\n\n    // Start Time\n    @observable start_date       = Number(0); // Number(0) refers to 'now'\n    @observable start_dates_list = [];\n    @observable start_time       = null;\n    @observable sessions         = [];\n\n    @observable market_open_times = [];\n    // End Date Time\n    /**\n     * An array that contains market closing time.\n     *\n     * e.g. [\"04:00:00\", \"08:00:00\"]\n     *\n     */\n    @observable market_close_times = [];\n\n    // Last Digit\n    @observable last_digit = 5;\n\n    // Purchase\n    @observable proposal_info = {};\n    @observable purchase_info = {};\n\n    debouncedProposal = debounce(this.requestProposal, 500);\n    proposal_requests = {};\n\n    initial_barriers;\n    is_initial_barrier_applied = false;\n\n    @action.bound\n    init = async () => {\n        // To be sure that the website_status response has been received before processing trading page.\n        await BinarySocket.wait('authorize', 'website_status');\n        action(async() => {\n            this.active_symbols = await WS.activeSymbols().active_symbols;\n        });\n    };\n\n    constructor({ root_store }) {\n        const local_storage_properties = [\n            'amount',\n            'barrier_1',\n            'barrier_2',\n            'basis',\n            'contract_start_type',\n            'contract_type',\n            'duration',\n            'duration_unit',\n            'expiry_date',\n            'expiry_type',\n            'is_equal',\n            'last_digit',\n            'start_date',\n            'start_time',\n            'symbol',\n        ];\n        super({\n            root_store,\n            local_storage_properties,\n            store_name,\n            validation_rules: getValidationRules(),\n        });\n\n        // Adds intercept to change min_max value of duration validation\n        reaction(\n            () => [this.contract_expiry_type, this.duration_min_max, this.duration_unit, this.expiry_type],\n            () => {\n                this.changeDurationValidationRules();\n            },\n        );\n        reaction(\n            () => this.is_equal,\n            () => {\n                this.onAllowEqualsChange();\n            },\n        );\n        reaction(\n            () => this.symbol,\n            () => {\n                const date = resetEndTimeOnVolatilityIndices(this.symbol, this.expiry_type);\n                if (date) {\n                    this.expiry_date = date;\n                }\n            }\n        );\n        reaction(\n            () => this.duration_unit,\n            () => {\n                this.contract_expiry_type = this.duration_unit === 't' ? 'tick' : 'intraday';\n            }\n        );\n    }\n\n    @computed\n    get is_symbol_in_active_symbols() {\n        return this.active_symbols\n            .some(symbol_info => symbol_info.symbol === this.symbol && symbol_info.exchange_is_open === 1);\n    }\n\n    @action.bound\n    refresh = () => {\n        this.proposal_info     = {};\n        this.purchase_info     = {};\n        this.proposal_requests = {};\n        WS.forgetAll('proposal');\n    };\n\n    @action.bound\n    clearContract = () => {\n        if (this.root_store.modules.smart_chart.is_contract_mode) {\n            this.root_store.modules.contract_trade.onCloseContract();\n        }\n    };\n\n    @action.bound\n    setDefaultSymbol() {\n        if (!this.is_symbol_in_active_symbols) {\n            this.processNewValuesAsync({\n                symbol: pickDefaultSymbol(this.active_symbols),\n            });\n        }\n    }\n\n    @action.bound\n    async setActiveSymbols() {\n        const { active_symbols, error } = this.smart_chart.should_refresh_active_symbols ?\n            // if SmartCharts has requested active_symbols, we wait for the response\n            await BinarySocket.wait('active_symbols')\n            : // else requests new active_symbols\n            await WS.activeSymbols({ forced: true });\n\n        if (error) {\n            this.root_store.common.showError(localize('Trading is unavailable at this time.'));\n            this.root_store.ui.setAppLoading(false);\n            return;\n        } else if (!active_symbols || !active_symbols.length) {\n            showUnavailableLocationError(this.root_store.common.showError);\n            this.root_store.ui.setAppLoading(false);\n            return;\n        }\n\n        this.processNewValuesAsync({ active_symbols });\n    }\n\n    @action.bound\n    async setContractTypes() {\n        if (this.symbol && this.is_symbol_in_active_symbols) {\n            await Symbol.onChangeSymbolAsync(this.symbol);\n            runInAction(() => {\n                this.processNewValuesAsync({\n                    ...ContractType.getContractValues(this),\n                    ...ContractType.getContractCategories(),\n                });\n            });\n        }\n    }\n\n    @action.bound\n    async prepareTradeStore() {\n        this.smart_chart      = this.root_store.modules.smart_chart;\n        this.currency         = this.root_store.client.currency;\n        this.initial_barriers = { barrier_1: this.barrier_1, barrier_2: this.barrier_2 };\n\n        await BinarySocket.wait('authorize');\n        await this.setActiveSymbols();\n        runInAction(async() => {\n            this.setDefaultSymbol();\n            await this.setContractTypes();\n            runInAction(() => {\n                this.processNewValuesAsync({\n                    is_market_closed: isMarketClosed(this.active_symbols, this.symbol),\n                });\n            });\n        });\n    }\n\n    @action.bound\n    onChangeMultiple(values) {\n        Object.keys(values).forEach((name) => {\n            if (!(name in this)) {\n                throw new Error(`Invalid Argument: ${name}`);\n            }\n        });\n\n        this.processNewValuesAsync({ ...values }, true);\n    }\n\n    @action.bound\n    onChange(e) {\n        const { name, value } = e.target;\n\n        // save trade_chart_symbol upon user change\n        if (name === 'symbol' && value) {\n            this.root_store.modules.smart_chart.trade_chart_symbol = value;\n        }\n\n        if (name === 'currency') {\n            this.root_store.client.selectCurrency(value);\n        } else if (name === 'expiry_date') {\n            this.expiry_time = null;\n        } else if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n\n        this.validateAllProperties();\n        this.processNewValuesAsync({ [name]: value }, true);\n    }\n\n    @action.bound\n    setPreviousSymbol(symbol) {\n        if (this.previous_symbol !== symbol) this.previous_symbol = symbol;\n    }\n\n    @action.bound\n    async resetPreviousSymbol() {\n        this.setMarketStatus(isMarketClosed(this.active_symbols, this.previous_symbol));\n        await Symbol.onChangeSymbolAsync(this.previous_symbol);\n        runInAction(() => {\n            this.previous_symbol = ''; // reset the symbol to default\n        });\n    }\n\n    @action.bound\n    onHoverPurchase(is_over, contract_type) {\n        if (this.is_purchase_enabled) {\n            this.smart_chart.updateBarrierShade(is_over, contract_type);\n        }\n    }\n\n    @action.bound\n    onPurchase(proposal_id, price, type) {\n        if (!this.is_purchase_enabled) return;\n        if (proposal_id) {\n            this.is_purchase_enabled = false;\n            processPurchase(proposal_id, price).then(action((response) => {\n                if (this.proposal_info[type].id !== proposal_id) {\n                    this.smart_chart.cleanupContractChartView();\n                    this.smart_chart.applySavedTradeChartLayout();\n                    throw new Error('Proposal ID does not match.');\n                }\n                if (response.buy) {\n                    this.smart_chart.switchToContractMode();\n                    const contract_data = {\n                        ...this.proposal_requests[type],\n                        ...this.proposal_info[type],\n                        buy_price: response.buy.buy_price,\n                    };\n                    const {\n                        contract_id,\n                        longcode,\n                        start_time,\n                    } = response.buy;\n                    // toggle smartcharts to contract mode\n                    if (contract_id) {\n                        // NOTE: changing chart granularity and chart_type has to be done in a different render cycle\n                        // so we have to set chart granularity to zero, and change the chart_type to 'mountain' first,\n                        // and then set the chart view to the start_time\n                        this.smart_chart.setChartView(start_time);\n                        // draw the start time line and show longcode then mount contract\n                        this.root_store.modules.contract_trade.drawContractStartTime(start_time, longcode, contract_id);\n                        this.root_store.ui.openPositionsDrawer();\n                    }\n                    this.root_store.gtm.pushPurchaseData(contract_data);\n                } else if (response.error) {\n                    // using javascript to disable purchase-buttons manually to compensate for mobx lag\n                    this.disablePurchaseButtons();\n                    this.root_store.common.services_error = {\n                        type: response.msg_type,\n                        ...response.error,\n                    };\n                    this.root_store.ui.toggleServicesErrorModal(true);\n                }\n                WS.forgetAll('proposal');\n                this.purchase_info = response;\n                this.is_purchase_enabled = true;\n            }));\n        }\n    }\n\n    disablePurchaseButtons = () => {\n        const el_purchase_value    = document.getElementsByClassName('trade-container__price-info');\n        const el_purchase_buttons  = document.getElementsByClassName('btn-purchase');\n        [].forEach.bind(el_purchase_buttons, (el) => {\n            el.classList.add('btn-purchase--disabled');\n        })();\n        [].forEach.bind(el_purchase_value, (el) => {\n            el.classList.add('trade-container__price-info--fade');\n        })();\n    }\n\n    /**\n     * Updates the store with new values\n     * @param  {Object} new_state - new values to update the store with\n     * @return {Object} returns the object having only those values that are updated\n     */\n    @action.bound\n    updateStore(new_state) {\n        Object.keys(cloneObject(new_state)).forEach((key) => {\n            if (key === 'root_store' || ['validation_rules', 'validation_errors', 'currency', 'smart_chart'].indexOf(key) > -1) return;\n            if (JSON.stringify(this[key]) === JSON.stringify(new_state[key])) {\n                delete new_state[key];\n            } else {\n                if (key === 'symbol') {\n                    this.is_purchase_enabled = false;\n                    this.is_trade_enabled    = false;\n                }\n\n                if (new_state.start_date && typeof new_state.start_date === 'string') {\n                    new_state.start_date = parseInt(new_state.start_date);\n                }\n\n                this[key] = new_state[key];\n\n                // validation is done in mobx intercept (base_store.js)\n                // when barrier_1 is set, it is compared with store.barrier_2 (which is not updated yet)\n                if (key === 'barrier_2' && new_state.barrier_1) {\n                    this.barrier_1 = new_state.barrier_1; // set it again, after barrier_2 is updated in store\n                }\n            }\n        });\n        return new_state;\n    }\n\n    async processNewValuesAsync(\n        obj_new_values = {},\n        is_changed_by_user = false,\n        obj_old_values = {},\n        should_forget_first = true,\n    ) {\n        // Sets the default value to Amount when Currency has changed from Fiat to Crypto and vice versa.\n        // The source of default values is the website_status response.\n        if (should_forget_first) WS.forgetAll('proposal');\n        if (is_changed_by_user &&\n            /\\bcurrency\\b/.test(Object.keys(obj_new_values))\n        ) {\n            const prev_currency = obj_old_values &&\n            !isEmptyObject(obj_old_values) &&\n            obj_old_values.currency ? obj_old_values.currency : this.currency;\n            if (isCryptocurrency(obj_new_values.currency) !== isCryptocurrency(prev_currency)) {\n                obj_new_values.amount = is_changed_by_user && obj_new_values.amount ?\n                    obj_new_values.amount : getMinPayout(obj_new_values.currency);\n            }\n            this.currency = obj_new_values.currency;\n        }\n\n        let has_only_forward_starting_contracts;\n\n        if (Object.keys(obj_new_values).includes('symbol')) {\n            this.setPreviousSymbol(this.symbol);\n            await Symbol.onChangeSymbolAsync(obj_new_values.symbol);\n            this.setMarketStatus(isMarketClosed(this.active_symbols, obj_new_values.symbol));\n            has_only_forward_starting_contracts =\n                ContractType.getContractCategories().has_only_forward_starting_contracts;\n        }\n        // TODO: remove all traces of setHasOnlyForwardingContracts and has_only_forward_starting_contracts in app\n        //  once future contracts are implemented\n        this.root_store.ui.setHasOnlyForwardingContracts(has_only_forward_starting_contracts);\n        if (has_only_forward_starting_contracts) return;\n\n        const new_state = this.updateStore(cloneObject(obj_new_values));\n\n        if (is_changed_by_user || /\\b(symbol|contract_types_list)\\b/.test(Object.keys(new_state))) {\n            this.updateStore({ // disable purchase button(s), clear contract info\n                is_purchase_enabled: false,\n                proposal_info      : {},\n            });\n\n            // To prevent infinite loop when changing from advanced end_time to digit type contract\n            if (obj_new_values.contract_type && this.root_store.ui.is_advanced_duration) {\n                if (isDigitTradeType(obj_new_values.contract_type)) {\n                    this.barrier_1     = '';\n                    this.barrier_2     = '';\n                    this.expiry_type = 'duration';\n                    this.root_store.ui.is_advanced_duration = false;\n                }\n            }\n\n            if (!this.smart_chart.is_contract_mode) {\n                const is_barrier_changed = 'barrier_1' in new_state || 'barrier_2' in new_state;\n                if (is_barrier_changed) {\n                    this.smart_chart.updateBarriers(this.barrier_1, this.barrier_2);\n                } else {\n                    this.smart_chart.removeBarriers();\n                }\n            }\n\n            const snapshot            = await processTradeParams(this, new_state);\n            snapshot.is_trade_enabled = true;\n\n            this.updateStore({\n                ...snapshot,\n                ...(!this.is_initial_barrier_applied ? this.initial_barriers : {}),\n            });\n            this.is_initial_barrier_applied = true;\n\n            if (/\\bcontract_type\\b/.test(Object.keys(new_state))) {\n                this.validateAllProperties();\n            }\n\n            if (!this.smart_chart.is_contract_mode) {\n                this.debouncedProposal();\n            }\n        }\n    }\n\n    @action.bound\n    clearPurchaseInfo() {\n        this.purchase_info = {};\n        this.proposal_requests = {};\n        this.proposal_info = {};\n    }\n\n    @action.bound\n    requestProposal() {\n        const requests = createProposalRequests(this);\n\n        if (Object.values(this.validation_errors).some(e => e.length)) {\n            this.proposal_info = {};\n            this.purchase_info = {};\n            WS.forgetAll('proposal');\n            return;\n        }\n\n        if (!isEmptyObject(requests)) {\n            this.proposal_requests = requests;\n            this.proposal_info     = {};\n            this.purchase_info     = {};\n            this.root_store.modules.contract_trade.setIsDigitContract(Object.keys(this.proposal_requests)[0]);\n\n            Object.keys(this.proposal_requests).forEach((type) => {\n                WS.subscribeProposal(this.proposal_requests[type], this.onProposalResponse);\n            });\n        }\n        this.root_store.ui.resetPurchaseStates();\n    }\n\n    @action.bound\n    setMarketStatus(status) {\n        this.is_market_closed = status;\n    }\n\n    @action.bound\n    onProposalResponse(response) {\n        const contract_type           = response.echo_req.contract_type;\n        const prev_proposal_info      = getPropertyValue(this.proposal_info, contract_type) || {};\n        const obj_prev_contract_basis = getPropertyValue(prev_proposal_info, 'obj_contract_basis') || {};\n\n        this.proposal_info  = {\n            ...this.proposal_info,\n            [contract_type]: getProposalInfo(this, response, obj_prev_contract_basis),\n        };\n\n        if (!this.smart_chart.is_contract_mode) {\n            const color = this.root_store.ui.is_dark_mode_on ? BARRIER_COLORS.DARK_GRAY : BARRIER_COLORS.GRAY;\n            const barrier_config = { color };\n            setChartBarrier(this.smart_chart, response, this.onChartBarrierChange, barrier_config);\n        }\n\n        if (response.error) {\n            const error_id = getProposalErrorField(response);\n            if (error_id) {\n                this.setValidationErrorMessages(error_id, [response.error.message]);\n            }\n        } else {\n            this.validateAllProperties();\n        }\n\n        this.is_purchase_enabled = true;\n    }\n\n    @action.bound\n    onChartBarrierChange(barrier_1, barrier_2) {\n        this.processNewValuesAsync({ barrier_1, barrier_2 }, true);\n    }\n\n    @action.bound\n    onAllowEqualsChange() {\n        this.processNewValuesAsync({ contract_type: parseInt(this.is_equal) ? 'rise_fall_equal' : 'rise_fall' }, true);\n    }\n\n    @action.bound\n    updateSymbol(underlying) {\n        if (!underlying) return;\n        this.onChange({\n            target: {\n                name : 'symbol',\n                value: underlying,\n            },\n        });\n    }\n\n    @action.bound\n    changeDurationValidationRules() {\n        if (this.expiry_type === 'endtime') {\n            this.validation_errors.duration = [];\n            return;\n        }\n\n        const index  = this.validation_rules.duration.rules.findIndex(item => item[0] === 'number');\n        const limits = this.duration_min_max[this.contract_expiry_type] || false;\n\n        if (limits) {\n            const duration_options = {\n                min: convertDurationLimit(+limits.min, this.duration_unit),\n                max: convertDurationLimit(+limits.max, this.duration_unit),\n            };\n\n            if (index > -1) {\n                this.validation_rules.duration.rules[index][1] = duration_options;\n            } else {\n                this.validation_rules.duration.rules.push(['number', duration_options]);\n            }\n            this.validateProperty('duration', this.duration);\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => {\n            await this.processNewValuesAsync(\n                { currency: this.root_store.client.currency },\n                true,\n                { currency: this.currency },\n                false,\n            );\n            await this.clearContract();\n            await this.resetErrorServices();\n            await this.refresh();\n            return resolve(this.debouncedProposal());\n        });\n    }\n\n    @action.bound\n    resetErrorServices() {\n        this.root_store.ui.toggleServicesErrorModal(false);\n    }\n\n    @action.bound\n    async onMount() {\n        this.onLoadingMount();\n        await this.prepareTradeStore();\n        this.debouncedProposal();\n        runInAction(() => {\n            this.is_trade_component_mounted = true;\n        });\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    onLoadingMount() {\n        const first_timeout = setTimeout(() => {\n            const loading_message = localize('Your network connection might be slow.');\n            const secondary_message = localize('Please wait for the page to finish loading.');\n            this.root_store.ui.setSlowLoading(true, [loading_message, secondary_message]);\n        }, 8000);\n\n        const second_timeout = setTimeout(() => {\n            const loading_message = localize('This page is taking too long to load.');\n            const secondary_message = localize('Please wait for the page to finish loading or check your network connection.');\n            this.root_store.ui.setSlowLoading(true, [loading_message, secondary_message]);\n        }, 15000);\n\n        const loading_interval = setInterval(() => {\n            if (this.smart_chart) {\n                if (this.smart_chart.is_chart_ready && this.is_trade_component_mounted) {\n                    this.root_store.ui.setAppLoading(false);\n                    clearInterval(loading_interval);\n                    clearTimeout(first_timeout);\n                    clearTimeout(second_timeout);\n                }\n            }\n        }, 400);\n    }\n\n    @action.bound\n    restoreTradeChart() {\n        const smart_chart_store = this.root_store.modules.smart_chart;\n        if (smart_chart_store.trade_chart_symbol &&\n            (smart_chart_store.trade_chart_symbol !== this.symbol)) {\n            this.symbol = smart_chart_store.trade_chart_symbol;\n        }\n        if (smart_chart_store.trade_chart_granularity &&\n            (smart_chart_store.trade_chart_granularity !== smart_chart_store.granularity)) {\n            smart_chart_store.granularity = smart_chart_store.trade_chart_granularity;\n        }\n        if (smart_chart_store.trade_chart_chart_type !== smart_chart_store.chart_type) {\n            smart_chart_store.chart_type = smart_chart_store.trade_chart_type;\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.proposal_info = {};\n        this.purchase_info = {};\n        WS.forgetAll('proposal');\n        this.resetErrorServices();\n        this.restoreTradeChart();\n        this.is_trade_component_mounted = false;\n        // clear url query string\n        window.history.pushState(null, null, window.location.pathname);\n    }\n}\n","export const setChartBarrier = (SmartChartStore, proposal_response, onBarrierChange, barrier_config) => {\n    const { barrier, barrier2, contract_type } = proposal_response.echo_req;\n    SmartChartStore.createBarriers(\n        contract_type,\n        barrier,\n        barrier2,\n        onBarrierChange,\n        barrier_config,\n    );\n};\n","import CashierStore        from './Cashier/cashier-store';\nimport ContractReplayStore from './Contract/contract-replay-store';\nimport ContractTradeStore  from './Contract/contract-trade-store';\nimport PortfolioStore      from './Portfolio/portfolio-store';\nimport ProfitTableStore    from './Profit/profit-store';\nimport SmartChartStore     from './SmartChart/smart-chart-store';\nimport StatementStore      from './Statement/statement-store';\nimport TradeStore          from './Trading/trade-store';\n\nexport default class ModulesStore {\n    constructor(root_store) {\n        this.cashier         = new CashierStore({ root_store });\n        this.contract_replay = new ContractReplayStore({ root_store });\n        this.contract_trade  = new ContractTradeStore({ root_store });\n        this.portfolio       = new PortfolioStore({ root_store });\n        this.profit_table    = new ProfitTableStore({ root_store });\n        this.smart_chart     = new SmartChartStore({ root_store });\n        this.statement       = new StatementStore({ root_store });\n        this.trade           = new TradeStore({ root_store });\n\n    }\n}\n","import {\n    action,\n    autorun,\n    computed,\n    observable }             from 'mobx';\nimport {\n    MAX_MOBILE_WIDTH,\n    MAX_TABLET_WIDTH }       from 'Constants/ui';\nimport { unique }            from '_common/utility';\nimport BaseStore             from './base-store';\nimport { sortNotifications } from '../App/Components/Elements/NotificationMessage';\n\nconst store_name = 'ui_store';\n\nexport default class UIStore extends BaseStore {\n    @observable is_main_drawer_on          = false;\n    @observable is_notifications_drawer_on = false;\n    @observable is_positions_drawer_on     = false;\n    @observable is_reports_visible         = false;\n\n    @observable is_cashier_modal_on     = false;\n    @observable is_dark_mode_on         = false;\n    @observable is_settings_modal_on    = false;\n    @observable is_accounts_switcher_on = false;\n\n    @observable is_loading              = true;\n    @observable is_slow_loading         = false;\n    @observable slow_loading_status     = [];\n\n    @observable has_only_forward_starting_contracts = false;\n\n    // Purchase Controls\n    // @observable is_purchase_confirm_on    = false;\n    @observable is_services_error_visible             = false;\n    @observable is_unsupported_contract_modal_visible = false;\n    @observable is_account_signup_modal_visible       = false;\n    // @observable is_purchase_lock_on       = false;\n\n    // SmartCharts Controls\n    // TODO: enable asset information\n    // @observable is_chart_asset_info_visible = true;\n    @observable is_chart_countdown_visible  = false;\n    @observable is_chart_layout_default     = true;\n\n    // PWA event and config\n    @observable pwa_prompt_event = null;\n\n    @observable screen_width = window.innerWidth;\n\n    @observable notification_messages = [];\n    @observable push_notifications = [];\n\n    @observable is_advanced_duration   = false;\n    @observable advanced_duration_unit = 't';\n    @observable advanced_expiry_type   = 'duration';\n    @observable simple_duration_unit   = 't';\n    @observable duration_t             = 5;\n    @observable duration_s             = 15;\n    @observable duration_m             = 3;\n    @observable duration_h             = 1;\n    @observable duration_d             = 1;\n\n    // purchase button states\n    @observable purchase_states = [ false, false ];\n\n    @observable is_fully_blurred = false;\n    @observable is_app_blurred   = false;\n    @observable is_route_blurred = false;\n    @observable show_positions_toggle = true;\n\n    @observable active_cashier_tab = 'deposit';\n\n    getDurationFromUnit = (unit) => this[`duration_${unit}`];\n\n    constructor() {\n        const local_storage_properties = [\n            'advanced_duration_unit',\n            'is_advanced_duration',\n            'advanced_expiry_type',\n            'simple_duration_unit',\n            'duration_t',\n            'duration_s',\n            'duration_m',\n            'duration_h',\n            'duration_d',\n            'is_chart_asset_info_visible',\n            'is_chart_countdown_visible',\n            'is_chart_layout_default',\n            'is_dark_mode_on',\n            'is_positions_drawer_on',\n            'is_reports_visible',\n            // 'is_purchase_confirm_on',\n            // 'is_purchase_lock_on',\n        ];\n\n        super({ local_storage_properties, store_name });\n        window.addEventListener('resize', this.handleResize);\n        autorun(() => {\n            if (this.is_dark_mode_on) {\n                document.body.classList.remove('theme--light');\n                document.body.classList.add('theme--dark');\n            } else {\n                document.body.classList.remove('theme--dark');\n                document.body.classList.add('theme--light');\n            }\n        });\n    }\n\n    @action.bound\n    onChangeUiStore({ name, value }) {\n        if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n        this[name] = value;\n    }\n\n    @action.bound\n    handleResize() {\n        this.screen_width = window.innerWidth;\n        if (this.is_mobile) {\n            this.is_positions_drawer_on = false;\n        }\n    }\n\n    @computed\n    get is_mobile() {\n        return this.screen_width <= MAX_MOBILE_WIDTH;\n    }\n\n    @computed\n    get is_tablet() {\n        return this.screen_width <= MAX_TABLET_WIDTH;\n    }\n\n    @action.bound\n    showRouteBlur() {\n        this.is_route_blurred = true;\n    }\n\n    @action.bound\n    hideRouteBlur() {\n        this.is_route_blurred = false;\n    }\n\n    @action.bound\n    showAppBlur() {\n        this.is_app_blurred = true;\n    }\n\n    @action.bound\n    hideAppBlur() {\n        this.is_app_blurred = false;\n    }\n\n    @action.bound\n    showFullBlur() {\n        this.is_fully_blurred = true;\n    }\n\n    @action.bound\n    hideFullBlur() {\n        this.is_fully_blurred = false;\n    }\n\n    @action.bound\n    toggleAccountsDialog() {\n        this.is_accounts_switcher_on = !this.is_accounts_switcher_on;\n    }\n\n    @action.bound\n    setAppLoading(is_visible) {\n        this.is_loading = is_visible;\n    }\n\n    @action.bound\n    setPurchaseState(index) {\n        this.purchase_states[index] = true;\n\n        // TODO: Find better solution in the future for hack below\n        // Force the animation to start quicker by manually assigning class to compensate for mobx getter lag\n        // Because mobx has a delay before it can receive the updated prop used to assign the animation class\n        const el_purchase_buttons = document.getElementsByClassName('btn-purchase');\n        if (el_purchase_buttons[index]) {\n            el_purchase_buttons[index].classList.add('btn-purchase--swoosh');\n        }\n        // UI/UX wants button to remain green until transition is finished and only then disable buttons\n        setTimeout(() => {\n            [].forEach.bind(el_purchase_buttons, (el) => {\n                el.classList.add('btn-purchase--disabled');\n            })();\n        }, 250);\n    }\n\n    @action.bound\n    resetPurchaseStates() {\n        this.purchase_states = [ false, false ];\n    }\n\n    @action.bound\n    toggleChartLayout() {\n        this.is_chart_layout_default = !this.is_chart_layout_default;\n    }\n\n    // TODO: enable asset information\n    // @action.bound\n    // toggleChartAssetInfo() {\n    //     this.is_chart_asset_info_visible = !this.is_chart_asset_info_visible;\n    // }\n\n    @action.bound\n    toggleChartCountdown() {\n        this.is_chart_countdown_visible = !this.is_chart_countdown_visible;\n    }\n\n    // @action.bound\n    // togglePurchaseLock() {\n    //     this.is_purchase_lock_on = !this.is_purchase_lock_on;\n    // }\n\n    // @action.bound\n    // togglePurchaseConfirmation() {\n    //     this.is_purchase_confirm_on = !this.is_purchase_confirm_on;\n    // }\n\n    @action.bound\n    toggleDarkMode() {\n        this.is_dark_mode_on = !this.is_dark_mode_on;\n        return this.is_dark_mode_on;\n    }\n\n    @action.bound\n    showPositionsFooterToggle() {\n        this.show_positions_toggle = true;\n    }\n\n    @action.bound\n    hidePositionsFooterToggle() {\n        this.show_positions_toggle = false;\n    }\n\n    @action.bound\n    toggleCashierModal() {\n        this.is_cashier_modal_on = !this.is_cashier_modal_on;\n    }\n\n    @action.bound\n    setCashierActiveTab(tab = 'deposit') {\n        if (this.active_cashier_tab !== tab) this.active_cashier_tab = tab;\n    }\n\n    @action.bound\n    toggleSettingsModal() {\n        this.is_settings_modal_on = !this.is_settings_modal_on;\n    }\n\n    @action.bound\n    openPositionsDrawer() { // show and hide Positions Drawer\n        this.is_positions_drawer_on = true;\n    }\n\n    @action.bound\n    togglePositionsDrawer() { // toggle Positions Drawer\n        this.is_positions_drawer_on = !this.is_positions_drawer_on;\n    }\n\n    @action.bound\n    toggleReports(is_visible) {\n        this.is_reports_visible = is_visible;\n    }\n\n    @action.bound\n    toggleServicesErrorModal(is_visible) {\n        this.is_services_error_visible = is_visible;\n    }\n\n    @action.bound\n    showMainDrawer() { // show main Drawer\n        this.is_main_drawer_on = true;\n    }\n\n    @action.bound\n    showNotificationsDrawer() { // show nofitications Drawer\n        this.is_notifications_drawer_on = true;\n    }\n\n    @action.bound\n    hideDrawers() { // hide both menu drawers\n        this.is_main_drawer_on = false;\n        this.is_notifications_drawer_on = false;\n    }\n\n    @action.bound\n    removePWAPromptEvent() {\n        this.pwa_prompt_event = null;\n    }\n\n    @action.bound\n    setPWAPromptEvent(e) {\n        this.pwa_prompt_event = e;\n    }\n\n    @action.bound\n    addNotification(notification) {\n        this.notification_messages = [...this.notification_messages, notification].sort(sortNotifications);\n    }\n\n    @action.bound\n    removeNotification(notification) {\n        const index = this.notification_messages.indexOf(notification);\n        if (index > -1) {\n            this.notification_messages.splice(index, 1);\n        }\n    }\n\n    @action.bound\n    removeAllNotifications() {\n        this.notification_messages = [];\n    }\n\n    @action.bound\n    setHasOnlyForwardingContracts(has_only_forward_starting_contracts) {\n        this.has_only_forward_starting_contracts = has_only_forward_starting_contracts;\n    }\n\n    @action.bound\n    setSlowLoading(status, message) {\n        this.is_slow_loading     = status;\n        this.slow_loading_status = message;\n    }\n\n    @action.bound\n    addNotificationBar(message) {\n        this.push_notifications.push(message);\n        this.push_notifications = unique(this.push_notifications, 'msg_type');\n    }\n\n    @action.bound\n    toggleUnsupportedContractModal(state_change = !this.is_unsupported_contract_modal_visible) {\n        this.is_unsupported_contract_modal_visible = state_change;\n    }\n\n    @action.bound\n    toggleAccountSignupModal(state_change = !this.is_unsupported_contract_modal_visible) {\n        this.is_account_signup_modal_visible = state_change;\n    }\n}\n","import ClientStore  from './client-store';\nimport CommonStore  from './common-store';\nimport GTMStore     from './gtm-store';\nimport ModulesStore from './Modules';\nimport UIStore      from './ui-store';\n\nexport default class RootStore {\n    constructor() {\n        this.client  = new ClientStore(this);\n        this.common  = new CommonStore();\n        this.modules = new ModulesStore(this);\n        this.ui      = new UIStore();\n        this.gtm     = new GTMStore(this);\n    }\n}\n","import { configure }        from 'mobx';\nimport Client               from '_common/base/client_base';\nimport NetworkMonitor       from 'Services/network-monitor';\nimport OutdatedBrowser      from 'Services/outdated-browser';\nimport RootStore            from 'Stores';\nimport { setStorageEvents } from 'Utils/Events/storage';\n\nconfigure({ enforceActions: 'observed' });\n\nconst initStore = () => {\n    Client.init();\n\n    const root_store = new RootStore();\n\n    setStorageEvents(root_store);\n\n    NetworkMonitor.init(root_store);\n    OutdatedBrowser.init(root_store);\n    root_store.client.init();\n    root_store.modules.trade.init();\n\n    return root_store;\n};\n\nexport default initStore;\n","export const setStorageEvents = (root_store) => {\n    window.addEventListener('storage', (evt) => {\n        switch (evt.key) {\n            case 'active_loginid':\n                if (document.hidden) {\n                    window.location.reload();\n                }\n                break;\n            case 'verification_code':\n                if (document.hidden && root_store.ui.is_cashier_modal_on && root_store.ui.active_cashier_tab === 'withdraw') {\n                    root_store.modules.cashier.clearVerification();\n                    root_store.ui.toggleCashierModal();\n                }\n            // no default\n        }\n    });\n};\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport ReactDOM                    from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { MobxProvider }            from 'Stores/connect';\nimport ErrorBoundary               from './Components/Elements/Errors/error-boundary.jsx';\nimport AppContents                 from './Containers/Layout/app-contents.jsx';\nimport Footer                      from './Containers/Layout/footer.jsx';\nimport Header                      from './Containers/Layout/header.jsx';\nimport Lazy                        from './Containers/Lazy';\nimport Modals                      from './Containers/Modals';\nimport Routes                      from './Containers/Routes/routes.jsx';\nimport './i18n';\n// eslint-disable-next-line import/extensions\nimport initStore                   from './app.js';\n// eslint-disable-next-line import/no-unresolved\nimport 'Sass/app.scss';\n// Check if device is touch capable\nconst isTouchDevice = 'ontouchstart' in document.documentElement;\n\nconst App = ({ root_store }) => {\n    const l = window.location;\n    const base = l.pathname.split('/')[1];\n    return (\n        <Router basename={/^\\/br_/.test(l.pathname) ? `/${base}` : null}>\n            <MobxProvider store={root_store}>\n                {\n                    root_store.ui.is_mobile || (root_store.ui.is_tablet && isTouchDevice) ?\n                        <Lazy\n                            ctor={() => import(/* webpackChunkName: \"work-in-progress\" */'./Containers/Wip')}\n                            should_load={root_store.ui.is_mobile || (root_store.ui.is_tablet && isTouchDevice)}\n                            has_progress={true}\n                        /> :\n                        <React.Fragment>\n                            <Header />\n                            <ErrorBoundary>\n                                <AppContents>\n                                    <Routes />\n                                    <Lazy\n                                        ctor={() => import(/* webpackChunkName: \"push-notification\" */'./Containers/push-notification.jsx')}\n                                        should_load={!root_store.ui.is_loading}\n                                        has_progress={false}\n                                    />\n                                </AppContents>\n                            </ErrorBoundary>\n                            <Footer />\n                            <Modals />\n                        </React.Fragment>\n                }\n            </MobxProvider>\n        </Router>\n    );\n};\n\nApp.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default App;\n\nconst root_store = initStore();\n\nconst wrapper = document.getElementById('deriv_app');\n// eslint-disable-next-line no-unused-expressions\nwrapper ? ReactDOM.render(<App root_store={root_store} />, wrapper) : false;\n","export default function register () { // Register the service worker\n    if (/* process.env.NODE_ENV === 'production' && */ 'serviceWorker' in navigator) {\n        window.addEventListener('load', () => {\n            let path_name = window.location.pathname;\n            path_name = /index\\.html/g.test(path_name) ? window.location.pathname.replace('index.html', '') : '';\n            const sw_url = `${path_name}service-worker.js`;\n            navigator.serviceWorker\n                .register(sw_url)\n                .then(registration => {\n                    registration.onupdatefound = () => {\n                        const installingWorker = registration.installing;\n                        installingWorker.onstatechange = () => {\n                            if (installingWorker.state === 'installed') {\n                                if (navigator.serviceWorker.controller) {\n                                    // At this point, the old content will have been purged and\n                                    // the fresh content will have been added to the cache.\n                                    // It's the perfect time to display a \"New content is\n                                    // available; please refresh.\" message in your web app.\n                                    console.log('New content is available; please refresh.'); // eslint-disable-line no-console\n                                } else {\n                                    // At this point, everything has been precached.\n                                    // It's the perfect time to display a\n                                    // \"Content is cached for offline use.\" message.\n                                    console.log('Content is cached for offline use.'); // eslint-disable-line no-console\n                                }\n                            }\n                        };\n                    };\n                })\n                .catch(error => {\n                    console.error('Error during service worker registration:', error); // eslint-disable-line no-console\n                });\n        });\n    }\n}\n\nexport function unregister () {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import classNames           from 'classnames';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport ReactDOM             from 'react-dom';\nimport posed, { PoseGroup } from 'react-pose';\nimport Icon                 from 'Assets/icon.jsx';\n\nconst FadeIn = posed.span({\n    enter: {\n        opacity   : 1,\n        transition: {\n            duration: 150,\n        },\n    },\n    exit: {\n        opacity   : 0,\n        transition: {\n            duration: 150,\n        },\n    },\n});\n\nclass PopoverBubble extends React.PureComponent {\n    calculatePosition = () => {\n        const { alignment, target_rectangle, margin = 0 } = this.props;\n\n        switch (alignment) {\n            case 'top': return {\n                left     : (target_rectangle.width / 2) + target_rectangle.left,\n                bottom   : (window.innerHeight - target_rectangle.top) + margin,\n                transform: 'translateX(-50%)',\n            };\n            case 'bottom': return {\n                left     : (target_rectangle.width / 2) + target_rectangle.left,\n                top      : target_rectangle.bottom + margin,\n                transform: 'translateX(-50%)',\n            };\n            case 'left': return {\n                right    : (window.innerWidth - target_rectangle.left) + margin,\n                top      : (target_rectangle.height / 2) + target_rectangle.top,\n                transform: 'translateY(-50%)',\n            };\n            case 'right': return {\n                left     : target_rectangle.right + margin,\n                top      : (target_rectangle.height / 2) + target_rectangle.top,\n                transform: 'translateY(-50%)',\n            };\n            default: return {\n                left: target_rectangle.left,\n                top : target_rectangle.top,\n            };\n        }\n    };\n\n    render() {\n        const {\n            alignment,\n            className,\n            has_error,\n            icon,\n            is_open,\n            message,\n            target_rectangle,\n        } = this.props;\n\n        if (!target_rectangle) return null;\n\n        const popover_bubble = (\n            <PoseGroup>\n                { is_open &&\n                <FadeIn key='fade_in' initialPose='exit' style={{ position: 'fixed', zIndex: 999 }}>\n                    <span\n                        style={ target_rectangle ? this.calculatePosition() : {}}\n                        data-popover-pos={alignment}\n                        className={classNames(\n                            className,\n                            'popover__bubble',\n                            { 'popover__bubble--error': has_error },\n                        )}\n                    >\n                        { icon === 'info' &&\n                            <i className='popover__bubble__icon'>\n                                <Icon icon='IconInfoBlue' />\n                            </i>\n                        }\n\n                        <span className='popover__bubble__text'>\n                            { message }\n                        </span>\n                        <span className='popover__bubble__arrow' />\n                    </span>\n                </FadeIn>\n                }\n            </PoseGroup>\n        );\n\n        return ReactDOM.createPortal(\n            popover_bubble,\n            document.getElementById('deriv_app')\n        );\n    }\n}\n\nPopoverBubble.propTypes = {\n    alignment       : PropTypes.string,\n    children        : PropTypes.node,\n    className       : PropTypes.string,\n    has_error       : PropTypes.bool,\n    icon            : PropTypes.string,\n    is_open         : PropTypes.bool,\n    margin          : PropTypes.number,\n    message         : PropTypes.string.isRequired,\n    target_rectangle: PropTypes.object,\n};\n\nexport default PopoverBubble;\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport Icon          from 'Assets/icon.jsx';\nimport PopoverBubble from './popover-bubble.jsx';\n\nclass Popover extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_open         : false,\n            target_rectangle: null,\n        };\n        this.target_reference = React.createRef();\n    }\n\n    componentDidMount() {\n        this.setState({\n            is_open         : this.props.has_error,\n            target_rectangle: this.target_reference.current.getBoundingClientRect(),\n        });\n    }\n\n    toggleOpen = () => {\n        this.setState({\n            is_open         : Boolean(this.props.message),\n            target_rectangle: this.target_reference.current.getBoundingClientRect(),\n        });\n    }\n\n    toggleClose = () => this.setState({ is_open: false });\n\n    render() {\n        const {\n            alignment,\n            children,\n            classNameBubble,\n            classNameTarget,\n            classNameTargetIcon,\n            disable_target_icon,\n            has_error,\n            icon,\n            margin,\n            message,\n        } = this.props;\n\n        const icon_class_name = classNames(classNameTargetIcon, icon);\n        return (\n            <div\n                className='popover'\n                onMouseEnter={this.toggleOpen}\n                onMouseLeave={this.toggleClose}\n            >\n                <div className={classNames(classNameTarget, 'popover__target')} ref={this.target_reference}>\n                    { !disable_target_icon &&\n                        <i className={message ? 'popover__target__icon' : 'popover__target__icon--disabled'}>\n                            {(icon === 'info')     && <Icon icon='IconInfoOutline' className={icon_class_name} /> }\n                            {(icon === 'question') && <Icon icon='IconQuestion'    className={icon_class_name} />}\n                            {(icon === 'dot')      && <Icon icon='IconRedDot'      className={icon_class_name} />}\n                        </i>\n                    }\n\n                    { children }\n                </div>\n\n                <PopoverBubble\n                    alignment={alignment}\n                    className={classNameBubble}\n                    has_error={has_error}\n                    icon={icon}\n                    is_open={this.state.is_open}\n                    target_rectangle={this.state.target_rectangle}\n                    margin={margin}\n                    message={message}\n                />\n            </div>\n        );\n    }\n}\n\nPopover.propTypes = {\n    alignment          : PropTypes.string,\n    children           : PropTypes.node,\n    classNameBubble    : PropTypes.string,\n    classNameTarget    : PropTypes.string,\n    classNameTargetIcon: PropTypes.string,\n    disable_target_icon: PropTypes.bool,\n    has_error          : PropTypes.bool,\n    icon               : PropTypes.string,\n    margin             : PropTypes.number,\n    message            : PropTypes.string,\n};\n\nexport default Popover;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Fieldset = ({\n    children,\n    className,\n    header,\n    is_center,\n    onMouseEnter,\n    onMouseLeave,\n}) => {\n    const fieldset_header_class = classNames('trade-container__fieldset-header', is_center ? 'center-text' : '');\n    const fieldset_info_class   = classNames('trade-container__fieldset-info', !is_center && 'trade-container__fieldset-info--left');\n\n    return (\n        <fieldset className={className} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            {!!header &&\n                <div className={fieldset_header_class}>\n                    <span className={fieldset_info_class}>{header}</span>\n                </div>\n            }\n            {children}\n        </fieldset>\n    );\n};\n\n// ToDo:\n// - Refactor Last Digit to keep the children as array type.\n//   Currently last_digit.jsx returns object (React-Element) as 'children'\n//   props type.\nFieldset.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    className   : PropTypes.string,\n    header      : PropTypes.string,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n};\n\nexport default Fieldset;\n","const Client              = require('./client_base');\nconst getElementById      = require('../common_functions').getElementById;\nconst getLanguage         = require('../language').get;\nconst isMobile            = require('../os_detect').isMobile;\nconst isStorageSupported  = require('../storage').isStorageSupported;\nconst LocalStore          = require('../storage').LocalStore;\nconst urlForCurrentDomain = require('../url').urlForCurrentDomain;\nconst domain_app_ids      = require('../../config').domain_app_ids;\nconst getAppId            = require('../../config').getAppId;\n\nconst Login = (() => {\n    const redirectToLogin = () => {\n        if (!Client.isLoggedIn() && !isLoginPages() && isStorageSupported(sessionStorage)) {\n            sessionStorage.setItem('redirect_url', window.location.href);\n            window.location.href = loginUrl();\n        }\n    };\n\n    const loginUrl = () => {\n        const server_url         = localStorage.getItem('config.server_url');\n        const language           = getLanguage();\n        const signup_device      = LocalStore.get('signup_device') || (isMobile() ? 'mobile' : 'desktop');\n        const date_first_contact = LocalStore.get('date_first_contact');\n        const marketing_queries  = `&signup_device=${signup_device}${date_first_contact ? `&date_first_contact=${date_first_contact}` : ''}`;\n        const default_binary_url = `https://oauth.binary.com/oauth2/authorize?app_id=${getAppId()}&l=${language}${marketing_queries}`;\n\n        if (server_url && /qa/.test(server_url)) {\n            return `https://${server_url}/oauth2/authorize?app_id=${getAppId()}&l=${language}${marketing_queries}`;\n        }\n        if (getAppId === domain_app_ids['deriv.app']) {\n            return default_binary_url;\n        }\n\n        return urlForCurrentDomain(default_binary_url);\n    };\n\n    // TODO: update this to handle logging into /app/ url\n    const isLoginPages = () => /logged_inws|redirect/i.test(window.location.pathname);\n\n    const socialLoginUrl = brand => (`${loginUrl()}&social_signup=${brand}`);\n\n    const initOneAll = () => {\n        ['google', 'facebook'].forEach(provider => {\n            const el_button = getElementById(`#button_${provider}`);\n            el_button.removeEventListener('click');\n            el_button.addEventListener('click', (e) => {\n                e.preventDefault();\n                window.location.href = socialLoginUrl(provider);\n            });\n        });\n    };\n\n    return {\n        redirectToLogin,\n        isLoginPages,\n        initOneAll,\n    };\n})();\n\nmodule.exports = Login;\n","import ServerTime   from '_common/base/server_time';\nimport { toMoment } from 'Utils/Date';\n\nexport const buildForwardStartingConfig = (contract, forward_starting_dates) => {\n    const forward_starting_config = [];\n\n    if ((contract.forward_starting_options || []).length) {\n        contract.forward_starting_options.forEach(option => {\n            const duplicated_option = forward_starting_config.find(opt => opt.value === parseInt(option.date));\n            const current_session   = { open: toMoment(option.open), close: toMoment(option.close) };\n            if (duplicated_option) {\n                duplicated_option.sessions.push(current_session);\n            } else {\n                forward_starting_config.push({\n                    text    : toMoment(option.date).format('ddd - DD MMM, YYYY'),\n                    value   : parseInt(option.date),\n                    sessions: [current_session],\n                });\n            }\n        });\n    }\n\n    return forward_starting_config.length ? forward_starting_config : forward_starting_dates;\n};\n\n// returns false if same as now\nconst isBeforeDate = (compare_moment, start_moment, should_only_check_hour) => {\n    const now_moment = toMoment(start_moment);\n    if (should_only_check_hour) {\n        now_moment.minute(0).second(0);\n    }\n    return compare_moment.isBefore(now_moment) && now_moment.unix() !== compare_moment.unix();\n};\n\nexport const isSessionAvailable = (\n    sessions               = [],\n    compare_moment         = toMoment(ServerTime.get()),\n    start_moment           = toMoment(ServerTime.get()),\n    should_only_check_hour = false,\n) => (\n    !isBeforeDate(compare_moment, ServerTime.get(), should_only_check_hour) &&\n    !isBeforeDate(compare_moment, start_moment, should_only_check_hour) &&\n        (!sessions.length ||\n            !!sessions.find(session =>\n                compare_moment.isBetween(session.open, session.close, should_only_check_hour ? 'hour' : null, '[]')))\n);\n","// const Cookies = require('js-cookie');\n\n/*\n * Configuration values needed in js codes\n *\n * NOTE:\n * Please use the following command to avoid accidentally committing personal changes\n * git update-index --assume-unchanged src/javascript/config.js\n *\n */\nconst domain_app_ids = { // these domains as supported \"production domains\"\n    'deriv.app': 16929,\n};\n\nconst getCurrentProductionDomain = () => (\n    !/^staging\\./.test(window.location.hostname) &&\n    Object.keys(domain_app_ids).find(domain => (new RegExp(`.${domain}$`, 'i').test(window.location.hostname)))\n);\n\nconst isProduction = () => {\n    const all_domains = Object.keys(domain_app_ids).map(domain => `www\\\\.${domain.replace('.', '\\\\.')}`);\n    return new RegExp(`^(${all_domains.join('|')})$`, 'i').test(window.location.hostname);\n};\n\nconst binary_desktop_app_id = 14473;\n\nconst getAppId = () => {\n    let app_id = null;\n    const user_app_id   = ''; // you can insert Application ID of your registered application here\n    const config_app_id = window.localStorage.getItem('config.app_id');\n    if (config_app_id) {\n        app_id = config_app_id;\n    } else if (/desktop-app/i.test(window.location.href) || window.localStorage.getItem('config.is_desktop_app')) {\n        window.localStorage.removeItem('config.default_app_id');\n        window.localStorage.setItem('config.is_desktop_app', 1);\n        app_id = binary_desktop_app_id;\n    } else if (user_app_id.length) {\n        window.localStorage.setItem('config.default_app_id', user_app_id);\n        app_id = user_app_id;\n    } else if (/staging\\.deriv\\.app/i.test(window.location.hostname)) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 16303; // it's being used in endpoint chrome extension - please do not remove\n    } else if (/localhost/i.test(window.location.hostname)) {\n        app_id = 17044;\n    } else {\n        window.localStorage.removeItem('config.default_app_id');\n        const current_domain = getCurrentProductionDomain();\n        app_id = domain_app_ids[current_domain] || 16929;\n    }\n    return app_id;\n};\n\nconst getSocketURL = () => {\n    let server_url = window.localStorage.getItem('config.server_url');\n    if (!server_url) {\n        // const to_green_percent = { real: 100, virtual: 0, logged_out: 0 }; // default percentage\n        // const category_map     = ['real', 'virtual', 'logged_out'];\n        // const percent_values   = Cookies.get('connection_setup'); // set by GTM\n        //\n        // // override defaults by cookie values\n        // if (percent_values && percent_values.indexOf(',') > 0) {\n        //     const cookie_percents = percent_values.split(',');\n        //     category_map.map((cat, idx) => {\n        //         if (cookie_percents[idx] && !isNaN(cookie_percents[idx])) {\n        //             to_green_percent[cat] = +cookie_percents[idx].trim();\n        //         }\n        //     });\n        // }\n\n        // let server = 'blue';\n        // if (/www\\.binary\\.com/i.test(window.location.hostname)) {\n        //     const loginid = window.localStorage.getItem('active_loginid');\n        //     let client_type = category_map[2];\n        //     if (loginid) {\n        //         client_type = /^VRT/.test(loginid) ? category_map[1] : category_map[0];\n        //     }\n        //\n        //     const random_percent = Math.random() * 100;\n        //     if (random_percent < to_green_percent[client_type]) {\n        //         server = 'green';\n        //     }\n        // }\n\n        // TODO: in order to use connection_setup config, uncomment the above section and remove next lines\n\n        const loginid       = window.localStorage.getItem('active_loginid');\n        const is_real       = loginid && !/^VRT/.test(loginid);\n        const server        = isProduction() && is_real ? 'green' : 'blue';\n\n        server_url = `${server}.binaryws.com`;\n    }\n    return `wss://${server_url}/websockets/v3`;\n};\n\nmodule.exports = {\n    domain_app_ids,\n    getCurrentProductionDomain,\n    isProduction,\n    getAppId,\n    getSocketURL,\n};\n","import { getLastTickFromTickStream } from './logic';\n\nexport const isDigitContract = (contract_type) => /digit/i.test(contract_type);\n\nexport const getDigitInfo = (digits_info, contract_info) => {\n    const { tick_stream } = contract_info;\n    const { tick_display_value, epoch } = getLastTickFromTickStream(tick_stream);\n\n    if (!tick_display_value || !epoch) return {}; // filter out empty responses\n\n    const current = (epoch in digits_info) ? {} : // filter out duplicated responses\n        createDigitInfo(tick_display_value, epoch);\n\n    return {\n        ...current,\n    };\n};\n\nconst createDigitInfo = (spot, spot_time) => {\n    const digit = +`${spot}`.slice(-1);\n\n    return {\n        [+spot_time]: {\n            digit,\n            spot,\n        },\n    };\n};\n","import React     from 'react';\nimport PropTypes from 'prop-types';\n\nclass Icon extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        /* When adding a new icon, arrange it by following the ascending file system arrangement */\n        this.icons = {\n            // Common\n            IconArrowBold         : React.lazy(() => import('./Common/icon-arrow-bold.jsx')),\n            IconArrow             : React.lazy(() => import('./Common/icon-arrow.jsx')),\n            IconBack              : React.lazy(() => import('./Common/icon-back.jsx')),\n            IconCalendarToday     : React.lazy(() => import('./Common/icon-calendar-today.jsx')),\n            IconCalendar          : React.lazy(() => import('./Common/icon-calendar.jsx')),\n            IconChevronDoubleLeft : React.lazy(() => import('./Common/icon-chevron-double-left.jsx')),\n            IconChevronDoubleRight: React.lazy(() => import('./Common/icon-chevron-double-right.jsx')),\n            IconChevronLeft       : React.lazy(() => import('./Common/icon-chevron-left.jsx')),\n            IconChevronRight      : React.lazy(() => import('./Common/icon-chevron-right.jsx')),\n            IconClear             : React.lazy(() => import('./Common/icon-clear.jsx')),\n            IconClock             : React.lazy(() => import('./Common/icon-clock.jsx')),\n            IconClose             : React.lazy(() => import('./Common/icon-close.jsx')),\n            IconCountryFlag       : React.lazy(() => import('./Common/icon-country-flag.jsx')),\n            IconDanger            : React.lazy(() => import('./Common/icon-danger.jsx')),\n            IconDeposit           : React.lazy(() => import('./Common/icon-deposit.jsx')), // TODO: update big when design is ready\n            IconDepositSmall      : React.lazy(() => import('./Common/icon-deposit-small.jsx')),\n            IconExclamation       : React.lazy(() => import('./Common/icon-exclamation.jsx')),\n            IconFlag              : React.lazy(() => import('./Common/icon-flag.jsx')),\n            IconInfoBlue          : React.lazy(() => import('./Common/icon-info-blue.jsx')),\n            IconInfoOutline       : React.lazy(() => import('./Common/icon-info-outline.jsx')),\n            IconInformation       : React.lazy(() => import('./Common/icon-information.jsx')),\n            IconMinimize          : React.lazy(() => import('./Common/icon-minimize.jsx')),\n            IconMinus             : React.lazy(() => import('./Common/icon-minus.jsx')),\n            IconPlus              : React.lazy(() => import('./Common/icon-plus.jsx')),\n            IconQuestion          : React.lazy(() => import('./Common/icon-question.jsx')),\n            IconRedDot            : React.lazy(() => import('./Common/icon-red-dot.jsx')),\n            IconSuccess           : React.lazy(() => import('./Common/icon-success.jsx')),\n            IconWarning           : React.lazy(() => import('./Common/icon-warning.jsx')),\n            IconWip               : React.lazy(() => import('./Common/icon-wip.jsx')),\n            IconWithdrawal        : React.lazy(() => import('./Common/icon-withdrawal.jsx')), // TODO: update big when design is ready\n            IconWithdrawalSmall   : React.lazy(() => import('./Common/icon-withdrawal-small.jsx')),\n\n            // Contract\n            ContractIconClose: React.lazy(() => import('./Contract/icon-close.jsx')),\n            IconEndTime      : React.lazy(() => import('./Contract/icon-end-time.jsx')),\n            ContractIconFlag : React.lazy(() => import('./Contract/icon-flag.jsx')),\n            IconStartTime    : React.lazy(() => import('./Contract/icon-start-time.jsx')),\n            IconTick         : React.lazy(() => import('./Contract/icon-tick.jsx')),\n\n            // Cashier\n            IconAuthenticateWithdrawals: React.lazy(() => import('./Cashier/icon-authenticate-withdrawals.jsx')),\n            IconEmailSent              : React.lazy(() => import('./Cashier/icon-email-sent.jsx')),\n\n            // Modal\n            ModalIconClose: React.lazy(() => import('./Modal/icon-close.jsx')),\n\n            // Footer\n            IconMaximize : React.lazy(() => import('./Footer/icon-maximize.jsx')),\n            IconPositions: React.lazy(() => import('./Footer/icon-positions.jsx')),\n            IconSettings : React.lazy(() => import('./Footer/icon-settings.jsx')),\n\n            // Header\n            IconAccountsCurrency: React.lazy(() => import('./Header/AccountsCurrency/icon_accounts_currency.jsx')),\n            IconLogout          : React.lazy(() => import('./Header/Drawer/icon-logout.jsx')),\n            IconBell            : React.lazy(() => import('./Header/NavBar/icon-bell.jsx')),\n            IconCashier         : React.lazy(() => import('./Header/NavBar/icon-cashier.jsx')),\n            IconDeriv           : React.lazy(() => import('./Header/NavBar/icon-deriv.jsx')),\n            IconHamburger       : React.lazy(() => import('./Header/NavBar/icon-hamburger.jsx')),\n            IconPortfolio       : React.lazy(() => import('./Header/NavBar/icon-portfolio.jsx')),\n            IconReports         : React.lazy(() => import('./Header/NavBar/icon-reports.jsx')),\n            IconTrade           : React.lazy(() => import('./Header/NavBar/icon-trade.jsx')),\n\n            // Reports\n            IconDemo                : React.lazy(() => import('./Reports/icon-demo.jsx')),\n            IconOpenPositions       : React.lazy(() => import('./Reports/icon-open-positions.jsx')),\n            IconProfitTable         : React.lazy(() => import('./Reports/icon-profit-table.jsx')),\n            IconStatement           : React.lazy(() => import('./Reports/icon-statement.jsx')),\n            IconCalendarForwardToday: React.lazy(() => import('./Reports/ic-calendar-forwardtoday.jsx')),\n\n            // Settings\n            IconCharts  : React.lazy(() => import('./Settings/icon-charts.jsx')),\n            IconLanguage: React.lazy(() => import('./Settings/icon-language.jsx')),\n            IconPurchase: React.lazy(() => import('./Settings/icon-purchase.jsx')),\n            IconTheme   : React.lazy(() => import('./Settings/icon-theme.jsx')),\n\n            // Statement\n            IconBuy   : React.lazy(() => import('./Statement/icon-buy.jsx')),\n            IconPayout: React.lazy(() => import('./Statement/icon-payout.jsx')),\n            IconSell  : React.lazy(() => import('./Statement/icon-sell.jsx')),\n            IconWallet: React.lazy(() => import('./Statement/icon-wallet.jsx')),\n\n            // Trading\n            IconBarrierDown   : React.lazy(() => import('./Trading/Barriers/icon-barrier-down.jsx')),\n            IconBarrierUp     : React.lazy(() => import('./Trading/Barriers/icon-barrier-up.jsx')),\n            IconTradeCategory : React.lazy(() => import('./Trading/Categories/icon-trade-categories.jsx')),\n            TradeCategoriesGIF: React.lazy(() => import('./Trading/Categories/trade-categories-gif.jsx')),\n            TradeCategories   : React.lazy(() => import('./Trading/Categories/trade-categories.jsx')),\n            IconTradeType     : React.lazy(() => import('./Trading/Types/icon-trade-types.jsx')),\n            IconLock          : React.lazy(() => import('./Trading/icon-lock.jsx')),\n            IconPriceMove     : React.lazy(() => import('./Trading/icon-price-move.jsx')),\n        };\n    }\n\n    render() {\n        const options = {\n            category     : this.props.category,\n            className    : this.props.className,\n            classNamePath: this.props.classNamePath,\n            classNameRect: this.props.classNameRect,\n            is_dark_theme: this.props.is_dark_theme,\n            is_disabled  : this.props.is_disabled,\n            onClick      : this.props.onClick,\n            onMouseEnter : this.props.onMouseEnter,\n            onMouseLeave : this.props.onMouseLeave,\n            type         : this.props.type,\n        };\n\n        const IconLazy = this.icons[this.props.icon];\n        if (!IconLazy) return <div />;\n\n        return (\n            <React.Suspense fallback={<div />}>\n                <IconLazy {...options} />\n            </React.Suspense>\n        );\n    }\n}\n\nIcon.propTypes = {\n    category     : PropTypes.string,\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n    classNameRect: PropTypes.string,\n    icon         : PropTypes.string,\n    is_dark_theme: PropTypes.bool,\n    is_disabled  : PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n    onClick      : PropTypes.func,\n    type         : PropTypes.string,\n};\n\nexport default Icon;\n","import { localize } from 'App/i18n';\n\nexport const getMarketNamesMap = () => ({\n    FRXAUDCAD : localize('AUD/CAD'),\n    FRXAUDCHF : localize('AUD/CHF'),\n    FRXAUDJPY : localize('AUD/JPY'),\n    FRXAUDNZD : localize('AUD/NZD'),\n    FRXAUDPLN : localize('AUD/PLN'),\n    FRXAUDUSD : localize('AUD/USD'),\n    FRXBROUSD : localize('Oil/USD'),\n    FRXEURAUD : localize('EUR/AUD'),\n    FRXEURCAD : localize('EUR/CAD'),\n    FRXEURCHF : localize('EUR/CHF'),\n    FRXEURGBP : localize('EUR/GBP'),\n    FRXEURJPY : localize('EUR/JPY'),\n    FRXEURNZD : localize('EUR/NZD'),\n    FRXEURUSD : localize('EUR/USD'),\n    FRXGBPAUD : localize('GBP/AUD'),\n    FRXGBPCAD : localize('GBP/CAD'),\n    FRXGBPCHF : localize('GBP/CHF'),\n    FRXGBPJPY : localize('GBP/JPY'),\n    FRXGBPNOK : localize('GBP/NOK'),\n    FRXGBPUSD : localize('GBP/USD'),\n    FRXNZDJPY : localize('NZD/JPY'),\n    FRXNZDUSD : localize('NZD/USD'),\n    FRXUSDCAD : localize('USD/CAD'),\n    FRXUSDCHF : localize('USD/CHF'),\n    FRXUSDJPY : localize('USD/JPY'),\n    FRXUSDNOK : localize('USD/NOK'),\n    FRXUSDPLN : localize('USD/PLN'),\n    FRXUSDSEK : localize('USD/SEK'),\n    FRXXAGUSD : localize('Silver/USD'),\n    FRXXAUUSD : localize('Gold/USD'),\n    FRXXPDUSD : localize('Palladium/USD'),\n    FRXXPTUSD : localize('Platinum/USD'),\n    OTC_AEX   : localize('Dutch Index'),\n    OTC_AS51  : localize('Australian Index'),\n    OTC_DJI   : localize('Wall Street Index'),\n    OTC_FCHI  : localize('French Index'),\n    OTC_FTSE  : localize('UK Index'),\n    OTC_GDAXI : localize('German Index'),\n    OTC_HSI   : localize('Hong Kong Index'),\n    OTC_IBEX35: localize('Spanish Index'),\n    OTC_N225  : localize('Japanese Index'),\n    OTC_NDX   : localize('US Tech Index'),\n    OTC_SPC   : localize('US Index'),\n    OTC_SSMI  : localize('Swiss Index'),\n    OTC_SX5E  : localize('Euro 50 Index'),\n    R_10      : localize('Volatility 10 Index'),\n    R_25      : localize('Volatility 25 Index'),\n    R_50      : localize('Volatility 50 Index'),\n    R_75      : localize('Volatility 75 Index'),\n    R_100     : localize('Volatility 100 Index'),\n    RDBEAR    : localize('Bear Market Index'),\n    RDBULL    : localize('Bull Market Index'),\n    WLDAUD    : localize('AUD Index'),\n    WLDEUR    : localize('EUR Index'),\n    WLDGBP    : localize('GBP Index'),\n    WLDUSD    : localize('USD Index'),\n});\n\nexport const getUnsupportedContracts = () => ({\n    EXPIRYMISS: {\n        name    : localize('Ends Outside'),\n        position: 'top',\n    },\n    EXPIRYRANGE: {\n        name    : localize('Ends Between'),\n        position: 'bottom',\n    },\n    RANGE: {\n        name    : localize('Stays Between'),\n        position: 'top',\n    },\n    UPORDOWN: {\n        name    : localize('Goes Outside'),\n        position: 'bottom',\n    },\n    RESETCALL: {\n        name    : localize('Reset Call'),\n        position: 'top',\n    },\n    RESETPUT: {\n        name    : localize('Reset Put'),\n        position: 'bottom',\n    },\n    TICKHIGH: {\n        name    : localize('High Tick'),\n        position: 'top',\n    },\n    TICKLOW: {\n        name    : localize('Low Tick'),\n        position: 'bottom',\n    },\n    ASIANU: {\n        name    : localize('Asian Up'),\n        position: 'top',\n    },\n    ASIAND: {\n        name    : localize('Asian Down'),\n        position: 'bottom',\n    },\n    LBFLOATCALL: {\n        name    : localize('Close-Low'),\n        position: 'top',\n    },\n    LBFLOATPUT: {\n        name    : localize('High-Close'),\n        position: 'top',\n    },\n    LBHIGHLOW: {\n        name    : localize('High-Low'),\n        position: 'top',\n    },\n    CALLSPREAD: {\n        name    : localize('Call Spread'),\n        position: 'top',\n    },\n    PUTSPREAD: {\n        name    : localize('Put Spread'),\n        position: 'bottom',\n    },\n    RUNHIGH: {\n        name    : localize('Only Ups'),\n        position: 'top',\n    },\n    RUNLOW: {\n        name    : localize('Only Downs'),\n        position: 'bottom',\n    },\n});\n\nexport const getSupportedContracts = is_high_low => ({\n    CALL: {\n        name    : is_high_low ?  localize('Higher') : localize('Rise'),\n        position: 'top',\n    },\n    PUT: {\n        name    : is_high_low ? localize('Lower') : localize('Fall'),\n        position: 'bottom',\n    },\n    CALLE: {\n        name    : localize('Rise'),\n        position: 'top',\n    },\n    PUTE: {\n        name    : localize('Fall'),\n        position: 'bottom',\n    },\n    DIGITMATCH: {\n        name    : localize('Matches'),\n        position: 'top',\n    },\n    DIGITDIFF: {\n        name    : localize('Differs'),\n        position: 'bottom',\n    },\n    DIGITEVEN: {\n        name    : localize('Even'),\n        position: 'top',\n    },\n    DIGITODD: {\n        name    : localize('Odd'),\n        position: 'bottom',\n    },\n    DIGITOVER: {\n        name    : localize('Over'),\n        position: 'top',\n    },\n    DIGITUNDER: {\n        name    : localize('Under'),\n        position: 'bottom',\n    },\n    ONETOUCH: {\n        name    : localize('Touch'),\n        position: 'top',\n    },\n    NOTOUCH: {\n        name    : localize('No Touch'),\n        position: 'bottom',\n    },\n});\n\nexport const getContractConfig = is_high_low => ({\n    ...getSupportedContracts(is_high_low),\n    ...getUnsupportedContracts(),\n});\n\nexport const getContractTypeDisplay  = (\n    type,\n    is_high_low = false) => (\n    getContractConfig(is_high_low)[type] ? getContractConfig(is_high_low)[type.toUpperCase()].name : ''\n);\n\nexport const getContractTypePosition = (\n    type,\n    is_high_low = false) => (\n    getContractConfig(is_high_low)[type] ? getContractConfig(is_high_low)[type.toUpperCase()].position : 'top'\n);\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { formatMoney } from '_common/base/currency_base';\n\nconst Money = ({\n    amount,\n    className,\n    currency = 'USD',\n    has_sign,\n    is_formatted = true,\n}) => {\n    let sign = '';\n    if (+amount && (amount < 0 || has_sign)) {\n        sign = amount > 0 ? '+' : '-';\n    }\n\n    const abs_value = Math.abs(amount);\n    const final_amount = is_formatted ? formatMoney(currency, abs_value, true) : abs_value;\n\n    return (\n        <React.Fragment>\n            {has_sign && sign}\n            <span className={classNames(className, 'symbols', `symbols--${currency.toLowerCase()}`)} />\n            {final_amount}\n        </React.Fragment>\n    );\n};\n\nMoney.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className   : PropTypes.string,\n    currency    : PropTypes.string,\n    has_sign    : PropTypes.bool,\n    is_formatted: PropTypes.bool,\n};\n\nexport default Money;\n","import { localize } from 'App/i18n';\n\nexport const month_headers = {\n    Jan: localize('Jan'),\n    Feb: localize('Feb'),\n    Mar: localize('Mar'),\n    Apr: localize('Apr'),\n    May: localize('May'),\n    Jun: localize('Jun'),\n    Jul: localize('Jul'),\n    Aug: localize('Aug'),\n    Sep: localize('Sep'),\n    Oct: localize('Oct'),\n    Nov: localize('Nov'),\n    Dec: localize('Dec'),\n};\n\nexport const week_headers = {\n    Monday   : localize('Monday'),\n    Tuesday  : localize('Tuesday'),\n    Wednesday: localize('Wednesday'),\n    Thursday : localize('Thursday'),\n    Friday   : localize('Friday'),\n    Saturday : localize('Saturday'),\n    Sunday   : localize('Sunday'),\n};\n\nexport const week_headers_abbr = {\n    Monday   : localize('M'),\n    Tuesday  : localize('T'),\n    Wednesday: localize('W'),\n    Thursday : localize('T'),\n    Friday   : localize('F'),\n    Saturday : localize('S'),\n    Sunday   : localize('S'),\n};\n\nexport const getDaysOfTheWeek = (day) => {\n    const days_of_the_week = {\n        'Mondays'   : 1,\n        'Tuesdays'  : 2,\n        'Wednesdays': 3,\n        'Thursdays' : 4,\n        'Fridays'   : 5,\n        'Saturdays' : 6,\n        'Sundays'   : 0,\n    };\n\n    return days_of_the_week[day];\n};\n","const extend = require('extend');\nrequire('./lib/polyfills/element.matches');\n\nconst template = (string, content) => {\n    let to_replace = content;\n    if (content && !Array.isArray(content)) {\n        to_replace = [content];\n    }\n    return string.replace(/\\[_(\\d+)]/g, (s, index) => to_replace[(+index) - 1]);\n};\n\nconst isEmptyObject = (obj) => {\n    let is_empty = true;\n    if (obj && obj instanceof Object) {\n        Object.keys(obj).forEach((key) => {\n            if (Object.prototype.hasOwnProperty.call(obj, key)) is_empty = false;\n        });\n    }\n    return is_empty;\n};\n\nconst cloneObject = obj => (!isEmptyObject(obj) ? extend(true, Array.isArray(obj) ? [] : {}, obj) : obj);\n\nconst isDeepEqual = (a, b) => {\n    if (typeof a !== typeof b) {\n        return false;\n    } else if (Array.isArray(a)) {\n        return isEqualArray(a, b);\n    } else if (a && b && typeof a === 'object') {\n        return isEqualObject(a, b);\n    }\n    // else\n    return a === b;\n};\n\nconst isEqualArray = (arr1, arr2) => (\n    arr1 === arr2 ||\n    (\n        arr1.length === arr2.length &&\n        arr1.every((value, idx) => isDeepEqual(value, arr2[idx]))\n    )\n);\n\nconst isEqualObject = (obj1, obj2) => (\n    obj1 === obj2 ||\n    (\n        Object.keys(obj1).length === Object.keys(obj2).length &&\n        Object.keys(obj1).every(key => isDeepEqual(obj1[key], obj2[key]))\n    )\n);\n\n// Filters out duplicates in an array of objects by key\nconst unique = (array, key) => array.filter((e, idx) =>\n    array.findIndex((a, i) => a[key] ? a[key] === e[key] : i === idx) === idx);\n\nconst getPropertyValue = (obj, k) => {\n    let keys = k;\n    if (!Array.isArray(keys)) keys = [keys];\n    if (!isEmptyObject(obj) && keys[0] in obj && keys && keys.length > 1) {\n        return getPropertyValue(obj[keys[0]], keys.slice(1));\n    }\n    // else return clone of object to avoid overwriting data\n    return obj ? cloneObject(obj[keys[0]]) : undefined;\n};\n\n/**\n * Creates a DOM element and adds any attributes to it.\n *\n * @param {String} tag_name: the tag to create, e.g. 'div', 'a', etc\n * @param {Object} attributes: all the attributes to assign, e.g. { id: '...', class: '...', html: '...', ... }\n * @return the created DOM element\n */\nconst createElement = (tag_name, attributes = {}) => {\n    const el = document.createElement(tag_name);\n    Object.keys(attributes).forEach((attr) => {\n        const value = attributes[attr];\n        if (attr === 'text') {\n            el.textContent = value;\n        } else if (attr === 'html') {\n            el.html(value);\n        } else {\n            el.setAttribute(attr, value);\n        }\n    });\n    return el;\n};\n\nlet static_hash;\nconst getStaticHash = () => {\n    static_hash = static_hash || (document.querySelector('script[src*=\"main\"]').getAttribute('src') || '').split('.')[1];\n    return static_hash;\n};\n\nclass PromiseClass {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.reject  = reject;\n            this.resolve = resolve;\n        });\n    }\n}\n\nmodule.exports = {\n    template,\n    isEmptyObject,\n    cloneObject,\n    isDeepEqual,\n    unique,\n    getPropertyValue,\n    createElement,\n    getStaticHash,\n    PromiseClass,\n};\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst UILoader = ({ className, classNameBlock }) => {\n    const block_class   = classNames(classNameBlock, 'block-ui');\n    const loading_class = classNames('block-ui__loading', className);\n    return (\n        <div className={block_class}>\n            <div className={loading_class}>\n                <div className='block-ui__loading-spinner'>\n                    <svg className='block-ui__loading-spinner-circular' viewBox='25 25 50 50'>\n                        <circle className='block-ui__loading-spinner-path' cx='50' cy='50' r='20' fill='none' strokeWidth='4' strokeMiterlimit='10' />\n                    </svg>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nUILoader.propTypes = {\n    className     : PropTypes.string,\n    classNameBlock: PropTypes.string,\n};\n\nexport default UILoader;\n","import { toMoment } from 'Utils/Date';\n\nexport const getDecade = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(9, 'years').year()}`;\n\nexport const getCentury = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(99, 'years').year()}`;\n","export *                   from './logout';\nexport BinarySocketGeneral from './socket-general';\nexport WS                  from './ws-methods';\n","import { matchPath } from 'react-router';\nimport routes        from 'Constants/routes';\n\nexport const normalizePath = (path) => /^\\//.test(path) ? path : `/${path || ''}`; // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some((route_info) => {\n        let match_path;\n        try {\n            match_path = matchPath(path, route_info);\n        } catch (e) {\n            if (/undefined/.test(e.message)) {\n                return undefined;\n            }\n        }\n\n        if (match_path) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) =>\n    !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) => (\n    Object.keys(params).reduce(\n        (p, name) => p.replace(`:${name}`, params[name]),\n        route_path,\n    )\n);\n\nexport const getContractPath = (contract_id) => getPath(routes.contract, { contract_id });\n"],"sourceRoot":""}