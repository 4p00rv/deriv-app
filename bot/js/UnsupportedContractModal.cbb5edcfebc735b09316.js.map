{"version":3,"sources":["webpack:///./App/Components/Elements/FullPageModal/full-page-modal.jsx","webpack:///./App/Components/Elements/Modals/UnsupportedContractModal/unsupported-contract-modal.jsx"],"names":["FullPageModal","handleCancel","props","is_closed_on_cancel","hideFullBlur","onCancel","handleConfirm","is_closed_on_confirm","onConfirm","this","is_visible","showFullBlur","cancel_button_text","children","confirm_button_text","is_loading","title","Fragment","appear","in","timeout","classNames","enter","enterDone","exit","unmountOnExit","className","has_effect","text","onClick","React","Component","defaultProps","propTypes","PropTypes","string","func","bool","full_page_modal","connect","ui","UnsupportedContractModal","onClose","localize","i18n_default_text","values","website_name"],"mappings":"2+BAOMA,E,yQAaFC,aAAe,WACP,EAAKC,MAAMC,qBACX,EAAKD,MAAME,eAEf,EAAKF,MAAMG,Y,EAGfC,cAAgB,WACR,EAAKJ,MAAMK,sBACX,EAAKL,MAAME,eAEf,EAAKF,MAAMM,a,6SAtBPC,KAAKP,MAAMQ,YACXD,KAAKP,MAAMS,iB,2CAKXF,KAAKP,MAAMQ,YACXD,KAAKP,MAAMS,iB,+BAkBV,MASDF,KAAKP,MAPLU,EAFC,EAEDA,mBACAC,EAHC,EAGDA,SACAC,EAJC,EAIDA,oBACAT,EALC,EAKDA,SACAU,EANC,EAMDA,WACAL,EAPC,EAODA,WACAM,EARC,EAQDA,MAEJ,OACI,kBAAC,IAAMC,SAAP,KACI,kBAAC,gBAAD,CACIC,QAAM,EACNC,GAAKT,IAAeK,EACpBK,QAAS,GACTC,WAAY,CACRH,OAAW,qCACXI,MAAW,qCACXC,UAAW,0CACXC,KAAW,qCAEfC,eAAa,GAEb,yBAAKC,UAAU,iCAEnB,kBAAC,gBAAD,CACIR,QAAM,EACNC,GAAKT,IAAeK,EACpBK,QAAS,GACTC,WAAY,CACRH,OAAW,kCACXI,MAAW,kCACXC,UAAW,uCACXC,KAAW,kCAEfC,eAAa,GAEb,yBAAKC,UAAU,4BACX,yBAAKA,UAAU,2BACTV,GACE,wBAAIU,UAAU,2BAA2BV,GAEvB,iBAAbH,EACL,uBAAGa,UAAU,4BAA4Bb,GAEzC,yBAAKa,UAAU,4BAA4Bb,GAE/C,yBAAKa,UAAU,2BACTrB,GACE,kBAAC,IAAD,CACIqB,UAAWL,IACP,0BACA,iBACA,0BAEJM,YAAU,EACVC,KAAMhB,EACNiB,QAASpB,KAAKR,eAGpBa,GACE,kBAAC,IAAD,CACIY,UAAWL,IACP,0BACA,eACA,wBAEJM,YAAU,EACVC,KAAMd,EACNe,QAASpB,KAAKH,0B,8BAjG1BwB,IAAMC,WA6GlC/B,EAAcgC,aAAe,CACzB7B,qBAAsB,EACtBI,sBAAsB,GAG1BP,EAAciC,UAAY,CACtBrB,mBAAsBsB,IAAUC,OAChCrB,oBAAsBoB,IAAUC,OAChC/B,aAAsB8B,IAAUE,KAChCjC,oBAAsB+B,IAAUG,KAChC9B,qBAAsB2B,IAAUG,KAChCtB,WAAsBmB,IAAUG,KAChC3B,WAAsBwB,IAAUG,KAChChC,SAAsB6B,IAAUE,KAChC5B,UAAsB0B,IAAUE,KAChCzB,aAAsBuB,IAAUE,KAChCpB,MAAsBkB,IAAUC,QAGpC,IAAMG,EAAkBC,aACpB,gBAAGC,EAAH,EAAGA,GAAH,MAAa,CACTpC,aAAcoC,EAAGpC,aACjBW,WAAcyB,EAAGzB,WACjBJ,aAAc6B,EAAG7B,gBAJD4B,CAMtBvC,GACasC,O,6GCvITG,EAA2B,SAAC,GAAD,IAC7B/B,EAD6B,EAC7BA,WACAF,EAF6B,EAE7BA,UACAkC,EAH6B,EAG7BA,QAH6B,OAK7B,kBAAC,IAAD,CACI1B,MAAO2B,mBAAS,WAChB7B,oBAAqB6B,mBAAS,0BAC9B/B,mBAAoB+B,mBAAS,sBAC7BnC,UAAWA,EACXH,SAAUqC,EACVvC,qBAAmB,EACnBO,WAAYA,GAEZ,kBAAC,IAAD,CACIkC,kBAAkB,uGAClBC,OAAQ,CAAEC,iCAKtBL,EAAyBR,UAAY,CACjCvB,WAAYwB,IAAUG,KACtBK,QAAYR,IAAUE,KACtB5B,UAAY0B,IAAUE,MAGXK,Q","file":"js/UnsupportedContractModal.cbb5edcfebc735b09316.js","sourcesContent":["import classNames        from 'classnames';\nimport React             from 'react';\nimport PropTypes         from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport Button            from 'App/Components/Form/button.jsx';\nimport { connect }       from 'Stores/connect';\n\nclass FullPageModal extends React.Component {\n    componentDidMount() {\n        if (this.props.is_visible) {\n            this.props.showFullBlur();\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.props.is_visible) {\n            this.props.showFullBlur();\n        }\n    }\n\n    handleCancel = () => {\n        if (this.props.is_closed_on_cancel) {\n            this.props.hideFullBlur();\n        }\n        this.props.onCancel();\n    };\n\n    handleConfirm = () => {\n        if (this.props.is_closed_on_confirm) {\n            this.props.hideFullBlur();\n        }\n        this.props.onConfirm();\n    };\n\n    render() {\n        const {\n            cancel_button_text,\n            children,\n            confirm_button_text,\n            onCancel,\n            is_loading,\n            is_visible,\n            title,\n        } = this.props;\n        return (\n            <React.Fragment>\n                <CSSTransition\n                    appear\n                    in={(is_visible && !is_loading)}\n                    timeout={50}\n                    classNames={{\n                        appear   : 'full-page-modal__background--enter',\n                        enter    : 'full-page-modal__background--enter',\n                        enterDone: 'full-page-modal__background--enter-done',\n                        exit     : 'full-page-modal__background--exit',\n                    }}\n                    unmountOnExit\n                >\n                    <div className='full-page-modal__background' />\n                </CSSTransition>\n                <CSSTransition\n                    appear\n                    in={(is_visible && !is_loading)}\n                    timeout={50}\n                    classNames={{\n                        appear   : 'full-page-modal__wrapper--enter',\n                        enter    : 'full-page-modal__wrapper--enter',\n                        enterDone: 'full-page-modal__wrapper--enter-done',\n                        exit     : 'full-page-modal__wrapper--exit',\n                    }}\n                    unmountOnExit\n                >\n                    <div className='full-page-modal__wrapper'>\n                        <div className='full-page-modal__dialog'>\n                            { title &&\n                                <h1 className='full-page-modal__header'>{title}</h1>\n                            }\n                            { typeof children === 'string' ?\n                                <p className='full-page-modal__content'>{children}</p>\n                                :\n                                <div className='full-page-modal__content'>{children}</div>\n                            }\n                            <div className='full-page-modal__footer'>\n                                { onCancel &&\n                                    <Button\n                                        className={classNames(\n                                            'full-page-modal__button',\n                                            'btn--secondary',\n                                            'btn--secondary--orange',\n                                        )}\n                                        has_effect\n                                        text={cancel_button_text}\n                                        onClick={this.handleCancel}\n                                    />\n                                }\n                                { confirm_button_text &&\n                                    <Button\n                                        className={classNames(\n                                            'full-page-modal__button',\n                                            'btn--primary',\n                                            'btn--primary--orange',\n                                        )}\n                                        has_effect\n                                        text={confirm_button_text}\n                                        onClick={this.handleConfirm}\n                                    />\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </CSSTransition>\n            </React.Fragment>\n        );\n    }\n}\n\nFullPageModal.defaultProps = {\n    is_closed_on_cancel : true,\n    is_closed_on_confirm: true,\n};\n\nFullPageModal.propTypes = {\n    cancel_button_text  : PropTypes.string,\n    confirm_button_text : PropTypes.string,\n    hideFullBlur        : PropTypes.func,\n    is_closed_on_cancel : PropTypes.bool,\n    is_closed_on_confirm: PropTypes.bool,\n    is_loading          : PropTypes.bool,\n    is_visible          : PropTypes.bool,\n    onCancel            : PropTypes.func,\n    onConfirm           : PropTypes.func,\n    showFullBlur        : PropTypes.func,\n    title               : PropTypes.string,\n};\n\nconst full_page_modal = connect(\n    ({ ui }) => ({\n        hideFullBlur: ui.hideFullBlur,\n        is_loading  : ui.is_loading,\n        showFullBlur: ui.showFullBlur,\n    }),\n)(FullPageModal);\nexport default full_page_modal;\n","import React            from 'react';\nimport PropTypes        from 'prop-types';\nimport { localize }     from 'App/i18n';\nimport FullPageModal    from 'App/Components/Elements/FullPageModal/full-page-modal.jsx';\nimport Localize         from 'App/Components/Elements/localize.jsx';\nimport { website_name } from '../../../../Constants/app-config';\n\nconst UnsupportedContractModal = ({\n    is_visible,\n    onConfirm,\n    onClose,\n}) => (\n    <FullPageModal\n        title={localize('Whoops!')}\n        confirm_button_text={localize('Continue to Binary.com')}\n        cancel_button_text={localize('Back to trade page')}\n        onConfirm={onConfirm}\n        onCancel={onClose}\n        is_closed_on_cancel\n        is_visible={is_visible}\n    >\n        <Localize\n            i18n_default_text='This trade type is currently not supported on {{website_name}}. Please go to Binary.com for details.'\n            values={{ website_name }}\n        />\n    </FullPageModal>\n);\n\nUnsupportedContractModal.propTypes = {\n    is_visible: PropTypes.bool,\n    onClose   : PropTypes.func,\n    onConfirm : PropTypes.func,\n};\n\nexport default UnsupportedContractModal;\n"],"sourceRoot":""}