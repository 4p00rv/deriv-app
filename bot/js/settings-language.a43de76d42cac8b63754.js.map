{"version":3,"sources":["webpack:///./App/Containers/SettingsModal/settings-language.jsx"],"names":["isCurrentLanguage","lang","currentLanguage","NonClickableLink","children","className","classNames","LanguageLink","Fragment","icon","type","replace","toLowerCase","getAllowedLanguages","propTypes","PropTypes","string","oneOfType","arrayOf","node","isRequired","LanguageSettings","i18n_default_text","Object","keys","map","key","href","getURL"],"mappings":"4GAAA,oFAUMA,EAAoB,SAACC,GAAD,OAAUA,IAASC,KAEvCC,EAAmB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUH,EAAb,EAAaA,KAAb,OACrB,yBAAKI,UAAWC,IAAW,mCAAoC,CAC3D,2CAA4CN,EAAkBC,MAG7DG,IAIHG,EAAe,SAAC,GAAD,IAAGN,EAAH,EAAGA,KAAH,OACjB,kBAAC,IAAMO,SAAP,KACI,kBAAC,IAAD,CACIC,KAAK,kBACLJ,UAAW,yEACXK,KAAMT,EAAKU,QAAQ,SAAU,KAAKC,gBAEtC,0BACIP,UAAWC,IAAW,mCAAoC,CACtD,2CAA4CN,EAAkBC,MAGjEY,cAAsBZ,MAkCnCM,EAAaO,UAAY,CACrBb,KAAMc,IAAUC,QAGpBb,EAAiBW,UAAY,CACzBV,SAAUW,IAAUE,UAAU,CAC1BF,IAAUG,QAAQH,IAAUI,MAC5BJ,IAAUI,OACXC,WACHnB,KAAMc,IAAUC,QAGLK,UAzCU,kBACrB,yBAAKhB,UAAU,qBACX,yBAAKA,UAAU,sCACX,8BACI,kBAAC,IAAD,CAAUiB,kBAAkB,sBAGpC,yBAAKjB,UAAU,yCACVkB,OAAOC,KAAKX,eACRY,IAAI,SAAAC,GAAG,OACJ1B,EAAkB0B,GACd,kBAACvB,EAAD,CAAkBF,KAAMyB,EAAKA,IAAKA,GAC9B,kBAACnB,EAAD,CAAcN,KAAMyB,KAGxB,uBACIA,IAAKA,EACLC,KAAMC,YAAOF,GACbrB,UAAWC,IAAW,mCAAoC,CACtD,2CAA4CN,EAAkB0B,MAGlE,kBAACnB,EAAD,CAAcN,KAAMyB,EAAKA,IAAKA","file":"js/settings-language.a43de76d42cac8b63754.js","sourcesContent":["import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport Localize          from 'App/Components/Elements/localize.jsx';\nimport Icon              from 'Assets/icon.jsx';\nimport {\n    getAllowedLanguages,\n    getURL,\n    currentLanguage }    from 'Utils/Language';\n\nconst isCurrentLanguage = (lang) => lang === currentLanguage;\n\nconst NonClickableLink = ({ children, lang }) => (\n    <div className={classNames('settings-language__language-link', {\n        'settings-language__language-link--active': isCurrentLanguage(lang),\n    })}\n    >\n        {children}\n    </div>\n);\n\nconst LanguageLink = ({ lang }) => (\n    <React.Fragment>\n        <Icon\n            icon='IconCountryFlag'\n            className={'settings-language__language-link-flag settings-language__language-flag'}\n            type={lang.replace(/(\\s|_)/, '-').toLowerCase()}\n        />\n        <span\n            className={classNames('settings-language__language-name', {\n                'settings-language__language-name--active': isCurrentLanguage(lang),\n            })}\n        >\n            {getAllowedLanguages()[lang]}\n        </span>\n    </React.Fragment>\n);\n\nconst LanguageSettings = () => (\n    <div className='settings-language'>\n        <div className='settings-language__language-header'>\n            <span>\n                <Localize i18n_default_text='Select language' />\n            </span>\n        </div>\n        <div className='settings-language__language-container'>\n            {Object.keys(getAllowedLanguages())\n                .map(key => (\n                    isCurrentLanguage(key) ?\n                        <NonClickableLink lang={key} key={key}>\n                            <LanguageLink lang={key} />\n                        </NonClickableLink>\n                        :\n                        <a\n                            key={key}\n                            href={getURL(key)}\n                            className={classNames('settings-language__language-link', {\n                                'settings-language__language-link--active': isCurrentLanguage(key),\n                            })}\n                        >\n                            <LanguageLink lang={key} key={key} />\n                        </a>\n                ))}\n        </div>\n    </div>\n);\n\nLanguageLink.propTypes = {\n    lang: PropTypes.string,\n};\n\nNonClickableLink.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node,\n    ]).isRequired,\n    lang: PropTypes.string,\n};\n\nexport default LanguageSettings;\n"],"sourceRoot":""}