{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./App/Constants/app-config.js","webpack:///./App/Components/Routes/button-link.jsx","webpack:///./Services/socket-general.js","webpack:///./App/Containers/Redirect/redirect.jsx","webpack:///./App/Constants/routes-config.js","webpack:///./App/Components/Routes/binary-link.jsx","webpack:///./App/Components/Routes/helpers.js","webpack:///./App/Components/Elements/login-prompt.jsx","webpack:///./App/Components/Routes/route-with-sub-routes.jsx","webpack:///./App/Components/Routes/binary-routes.jsx","webpack:///./Modules/PageError/PageError.jsx","webpack:///./App/Components/Elements/ui-loader.jsx","webpack:///./_common/common_functions.js","webpack:///./Assets/icon.jsx","webpack:///./_common/storage.js","webpack:///./App/Components/Elements/localize.jsx","webpack:///./App/Components/Elements/VerticalTabs/vertical-tab-content-container.jsx","webpack:///./App/Components/Elements/VerticalTabs/vertical-tab-headers.jsx","webpack:///./App/Components/Elements/VerticalTabs/vertical-tab.jsx","webpack:///./App/Components/Elements/modal.jsx","webpack:///./Utils/Language/language.js","webpack:///./Utils/Language/index.js","webpack:///./_common/base/client_base.js","webpack:///./_common/base/network_monitor_base.js","webpack:///./_common/string_util.js","webpack:///./App/Components/Elements/Errors/error-component.jsx","webpack:///./Stores/connect.js","webpack:///./_common/url.js","webpack:///./_common/base/currency_base.js","webpack:///./_common/language.js","webpack:///./_common/base/subscription_manager.js","webpack:///./Services/trackjs.js","webpack:///./Services/ws-methods.js","webpack:///./App/i18n.js","webpack:///./Services/index.js","webpack:///./_common/lib/polyfills/nodelist.foreach.js","webpack:///./_common/lib/polyfills/element.closest.js","webpack:///./_common/lib/plugins.js","webpack:///./_common/lib/polyfills/element.matches.js","webpack:///./_common/os_detect.js","webpack:///./App/Components/Elements/Errors/error-boundary.jsx","webpack:///./App/Containers/Layout/app-contents.jsx","webpack:///./Utils/Date/date-time.js","webpack:///./App/Containers/server-time.jsx","webpack:///./App/Components/Elements/Popover/popover-bubble.jsx","webpack:///./App/Components/Elements/Popover/popover.jsx","webpack:///./App/Components/Layout/Footer/network-status.jsx","webpack:///./App/Components/Layout/Footer/toggle-fullscreen.jsx","webpack:///./App/Components/Layout/Footer/toggle-positions.jsx","webpack:///./App/Components/Layout/Footer/toggle-settings.jsx","webpack:///./App/Containers/Layout/footer.jsx","webpack:///./App/Components/Layout/Header/menu-links.jsx","webpack:///./App/Components/Layout/Header/login-button.jsx","webpack:///./App/Components/Layout/Header/signup-button.jsx","webpack:///./App/Components/Layout/Header/upgrade-button.jsx","webpack:///./App/Components/Layout/Header/account-actions.jsx","webpack:///./App/Constants/header-links.js","webpack:///./App/Containers/Layout/header.jsx","webpack:///./App/Containers/Routes/routes.jsx","webpack:///./Services/network-monitor.js","webpack:///./Services/outdated-browser.js","webpack:///./Stores/Helpers/client-notifications.js","webpack:///./Utils/Validator/declarative-validation-rules.js","webpack:///./Utils/Validator/errors.js","webpack:///./Utils/Validator/validator.js","webpack:///./Stores/base-store.js","webpack:///./Stores/Modules/Trading/Helpers/currency.js","webpack:///./Stores/client-store.js","webpack:///./Stores/Helpers/client.js","webpack:///./Stores/common-store.js","webpack:///./Stores/gtm-store.js","webpack:///./Stores/Modules/Cashier/cashier-store.js","webpack:///./Stores/Modules/index.js","webpack:///./App/Components/Elements/NotificationMessage/close-button.jsx","webpack:///./App/Components/Elements/NotificationMessage/constants.js","webpack:///./App/Components/Elements/NotificationMessage/notification.jsx","webpack:///./Stores/ui-store.js","webpack:///./Stores/index.js","webpack:///./App/app.js","webpack:///./Utils/Events/storage.js","webpack:///./App/app.jsx","webpack:///./Utils/pwa/register-service-worker.js","webpack:///./Constants/routes.js","webpack:///./App/Containers/Lazy/lazy.jsx","webpack:///./_common/base/socket_base.js","webpack:///./config.js","webpack:///./Constants/contract.js","webpack:///./Constants/index.js","webpack:///./_common/base/login.js","webpack:///./App/Components/Form/button.jsx","webpack:///./_common/utility.js","webpack:///./_common/base/socket_cache.js","webpack:///./Services/logout.js","webpack:///./Constants/ui.js","webpack:///./_common/base/server_time.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","prefetchChunks","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","deferredPrefetch","apply","shift","deferredModules","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","forEach","undefined","link","document","createElement","nc","setAttribute","rel","as","href","jsonpScriptSrc","head","appendChild","installedModules","installedCssChunks","p","exports","module","l","e","promises","Promise","resolve","reject","fullhref","existingLinkTags","getElementsByTagName","dataHref","tag","getAttribute","existingStyleTags","linkTag","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","error","clearTimeout","chunk","errorType","realSrc","message","name","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","startupResult","website_domain","website_name","default_title","ButtonLink","children","className","to","onClick","classNames","propTypes","PropTypes","string","func","client_store","common_store","gtm_store","onDisconnect","onOpen","onMessage","setResidence","setBalance","handleError","authorizeAccount","BinarySocketGeneral","setIsSocketOpened","is_ready","Login","isLoginPages","is_valid_login","requestLogout","WS","subscribeWebsiteStatus","ResponseHandlers","websiteStatus","ServerTime","init","action","server_time","response","msg_type","is_active_tab","sessionStorage","getItem","getPropertyValue","removeItem","test","State","authorize","loginid","is_populating_account_list","get_settings","country_code","setEmail","email","eventHandler","responsePayoutCurrencies","payout_currencies","pushTransactionData","residence","landingCompany","flow","balance","BinarySocket","wait","setError","localize","store","client","common","gtm","responseAuthorize","subscribeBalance","sendRequest","forced","getAccountStatus","payoutCurrencies","mt5LoginList","country","accounts","is_virtual","getSelfExclusion","sendBuffered","currency","accepted_bch","is_available","website_status","site_status","availability","location","reload","setWebsiteStatus","Redirect","history","setCashierActiveTab","setVerificationCode","toggleAccountSignupModal","toggleCashierModal","url_params","URLSearchParams","search","replaceState","title","routes","root","withRouter","el_head","el_scratch_js","routesConfig","connect","ui","Page404","lazy","Bot","querySelector","route_default","component","getRoutesConfig","path","index","RouterRedirect","exact","error404","redirect","BinaryLink","active_class","props","normalizePath","route","findRouteByPath","routes_config","some","route_info","match_path","matchPath","activeClassName","LoginPrompt","onLogin","onSignup","page_title","PageError","header","i18n_default_text","values","components","messages","defaultProps","open","urlFor","pushDataLayer","render","pathname","toLowerCase","replace","is_authenticated","is_logged_in","redirectToLogin","passthrough","Language","setCookie","BinaryRoutes","Suspense","fallback","map","idx","buttonOnClick","error_code","redirect_label","redirect_url","has_html","dangerouslySetInnerHTML","__html","Fragment","number","oneOfType","node","array","UILoader","classNameBlock","block_class","loading_class","viewBox","cx","cy","fill","strokeWidth","strokeMiterlimit","require","isVisible","elem","offsetWidth","offsetHeight","getElementById","id_selector","parent","Icon","icons","IconArrowBold","React","IconArrow","IconBack","IconCalendarToday","IconCalendar","IconChevronDoubleLeft","IconChevronDoubleRight","IconChevronLeft","IconChevronRight","IconClear","IconClock","IconClose","IconCountryFlag","IconDanger","IconDeposit","IconDepositSmall","IconExclamation","IconFlag","IconInfoBlue","IconInfoOutline","IconInformation","IconMinimize","IconMinus","IconPlus","IconQuestion","IconRedDot","IconSuccess","IconWarning","IconWip","IconWithdrawal","IconWithdrawalSmall","ContractIconClose","IconEndTime","ContractIconFlag","IconStartTime","IconTick","IconAuthenticateWithdrawals","IconEmailSent","ModalIconClose","IconMaximize","IconPositions","IconSettings","IconAccountsCurrency","IconLogout","IconBell","IconCashier","IconDeriv","IconHamburger","IconPortfolio","IconReports","IconTrade","IconDemo","IconOpenPositions","IconProfitTable","IconStatement","IconCalendarForwardToday","IconCharts","IconLanguage","IconPurchase","IconTheme","IconBuy","IconPayout","IconSell","IconWallet","IconBarrierDown","IconBarrierUp","IconTradeCategory","TradeCategoriesGIF","TradeCategories","IconTradeType","IconLock","IconPriceMove","options","category","this","classNamePath","classNameRect","is_dark_theme","is_disabled","onMouseEnter","onMouseLeave","IconLazy","icon","PureComponent","bool","Cookies","isEmptyObject","isProduction","getObject","JSON","parse","setObject","setItem","stringify","Storage","isStorageSupported","storage","Store","set","remove","clear","InScriptStore","k","obj","Array","isArray","keys","has","getResponse","split","concat","CookieStorage","cookie_name","cookie_domain","hostname","initialized","domain","join","expires","Date","read","cookie_value","write","val","expireDate","isSecure","secure","SessionStore","LocalStore","localStorage","removeCookies","domains","parent_path","cookie_names","RegExp","cookie","Localize","defaults","arrayOf","VerticalTabContentContainer","action_bar","action_bar_classname","is_routed","items","selected","selected_item","find","item","label","TabContent","Component","from","reports","positions","component_icon","VerticalTabHeaders","header_title","charAt","toUpperCase","onChange","VerticalTab","changeSelected","setState","applicable_routes","list","filter","current_path","state","selected_index","is_full_width","shape","default","isRequired","ModalElement","componentDidMount","addEventListener","handleClickOutside","el","classList","add","showFullBlur","modal_root","componentWillUnmount","removeEventListener","hideFullBlur","wrapper_ref","contains","is_open","toggleModal","setWrapperRef","ReactDOM","createPortal","ref","alignment","classNameHeader","modal_content","Modal","appear","in","enter","enterDone","exit","unmountOnExit","currentLanguage","getAllowedLanguages","exclude_languages","getAll","includes","reduce","EN","getURL","lang","current_loginid","types_map_config","client_object","isLoggedIn","getAllAccountsObject","getAllLoginids","getAccountType","isAccountOfType","getAccountOfType","TypesMapConfig","updateAccountList","canTransferFundsTo","moment","isCryptocurrency","SocketCache","ClientBase","only_enabled","this_type","id","assign","financial","gaming","virtual","account_list","account","excluded_until","param","param_to_set","value_to_set","to_loginid","from_currency","to_currency","from_landing_company","to_landing_company","maltainvest","malta","is_from_crypto","is_to_crypto","isValidLoginid","valid_login_ids","every","current_client","account_type","hasAccountType","hasCurrencyType","loginids","getAccountTitle","types_map","parseInt","valueOf","landing_company_name","shouldAcceptTnc","website_tnc_version","client_tnc_status","clearAllAccounts","setNewAccount","token","currentLandingCompany","landing_company_response","this_shortcode","landing_company_prop","shortcode","shouldCompleteTax","status","getMT5AccountType","group","getBasicUpgradeInfo","can_upgrade_to","upgradeable_landing_companies","can_open_multi","current_landing_company","indexOf","landing_companies","landing_company","canUpgrade","can_upgrade","getLandingCompanyValue","landing_company_object","real","financial_company","gaming_company","getRiskAssessment","is_high_risk","canTransferFunds","hasSvgAccount","canChangeCurrency","statement","mt5_login_list","is_current","has_no_mt5","has_no_transaction","count","transactions","has_account_criteria","status_config","ws_config","network_status","updateUI","StatusConfig","pendings","pending_keys","pending_timeouts","isOnline","setStatus","ws_events_map","wsEvent","setPending","clearPendings","NetworkMonitorBase","online","class","tooltip","offline","blinking","ws_init","ws_request","navigator","onLine","hasReadyState","send","ping","close","socket_general_functions","fncUpdateUI","padLeft","txt","len","char","text","String","numberToString","toTitleCase","str","substr","compareBigUnsignedInt","a","b","first_num","second_num","max_length","Math","max","order","ErrorComponent","redirectOnClick","should_show_refresh","refresh_message","trade","SPECIAL_REACT_KEYS","MobxProvider","stores","baseStores","context","mobxStores","Provider","childContextTypes","StoreClass","mapper","inject","observer","connect_global_store","observed","StoredComponent","wrappedDisplayName","displayName","constructor","urlForLanguage","getLanguage","getCurrentProductionDomain","location_url","static_host","paramsHash","host_map","Url","getUrlBase","reset","param_hash","arr_params","parsed","URL","p_l","params","pars","language","should_change_to_legacy","new_url","urlForCurrentDomain","current_domain","url_object","urlForStatic","websiteUrl","protocol","getHostMap","resetStaticHost","crypto_config","currencies_config","formatCurrency","addComma","num","decimal_points","is_crypto","toFixed","parseFloat","toString","$0","$1","$2","getDecimalPlaces","calcDecimalPlaces","CryptoConfig","BTC","min_withdrawal","pa_max_withdrawal","pa_min_withdrawal","BCH","ETH","ETC","LTC","UST","USB","getMinWithdrawal","formatMoney","currency_value","amount","exclude_currency","decimals","minimumFractionDigits","money","sign","Number","decimal_places","isNaN","abs","Intl","maximumFractionDigits","NumberFormat","format","setCurrencies","getCurrencyName","getTransferLimits","which","transfer_limits","min","getTransferFee","currency_from","currency_to","transfer_fee","getMinimumTransferFee","pow","getTextFormat","getMinPayout","getPaWithdrawalLimit","limit","getCurrencies","all_languages","url_lang","lang_regex","languageFromUrl","current_lang","ACH","DE","ES","FR","ID","IT","PL","PT","RU","TH","VI","ZH_CN","ZH_TW","crowdin_lang","body","url","trim","urlLang","custom_url","subscriptions","forget_requested","subscription_id","dispatch","forget","forgetStream","hasCallbackFunction","hasValues","SubscriptionManager","sub_id","stream_id","subscription","sub_info","subscribers","fnc","fncCallback","match_values","forgets_list","request_obj","values_obj","addSubscriptionFromRequest","send_request","subscribe_request","subscription_props","is_stream","callback","prop","cloneObject","subscribe","should_forget_first","isDeepEqual","forgetAll","types_to_forget","msg_types","sub_ids","forget_all","ignored_responses_in_trackjs","queue","size","unshift","pop","ApiCallProxyHandler","prop_key","receiver","target_value","Reflect","args","return_value","TrackJS","log","fresh","track","getMessage","activeSymbols","active_symbols","buy","proposal_id","price","cashier","verification_code","contractsFor","symbol","contracts_for","get_account_status","get_self_exclusion","getSettings","getTradingTimes","date","trading_times","logout","newAccountVirtual","client_password","new_account_virtual","oauthApps","oauth_apps","portfolio","profitTable","offset","date_boundaries","profit_table","description","proposalOpenContract","contract_id","proposal_open_contract","residenceList","residence_list","sell","sellExpired","sell_expired","request_object","force_request","verifyEmail","verify_email","cb","is_forced","subscribeProposal","req","subscribeProposalOpenContract","subscribeProposalOpenContractOnBuy","buy_request","subscribeTicks","ticks","subscribeTicksHistory","subscribeTransaction","transaction","trackJSNetworkMonitor","Proxy","i18n_config","resources","translation","react","hashTransKey","defaultValue","crc32","lng","query","fallbackLng","i18n","use","initReactI18next","NodeList","thisArg","Element","closest","documentElement","matches","parentElement","nodeType","hide","style","display","show","toggleClass","class_name","should_add","setVisibility","make_visible","html","content","innerHTML","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","ownerDocument","querySelectorAll","isMobile","userAgent","ErrorBoundary","componentDidCatch","info","root_store","hasError","AppContents","is_app_blurred","is_fully_blurred","is_positions_drawer_on","autoHide","height","addNotificationBar","any","is_contract_mode","is_dark_mode","is_loading","is_slow_loading","pwa_prompt_event","setPWAPromptEvent","slow_loading_status","is_dark_mode_on","createFromInputFallback","config","_d","NaN","epochToMoment","epoch","unix","utc","toMoment","isValid","isUTC","today_moment","daysInMonth","formatDate","date_format","time","gmt_time","FadeIn","posed","span","opacity","transition","duration","PopoverBubble","calculatePosition","target_rectangle","margin","left","width","bottom","innerHeight","top","transform","right","innerWidth","has_error","popover_bubble","initialPose","position","zIndex","data-popover-pos","Popover","toggleOpen","Boolean","target_reference","current","getBoundingClientRect","toggleClose","createRef","classNameBubble","classNameTarget","classNameTargetIcon","disable_target_icon","icon_class_name","NetworkStatus","ToggleFullScreen","onFullScreen","is_full_screen","fullscreen_map","element","toggleFullScreen","stopPropagation","to_exit","fncToCall","fnc_enter","fnc_exit","full_screen_icon_class","TogglePositions","positions_count","togglePositionsDrawer","toggle_positions_class","data-count","ToggleSettings","is_settings_visible","toggleSettings","toggle_settings_class","Footer","is_route_blurred","is_settings_modal_on","show_positions_toggle","toggleSettingsModal","active_positions","MobxPropTypes","arrayOrObservableArray","MenuLinks","login_only","link_to","logo","image","LoginButton","has_effect","SignupButton","UpgradeButton","AccountActions","nextProps","is_acc_switcher_on","onClickUpgrade","toggleAccountsDialog","Lazy","ctor","should_load","has_progress","is_upgrade_enabled","is_dialog_on","toggleDialog","active_cashier_tab","is_cashier_modal_on","header_links","Header","is_mobile","is_accounts_switcher_on","Routes","objectOrObservableObject","updateStore","NetworkMonitor","is_online","setNetworkStatus","OutdatedBrowser","showError","opening_tag","closing_tag","interpolation","escapeValue","$buoop","vs","f","api","noclose","reminder","onshow","nomessage","insecure","pre_build_dvrs","client_notifications","self_exclusion","exclusion_end","authenticate","cashier_locked","withdrawal_locked","mt5_withdrawal_locked","document_needs_action","unwelcome","mf_retail","financial_limit","risk","tax","tnc","required_fields","handleClientNotifications","addNotification","prompt_client_to_authenticate","validations","account_status","document_under_review","ukrts_max_turnover_limit_not_set","professional","is_mf_retail","landing_company_shortcode","checkAccountStatus","necessary_withdrawal_fields","necessary_signup_fields","field","required_settings_fields","getRequiredFields","hasMissingRequiredField","validRequired","validEmail","validPassword","validLetterSymbol","validGeneral","validAddress","validPostCode","validPhone","validRegular","regex","validEmailToken","validTaxID","validBarrier","validCompare","validNotEqual","validMin","validLength","validNumber","opts","allow_empty","is_ok","decimal_count","format_money","Client","isMoreThanMax","min_value","max_value","getPreBuildDVRs","address","permitted_characters","barrier","compare","general","letter_symbol","not_equal","value_one","value_two","password","phone","postcode","regular","signup_token","tax_id","Errors","errors","attribute","Validator","input","rules","error_count","rule","is_rule_string","rule_object","validator","template","name1","name2","ruleObject","getRuleObject","condition","addFailure","check","BaseStore","bound","switchAccountDisposer","switch_account_listener","waitFor","local_storage_properties","session_storage_properties","validation_rules","store_name","writable","setValidationRules","setupReactionForLocalStorage","setupReactionForSessionStorage","retrieveFromStorage","properties","snapshot","toJS","reaction","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","getSnapshot","propertyName","validation_errors","x","addRule","intercept","change","validateProperty","newValue","trigger","inputs","isPassed","setValidationErrorMessages","listener","when","switch_broadcast","switchEndSignal","onSwitchAccount","disposeSwitchAccount","reactions","act","partial_fetch_time","freeze","observable","ClientStore","fiat","crypto","currencies_list","cur","isCrypto","has_tooltip","selectCurrency","session_start","upgrade_info","user_id","removeAllNotifications","setSwitched","setUserLogin","authorize_response","setLoginId","setAccounts","registerReactions","switched","getAccount","all_loginids","switchAccount","switchAccountHandler","setLoginFlag","resetLocalStorageValues","getToken","broadcastAccountChange","selected_currency","obj_params","active_loginid","map_names","is_allowed_real","acct1","param_value","token1","runInAction","storeClientAccounts","isDisabled","getAccountInfo","default_currency","valid_login_ids_regex","acc","computed","CommonStore","is_socket_opened","is_network_online","deposit_url","withdraw_url","GTMStore","is_gtm_applicable","getAppId","accountSwitcherListener","dataLayer","common_variables","contract_data","bom_ui","contract","barrier1","barrier2","basis","buy_price","contract_type","date_expiry","date_start","duration_unit","payout","settings","theme","positions_drawer","chart","toolbar_position","is_chart_layout_default","chart_asset_info","is_chart_asset_info_visible","chart_type","smart_chart","granularity","extra_data","moment_now","storage_key","gtm_transactions","isAfter","timestamp","transactions_arr","transaction_id","bom_account_type","bom_today","transaction_time","login_event","is_new_account","affiliate_token","visitorId","country_abbrev","today","bom_date_joined","acc_type","login","event_name","userId","CashierStore","containers","deposit","withdraw","default_cashier_height","timeout_cashier_url","timeout_verification_button","container","setErrorMessage","setContainerHeight","setLoading","container_urls","is_session_timeout","checkIframeLoaded","setSessionTimeout","setContainerUrl","response_cashier","clearVerification","setTimeoutCashierUrl","onMount","onIframeLoaded","clearTimeoutCashierUrl","container_height","error_message","is_session_time_out","is_verification_button_clicked","is_verification_email_sent","clearTimeoutVerification","setVerificationButtonClicked","response_verify_email","setVerificationEmailSent","setTimeoutVerification","onUnmount","ModulesStore","CloseButton","notification_order","types","danger","success","warning","contract_sold","sortNotifications","Notification","removeNotification","destroy","is_closed_by_user","closeOnClick","is_auto_close","delay","should_hide_close_btn","oneOf","UIStore","getDurationFromUnit","unit","handleResize","autorun","screen_width","is_visible","purchase_states","el_purchase_buttons","getElementsByClassName","is_chart_countdown_visible","tab","is_reports_visible","is_services_error_visible","is_main_drawer_on","is_notifications_drawer_on","notification","notification_messages","sort","has_only_forward_starting_contracts","push_notifications","unique","state_change","is_unsupported_contract_modal_visible","is_account_signup_modal_visible","MAX_MOBILE_WIDTH","MAX_TABLET_WIDTH","RootStore","configure","enforceActions","initStore","evt","hidden","setStorageEvents","isTouchDevice","App","base","basename","is_tablet","wrapper","path_name","sw_url","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","account_password","apps","cashier_password","exclusion","limits","personal","profit","component_props","LazyLoadedComponent","binary_socket","buffered_sends","req_id","wrong_app_id","is_disconnect_called","is_connected_before","socket_url","timeouts","no_duplicate_requests","sent_requests","waiting_list","clearTimeouts","isReady","sendBufferedRequests","PromiseClass","getSocketURL","BinarySocketBase","promise_obj","this_promises","pr","another_exists","req_obj","has_callback","skip_cache_update","last_response","WebSocket","onopen","onReconnect","onmessage","msg","this_req_id","onclose","is_resolved","states","readyState","setOnDisconnect","setOnReconnect","removeOnReconnect","removeOnDisconnect","domain_app_ids","all_domains","app_id","config_app_id","server_url","is_real","server","loginUrl","signup_device","date_first_contact","marketing_queries","default_login_url","initOneAll","provider","el_button","brand","preventDefault","Button","classNameSpan","tabIndex","wrapperClassName","classes","effect","button","disabled","extend","static_hash","is_empty","isEqualArray","isEqualObject","arr1","arr2","obj1","obj2","to_replace","findIndex","tag_name","attributes","attr","textContent","getStaticHash","data_obj","msg_type_mapping","isEmptyValue","makeKey","expire","map_to","exchange_rates","ticks_history","candles","is_empty_data","response_data","response_obj","isBefore","source_obj","map_key","cached_response","echo_req","cached_message","new_message","has_error_or_missing","has_new_value","has_old_cache","has_valid_cache","should_match_all","data_key","doLogout","performance_request_time","get_time_interval","update_time_interval","onTimeUpdated","clock_started","pending","requestTime","timeCounter","fncTimeUpdated","clearInterval","setInterval","performance","now","start_timestamp","performance_response_time","server_time_at_response","updateTime","time_since_response","clone","timePromise"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GACtBM,EAAiBN,EAAK,IAAM,GAGTO,EAAI,EAAGC,EAAW,GACpCD,EAAIJ,EAASM,OAAQF,IACzBL,EAAUC,EAASI,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBZ,IAAYY,EAAgBZ,IACpFM,EAASO,KAAKD,EAAgBZ,GAAS,IAExCY,EAAgBZ,GAAW,EAE5B,IAAID,KAAYG,EACZM,OAAOC,UAAUC,eAAeC,KAAKT,EAAaH,KACpDe,EAAQf,GAAYG,EAAYH,IAKlC,IAFGgB,GAAqBA,EAAoBjB,GAC5CkB,EAAiBH,KAAKI,MAAMD,EAAkBZ,GACxCE,EAASC,QACdD,EAASY,OAATZ,GAOD,OAHAa,EAAgBN,KAAKI,MAAME,EAAiBhB,GAAkB,IAGvDiB,IAER,SAASA,IAER,IADA,IAAIC,EACIhB,EAAI,EAAGA,EAAIc,EAAgBZ,OAAQF,IAAK,CAG/C,IAFA,IAAIiB,EAAiBH,EAAgBd,GACjCkB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAef,OAAQiB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BZ,EAAgBa,KAAcF,GAAY,GAE3CA,IACFJ,EAAgBO,OAAOrB,IAAK,GAC5BgB,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAqBtE,OAlB8B,IAA3BH,EAAgBZ,SAElBS,EAAiBa,SAAQ,SAAS7B,GACjC,QAAgC8B,IAA7BlB,EAAgBZ,GAAwB,CAC1CY,EAAgBZ,GAAW,KAC3B,IAAI+B,EAAOC,SAASC,cAAc,QAE9BN,EAAoBO,IACvBH,EAAKI,aAAa,QAASR,EAAoBO,IAEhDH,EAAKK,IAAM,WACXL,EAAKM,GAAK,SACVN,EAAKO,KAAOC,EAAevC,GAC3BgC,SAASQ,KAAKC,YAAYV,OAG5Bf,EAAiBT,OAAS,GAEpBc,EAIR,IAAIqB,EAAmB,GAGnBC,EAAqB,CACxB,KAAQ,GAML/B,EAAkB,CACrB,KAAQ,GAGLO,EAAkB,GAAIH,EAAmB,GAG7C,SAASuB,EAAevC,GACvB,OAAO2B,EAAoBiB,EAAI,OAAS,CAAC,IAAM,MAAM,eAAe,eAAe,IAAM,MAAM,OAAS,SAAS,oBAAoB,oBAAoB,iBAAiB,iBAAiB,oBAAoB,oBAAoB,iBAAiB,iBAAiB,iBAAiB,iBAAiB,qBAAqB,qBAAqB,mBAAmB,mBAAmB,qBAAuB,uBAAuB,uBAAyB,yBAAyB,mBAAqB,qBAAqB,yBAA2B,2BAA2B,qBAAqB,sBAAsB5C,IAAUA,GAAW,2BAIxnB,SAAS2B,EAAoB5B,GAG5B,GAAG2C,EAAiB3C,GACnB,OAAO2C,EAAiB3C,GAAU8C,QAGnC,IAAIC,EAASJ,EAAiB3C,GAAY,CACzCM,EAAGN,EACHgD,GAAG,EACHF,QAAS,IAUV,OANA/B,EAAQf,GAAUY,KAAKmC,EAAOD,QAASC,EAAQA,EAAOD,QAASlB,GAG/DmB,EAAOC,GAAI,EAGJD,EAAOD,QAKflB,EAAoBqB,EAAI,SAAuBhD,GAC9C,IAAIiD,EAAW,GAKZN,EAAmB3C,GAAUiD,EAASpC,KAAK8B,EAAmB3C,IACzB,IAAhC2C,EAAmB3C,IAFX,CAAC,OAAS,EAAE,mBAAmB,GAEQA,IACtDiD,EAASpC,KAAK8B,EAAmB3C,GAAW,IAAIkD,SAAQ,SAASC,EAASC,GAIzE,IAHA,IAAId,EAAO,OAAStC,EAAU,OAC1BqD,EAAW1B,EAAoBiB,EAAIN,EACnCgB,EAAmBtB,SAASuB,qBAAqB,QAC7ClD,EAAI,EAAGA,EAAIiD,EAAiB/C,OAAQF,IAAK,CAChD,IACImD,GADAC,EAAMH,EAAiBjD,IACRqD,aAAa,cAAgBD,EAAIC,aAAa,QACjE,GAAe,eAAZD,EAAIrB,MAAyBoB,IAAalB,GAAQkB,IAAaH,GAAW,OAAOF,IAErF,IAAIQ,EAAoB3B,SAASuB,qBAAqB,SACtD,IAAQlD,EAAI,EAAGA,EAAIsD,EAAkBpD,OAAQF,IAAK,CACjD,IAAIoD,EAEJ,IADID,GADAC,EAAME,EAAkBtD,IACTqD,aAAa,gBAChBpB,GAAQkB,IAAaH,EAAU,OAAOF,IAEvD,IAAIS,EAAU5B,SAASC,cAAc,QACrC2B,EAAQxB,IAAM,aACdwB,EAAQC,KAAO,WACfD,EAAQE,OAASX,EACjBS,EAAQG,QAAU,SAASC,GAC1B,IAAIC,EAAUD,GAASA,EAAME,QAAUF,EAAME,OAAOC,KAAOd,EACvDe,EAAM,IAAIC,MAAM,qBAAuBrE,EAAU,cAAgBiE,EAAU,KAC/EG,EAAIE,KAAO,wBACXF,EAAIH,QAAUA,SACPtB,EAAmB3C,GAC1B4D,EAAQW,WAAWC,YAAYZ,GAC/BR,EAAOgB,IAERR,EAAQtB,KAAOe,EAEJrB,SAASuB,qBAAqB,QAAQ,GAC5Cd,YAAYmB,MACfa,MAAK,WACP9B,EAAmB3C,GAAW,MAMhC,IAAI0E,EAAqB9D,EAAgBZ,GACzC,GAA0B,IAAvB0E,EAGF,GAAGA,EACFzB,EAASpC,KAAK6D,EAAmB,QAC3B,CAEN,IAAIC,EAAU,IAAIzB,SAAQ,SAASC,EAASC,GAC3CsB,EAAqB9D,EAAgBZ,GAAW,CAACmD,EAASC,MAE3DH,EAASpC,KAAK6D,EAAmB,GAAKC,GAGtC,IACIC,EADAC,EAAS7C,SAASC,cAAc,UAGpC4C,EAAOC,QAAU,QACjBD,EAAOE,QAAU,IACbpD,EAAoBO,IACvB2C,EAAO1C,aAAa,QAASR,EAAoBO,IAElD2C,EAAOV,IAAM5B,EAAevC,GAG5B,IAAIgF,EAAQ,IAAIX,MAChBO,EAAmB,SAAUZ,GAE5Ba,EAAOd,QAAUc,EAAOf,OAAS,KACjCmB,aAAaF,GACb,IAAIG,EAAQtE,EAAgBZ,GAC5B,GAAa,IAAVkF,EAAa,CACf,GAAGA,EAAO,CACT,IAAIC,EAAYnB,IAAyB,SAAfA,EAAMH,KAAkB,UAAYG,EAAMH,MAChEuB,EAAUpB,GAASA,EAAME,QAAUF,EAAME,OAAOC,IACpDa,EAAMK,QAAU,iBAAmBrF,EAAU,cAAgBmF,EAAY,KAAOC,EAAU,IAC1FJ,EAAMM,KAAO,iBACbN,EAAMnB,KAAOsB,EACbH,EAAMf,QAAUmB,EAChBF,EAAM,GAAGF,GAEVpE,EAAgBZ,QAAW8B,IAG7B,IAAIiD,EAAUQ,YAAW,WACxBX,EAAiB,CAAEf,KAAM,UAAWK,OAAQW,MAC1C,MACHA,EAAOd,QAAUc,EAAOf,OAASc,EACjC5C,SAASQ,KAAKC,YAAYoC,GAG5B,OAAO3B,QAAQsC,IAAIvC,IAIpBtB,EAAoB8D,EAAI3E,EAGxBa,EAAoB+D,EAAIhD,EAGxBf,EAAoBgE,EAAI,SAAS9C,EAASyC,EAAMM,GAC3CjE,EAAoBkE,EAAEhD,EAASyC,IAClC9E,OAAOsF,eAAejD,EAASyC,EAAM,CAAES,YAAY,EAAMC,IAAKJ,KAKhEjE,EAAoBsE,EAAI,SAASpD,GACX,oBAAXqD,QAA0BA,OAAOC,aAC1C3F,OAAOsF,eAAejD,EAASqD,OAAOC,YAAa,CAAEC,MAAO,WAE7D5F,OAAOsF,eAAejD,EAAS,aAAc,CAAEuD,OAAO,KAQvDzE,EAAoB0E,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQzE,EAAoByE,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKhG,OAAOiG,OAAO,MAGvB,GAFA9E,EAAoBsE,EAAEO,GACtBhG,OAAOsF,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOzE,EAAoBgE,EAAEa,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIR7E,EAAoBiF,EAAI,SAAS9D,GAChC,IAAI8C,EAAS9C,GAAUA,EAAOyD,WAC7B,WAAwB,OAAOzD,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAnB,EAAoBgE,EAAEC,EAAQ,IAAKA,GAC5BA,GAIRjE,EAAoBkE,EAAI,SAASgB,EAAQC,GAAY,OAAOtG,OAAOC,UAAUC,eAAeC,KAAKkG,EAAQC,IAGzGnF,EAAoBiB,EAAI,QAGxBjB,EAAoBoF,GAAK,SAAS3C,GAA2B,MAApB4C,QAAQhC,MAAMZ,GAAYA,GAEnE,IAAI6C,EAAaC,OAAqB,aAAIA,OAAqB,cAAK,GAChEC,EAAmBF,EAAWpG,KAAK8F,KAAKM,GAC5CA,EAAWpG,KAAOhB,EAClBoH,EAAaA,EAAWG,QACxB,IAAI,IAAI/G,EAAI,EAAGA,EAAI4G,EAAW1G,OAAQF,IAAKR,EAAqBoH,EAAW5G,IAC3E,IAAIU,EAAsBoG,EAGtBE,GAEJlG,EAAgBN,KAAK,CAAC,IAAI,iBAEnBO,KAGPvB,EAAqB,CAAC,GAAI,GAAI,EAAG,CAAC,SAAS,iBAAiB,oBAAoB,iBAAiB,oB,mCC/RnG,iJAAO,IAAMyH,EAAiB,YACjBC,EAAiB,QACjBC,EAAiBD,G,iCCF9B,4DAKME,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,GAAIC,EAA5B,EAA4BA,QAA5B,OACf,kBAAC,IAAD,CACIF,UAAWG,IAAW,gBAAiBH,EAAW,UAClDC,GAAIA,EACJC,QAASA,GAERH,IAITD,EAAWM,UAAY,CACnBL,SAAWM,IAAUnB,OACrBc,UAAWK,IAAUC,OACrBJ,QAAWG,IAAUE,KACrBN,GAAWI,IAAUC,QAGVR,O,iCCtBf,IAUIU,EACAC,EACAC,EAIMC,EAIAC,EAeAC,EA+CAC,EAOAC,EAKAC,EAuCAC,EArIV,+FAeMC,GACIP,EAAe,WACjBF,EAAaU,mBAAkB,IAG7BP,EAAS,SAACQ,GAEZ,GAAIA,EAAU,CACV,IAAKC,IAAMC,eAAgB,CACvB,IAAKd,EAAae,eAEd,YADAC,cAGJC,IAAGC,uBAAuBC,EAAiBC,eAE/CC,IAAWC,KAAKC,YAAO,WAAW,WAAQtB,EAAauB,YAAcH,IAAWxD,UAChFoC,EAAaU,mBAAkB,KAIjCN,EAAY,SAACoB,GAGf,OAFAjB,EAAYiB,GAEJA,EAASC,UACb,IAAK,YACD,GAAID,EAAS5E,MAAO,CAChB,IAAM8E,EAAyD,MAAzCC,eAAeC,QAAQ,cACS,kBAAlDC,2BAAiBL,EAAU,CAAC,QAAS,UAAgCE,GACrEC,eAAeG,WAAW,cAG9Bf,mBACQH,IAAMC,gBAAmB,YAAYkB,KAAKC,QAAMpE,IAAI,oBAGxD4D,EAASS,UAAUC,UAAYnC,EAAamC,SAC3CnC,EAAaoC,2BAEPX,EAASS,UAAUC,UAAYnC,EAAamC,SAEnD1B,EAAiBgB,GAHjBT,eAMR,MACJ,IAAK,kBAGL,IAAK,qBAED,MACJ,IAAK,eACGS,EAASY,eACT/B,EAAamB,EAASY,aAAaC,cACnCtC,EAAauC,SAASd,EAASY,aAAaG,OAC5CtC,EAAUuC,aAAahB,EAASY,eAEpC,MACJ,IAAK,oBACDrC,EAAa0C,yBAAyBjB,EAASkB,mBAC/C,MACJ,IAAK,cACDzC,EAAU0C,oBAAoBnB,KAMpCnB,EAAe,SAACuC,GACdA,IACA7C,EAAaM,aAAauC,GAC1B5B,IAAG6B,eAAeD,KAIpBtC,EAAawC,YAAI,yBAAC,WAAWC,GAAX,gFACpB,OADoB,SACdC,IAAaC,KAAK,kBADJ,OAEpBlD,EAAaO,WAAWyC,GAFJ,2CAKlBxC,EAAc,SAACiB,GACjB,IAAMC,EAAaD,EAASC,SAE5B,OADmBI,2BAAiBL,EAAU,CAAC,QAAS,UAEpD,IAAK,gBACL,IAAK,sBACL,IAAK,yBACgB,mBAAbC,GACAzB,EAAakD,UAAS,EAAM,CAAEjG,QAASuE,EAAS5E,MAAMK,UAE1D,MAEJ,IAAK,YACgB,qBAAbwE,GACAzB,EAAakD,UAAS,EAAM,CAAEjG,QAASkG,mBAAS,+EAEpD,MACJ,IAAK,eAGL,IAAK,iBACDnD,EAAakD,UAAS,EAAM,CAAEjG,QAASuE,EAAS5E,MAAMK,YA6C3D,CACHoE,KAxCS,SAAC+B,GAKV,OAJArD,EAAeqD,EAAMC,OACrBrD,EAAeoD,EAAME,OACrBrD,EAAemD,EAAMG,IAEd,CACHrD,eACAC,SACAC,cAiCJE,aACAE,iBA9BEA,EAAmB,SAACgB,GACtBzB,EAAayD,kBAAkBhC,GAC/BR,IAAGyC,iBAAiBvC,EAAiB6B,SAAS,GAC9C/B,IAAG0C,YAAY,CAAEtB,aAAc,GAAK,CAAEuB,QAAQ,IAC9C3C,IAAG4C,mBACH5C,IAAG6C,mBACH7C,IAAG8C,eACHzD,EACImB,EAASS,UAAU8B,SACnBhE,EAAaiE,SAASjE,EAAamC,SAASU,WAE3C7C,EAAakE,YACdjD,IAAGkD,mBAEPlB,IAAamB,eACT,OAAOpC,KAAKP,EAASS,UAAUmC,WAAcrE,EAAaiE,SAASjE,EAAamC,SAASmC,gBAmBtF5D,MAEf,IACQ6D,EADFpD,GACEoD,GAAe,EAwBZ,CACHnD,cAxBkB,SAACK,GACnB,GAAIA,EAAS+C,eAAgB,CAEzB,IADAD,EAAe,QAAQvC,KAAKP,EAAS+C,eAAeC,gBAC/BxB,IAAayB,eAE9B,YADA3F,OAAO4F,SAASC,SAGhBnD,EAAS+C,eAAetH,QAK5B+F,IAAayB,aAAaH,GAC1BvE,EAAa6E,iBAAiBpD,KAYlCuB,QARY,SAACvB,GACRA,EAAS5E,OACV6D,EAAoBH,WAAWkB,EAASuB,QAAQA,a,qGCzLtD8B,EAAW,SAAC,GAMZ,IALFC,EAKE,EALFA,QACAC,EAIE,EAJFA,oBACAC,EAGE,EAHFA,oBACAC,EAEE,EAFFA,yBACAC,EACE,EADFA,mBAEMC,EAAa,IAAIC,gBAAgBtG,OAAO4F,SAASW,QAIvD,OAFAL,EAAoBG,EAAWvH,IAAI,SAE3BuH,EAAWvH,IAAI,WACnB,IAAK,SACDqH,GAAyB,GACzB,MAEJ,IAAK,mBACDF,EAAoB,YACpBG,GAAmB,GAU3B,OAHApG,OAAOgG,QAAQQ,aAAa,GAAI1L,SAAS2L,MAAO,KAChDT,EAAQrM,KAAK+M,IAAOC,MAEb,MAGXZ,EAASlF,UAAY,CACjBmF,QAA0BlF,IAAUnB,OACpCuG,oBAA0BpF,IAAUE,KACpCmF,yBAA0BrF,IAAUE,KACpCoF,mBAA0BtF,IAAUE,MAGzB4F,ICjCLC,EACAC,EAcNC,EDkBWH,cAAWI,aACtB,gBAAGzC,EAAH,EAAGA,OAAQ0C,EAAX,EAAWA,GAAX,MAAqB,CACjBhB,oBAA0BgB,EAAGhB,oBAC7BC,oBAA0B3B,EAAO2B,oBACjCC,yBAA0Bc,EAAGd,yBAC7BC,mBAA0Ba,EAAGb,sBALXY,CAOxBjB,I,eC3CImB,EAAUC,gBAAK,kBAAM,qCAErBC,GACIP,EAAU/L,SAASuM,cAAc,SACjCP,EAAgBhM,SAASC,cAAc,WAC/BkC,IAAM,0BACpB4J,EAAQtL,YAAYuL,GACbK,gBAAK,kBAAM,0CAchBG,EAAiB,CAAEC,UAAWL,EAAST,MAAOpC,mBAAS,cAU9CmD,EARS,WAKpB,OAJKT,IACDA,EAdwB,CAC5B,CAAEU,KAAMf,IAAOgB,MAAWH,UAAWI,IAAiBlB,MAAO,GAAsB/F,GAAIgG,IAAOC,MAC9F,CAAEc,KAAMf,IAAOC,KAAWY,UAAWH,EAAiBX,MAAOpC,mBAAS,SAAauD,OAAO,GAC1F,CAAEH,KAAMf,IAAOmB,SAAWN,UAAWL,EAAiBT,MAAOpC,mBAAS,cACtE,CAAEoD,KAAMf,IAAOoB,SAAWP,UAAWxB,EAAiBU,MAAOpC,mBAAS,eAYtE0C,EAAapN,KAAK2N,GACXP,G,mkBCxBX,IAAMgB,EAAa,SAAC,GAA6C,IAA3CC,EAA2C,EAA3CA,aAActH,EAA6B,EAA7BA,GAAIF,EAAyB,EAAzBA,SAAayH,EAAY,sCACvDR,ECTmB,SAACA,GAAD,MAAU,MAAMxE,KAAKwE,GAAQA,EAAnB,WAA8BA,GAAQ,IDS3DS,CAAcxH,GACtByH,ECRqB,SAAlBC,EAAmBX,EAAMY,GAClC,IAAIlO,EAsBJ,OApBAkO,EAAcC,MAAK,SAACC,GAChB,IAAIC,EACJ,IACIA,EAAaC,YAAUhB,EAAMc,GAC/B,MAAOzM,GACL,GAAI,YAAYmH,KAAKnH,EAAEqC,SACnB,OAIR,OAAIqK,GACArO,EAASoO,GACF,KACAA,EAAW7B,SAClBvM,EAASiO,EAAgBX,EAAMc,EAAW7B,YAM3CvM,EDfOiO,CAAgBX,EAAMD,KAEpC,IAAKW,EACD,MAAM,IAAIhL,MAAJ,2BAA8BuD,IAGxC,OACIA,EACI,kBAAC,IAAD,GAASA,GAAI+G,EAAMiB,gBAAiBV,GAAgB,SAAUJ,MAAOO,EAAMP,OAAWK,GACjFzH,GAGL,sBAAOyH,EACFzH,IAKjBuH,EAAWlH,UAAY,CACnBmH,aAAclH,IAAUC,OACxBP,SAAcM,IAAUnB,OACxBe,GAAcI,IAAUC,QAGbgH,Q,2EE/BTY,EAAc,SAAC,GAAD,IAChBC,EADgB,EAChBA,QACAC,EAFgB,EAEhBA,SACAC,EAHgB,EAGhBA,WAHgB,OAKhB,kBAACC,EAAA,EAAD,CACIC,OACI,kBAAC,IAAD,CACIC,kBAAkB,kEAClBC,OAAQ,CAAEJ,WAAYA,GAAc,QACpCK,WAAY,CAAE,wBAAI3J,IAAK,OAG/B4J,SAAU,CACN,kBAAC,IAAD,CACI5J,IAAK,EACLyJ,kBAAkB,0HAClBE,WAAY,CACR,uBAAG3J,IAAK,EAAGiB,UAAU,OAAOE,QAASiI,IACrC,uBAAGpJ,IAAK,EAAGiB,UAAU,OAAOE,QAASkI,WAOzDF,EAAY9H,UAAY,CACpB+H,QAAY9H,IAAUE,KACtB6H,SAAY/H,IAAUE,KACtB8H,WAAYhI,IAAUC,QAI1B4H,EAAYU,aAAe,CACvBR,SAAU,WAAQ7I,OAAOsJ,KAAKC,iBAAO,mBAAe3O,OAAWA,GAAW,MAG/D+N,Q,wNC/Bf,IAuCe3B,eAAQ,kBAAc,CACjCwC,cADmB,EAAG/E,IACH+E,iBADRxC,EAvCY,SAAAmB,GA8BvB,OAAO,kBAAC,IAAD,CACHP,MAAOO,EAAMP,MACbH,KAAMU,EAAMV,KACZgC,OAhCkB,SAAAxB,GAClB,IAAI9N,EAAS,KACb,GAAIgO,EAAMZ,YAAcxB,IAAU,CAC9B,IAAIrF,EAAKyH,EAAMzH,GAGf,GAAIyH,EAAMV,OAASf,IAAOgB,MAEtBhH,EADqBuH,EAAbrC,SACM8D,SAASC,cAAcC,QAAQzB,EAAMV,KAAM,IAE7DtN,EAAS,kBAAC,IAAD,CAAUuG,GAAIA,SAEvBvG,EACKgO,EAAM0B,mBAAqB1B,EAAM2B,aAC9B,kBAAC,EAAD,CAAalB,QAASmB,kBAAiBjB,WAAYX,EAAM1B,QAEzD,kBAAC0B,EAAMZ,UAAP,KAAqBU,EAArB,CAA4BvB,OAAQyB,EAAMzB,OAAQsD,YAAa7B,EAAM6B,eAIjFC,IAASC,YACT,IAAMzD,EAAQ0B,EAAM1B,MAAN,UAAiB0B,EAAM1B,MAAvB,OAAoC,GAKlD,OAJA3L,SAAS2L,MAAT,UAAqBA,GAArB,OAA+BnG,iBAC/B4D,IAAaC,KAAK,kBAAkB5G,MAAK,WACrC4K,EAAMqB,cAAc,CAAE1M,MAAO,iBAE1B3C,Q,+MClCf,IAaegQ,EAbM,SAAClC,GAAD,OACjB,kBAAC,IAAMmC,SAAP,CAAgBC,SAAU,+BACtB,kBAAC,IAAD,KAEQ7C,IAAkB8C,KAAI,SAACnC,EAAOoC,GAAR,OAClB,kBAAC,EAAD,GAAoB/K,IAAK+K,GAASpC,EAAWF,U,2JCL3Dc,EAAY,SAAC,GAAD,IACdyB,EADc,EACdA,cACAC,EAFc,EAEdA,WACArB,EAHc,EAGdA,SACAJ,EAJc,EAIdA,OACA0B,EALc,EAKdA,eACAC,EANc,EAMdA,aANc,OAQd,yBAAKlK,UAAU,yBACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,sBACTuI,GAEL,yBAAKvI,UAAU,+BACX,0BAAMA,UAAU,uBACV2I,EAASkB,KAAI,SAACnM,EAASuJ,GAAV,OACXvJ,EAAQyM,SACJ,uBAAGpL,IAAKkI,EAAOmD,wBAAyB,CAAEC,OAAQ3M,EAAQA,WAE1D,uBAAGqB,IAAKkI,GAASvJ,MAEvBsM,GACF,kBAAC,IAAMM,SAAP,KACI,6BACA,uBAAGtK,UAAU,oBAAmB,kBAAC,IAAD,CAAUwI,kBAAmB,6BAA8BC,OAAQ,CAAEuB,oBAK/GC,GACF,kBAAC,IAAD,CACIjK,UAAU,oDACVC,GAAIiK,EACJhK,QAAS6J,GAET,0BAAM/J,UAAU,kCACXiK,OAQrB3B,EAAUlI,UAAY,CAClB2J,cAAgB1J,IAAUE,KAC1ByJ,WAAgB3J,IAAUkK,OAC1BhC,OAAgBlI,IAAUmK,UAAU,CAACnK,IAAUC,OAAQD,IAAUoK,OACjE9B,SAAgBtI,IAAUqK,MAC1BT,eAAgB5J,IAAUmK,UAAU,CAACnK,IAAUC,OAAQD,IAAUoK,OACjEP,aAAgB7J,IAAUC,QAGfgI,Q,oEC1Df,oDAIMqC,EAAW,SAAC,GAAkC,IAAhC3K,EAAgC,EAAhCA,UAAW4K,EAAqB,EAArBA,eACrBC,EAAgB1K,IAAWyK,EAAgB,YAC3CE,EAAgB3K,IAAW,oBAAqBH,GACtD,OACI,yBAAKA,UAAW6K,GACZ,yBAAK7K,UAAW8K,GACZ,yBAAK9K,UAAU,6BACX,yBAAKA,UAAU,qCAAqC+K,QAAQ,eACxD,4BAAQ/K,UAAU,iCAAiCgL,GAAG,KAAKC,GAAG,KAAK3M,EAAE,KAAK4M,KAAK,OAAOC,YAAY,IAAIC,iBAAiB,YAQ/IT,EAASvK,UAAY,CACjBJ,UAAgBK,IAAUC,OAC1BsK,eAAgBvK,IAAUC,QAGfqK,O,oBCzBf,IAAMrQ,EAAgB+Q,EAAQ,GAAa/Q,cAe3Ca,EAAOD,QAAU,CACboQ,UAVc,SAAAC,GAAI,SAAOA,GAA8B,IAArBA,EAAKC,aAA2C,IAAtBD,EAAKE,eAWjEC,eAJmB,SAACC,GAAD,IAAcC,EAAd,uDAAuBvR,SAAvB,OAAoCuR,EAAOF,eAAeC,IAAgBrR,EAAc,U,+2BCVzGuR,E,YACF,WAAYrE,GAAO,a,4FAAA,UACf,wBAAMA,KAEDsE,MAAQ,CAETC,cAAwBC,IAAMtF,MAAK,kBAAM,iCACzCuF,UAAwBD,IAAMtF,MAAK,kBAAM,iCACzCwF,SAAwBF,IAAMtF,MAAK,kBAAM,iCACzCyF,kBAAwBH,IAAMtF,MAAK,kBAAM,iCACzC0F,aAAwBJ,IAAMtF,MAAK,kBAAM,iCACzC2F,sBAAwBL,IAAMtF,MAAK,kBAAM,iCACzC4F,uBAAwBN,IAAMtF,MAAK,kBAAM,iCACzC6F,gBAAwBP,IAAMtF,MAAK,kBAAM,kCACzC8F,iBAAwBR,IAAMtF,MAAK,kBAAM,kCACzC+F,UAAwBT,IAAMtF,MAAK,kBAAM,kCACzCgG,UAAwBV,IAAMtF,MAAK,kBAAM,kCACzCiG,UAAwBX,IAAMtF,MAAK,kBAAM,kCACzCkG,gBAAwBZ,IAAMtF,MAAK,kBAAM,kCACzCmG,WAAwBb,IAAMtF,MAAK,kBAAM,kCACzCoG,YAAwBd,IAAMtF,MAAK,kBAAM,kCACzCqG,iBAAwBf,IAAMtF,MAAK,kBAAM,kCACzCsG,gBAAwBhB,IAAMtF,MAAK,kBAAM,kCACzCuG,SAAwBjB,IAAMtF,MAAK,kBAAM,kCACzCwG,aAAwBlB,IAAMtF,MAAK,kBAAM,kCACzCyG,gBAAwBnB,IAAMtF,MAAK,kBAAM,kCACzC0G,gBAAwBpB,IAAMtF,MAAK,kBAAM,kCACzC2G,aAAwBrB,IAAMtF,MAAK,kBAAM,kCACzC4G,UAAwBtB,IAAMtF,MAAK,kBAAM,kCACzC6G,SAAwBvB,IAAMtF,MAAK,kBAAM,kCACzC8G,aAAwBxB,IAAMtF,MAAK,kBAAM,kCACzC+G,WAAwBzB,IAAMtF,MAAK,kBAAM,kCACzCgH,YAAwB1B,IAAMtF,MAAK,kBAAM,kCACzCiH,YAAwB3B,IAAMtF,MAAK,kBAAM,kCACzCkH,QAAwB5B,IAAMtF,MAAK,kBAAM,kCACzCmH,eAAwB7B,IAAMtF,MAAK,kBAAM,kCACzCoH,oBAAwB9B,IAAMtF,MAAK,kBAAM,kCAGzCqH,kBAAmB/B,IAAMtF,MAAK,kBAAM,kCACpCsH,YAAmBhC,IAAMtF,MAAK,kBAAM,kCACpCuH,iBAAmBjC,IAAMtF,MAAK,kBAAM,kCACpCwH,cAAmBlC,IAAMtF,MAAK,kBAAM,kCACpCyH,SAAmBnC,IAAMtF,MAAK,kBAAM,kCAGpC0H,4BAA6BpC,IAAMtF,MAAK,kBAAM,iCAC9C2H,cAA6BrC,IAAMtF,MAAK,kBAAM,iCAG9C4H,eAAgBtC,IAAMtF,MAAK,kBAAM,kCAGjC6H,aAAevC,IAAMtF,MAAK,kBAAM,kCAChC8H,cAAexC,IAAMtF,MAAK,kBAAM,kCAChC+H,aAAezC,IAAMtF,MAAK,kBAAM,kCAGhCgI,qBAAsB1C,IAAMtF,MAAK,kBAAM,kCACvCiI,WAAsB3C,IAAMtF,MAAK,kBAAM,kCACvCkI,SAAsB5C,IAAMtF,MAAK,kBAAM,kCACvCmI,YAAsB7C,IAAMtF,MAAK,kBAAM,kCACvCoI,UAAsB9C,IAAMtF,MAAK,kBAAM,kCACvCqI,cAAsB/C,IAAMtF,MAAK,kBAAM,kCACvCsI,cAAsBhD,IAAMtF,MAAK,kBAAM,kCACvCuI,YAAsBjD,IAAMtF,MAAK,kBAAM,kCACvCwI,UAAsBlD,IAAMtF,MAAK,kBAAM,kCAGvCyI,SAA0BnD,IAAMtF,MAAK,kBAAM,kCAC3C0I,kBAA0BpD,IAAMtF,MAAK,kBAAM,kCAC3C2I,gBAA0BrD,IAAMtF,MAAK,kBAAM,kCAC3C4I,cAA0BtD,IAAMtF,MAAK,kBAAM,kCAC3C6I,yBAA0BvD,IAAMtF,MAAK,kBAAM,kCAG3C8I,WAAcxD,IAAMtF,MAAK,kBAAM,kCAC/B+I,aAAczD,IAAMtF,MAAK,kBAAM,kCAC/BgJ,aAAc1D,IAAMtF,MAAK,kBAAM,kCAC/BiJ,UAAc3D,IAAMtF,MAAK,kBAAM,kCAG/BkJ,QAAY5D,IAAMtF,MAAK,kBAAM,kCAC7BmJ,WAAY7D,IAAMtF,MAAK,kBAAM,kCAC7BoJ,SAAY9D,IAAMtF,MAAK,kBAAM,kCAC7BqJ,WAAY/D,IAAMtF,MAAK,kBAAM,kCAG7BsJ,gBAAoBhE,IAAMtF,MAAK,kBAAM,kCACrCuJ,cAAoBjE,IAAMtF,MAAK,kBAAM,kCACrCwJ,kBAAoBlE,IAAMtF,MAAK,kBAAM,iCACrCyJ,mBAAoBnE,IAAMtF,MAAK,kBAAM,kCACrC0J,gBAAoBpE,IAAMtF,MAAK,kBAAM,kCACrC2J,cAAoBrE,IAAMtF,MAAK,kBAAM,kCACrC4J,SAAoBtE,IAAMtF,MAAK,kBAAM,kCACrC6J,cAAoBvE,IAAMtF,MAAK,kBAAM,mCA9F1B,E,gSAmGf,IAAM8J,EAAU,CACZC,SAAeC,KAAKlJ,MAAMiJ,SAC1BzQ,UAAe0Q,KAAKlJ,MAAMxH,UAC1B2Q,cAAeD,KAAKlJ,MAAMmJ,cAC1BC,cAAeF,KAAKlJ,MAAMoJ,cAC1BC,cAAeH,KAAKlJ,MAAMqJ,cAC1BC,YAAeJ,KAAKlJ,MAAMsJ,YAC1B5Q,QAAewQ,KAAKlJ,MAAMtH,QAC1B6Q,aAAeL,KAAKlJ,MAAMuJ,aAC1BC,aAAeN,KAAKlJ,MAAMwJ,aAC1B9U,KAAewU,KAAKlJ,MAAMtL,MAGxB+U,EAAWP,KAAK5E,MAAM4E,KAAKlJ,MAAM0J,MACvC,OAAKD,EAGD,kBAAC,IAAMtH,SAAP,CAAgBC,SAAU,+BACtB,kBAACqH,EAAaT,IAJA,mC,8BAlHXxE,IAAMmF,eA4HzBtF,EAAKzL,UAAY,CACbqQ,SAAepQ,IAAUC,OACzBN,UAAeK,IAAUC,OACzBqQ,cAAetQ,IAAUC,OACzBsQ,cAAevQ,IAAUC,OACzB4Q,KAAe7Q,IAAUC,OACzBuQ,cAAexQ,IAAU+Q,KACzBN,YAAezQ,IAAUmK,UAAU,CAACnK,IAAUkK,OAAQlK,IAAU+Q,OAChElR,QAAeG,IAAUE,KACzBrE,KAAemE,IAAUC,QAGduL,O,mBC3If,IAAMwF,EAAmBhG,EAAQ,KAC3B/I,EAAmB+I,EAAQ,GAAa/I,iBACxCgP,EAAmBjG,EAAQ,GAAaiG,cACxCC,EAAmBlG,EAAQ,IAAakG,aAExCC,EAAY,SAAUzS,GACxB,OAAO0S,KAAKC,MAAMhB,KAAKrO,QAAQtD,IAAQ,OAGrC4S,EAAY,SAAU5S,EAAKN,GAC7B,GAAIA,GAASA,aAAiB5F,OAC1B,IACI6X,KAAKkB,QAAQ7S,EAAK0S,KAAKI,UAAUpT,IACnC,MAAOpD,MAIM,oBAAZyW,UACPA,QAAQhZ,UAAU0Y,UAAYA,EAC9BM,QAAQhZ,UAAU6Y,UAAYA,GAGlC,IAAMI,EAAqB,SAACC,GACxB,QAAuB,IAAZA,EACP,OAAO,EAIX,IAGI,OAFAA,EAAQJ,QAFK,OAEa,KAC1BI,EAAQzP,WAHK,SAIN,EACT,MAAOlH,GACL,OAAO,IAIT4W,EAAQ,SAAUD,GACpBtB,KAAKsB,QAAoBA,EACzBtB,KAAKsB,QAAQR,UAAYA,EACzBd,KAAKsB,QAAQL,UAAYA,GAG7BM,EAAMnZ,UAAY,CACduF,IADc,SACVU,GACA,OAAO2R,KAAKsB,QAAQ3P,QAAQtD,SAAQ5E,GAExC+X,IAJc,SAIVnT,EAAKN,QACgB,IAAVA,GACPiS,KAAKsB,QAAQJ,QAAQ7S,EAAKN,IAGlC+S,UATc,SASJzS,GACN,MAAyC,mBAA3B2R,KAAKsB,QAAQR,UACrBd,KAAKsB,QAAQR,UAAUzS,GACvB0S,KAAKC,MAAMhB,KAAKsB,QAAQ3P,QAAQtD,IAAQ,OAElD4S,UAdc,SAcJ5S,EAAKN,GAC2B,mBAA3BiS,KAAKsB,QAAQL,UACpBjB,KAAKsB,QAAQL,UAAU5S,EAAKN,GAE5BiS,KAAKsB,QAAQJ,QAAQ7S,EAAK0S,KAAKI,UAAUpT,KAGjD0T,OArBc,SAqBPpT,GAAO2R,KAAKsB,QAAQzP,WAAWxD,IACtCqT,MAtBc,WAsBA1B,KAAKsB,QAAQI,UAG/B,IAAMC,EAAgB,SAAUnT,GAC5BwR,KAAK7M,WAA0B,IAAX3E,EAAyBA,EAAS,IAG1DmT,EAAcvZ,UAAY,CACtBuF,IADsB,SAClBU,GACA,OAAOuD,EAAiBoO,KAAK7M,MAAO9E,IAExCmT,IAJsB,SAIlBI,EAAG7T,GAAyB,IAAlB8T,EAAkB,uDAAZ7B,KAAK7M,MACjB9E,EAAMuT,EACLE,MAAMC,QAAQ1T,KAAMA,EAAM,CAACA,IAC5BA,EAAInG,OAAS,GACPmG,EAAI,KAAMwT,IAAQjB,EAAciB,EAAIxT,EAAI,OAAMwT,EAAIxT,EAAI,IAAM,IAClE2R,KAAKwB,IAAInT,EAAIU,MAAM,GAAIhB,EAAO8T,EAAIxT,EAAI,MAEtCwT,EAAIxT,EAAI,IAAMN,GAGtB+S,UAdsB,SAcZzS,GACN,OAAO0S,KAAKC,MAAMhB,KAAKrS,IAAIU,IAAQ,OAEvC4S,UAjBsB,SAiBZ5S,EAAKN,GACXiS,KAAKwB,IAAInT,EAAK0S,KAAKI,UAAUpT,KAEjC0T,OApBsB,WAoBN,kCAANO,EAAM,yBAANA,EAAM,gBACZA,EAAKxY,SAAQ,SAAC6E,UAAiB,EAAK8E,MAAM9E,OAE9CqT,MAvBsB,WAuBV1B,KAAK7M,MAAQ,IACzB8O,IAxBsB,SAwBlB5T,GAAQ,YAAyB5E,IAAlBuW,KAAKrS,IAAIU,IAC5B2T,KAzBsB,WAyBV,OAAO7Z,OAAO6Z,KAAKhC,KAAK7M,QACpC7K,KA1BsB,SA0BjB+F,GAAoC,mBAAlB2R,KAAKrS,IAAIU,IAAqB2R,KAAKrS,IAAIU,EAAT2R,KAGzD,IAAMjO,EAAY,IAAI4P,EACtB5P,EAAM3J,UAAYuZ,EAAcvZ,UAOhC2J,EAAM3J,UAAU8Z,YAAc,SAAU3J,GACpC,IAAIjC,EAAOiC,EACX,GAAoB,iBAATjC,EAAmB,CAC1B,IAAM0L,EAAO1L,EAAK6L,MAAM,KACxB7L,EAAO,CAAC,WAAY0L,EAAK,IAAII,OAAOJ,GAExC,OAAOhC,KAAKrS,IAAI2I,IAEpBvE,EAAMyP,IAAI,WAAY,IAEtB,IAAMa,EAAgB,SAAUC,EAAaC,GACzC,IAAMC,EAAW3T,OAAO4F,SAAS+N,SAEjCxC,KAAKyC,aAAc,EACnBzC,KAAKsC,YAAcA,EACnBtC,KAAK0C,OAAcH,IAAkB1B,IAAiB,IAAL,OAAS2B,EAASL,MAAM,KAAKpT,OAAO,GAAG4T,KAAK,MAASH,GACtGxC,KAAK1J,KAAc,IACnB0J,KAAK4C,QAAc,IAAIC,KAAK,gCAC5B7C,KAAKjS,MAAc,IAGvBsU,EAAcja,UAAY,CACtB0a,KADsB,WAElB,IAAMC,EAAepC,EAAQhT,IAAIqS,KAAKsC,aACtC,IACItC,KAAKjS,MAAQgV,EAAehC,KAAKC,MAAM+B,GAAgB,GACzD,MAAOpY,GACLqV,KAAKjS,MAAQ,GAEjBiS,KAAKyC,aAAc,GAEvBO,MAVsB,SAUhBC,EAAKC,EAAYC,GACdnD,KAAKyC,aAAazC,KAAK8C,OAC5B9C,KAAKjS,MAAQkV,EACTC,IAAYlD,KAAK4C,QAAUM,GAC/BvC,EAAQa,IAAIxB,KAAKsC,YAAatC,KAAKjS,MAAO,CACtC6U,QAAS5C,KAAK4C,QACdtM,KAAS0J,KAAK1J,KACdoM,OAAS1C,KAAK0C,OACdU,SAAWD,KAGnBxV,IArBsB,SAqBlBU,GAEA,OADK2R,KAAKyC,aAAazC,KAAK8C,OACrB9C,KAAKjS,MAAMM,IAEtBmT,IAzBsB,SAyBlBnT,EAAK4U,GACAjD,KAAKyC,aAAazC,KAAK8C,OAC5B9C,KAAKjS,MAAMM,GAAO4U,EAClBtC,EAAQa,IAAIxB,KAAKsC,YAAatC,KAAKjS,MAAO,CACtC6U,QAAS,IAAIC,KAAK7C,KAAK4C,SACvBtM,KAAS0J,KAAK1J,KACdoM,OAAS1C,KAAK0C,UAGtBjB,OAlCsB,WAmClBd,EAAQc,OAAOzB,KAAKsC,YAAa,CAC7BhM,KAAQ0J,KAAK1J,KACboM,OAAQ1C,KAAK0C,WAKzB,IAuBIW,EACAC,EAEAjC,EAAmBxS,OAAO0U,gBAC1BD,EAAa,IAAI/B,EAAM1S,OAAO0U,eAE9BlC,EAAmBxS,OAAO6C,kBAC1B2R,EAAe,IAAI9B,EAAM1S,OAAO6C,iBAG/B4R,IACDA,EAAa,IAAI3B,GAEhB0B,IACDA,EAAe,IAAI1B,GAGvBlX,EAAOD,QAAU,CACb6W,qBACAgB,gBACAmB,cA3CkB,WAClB,IAAMC,EAAU,CAAC,IAAD,OACR9Z,SAAS+Y,OAAOP,MAAM,KAAKpT,OAAO,GAAG4T,KAAK,MADlC,WAERhZ,SAAS+Y,SAGbgB,EAAc7U,OAAO4F,SAAS8D,SAAS4J,MAAM,IAAK,GAAG,GACrC,KAAhBuB,IACAA,EAAc,IAAH,OAAOA,IARiB,2BAAjBC,EAAiB,yBAAjBA,EAAiB,gBAWvCA,EAAana,SAAQ,SAAC6D,GAClBsT,EAAQc,OAAOpU,EAAG,CAAEiJ,KAAM,IAAKoM,OAAQe,EAAQ,KAC/C9C,EAAQc,OAAOpU,EAAG,CAAEiJ,KAAM,IAAKoM,OAAQe,EAAQ,KAC/C9C,EAAQc,OAAOpU,GACX,IAAIuW,OAAOvW,GAAGyE,KAAKnI,SAASka,SAAWH,IACvC/C,EAAQc,OAAOpU,EAAG,CAAEiJ,KAAMoN,EAAahB,OAAQe,EAAQ,KACvD9C,EAAQc,OAAOpU,EAAG,CAAEiJ,KAAMoN,EAAahB,OAAQe,EAAQ,KACvD9C,EAAQc,OAAOpU,EAAG,CAAEiJ,KAAMoN,SA0BlC3R,QACAsR,eACAC,e,gCC1NJ,6CAIMQ,EAAW,SAAC,GAAD,IAAGhM,EAAH,EAAGA,kBAAmBC,EAAtB,EAAsBA,OAAQC,EAA9B,EAA8BA,WAA9B,OACb,kBAAC,IAAD,CAAO+L,SAAUjM,EAAmBC,OAAQA,EAAQC,WAAYA,KAGpE8L,EAASpU,UAAY,CACjBsI,WAAmBrI,IAAUqU,QAAQrU,IAAUoK,MAC/CjC,kBAAmBnI,IAAUC,OAC7BmI,OAAmBpI,IAAUnB,QAGlBsV,O,k7BCRTG,E,wcACO,I,MAAA,EAODjE,KAAKlJ,MALLoN,EAFC,EAEDA,WACAC,EAHC,EAGDA,qBACAC,EAJC,EAIDA,UACAC,EALC,EAKDA,MACAC,EANC,EAMDA,SAEEC,EAAgBF,EAAMG,MAAK,SAAAC,GAAI,OAAIA,EAAKC,QAAUJ,EAASI,SAC3DC,EAAgBJ,EAAcxW,MAEpC,OACI,yBAAKuB,UAAU,yBACT4U,GACE,yBAAK5U,UAAWG,IAAW,4B,EAAD,G,EACrB0U,E,IAAyBA,E,kGAItBD,EAAW/K,KAAI,YAAyC,IAAtC/C,EAAsC,EAAtCA,UAAWoK,EAA2B,EAA3BA,KAAMhR,EAAqB,EAArBA,QAAS8F,EAAY,EAAZA,MAClCsP,EAAYxO,EAClB,OACIA,EACI,kBAACwO,EAAD,CAAWvW,IAAKiH,IAEhB,yBACIhG,UAAU,mCACVjB,IAAKiH,EACL9F,QAASA,GAET,kBAAC,IAAD,CACIF,UAAU,iCACVkR,KAAMA,SAQpC4D,EACE,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAU3N,OAAK,EAACoO,KAAMtP,IAAOuP,QAASvV,GAAIgG,IAAOwP,YAE7CV,EAAMlL,KAAI,YAA2B,IAAxBpL,EAAwB,EAAxBA,MAAOuI,EAAiB,EAAjBA,KAAMkK,EAAW,EAAXA,KAChBoE,EAAY7W,EAClB,OACI,kBAAC,IAAD,CACIM,IAAKiI,EACLA,KAAMA,EACNgC,OAAQ,kBAAM,kBAACsM,EAAD,CAAWI,eAAgBxE,WAO7D,kBAACmE,EAAD,CACItW,IAAKkW,EAAcG,MACnBpV,UAAU,kB,8BA5DQgM,IAAMmF,e,mzBCD1CwE,E,wcACO,WACL,OACI,yBAAK3V,UAAU,qBACV0Q,KAAKlJ,MAAMoO,cACR,yBAAK5V,UAAU,8BACX,2BAAK0Q,KAAKlJ,MAAMoO,eAIvBlF,KAAKlJ,MAAMuN,MAAMlL,KAAI,SAAAsL,GAElB,IAAMC,EAAQD,EAAKC,MAAMS,OAAO,GAAGC,cAAgBX,EAAKC,MAAM3V,MAAM,GAAGyJ,cAEvE,OACI,EAAK1B,MAAMsN,UACP,kBAAC,IAAD,CACI/V,IAAKoW,EAAKnO,KACV/G,GAAIkV,EAAKnO,KACT9G,QAAS,kBAAM,EAAKsH,MAAMuO,SAASZ,IACnCnV,UAAU,uBACViI,gBACI9H,IAAW,CACP,+BAAgC,EAAKqH,MAAMwN,SAASI,QAAUD,EAAKC,SAI3E,kBAAC,IAAD,CACIlE,KAAMiE,EAAKjE,KACXlR,UAAWG,IAAW,6BAA8B,CAChD,qCAAsC,EAAKqH,MAAMwN,SAASI,QAAUD,EAAKC,UAGjF,0BAAMpV,UAAU,8BAA8BoV,IAGlD,yBACIpV,UACIG,IAAW,uBAAwB,CAC/B,+BAAgC,EAAKqH,MAAMwN,SAASI,QAAUD,EAAKC,QAG3ErW,IAAKoW,EAAKC,MACVlV,QAAS,kBAAM,EAAKsH,MAAMuO,SAASZ,KAEnC,kBAAC,IAAD,CACIjE,KAAMiE,EAAKjE,KACXlR,UAAWG,IAAW,6BAA8B,CAChD,qCAAsC,EAAKqH,MAAMwN,SAASI,QAAUD,EAAKC,UAGjF,uBACIrW,IAAKoW,EAAKC,MACVpV,UAAU,8BAEToV,a,8BAvDJpJ,IAAMmF,e,2yBCCjC6E,E,YACF,WAAYxO,GAAO,MAEf,G,4FAFe,UACf,wBAAMA,KAmBVyO,eAAiB,SAAC5a,GACd,EAAK6a,SAAS,CACVlB,SAAU3Z,KApBVmM,EAAMsN,UAAW,CACjB,IAAMqB,EAAoB3O,EAAM4O,KAAKC,QAAO,SAAAlB,GAAI,OAC5CA,EAAKnO,OAASQ,EAAM8O,cAAgBnB,EAAI,WAEtCH,EAAWmB,EAAkBvd,OAAS,EACtCud,EAAkBA,EAAkBvd,OAAS,GAC7Cud,EAAkB,GAExB,EAAKI,MAAQ,CACTvB,iBAGJ,EAAKuB,MAAQ,CACTvB,SAAUxN,EAAM4O,KAAK5O,EAAMgP,gBAAkB,IAftC,S,gSA2Bf,OACI,yBACIxW,UAAWG,IAAW,eAAgB,CAClC,4BAA6BuQ,KAAKlJ,MAAMiP,iBAG5C,kBAAC,EAAD,CACI1B,MAAOrE,KAAKlJ,MAAM4O,KAClBL,SAAUrF,KAAKuF,eACfjB,SAAUtE,KAAK6F,MAAMvB,SACrBF,UAAWpE,KAAKlJ,MAAMsN,UACtBc,aAAclF,KAAKlJ,MAAMoO,eAE7B,kBAAC,EAAD,CACIhB,WAAYlE,KAAKlJ,MAAMoN,WACvBC,qBAAsBnE,KAAKlJ,MAAMqN,qBACjCE,MAAOrE,KAAKlJ,MAAM4O,KAClBpB,SAAUtE,KAAK6F,MAAMvB,SACrBF,UAAWpE,KAAKlJ,MAAMsN,kB,8BA9ChB9I,IAAMmF,eAqDhC6E,EAAY5V,UAAY,CACpBwU,WAAYvU,IAAUqU,QAClBrU,IAAUqW,MAAM,CACZ5P,UAAWzG,IAAUE,KACrB2Q,KAAW7Q,IAAUC,OACrBJ,QAAWG,IAAUE,KACrByF,MAAW3F,IAAUC,UAG7BuU,qBAAsBxU,IAAUC,OAChCgW,aAAsBjW,IAAUC,OAChCsV,aAAsBvV,IAAUC,OAChCmW,cAAsBpW,IAAU+Q,KAChC0D,UAAsBzU,IAAU+Q,KAChCgF,KAAsB/V,IAAUqU,QAC5BrU,IAAUqW,MAAM,CACZC,QAAStW,IAAU+Q,KACnBF,KAAS7Q,IAAUC,OACnB8U,MAAS/U,IAAUC,OACnB0G,KAAS3G,IAAUC,OACnB7B,MAAS4B,IAAUmK,UAAU,CAACnK,IAAUE,KAAMF,IAAUnB,YAE9D0X,WACFJ,eAAgBnW,IAAUkK,QAGfyL,Q,60BC7ETa,E,YACF,WAAYrP,GAAO,a,4FAAA,UACf,wBAAMA,KAOVsP,kBAAoB,WAChBzc,SAAS0c,iBAAiB,YAAa,EAAKC,oBAC5C,EAAKC,GAAGC,UAAUC,IAAI,SACtB,EAAK3P,MAAM4P,eACX,EAAKb,MAAMc,WAAWvc,YAAY,EAAKmc,KAZxB,EAenBK,qBAAuB,WACnBjd,SAASkd,oBAAoB,YAAa,EAAKP,oBAC/C,EAAKT,MAAMc,WAAWxa,YAAY,EAAKoa,IACvC,EAAKzP,MAAMgQ,gBAlBI,EAqBnBR,mBAAqB,SAAC3a,GACd,EAAKob,cAAgB,EAAKA,YAAYC,SAASrb,EAAME,SAAW,EAAKiL,MAAMmQ,UAC3E,EAAKnQ,MAAMgQ,eACX,EAAKhQ,MAAMoQ,gBAxBA,EAuDnBC,cAAgB,SAACpN,GACb,EAAKgN,YAAchN,GAtDnB,EAAKwM,GAAK5c,SAASC,cAAc,OACjC,EAAKic,MAAQ,CACTc,WAAYhd,SAASqR,eAAe,eAJzB,E,gSA6Bf,OAAOoM,IAASC,aACZ,yBAAKC,IAAKtH,KAAKmH,cAAe7X,UAAWG,IAAW,mBAAoBuQ,KAAKlJ,MAAMxH,WAAX,iBAAkC0Q,KAAKlJ,MAAMxH,aACjH,yBAAKA,UAAU,gBACX,wBAAIA,UAAU,yBAAyB0Q,KAAKlJ,MAAMxB,OAClD,yBAAKhG,UAAU,sBACT0Q,KAAKlJ,MAAMe,QACT,yBAAKvI,UAAU,yBACV0Q,KAAKlJ,MAAMe,QAGpB,yBAAKvI,UAAU,sBAAsBE,QAASwQ,KAAKlJ,MAAMoQ,aACrD,kBAAC,IAAD,CAAM1G,KAAK,sBAIvB,kBAAC,EAAD,CACI+G,UAAU,SACVC,gBAAgB,oBAChB9B,KAAM1F,KAAKlJ,MAAM2Q,cACjB3B,eAAgB9F,KAAKlJ,MAAMgP,kBAGnC9F,KAAKuG,S,8BApDUjL,IAAMmF,eA6DjC0F,EAAazW,UAAY,CACrBJ,UAAgBK,IAAUC,OAC1BiI,OAAgBlI,IAAUoK,KAC1B+M,aAAgBnX,IAAUE,KAC1BoX,QAAgBtX,IAAU+Q,KAC1B+G,cAAgB9X,IAAUqK,MAC1B8L,eAAgBnW,IAAUkK,OAC1B6M,aAAgB/W,IAAUE,KAC1ByF,MAAgB3F,IAAUC,OAC1BsX,YAAgBvX,IAAUE,MAG9B,IAAM6X,EAAQ,SAAC,GAAD,IACVpY,EADU,EACVA,UACAuI,EAFU,EAEVA,OACAiP,EAHU,EAGVA,aACAG,EAJU,EAIVA,QACAQ,EALU,EAKVA,cACA3B,EANU,EAMVA,eACAY,EAPU,EAOVA,aACApR,EARU,EAQVA,MACA4R,EATU,EASVA,YATU,OAWV,kBAAC,gBAAD,CACIS,QAAM,EACNC,GAAIX,EACJva,QAAS,IACT+C,WAAY,CACRkY,OAAW,0BACXE,MAAW,0BACXC,UAAW,+BACXC,KAAW,0BAEfC,eAAa,GAEb,kBAAC,EAAD,CACI1Y,UAAWA,EACXuI,OAAQA,EACRiP,aAAcA,EACdG,QAASA,EACTQ,cAAeA,EACf3B,eAAgBA,EAChBY,aAAcA,EACdpR,MAAOA,EACP4R,YAAaA,MAKzBQ,EAAMhY,UAAY,CACdJ,UAAgBK,IAAUC,OAC1BiI,OAAgBlI,IAAUoK,KAC1B+M,aAAgBnX,IAAUE,KAC1BoX,QAAgBtX,IAAU+Q,KAC1B+G,cAAgB9X,IAAUqK,MAC1B8L,eAAgBnW,IAAUkK,OAC1B6M,aAAgB/W,IAAUE,KAC1ByF,MAAgB3F,IAAUC,OAC1BsX,YAAgBvX,IAAUE,O,6CC7HjBoY,EAAkBta,gBAElBua,EAAsB,WAC/B,IAAMC,EAAoB,CACtB,OAGgBhgB,OAAO6Z,KAAKoG,oBAC3BzC,QAAO,SAAAtX,GAAG,OAAM8Z,EAAkBE,SAASha,MAC3Cia,QAAO,SAACzG,EAAKxT,GAEV,OADAwT,EAAIxT,GAAO+Z,mBAAS/Z,GACbwT,IACR,IAIP,MADgB,CAAE0G,GAAI,YAIbC,EAAS,SAAAC,GAAI,OAAIrQ,iBAAOqQ,ICrBrC,uG,mBCAA,IAYQC,EAuGIC,EAxGJC,EAQEC,EAmBArH,EAmBA7T,EAeAmb,EAEAC,EAEAC,EAQAC,EASAC,EAqBAC,EAmCAC,EAkIAC,EAvRJC,EAAmB3O,EAAQ,IAC3B4O,EAAmB5O,EAAQ,IAAmB4O,iBAC9CC,EAAmB7O,EAAQ,IAC3BzH,EAAmByH,EAAQ,GAAkBzH,SAC7CoQ,EAAmB3I,EAAQ,IAAc2I,WACzCvR,EAAmB4I,EAAQ,IAAc5I,MACzCH,EAAmB+I,EAAQ,GAAc/I,iBACzCgP,EAAmBjG,EAAQ,GAAciG,cAEzC6I,GAEEb,EAAgB,GAyEdK,EAAkB,SAACzd,GAA0D,IAApDyG,EAAoD,uDAA1CyW,EAAiBgB,EAAyB,wDACzEC,EAAcX,EAAe/W,GACnC,OACc,YAATzG,GAAoC,YAAdme,GACb,SAATne,GAAoC,YAAdme,GACvBne,IAASme,MACRD,IAAgB/b,EAAI,cAAesE,KAGtCiX,EAAmB,SAAC1d,EAAMke,GAC5B,IAAME,EAAKb,IAAiBvE,MAAK,SAAAvS,GAAO,OAAIgX,EAAgBzd,EAAMyG,EAASyX,MAC3E,OAAOE,EAAKzhB,OAAO0hB,OAAO,CAAE5X,QAAS2X,GAAMjc,EAAI,KAAMic,IAAO,IAmB1DT,EAUK,CACHxb,IAAK,WAID,OAHKgb,IACDA,EAVgB,CACxB1C,QAAW/S,EAAS,QACpB4W,UAAW5W,EAAS,cACpB6W,OAAW7W,EAAS,UACpB8W,QAAW9W,EAAS,aAQTyV,IAoBbS,EAAoB,SAACa,GACvBA,EAAazgB,SAAQ,SAAC0gB,GAClB1I,EAAI,iBAAkB0I,EAAQC,gBAAkB,GAAID,EAAQjY,SAC5D9J,OAAO6Z,KAAKkI,GAAS1gB,SAAQ,SAAC4gB,GAC1B,IAAMC,EAAyB,YAAVD,EAAsB,YAAcA,EACnDE,OAAyC,IAAnBJ,EAAQE,GAAyB,GAAKF,EAAQE,GACrD,YAAjBC,GACA7I,EAAI6I,EAAcC,EAAcJ,EAAQjY,gBA2HlDoX,EAAqB,SAACkB,GACxB,GAAIA,IAAe7B,GAAmB/a,EAAI,aAAc4c,IAAe5c,EAAI,eACvEA,EAAI,cAAe4c,GACnB,OAAO,EAEX,IAAMC,EAAgB7c,EAAI,YACpB8c,EAAgB9c,EAAI,WAAY4c,GACtC,IAAKC,IAAkBC,EACnB,OAAO,EAGX,GAAID,IAAkBC,EAAa,CAE/B,IAIMC,EAAuB/c,EAAI,6BAC3Bgd,EAAuBhd,EAAI,4BAA6B4c,GAG9D,OARyB,CACrBK,YAAa,QACbC,MAAa,eAMQH,IAAyB,MAAQC,EAG9D,IAAMG,EAAiBvB,EAAiBiB,GAClCO,EAAiBxB,EAAiBkB,GACxC,OAAQK,GAAkBC,EAAeA,GAmBtC,CACH3Z,KAvTS,WACTsX,EAAkBpF,EAAW3V,IAAI,kBACjCib,EAAkBE,KAsTlBD,WAnTEA,EAAa,kBACdjI,EAAckI,MACfnb,EAAI,YACJA,EAAI,UAiTJqd,eA9SmB,WACnB,IAAKnC,IAAc,OAAO,EAC1B,IAAMoC,EAAkB,IAAIrH,OAAO,kCAAmC,KACtE,OAAOmF,IAAiBmC,OAAM,SAAAjZ,GAAO,OAAIgZ,EAAgBnZ,KAAKG,OA4S9DuP,IAlSEA,EAAM,SAACnT,EAAKN,GAAqC,IAA9BkE,EAA8B,uDAApByW,EACnB,YAARra,GAAqBN,IAAU2a,GAC/BpF,EAAW9B,IAAI,iBAAkBzT,GACjC2a,EAAkB3a,IAEZkE,KAAW2W,IACbA,EAAc3W,GAAW,IAE7B2W,EAAc3W,GAAS5D,GAAON,EAC9BuV,EAAWrC,UArCC,kBAqCsB2H,KA0RtCjb,IAhREA,EAAM,SAACU,GAAmC,IACxCN,EADUkE,EAA8B,uDAApByW,EAExB,GAAY,YAARra,EACAN,EAAQkE,GAAWqR,EAAW3V,IAAI,sBAC/B,CACH,IAAMwd,EAAiBvC,EAAc3W,IAAY6W,IAAuB7W,IAAY2W,EAEpF7a,EAAQM,EAAM8c,EAAe9c,GAAO8c,EAKxC,OAHKrJ,MAAMC,QAAQhU,IAAsB,IAAVA,GAA0B,IAAVA,GAAyB,SAAVA,GAA8B,UAAVA,IAC9EA,EAAQgT,KAAKC,MAAMjT,IAAS,IAEzBA,GAqQPgb,eAhQEA,EAAiB,kBAAM5gB,OAAO6Z,KAAK8G,MAiQrCE,eA/PEA,EAAiB,WAA+B,IAC9CoC,EADgBnZ,EAA8B,uDAApByW,EAK9B,MAHI,MAAM5W,KAAKG,GAAmBmZ,EAAe,UACxC,MAAMtZ,KAAKG,GAAcmZ,EAAe,YACxC,UAAUtZ,KAAKG,KAAUmZ,EAAe,UAC1CA,GA2PPnC,kBACAC,mBACAmC,eA5OmB,SAAC7f,EAAMke,GAAP,OAAyB9I,EAAcsI,EAAiB1d,EAAMke,KA6OjF4B,gBAzOoB,SAAC9f,GACrB,IAAM+f,EAAWxC,IACjB,MAAa,WAATvd,EAEO+f,EAAS/G,MAAK,SAAAvS,GAAO,OACvBtE,EAAI,aAAcsE,IAAYsX,EAAiB5b,EAAI,WAAYsE,OAGjEsZ,EAAS/G,MAAK,SAAAvS,GAAO,OACvBtE,EAAI,aAAcsE,KAAasX,EAAiB5b,EAAI,WAAYsE,QAiOrEuZ,gBA1MoB,SAAAvZ,GACpB,IAAMwZ,EAAYtC,EAAexb,MACjC,OAAQ8d,EAAUzC,EAAe/W,KAAawZ,EAAS,SAyMvDlY,kBAtMsB,SAAChC,GACvB,IAAMS,EAAYT,EAASS,UAC3BwP,EAAI,QAAcxP,EAAUM,OAC5BkP,EAAI,WAAcxP,EAAUmC,UAC5BqN,EAAI,cAAexP,EAAUgC,YAC7BwN,EAAI,gBAAiBkK,SAASpC,IAASqC,UAAY,MACnDnK,EAAI,4BAA6BxP,EAAU4Z,sBAC3CxC,EAAkBpX,EAAUiY,eAgM5B4B,gBAhLoB,WACpB,GAAIle,EAAI,cAAe,OAAO,EAC9B,IAAMme,EAAsB/Z,EAAMmQ,YAAY,2CACxC6J,EAAsBha,EAAMmQ,YAAY,kCAC9C,YAAoC,IAAtB6J,GAAqCA,IAAsBD,GA6KzEE,iBA1KqB,WACrBtD,OAAkBjf,EAClBmf,EAAkB,GAClBtF,EAAWrC,UAlKK,kBAkKkB2H,IAwKlCqD,cArKkB,SAACnM,GACnB,SAAKA,EAAQxN,OAAUwN,EAAQ7N,SAAY6N,EAAQoM,SAInD1C,EAAY9H,QACZ6B,aAAarC,QAAQ,kBAAmB,KAExCM,EAAI,QAAc1B,EAAQoM,MAAapM,EAAQ7N,SAC/CuP,EAAI,QAAc1B,EAAQxN,MAAawN,EAAQ7N,SAC/CuP,EAAI,cAAe1B,EAAQ9L,WAAY8L,EAAQ7N,SAC/CuP,EAAI,UAAc1B,EAAQ7N,UAEnB,IAyJPka,sBAtJ0B,WAC1B,IAAMC,EAA2Bra,EAAMmQ,YAAY,oBAAsB,GACnEmK,EAA2B1e,EAAI,6BAC/B2e,EAA2BnkB,OAAO6Z,KAAKoK,GAA0B5H,MAAK,SAACnW,GAAD,OACxEge,IAAmBD,EAAyB/d,GAAKke,aAErD,OAAOH,EAAyBE,IAAyB,IAiJzDE,kBA9IsB,kBAAMvD,EAAgB,eAC3C,sBAAsBnX,MAAMC,EAAMmQ,YAAY,uBAAyB,IAAIuK,SA8I5E3D,qBA/QEA,EAAuB,kBAAMxF,EAAWxC,UA9D1B,oBA8UhB4L,kBA3IsB,SAAAC,GAAK,OAAKA,EAAQA,EAAMlU,QAAQ,KAAM,KAAKA,QAAQ,wBAAyB,IAAM,IA4IxGmU,oBA1IwB,WACxB,IAGIphB,EACAqhB,EAJEC,EAAgC/a,EAAMmQ,YAAY,2CAEpD6K,GAAiB,EAGrB,IAAKD,GAAiC,IAAI5kB,OAAQ,CAC9C,IAAM8kB,EAA0Brf,EAAI,6BAEpCof,GAAqF,IAApED,EAA8BG,QAAQD,IAQvDH,EALmB,sCAAIK,EAAJ,yBAAIA,EAAJ,uBAA0BA,EAAkB1I,MAAK,SAAA2I,GAAe,OAC/EA,IAAoBH,IACwC,IAA5DF,EAA8BG,QAAQE,MAGzBC,CAAW,MAAO,MAAO,QAAS,kBAE/C5hB,EAA0B,gBAAnBqhB,EAAmC,YAAc,QAIhE,MAAO,CACHrhB,OACA6hB,cAAeR,EACfA,iBACAE,mBAgHJO,uBA5G2B,SAACrb,EAASkb,EAAiB9e,GACtD,IAAIkf,EACJ,GAAItb,EAAQ6X,WAAab,EAAgB,YAAahX,GAClDsb,EAAyB3b,EAAiBub,EAAiB,yBACxD,KAAIlb,EAAQub,OAAQvE,EAAgB,OAAQhX,GAO5C,CACH,IAAMwb,GAAqB7b,EAAiBub,EAAiB,sBAAwB,IAAI9e,IAAQ,GAC3Fqf,GAAqB9b,EAAiBub,EAAiB,mBAAqB,IAAI9e,IAAQ,GAE9F,OADAkf,EAA0BE,EAAkBrL,OAAOsL,IATnDH,EAAyB3b,EAAiBub,EAAiB,qBAIvDI,EAAyB3b,EAAiBub,EAAiB,sBAQnE,OAAQI,GAA0B,IAAIlf,IA4FtCsf,kBAzFsB,WACtB,IAAMlB,EAAe1a,EAAMmQ,YAAY,6BACjC0L,EAAe,OAAO9b,KAAKC,EAAMmQ,YAAY,2CAEnD,OACI+G,EAAgB,aACZ,yDAAyDnX,KAAK2a,GAC7DmB,GAAgB,oCAAoC9b,KAAK2a,IAmFlEoB,iBA9EqB,SAAC3D,GACtB,OAAIA,EAEOb,EAAmBa,EAAQjY,SAG/B9J,OAAO6Z,KAAK4G,GAAezR,MAAK,SAAAlF,GAAO,OAAIoX,EAAmBpX,OAyErE6b,cAzCkB,mBAAS/E,IAAiBvE,MAAK,SAAAvS,GAAO,MAAI,MAAMH,KAAKG,OA0CvE8b,kBAxCsB,SAACC,EAAWC,GAAsC,IAAtBC,IAAsB,yDAClE/Z,EAAuBxG,EAAI,YAC3BwgB,EAAiD,IAA1BF,EAAe/lB,OACtCkmB,EAA4C,IAApBJ,EAAUK,OAAiD,IAAlCL,EAAUM,aAAapmB,OACxEqmB,EAAuBH,GAAsBD,EAOnD,OAAOD,EAAa/Z,IAAaxG,EAAI,eAAiB4gB,IAAyBhF,EAAiBpV,GAAYoa,KAiCpH9jB,EAAOD,QAAUif,G,o6fClWjB,IAQkC,EAEtB+E,EA4BJC,EACAC,EACAC,EA/BEC,EAmBAC,EACAC,EAIAC,EA2BAC,EAUAC,EAeAC,EAQAC,EAMAC,EASAC,EA5GJtc,EAAe4H,EAAQ,GACvBzH,EAAeyH,EAAQ,GAAkBzH,SAOzCoc,GACIV,EASK,CACHjhB,IAAK,SAAC8e,GAIF,OAHK+B,IACDA,EAToB,CAC5Be,OAAU,CAAEC,MAAO,SAAWC,QAASvc,EAAS,WAChDwc,QAAU,CAAEF,MAAO,UAAWC,QAASvc,EAAS,YAChDyc,SAAU,CAAEH,MAAO,UAAWC,QAASvc,EAAS,2BAQrCsb,EAAc/B,KAK3BoC,EAAW,GAKK,QAJhBC,EAAe,CACjBc,QAAY,UACZC,WAAY,eAGED,QAAa,KADT,IAEjBd,EAAae,WAAa,KAFzBd,EAAgB,EA2BhBC,EAAW,kBAAMc,UAAUC,QAU3Bd,EAAY,SAACxC,GACVuC,IAEMF,EAAarC,IAA8B,YAAnBiC,GAC/BA,EAAiB,WAXjBM,KAAcjc,EAAaid,cAAc,EAAG,GAC5Cjd,EAAa3B,KAAKqd,GAElB1b,EAAakd,KAAK,CAAEC,KAAM,KAW1BxB,EAAiB,SALjBA,EAAiB,UAQG,mBAAbC,GACPA,EAASC,EAAajhB,IAAI+gB,GAAiBM,MAI7CE,EAAgB,CAClB9d,KAAS,kBAAMge,EAAWN,EAAac,UACvCzX,KAAS,kBAAMkX,EAAcP,EAAac,UAC1CK,KAAS,kBAAMb,EAAWN,EAAae,aACvC7iB,QAAS,kBAAMqiB,KACfc,MAAS,kBAAMf,EAAWN,EAAac,WASrCR,EAAa,SAAC/gB,GACXwgB,EAASxgB,KACVwgB,EAASxgB,GAAOnB,YAAW,WACvB2hB,EAASxgB,QAAO5E,EAChBwlB,EAAU5gB,KACX0gB,EAAiB1gB,MAItBghB,EAAgB,SAAChhB,GACnB,IAAMqT,EAAQ,SAACE,GACXhV,aAAaiiB,EAASjN,IACtBiN,EAASjN,QAAKnY,EACVmY,IAAMkN,EAAae,YACnBZ,EAAU,WAId5gB,EACAqT,EAAMrT,GAENlG,OAAO6Z,KAAK6M,GAAUrlB,QAAQkY,IAI/B,CACHtQ,KAnFS,SAACgf,EAA0BC,GACpC1B,EAAY0B,EACZ5B,EAAYtmB,OAAO0hB,OAAO,CAAEsF,UAASH,YAAYoB,GAE7C,WAAYN,WACZjhB,OAAOwX,iBAAiB,SAAW4I,GACnCpgB,OAAOwX,iBAAiB,UAAW4I,IAEnCa,UAAUC,QAAS,EAGnBf,KACAjc,EAAa3B,KAAKqd,GAGtBQ,EAAUD,IAAa,SAAW,YAqElCG,QAjCEA,EAAU,SAACxjB,GACuB,mBAAzBujB,EAAcvjB,IACrBujB,EAAcvjB,QAmC1BlB,EAAOD,QAAU8kB,G,kBClIjB,IAIMgB,EAAU,SAACC,EAAKC,EAAKC,GACvB,IAAMC,EAAOC,OAAOJ,GAAO,IAC3B,OAAOG,EAAKxoB,QAAUsoB,EAAME,EAArB,UAA+B5O,MAAO0O,EAAME,EAAKxoB,OAAU,GAAGya,KAAK8N,IAAnE,OAA2EC,IAsBhFE,EAAiB,SAAAriB,GAAC,MAAkB,iBAANA,EAAiBoiB,OAAOpiB,GAAKA,GAEjE9D,EAAOD,QAAU,CACbqmB,YA/BgB,SAAAC,GAAG,OAClBA,GAAO,IAAIrY,QAAQ,iBAAgB,SAAA8X,GAAG,OAAIA,EAAIpL,OAAO,GAAGC,cAAgBmL,EAAIQ,OAAO,GAAGvY,kBA+BvF8X,UACAM,iBACAI,sBAzB0B,SAACC,EAAGC,GAC9B,IAAIC,EAAaP,EAAeK,GAC5BG,EAAaR,EAAeM,GAChC,IAAKC,IAAcC,EACf,MAAO,GAEX,IAAMC,EAAaC,KAAKC,IAAIJ,EAAUjpB,OAAQkpB,EAAWlpB,QAKrDspB,EAAQ,EAKZ,OATAL,EAAmBb,EAAQa,EAAWE,EAAY,SAClDD,EAAmBd,EAAQc,EAAYC,EAAY,QAK/CG,EAAQL,EAAYC,EAAa,GAAK,GAGnCI,K,qGCnBLC,EAAiB,SAAC,GAMlB,IALF5Z,EAKE,EALFA,OACA7K,EAIE,EAJFA,QACAuM,EAGE,EAHFA,eACAmY,EAEE,EAFFA,gBAEE,IADFC,oBAEMC,OADJ,SAC4C,kBAAC,IAAD,CAAU9Z,kBAAkB,0CAA6C,GAEvH,OACI,kBAACF,EAAA,EAAD,CACIC,OAAQA,GAAU,kBAAC,IAAD,CAAUC,kBAAkB,gCAC9CG,SACIjL,EACM,CACEA,EACA4kB,GAEF,CACE,kBAAC,IAAD,CAAUvjB,IAAK,EAAGyJ,kBAAkB,2DACpC8Z,GAEZpY,aAAcjE,IAAOsc,MACrBtY,eAAgBA,GAAkB,kBAAC,IAAD,CAAUzB,kBAAkB,YAC9DuB,cAAeqY,GAAoB,kBAAMjd,SAASC,aAK9D+c,EAAe/hB,UAAY,CACvB1C,QAAS2C,IAAUmK,UAAU,CACzBnK,IAAUoK,KACVpK,IAAUC,OACVD,IAAUnB,SAEdhD,KAAMmE,IAAUC,QAGL6hB,Q,kgECrCf,IAAMK,EAAqB,CAAEziB,UAAU,EAAMhB,KAAK,EAAMiZ,KAAK,GAEhDyK,EAAb,wIAEQ,IAAMC,EAAS,GAGTC,EAAajS,KAAKkS,QAAQC,WAChC,GAAIF,EACA,IAAK,IAAM5jB,KAAO4jB,EACdD,EAAO3jB,GAAO4jB,EAAW5jB,GAKjC,IAAK,IAAMA,KAAO2R,KAAKlJ,MAAM3D,MACpB2e,EAAmBzjB,KACpB2jB,EAAO3jB,GAAO2R,KAAKlJ,MAAM3D,MAAM9E,IAIvC,UACI8jB,WAAYH,GACTA,OArBf,GAAkCI,KAArBL,EAyBFM,kBAAoB,CACvBF,WAAYxiB,IAAUnB,OACtB4E,OAAYzD,IAAUnB,OACtB6E,OAAY1D,IAAUnB,OACtB8E,IAAY3D,IAAUnB,OACtB/F,QAAYkH,IAAUnB,OACtBsH,GAAYnG,IAAUnB,QAI9B,IAEaqH,EAAU,SAACyc,EAAYC,GAAb,OAAwB,SAAA3N,GAC3C,IAAK2N,EACD,OAJqB,SAACA,GAAD,OAAY,SAAA3N,GAAS,OAAI4N,YAAOD,EAAPC,CAAeC,YAAS7N,KAI/D8N,CAAqBJ,EAArBI,CAAiC9N,GAG5C,IAAM+N,EAAWF,YAAS7N,GAEpBgO,EAPkD,6KAQpDzf,MAAQ,IAAImf,EARwC,EAqBpD5iB,UAAY,CACRL,SAAUM,IAAUnB,QAtB4B,oDAWhD,OAAO8M,IAAM1R,cACT+oB,EADG,KAGI3S,KAAKlJ,MAHT,CAIC3D,MAAO6M,KAAK7M,QAEhB6M,KAAKlJ,MAAMzH,cAjBiC,GAO1BuV,GAmBxBiO,EAAqBjO,EAAUkO,aAC9BlO,EAAU3X,MACT2X,EAAUmO,aAAenO,EAAUmO,YAAY9lB,MAChD,UAGP,OAFA2lB,EAAgBE,YAAhB,gBAAuCD,GAEhCL,YAAOD,EAAPC,CAAeI,M,mBC9E1B,IAAMI,EAA6BrY,EAAQ,IAAcvC,OACnD6a,EAA6BtY,EAAQ,IAAchN,IACnDulB,EAA6BvY,EAAQ,IAAauY,2BACxDvY,EAAQ,KAER,IACQwY,EACAC,EAiBEC,EAYAtc,EAkBAuc,EAjDJC,GA+BIxc,EAAgB,SAAAT,GAAI,OAAKA,EAAOA,EAAKmC,QAAQ,8BAA8B,IAAM,IAkBjF6a,EAAW,CACb,iBAAyB,iBACzB,wBAAyB,wBACzB,qBAAyB,qBACzB,kBAAyB,kBACzB,kBAAyB,mBAgDtB,CACHE,WATe,WAAe,IAAdld,EAAc,uDAAP,GACjB5L,EAAImE,OAAO4F,SAEjB,MAAK,aAAa3C,KAAKpH,EAAE6N,UAEzB,WAAW7N,EAAE6N,SAAS4J,MAAM,KAAK,IAAjC,OAAsC,MAAMrQ,KAAKwE,GAAQA,EAAnB,WAA8BA,IAFzBA,GAO3Cmd,MApGU,WACVN,EAAetkB,OAASA,OAAO4F,SAAW0e,GAoG1CE,WAtFEA,EAAa,SAACppB,GAIhB,IAHA,IAAMypB,EAAa,GACbC,EAbK,SAAC1pB,GAIZ,IAHA,IAAM0pB,EAAa,GACbC,IAAe3pB,EAAO,IAAI4pB,IAAI5pB,GAAQkpB,GAAc/d,QAAU,IAAI2b,OAAO,GAAG5O,MAAM,KACpF2R,EAAeF,EAAO1rB,OACnB4rB,KAAO,CACV,IAAM1J,EAAQwJ,EAAOE,GAAK3R,MAAM,KAChCwR,EAAWnrB,KAAK4hB,GAEpB,OAAOuJ,EAKYI,CAAO9pB,GACtBmgB,EAAeuJ,EAAWzrB,OACvBkiB,KACCuJ,EAAWvJ,GAAO,KAClBsJ,EAAWC,EAAWvJ,GAAO,IAAMuJ,EAAWvJ,GAAO,IAAM,IAGnE,OAAOsJ,GA8EPtb,OAzEW,SAAC9B,EAAM0d,EAAMC,GAA8C,IAApCC,EAAoC,wDAChEzL,GAAQwL,GAAYhB,KAAeza,cACrCkK,EAAS,WAAH,OAAc7T,OAAO4F,SAAS+N,SAA9B,KACN0R,IAEIxR,EADA,uBAAuB5Q,KAAK4Q,GACnB,sBAAH,OAAyB+F,GAAQ,KAAjC,KAEG/F,EAAOjK,QAAQ,aAAf,qBAA2CgQ,GAAQ,QAGpE,IAAM0L,EAAU,GAAH,OAAMzR,GAAN,OAAgB3L,EAAcT,IAAS,OAAvC,gBAAuD0d,EAAO,IAAH,OAAOA,GAAS,IAExF,OAAOhB,EAAevK,EAAM0L,IA8D5BC,oBAlDwB,SAACnqB,GACzB,IAAMoqB,EAAiBnB,IAEvB,IAAKmB,EACD,OAAOpqB,EAGX,IAAMqqB,EAAa,IAAIT,IAAI5pB,GAC3B,GAAI9B,OAAO6Z,KAAKsR,GAAUjL,SAASiM,EAAW9R,UAC1C8R,EAAW9R,SAAW8Q,EAASgB,EAAW9R,cACvC,KAAqD,IAAjD8R,EAAW9R,SAASyK,QAnBZ,cAuBf,OAAOhjB,EAFPqqB,EAAW9R,SAAW8R,EAAW9R,SAAS/J,QAAQ,IAAImL,OAAJ,aArBnC,cAqBsE,KAA/D,WAAyEyQ,IAKnG,OAAOC,EAAWrqB,MAkClBsqB,aA/BiB,WAAe,IAAdje,EAAc,uDAAP,GAczB,OAbK8c,GAAsC,IAAvBA,EAAYlrB,UAC5BkrB,EAAczpB,SAASuM,cAAc,mCAEjCkd,EAAcA,EAAY/nB,aAAa,QAIvC+nB,EADAA,GAAeA,EAAYlrB,OAAS,EACtBkrB,EAAYrC,OAAO,EAAGqC,EAAYnG,QAAQ,QAAU,GAEpDsG,EAAIiB,cAInBpB,EAAc9c,EAAKmC,QAAQ,SAAU,KAmB5C2R,MAAiB,SAAAnd,GAAI,OAAIomB,IAAapmB,IACtCunB,WAAiB,2BAAS/f,SAASggB,SAAlB,aAA+BhgB,SAAS+N,SAAxC,MACjBkS,WAAiB,kBAAMpB,GACvBqB,gBAAiB,WAAQvB,OAAc3pB,KAI/CgB,EAAOD,QAAU+oB,G,mBC1HjB,IA2DQqB,EA3DF3B,EAAmBtY,EAAQ,IAAehN,IAC1CuF,EAAmByH,EAAQ,GAAkBzH,SAC7CtB,EAAmB+I,EAAQ,GAAc/I,iBAE3CijB,EAAoB,GAwBlBC,EAAiB,SAAA3gB,GAAQ,sCAA6BA,GAAY,IAAIqE,cAA7C,cAEzBuc,EAAW,SAACC,EAAKC,EAAgBC,GACnC,IAAIrb,EAAS8W,OAAOqE,GAAO,GAAGvc,QAAQ,KAAM,IAQ5C,YAP8B,IAAnBwc,IACPpb,IAAWA,GAAQsb,QAAQF,IAE3BC,IACArb,EAASub,YAAYvb,IAGlBA,EAAOwb,WAAW5c,QAAQ,uBAAuB,SAAC6c,EAAIC,EAAIC,GAAT,OACpDD,EAAKC,EAAG/c,QAAQ,2BAA4B,WAM9Cgd,EAAmB,SAACthB,GAAD,OAErB0gB,EAAkB1gB,GAAYvC,EAAiBijB,EAAmB,CAAC1gB,EAAU,sBAJvD,SAACA,GAAD,OAAcoV,EAAiBpV,GAAY,EAAI,EAIgCuhB,CAAkBvhB,IAQrHoV,EAAmB,SAAApV,GAAQ,MAAI,UAAUrC,KAAKF,EAAiBijB,EAAmB,CAAC1gB,EAAU,WAAcA,KAAYwhB,EAAahoB,OAEpIgoB,EAaK,CACHhoB,IAAK,WAID,OAHKinB,IACDA,EAboB,CAC5BgB,IAAK,CAAE3oB,KAAMiG,EAAS,WAAkB2iB,eAAgB,KAAOC,kBAAmB,EAAMC,kBAAmB,MAC3GC,IAAK,CAAE/oB,KAAMiG,EAAS,gBAAkB2iB,eAAgB,KAAOC,kBAAmB,EAAMC,kBAAmB,MAC3GE,IAAK,CAAEhpB,KAAMiG,EAAS,SAAkB2iB,eAAgB,KAAOC,kBAAmB,EAAMC,kBAAmB,MAC3GG,IAAK,CAAEjpB,KAAMiG,EAAS,iBAAkB2iB,eAAgB,KAAOC,kBAAmB,EAAMC,kBAAmB,MAC3GI,IAAK,CAAElpB,KAAMiG,EAAS,YAAkB2iB,eAAgB,KAAOC,kBAAmB,EAAMC,kBAAmB,MAC3GK,IAAK,CAAEnpB,KAAMiG,EAAS,UAAkB2iB,eAAgB,IAAOC,kBAAmB,IAAMC,kBAAmB,IAC3GM,IAAK,CAAEppB,KAAMiG,EAAS,eAAkB2iB,eAAgB,IAAOC,kBAAmB,IAAMC,kBAAmB,MAQhGnB,IAKb0B,EAAmB,SAAAniB,GAAQ,OAAKoV,EAAiBpV,GAAavC,EAAiB+jB,EAAahoB,MAAO,CAACwG,EAAU,oBAAsB,KAAS,GAyCnJ1J,EAAOD,QAAU,CACb+rB,YAnHgB,SAACC,EAAgBC,EAAQC,GAA8D,IAA5CC,EAA4C,uDAAjC,EAAGC,EAA8B,uDAAN,EAC7FC,EAAQJ,EACRI,IAAOA,EAAQlG,OAAOkG,GAAOpe,QAAQ,KAAM,KAC/C,IAAMqe,EAAiBD,GAASE,OAAOF,GAAS,EAAI,IAAM,GACpDG,EAAiBL,GAAYlB,EAAiBe,GAGpD,GADAK,EAAQI,MAAMJ,GAAS,EAAIvF,KAAK4F,IAAIL,GAChB,oBAATM,KAAsB,CAC7B,IAAMrX,EAAU,CACZ8W,sBAAuBA,GAAyBI,EAChDI,sBAAuBJ,GAE3BH,EAAQ,IAAIM,KAAKE,aAAapE,IAAcza,cAAcC,QAAQ,IAAK,KAAMqH,GAASwX,OAAOT,QAE7FA,EAAQ9B,EAAS8B,EAAOG,GAG5B,OAAOF,GAAQJ,EAAmB,GAAK5B,EAAe0B,IAAmBK,GAmGzE/B,iBACAC,WACAU,mBACA8B,cA5EkB,SAACjjB,GACnBugB,EAAoBvgB,EAAeugB,mBA4EnCtL,mBACAiO,gBAXoB,SAAArjB,GAAQ,OAAIvC,EAAiB+jB,EAAahoB,MAAO,CAACwG,EAAU,UAAY,IAY5FmiB,mBACAmB,kBA1CsB,SAACtjB,EAAUujB,GACjC,IAAMC,EAAkB/lB,EAAiBijB,EAAmB,CAAC1gB,EAAU,4BAA6B,YAAcmiB,EAAiBniB,GAC7HwiB,EAAkBlB,EAAiBthB,GACzC,MAAc,QAAVujB,EACOC,EAAgBpG,IAAMoG,EAAgBpG,IAAI4D,QAAQwB,QAAYltB,EAGlEkuB,EAAgBC,IAAMD,EAAgBC,IAAIzC,QAAQwB,QAAYltB,GAoCrEouB,eAjCmB,SAACC,EAAeC,GACnC,IAAMC,EAAepmB,EAAiBijB,EAAmB,CAACiD,EAAe,4BAA6B,OAAQC,IAC9G,qBAAkC,IAAjBC,EAA+B,IAAMA,EAAtD,MAgCAC,sBA5B0B,SAAC9jB,GAC3B,IAAMwiB,EAAWlB,EAAiBthB,GAClC,gBAAUA,EAAV,aAAuB,EAAImd,KAAK4G,IAAI,GAAIvB,IAAWxB,QAAQwB,KA2B3DwB,cAhIkB,SAACte,EAAQ1F,GAAT,gBAAyBA,EAAzB,YAAqC4gB,EAASlb,EAAQ4b,EAAiBthB,GAAWoV,EAAiBpV,MAiIrHikB,aAfiB,SAAAjkB,GAAQ,OAAIvC,EAAiBijB,EAAmB,CAAC1gB,EAAU,mBAgB5EkkB,qBAzByB,SAAClkB,EAAUmkB,GACpC,OAAI/O,EAAiBpV,GACVvC,EAAiB+jB,EAAahoB,MAAO,CAACwG,EAAD,aAAiBmkB,EAAjB,iBAE/B,QAAVA,EAAkB,IAAO,IAsBhCC,cAAe,kBAAM1D,K,mBCzIzB,IAIU2D,EAyBFC,EAEEC,EAEAC,EAUFC,EAEE3F,EA7CJtS,EAAgBhG,EAAQ,KACxB0H,EAAgB1H,EAAQ,IAAa0H,cAErCvJ,GACI0f,EAAgB,CAClBK,IAAO,eACPtQ,GAAO,UACPuQ,GAAO,UACPC,GAAO,UACPC,GAAO,WACPC,GAAO,YACPC,GAAO,WACPC,GAAO,SACPC,GAAO,YACPC,GAAO,UACPC,GAAO,OACPC,GAAO,aACPC,MAAO,OACPC,MAAO,QAWPhB,EAAW,KAETC,EAAa,IAAI9U,OAAJ,YAAgBzb,OAAO6Z,KAAKwW,GAAe7V,KAAK,KAAhD,MAA0D,KAYzEiW,EAAe,KAoBZ,CACHxQ,OAAW,kBAAMoQ,GACjBzf,UA3CsB,SAAC0P,GAClB9H,EAAQhT,IAAI,cAAe8a,GACb,IAAIpG,EAAc,YAC1BW,OAAOyF,GAAQwK,KAAe7N,gBAyCzCzX,IArBEslB,EAAc,WAChB,GAAI,OAAOnhB,KAAK8mB,IAAiB,OAAO9mB,KAAK6mB,KAAoB,CAC7D,IACMe,EAAmBnW,aAAa5R,QADb,qCAC0CgP,EAAQhT,IADlD,oCAErB+rB,IACAd,EAAec,EAAatU,cAAc3M,QAAQ,IAAK,KAAK2M,cACxDzb,SAASgwB,MACThwB,SAASgwB,KAAKnT,UAAUC,IAAImS,IAKxC,OADAA,EAAgBA,IAAiBD,KAAqBhY,EAAQhT,IAAI,aApC7C,MAoC8EyX,eAWnGhN,OAPmB,SAACqQ,GAAD,IAAOmR,EAAP,uDAAa/qB,OAAO4F,SAASxK,KAA7B,OACnB2vB,EAAInhB,QAAQ,IAAImL,OAAJ,WAAeqP,IAAf,KAAiC,KAA7C,YAAwDxK,GAzCnC,MAyC6DoR,OAAOrhB,cAAzF,OAOAshB,QAnCEnB,EAAkB,SAACoB,GACrB,GAAItB,IAAasB,EAAY,OAAOtB,EACpC,IACMxE,GADc8F,GAAclrB,OAAO4F,SAASxK,MAAMkY,MAAM,KAAKpT,MAAM,GAC1CyV,MAAK,SAAAiE,GAAI,OAAIiQ,EAAW5mB,KAAK2W,OAAU,GAItE,OAHKsR,IACDtB,EAAWxE,GAERA,GA6BPR,MAAW,WAAQgF,EAAW,KAAMG,EAAe,QAI3DnuB,EAAOD,QAAUsO,G,gSCnDjB,IACUkhB,EACAC,EAEFC,EAmFEC,EAyDAC,EAkDAC,EASAC,EAGAC,EAeKC,GA5NLR,EAAmB,GACnBC,EAAmB,GAErBC,EAAkB,EAmFhBC,EAAW,SAAC5oB,EAAUkpB,GACxB,IAAMC,EAAY9oB,2BAAiBL,EAAU,CAACA,EAASC,SAAU,QAAUI,2BAAiBL,EAASopB,aAAc,CAAC,OAEpH,GAAKX,EAAcS,GAAnB,CAOA,IAAMG,EAAWZ,EAAcS,IAE1BG,EAASF,WAAaA,IACvBE,EAASF,UAAYA,GAILE,EAASC,YACb3yB,UAGP0yB,EAASF,YAGFnpB,EAAS5E,QAIJiU,wBAAcrP,EAASA,EAASC,YAEjCD,EAASC,WAAaopB,EAASppB,YAK1CkpB,GAAaE,EAASF,mBAEhBV,EAAcS,GAEzBG,EAASC,YAAYrxB,SAAQ,SAACsxB,GAC1BA,EAAIvpB,eAGDyoB,EAAcS,GACrBJ,EAAaO,EAASF,iBAxCjBT,EAAiBS,IAClBL,EAAaK,IAoDnBN,EAAS,SAAC5oB,EAAUupB,EAAaC,GACnC,GAA2B,mBAAhBD,EACP,MAAM,IAAI/uB,MAAJ,8EAAiFwF,EAAjF,+BAGV,IAAMypB,EAAe,GAgBrB,OAfA9yB,OAAO6Z,KAAKgY,GAAexwB,SAAQ,SAACogB,GAChC,GAAIoQ,EAAcpQ,GAAIpY,WAAaA,KAC1BwpB,GAAgBT,EAAUP,EAAcpQ,GAAIhe,QAASovB,IAAe,CACrE,IAAMN,EAAYV,EAAcpQ,GAAI8Q,UAChCA,GAAsD,IAAzCV,EAAcpQ,GAAIiR,YAAY3yB,eACpC8xB,EAAcpQ,GACrBqR,EAAazyB,KAAK6xB,EAAaK,KACxBJ,EAAoB1Q,EAAImR,IAG/Bf,EAAcpQ,GAAIiR,YAAYxxB,OAAO2wB,EAAcpQ,GAAIiR,YAAY5N,QAAQ8N,GAAc,OAKlGlwB,QAAQsC,IAAI8tB,IAsCjBX,EAAsB,SAACG,EAAQM,GAAT,OACvBf,EAAcS,KAAuE,IAA5DT,EAAcS,GAAQI,YAAY5N,QAAQ8N,IAElER,EAAY,SAACW,EAAaC,GAAd,MACS,WAAvB,EAAOD,IACgB,WAAvB,EAAOC,IACPhzB,OAAO6Z,KAAKmZ,GAAYjQ,OAAM,SAAA7c,GAAG,OAAI6sB,EAAY7sB,KAAS8sB,EAAW9sB,OAGlE,CACH+sB,2BAlK+B,SAAC5pB,EAAU6pB,EAAcC,EAAmBC,GAA5C,OAC/B,IAAI1wB,SAAQ,SAACC,GACT,IAAI2vB,EACAe,GAAY,EAEhBzoB,IAAakd,KAAKoL,EAAc,CAC5BI,SAAU,SAAClqB,GACP,OAAIA,EAAS5E,MACF7B,EAAQyG,GAEdiqB,EAoBErB,EAAS5oB,EAAUkpB,IAnBtBe,GAAY,EACZf,IAAcP,EAEVqB,GAAsBzZ,MAAMC,QAAQwZ,IACpCA,EAAmB/xB,SAAQ,SAACkyB,GACpBnqB,EAASA,EAASC,UAAUkqB,KAC5BJ,EAAkBI,GAAQnqB,EAASA,EAASC,UAAUkqB,OAKlE1B,EAAcS,GAAU,CACpBjpB,WACA5F,QAAa+vB,sBAAYL,GACzBZ,UAAa,GACbG,YAAa,IAEV/vB,EAAQyG,WAuI/BqqB,UAxMc,SAAZA,EAAapqB,EAAU0pB,EAAaH,GAA6C,IAAhCc,EAAgC,wDACnF,GAAIA,EACAzB,EAAO5oB,EAAUupB,GAAa3uB,MAAK,WAC/BwvB,EAAUpqB,EAAU0pB,EAAaH,UAFzC,CAOA,IAAIN,EAAStyB,OAAO6Z,KAAKgY,GAAexV,MAAK,SAAAoF,GAAE,OAAIkS,sBAAYZ,EAAalB,EAAcpQ,GAAIhe,YAEzF6uB,EAaOH,EAAoBG,EAAQM,IAEpCf,EAAcS,GAAQI,YAAYryB,KAAKuyB,IAdvCN,IAAWP,EAEXF,EAAcS,GAAU,CACpBjpB,WACA5F,QAAa+vB,sBAAYT,GACzBR,UAAa,GACbG,YAAa,CAACE,IAGlBhoB,IAAakd,KAAKiL,EAAa,CAC3BO,SAAU,SAAClqB,GAAD,OAAc4oB,EAAS5oB,EAAUkpB,SAoLnDL,SACA2B,UA1Cc,WAAkB,IAChC,IAAMC,EAAkB,GADQ,mBAAdC,EAAc,yBAAdA,EAAc,gBAahC,OAVAA,EAAUzyB,SAAQ,SAACgI,GACf,IAAM0qB,EAAU/zB,OAAO6Z,KAAKgY,GAAerU,QAAO,SAAAiE,GAAE,OAAIoQ,EAAcpQ,GAAIpY,WAAaA,KACnF0qB,EAAQh0B,SACRg0B,EAAQ1yB,SAAQ,SAACogB,UACNoQ,EAAcpQ,MAEzBoS,EAAgBxqB,IAAY,MAI7B3G,QAAQC,QACV8V,wBAAcob,GAEX,GADAjpB,IAAakd,KAAK,CAAEkM,WAAYh0B,OAAO6Z,KAAKga,OA4BpD3B,aAvBEA,EAAe,SAACK,GAElB,OADAT,EAAiBS,IAAa,EACvB7vB,QAAQC,QACX4vB,EACI3nB,IAAakd,KAAK,CAAEmK,OAAQM,IAAatuB,MAAK,kBAAe6tB,EAAiBS,MAC9E,O,sKCtNhB,IAAM0B,EAA+BvtB,OAAOutB,8BAAgC,GA4BtEC,EAAQ,I,WAzBV,c,4FAAc,SACVrc,KAAK0F,KAAO,GACZ1F,KAAKsc,KAAO,E,mDAGX/qB,GACDyO,KAAK0F,KAAK6W,QAAQhrB,K,+BAIlByO,KAAK0F,KAAK8W,Q,2BAGRjrB,GACEyO,KAAK0F,KAAKxd,QAAU8X,KAAKsc,MACzBtc,KAAKyB,SAETzB,KAAKyG,IAAIlV,K,8BAITyO,KAAK0F,KAAO,Q,iCAUP+W,EAAsB,CAC/B9uB,IAD+B,SAC3B9B,EAAQ6wB,EAAUC,GAClB,IACI,IAAMC,EAAeC,QAAQlvB,IAAI9B,EAAQ6wB,EAAUC,GACnD,MAA4B,mBAAjBC,EACA,WAAkB,2BAANE,EAAM,yBAANA,EAAM,gBACrB,IAAM9zB,EAAS4zB,EAAah0B,MAAMoX,KAAM8c,GACxC,OAAI9zB,aAAkB6B,QACX,IAAIA,SAAQ,SAACC,GAChB,IAAIiyB,EACJ/zB,EAAOoD,MAAK,SAAAmF,GACJA,EAAS5E,QACT0vB,EAAM7zB,KAAK+I,GACP1C,OAAOmuB,SAASnuB,OAAOmuB,QAAQruB,QAAQsuB,IAAIZ,EAAM3W,MACrD2W,EAAMa,QAEFruB,OAAOmuB,UACNZ,EAA6BjlB,MAAK,SAAAsN,GAAI,OAAIA,IAASlT,EAAS5E,MAAMV,SAEnE4C,OAAOmuB,QAAQG,MAAM5rB,EAAS5E,MAAMV,OAG5CowB,EAAM7zB,KAAK+I,GACXwrB,EAAexrB,KAbnB,OAcS,SAAA5E,GACDkC,OAAOmuB,UACPnuB,OAAOmuB,QAAQruB,QAAQsuB,IAAIZ,EAAM3W,MACjC7W,OAAOmuB,QAAQG,MAAMxwB,EAAMywB,kBAjBnC,SAmBW,WACPtyB,EAAQiyB,SAIb/zB,GACTsF,KAAK0R,MAEJ4c,EACT,MAAOjwB,GACL,MAAM,IAAIX,MAAMW,EAAMywB,iB,uqBC3ElC,IAAMrsB,EAkHK,CACHssB,cAlHkB,SAACvd,GAAD,OAClB/M,IAAakd,KAAK,CAAEqN,eAAgB,SAApC,GAAiD9rB,SAAU,kBAAsBsO,GAAWA,KAkH5Fyd,IAhHQ,SAACC,EAAaC,GAAd,OACR1qB,IAAakd,KAAK,CAAEsN,IAAKC,EAAaC,WAgHtCC,QA9GY,SAACrsB,EAAQssB,GAAT,OACZ5qB,IAAakd,KAAb,GAAoByN,QAASrsB,GAAYssB,GAAqB,CAAEA,wBA8GhEC,aA5GiB,SAACC,GAAD,OACjB9qB,IAAakd,KAAK,CAAE6N,cAAeD,KA4GnClqB,iBA1GqB,kBACrBZ,IAAakd,KAAK,CAAE8N,mBAAoB,KA0GxC9pB,iBAxGqB,kBACrBlB,IAAakd,KAAK,CAAE+N,mBAAoB,KAwGxCC,YAtGgB,kBAChBlrB,IAAakd,KAAK,CAAE9d,aAAc,KAsGlC+rB,gBApGoB,SAACC,GAAD,OACpBprB,IAAakd,KAAK,CAAEmO,cAAeD,KAoGnCvrB,eAlGmB,SAACD,GAAD,OACnBI,IAAakd,KAAK,CAAE9C,gBAAiBxa,KAkGrC0rB,OAhGW,kBACXtrB,IAAakd,KAAK,CAAEoO,OAAQ,KAgG5BxqB,aA9FiB,kBACjBd,IAAakd,KAAK,CAAEhC,eAAgB,KA8FpCqQ,kBA5FsB,SAACX,EAAmBY,EAAiB5rB,GAArC,OACtBI,IAAakd,KAAK,CACduO,oBAAqB,EACrBb,oBACAY,kBACA5rB,eAwFJ8rB,UArFc,kBACd1rB,IAAakd,KAAK,CAAEyO,WAAY,KAqFhCC,UAhFc,kBACd5rB,IAAakd,KAAK,CAAE0O,UAAW,KAgF/B/qB,iBApFqB,kBACrBb,IAAakd,KAAK,CAAExd,kBAAmB,KAoFvCmsB,YA/EgB,SAACtG,EAAOuG,EAAQC,GAAhB,OAChB/rB,IAAakd,KAAb,GAAoB8O,aAAc,EAAGC,YAAa,EAAG1G,QAAOuG,UAAWC,KA+EvEG,qBA7EyB,SAACC,GAAD,OACzBnsB,IAAakd,KAAK,CAAEkP,uBAAwB,EAAGD,iBA6E/CE,cAxEkB,kBAClBrsB,IAAakd,KAAK,CAAEoP,eAAgB,KAwEpCC,KA5ES,SAACJ,EAAazB,GAAd,OACT1qB,IAAakd,KAAK,CAAEqP,KAAMJ,EAAazB,WA4EvC8B,YAvEgB,kBAChBxsB,IAAakd,KAAK,CAAEuP,aAAc,KAuElC/rB,YArEgB,SAACgsB,EAAgBC,GAAjB,OAChB70B,QAAQC,QAAS8V,wBAAc6e,GAAqE,GAAnD1sB,IAAakd,KAAKwP,EAAgBC,KAqEnF1R,UAnEc,SAACsK,EAAOuG,EAAQC,GAAhB,OACd/rB,IAAakd,KAAb,GAAoBjC,UAAW,EAAGgR,YAAa,EAAG1G,QAAOuG,UAAWC,KAmEpEa,YAjEgB,SAACrtB,EAAO9G,GAAR,OAChBuH,IAAakd,KAAK,CAAE2P,aAActtB,EAAO9G,UAmEzC4uB,OAhEW,SAAC5oB,EAAUquB,EAAI7E,GAAf,OACXR,EAAoBJ,OAAO5oB,EAAUquB,EAAI7E,IAgEzCe,UA9Dc,kBACdvB,EAAoBuB,UAApB,MAAAvB,EAAmB,YA8DnBH,aA5DiB,SAACK,GAAD,OACjBF,EAAoBH,aAAaK,IA4DjClnB,iBA1DqB,SAACqsB,EAAIC,GAAL,OACrBtF,EAAoBoB,UAAU,UAAW,CAAE9oB,QAAS,EAAG8oB,UAAW,GAAKiE,EAAIC,IA0D3EC,kBAxDsB,SAACC,EAAKH,EAAIhE,GAAV,OACtBrB,EAAoBoB,UAAU,WAAYoE,EAAKH,EAAIhE,IAwDnDoE,8BAtDkC,eAACf,EAAD,uDAAe,KAAMW,EAArB,uCAAyBhE,EAAzB,8CAClCrB,EAAoBoB,UAAU,yBAA9B,GAA0DuD,uBAAwB,EAAGvD,UAAW,GAAOsD,GAAe,CAAEA,gBAAkBW,EAAIhE,IAsD9IqE,mCApDuC,SAACC,GAAD,OACvC3F,EAAoBY,2BAChB,yBADJ,KAES+E,EAFT,CAEsBvE,UAAW,IAC7B,CAAEuD,uBAAwB,EAAGvD,UAAW,GACxC,CAAC,iBAgDLwE,eA7CmB,SAACvC,EAAQgC,EAAIhE,GAAb,OACnBrB,EAAoBoB,UAAU,QAAS,CAAEyE,MAAOxC,EAAQjC,UAAW,GAAKiE,EAAIhE,IA6C5EyE,sBA3C0B,SAACb,EAAgBI,EAAIhE,GAArB,OAC1BrB,EAAoBoB,UAAU,gBAAiB6D,EAAgBI,EAAIhE,IA2CnE0E,qBAzCyB,SAACV,EAAIhE,GAAL,OACzBrB,EAAoBoB,UAAU,cAAe,CAAE4E,YAAa,EAAG5E,UAAW,GAAKiE,EAAIhE,IAyCnF7qB,uBAvC2B,SAAC6uB,GAAD,OAC3BrF,EAAoBoB,UAAU,iBAAkB,CAAEtnB,eAAgB,EAAGsnB,UAAW,GAAKiE,KA0C9EY,ID1E+B,IAAIC,MC0Eb3vB,ED1EwB0rB,I,4xBEhF7D,IAAMkE,EAAc,CAChBC,UAAW,CACPrY,GAAI,CACAsY,YAAa,EAAF,G,cAKnBC,MAAO,CACHC,aADG,SACUC,GACT,OAAOC,cAAMD,KAGrBE,IAAKryB,OAAO4F,SAASW,QACjBvG,OAAO4F,SAASW,OAAOiT,SAAS,SAC5BxZ,OAAO4F,SAASW,OACX2b,OAAO,GAAG5O,MAAM,KAChBqC,MAAK,SAAA2c,GAAK,OAAIA,EAAM9Y,SAAS,YAC7BlG,MAAM,KAAK,GACXiD,mBAEP3b,EACN23B,YAAa,MAGjBC,IACKC,IAAIC,KACJnwB,KAAKuvB,GAEH,IAAMztB,EAAW,SAACtD,EAAQmI,GAAT,OAAoBspB,IAAKrzB,EAAEizB,cAAMrxB,GAAb,GAAwBoxB,aAAcpxB,GAAWmI,KAE9EspB,YAAf,G,gCCpCA,kJ,kBCAIxyB,OAAO2yB,WAAaA,SAASp5B,UAAUoB,UACvCg4B,SAASp5B,UAAUoB,QAAU,SAAUiyB,EAAUgG,GAC7CA,EAAUA,GAAW5yB,OACrB,IAAK,IAAI7G,EAAI,EAAGA,EAAIgY,KAAK9X,OAAQF,IAC7ByzB,EAASnzB,KAAKm5B,EAASzhB,KAAKhY,GAAIA,EAAGgY,S,kBCJ1C0hB,QAAQt5B,UAAUu5B,UACnBD,QAAQt5B,UAAUu5B,QAAU,SAASp4B,GACjC,IAAIgd,EAAKvG,KACT,IAAKrW,SAASi4B,gBAAgB5a,SAAST,GAAK,OAAO,KACnD,EAAG,CACC,GAAIA,EAAGsb,QAAQt4B,GAAI,OAAOgd,EAC1BA,EAAKA,EAAGub,eAAiBvb,EAAGra,iBAChB,OAAPqa,GAA+B,IAAhBA,EAAGwb,UAC3B,OAAO,Q,uPCRfL,QAAQt5B,UAAU45B,KAAO,WAErB,OADAhiB,KAAKiiB,MAAMC,QAAU,OACdliB,MAGX0hB,QAAQt5B,UAAU+5B,KAAO,WAErB,OADAniB,KAAKiiB,MAAMC,QAAU,GACdliB,MAGL,WAAY0hB,QAAQt5B,YACtBs5B,QAAQt5B,UAAUqZ,OAAS,WAIvB,OAHIzB,KAAK9T,YACL8T,KAAK9T,WAAWC,YAAY6T,MAEzBA,OAIf0hB,QAAQt5B,UAAUg6B,YAAc,SAASC,EAAYC,GAKjD,YAJ0B,IAAfA,IACPA,GAActiB,KAAKwG,UAAUQ,SAASqb,IAE1CriB,KAAKwG,UAAU8b,EAAa,MAAQ,UAAUD,GACvCriB,MAGX0hB,QAAQt5B,UAAUm6B,cAAgB,SAASC,GAEvC,OADAxiB,KAAKoiB,YAAY,aAAcI,GACxBxiB,MAIX0hB,QAAQt5B,UAAUq6B,KAAO,SAASC,GAO9B,MANuB,WAAnB,EAAOA,IACP1iB,KAAK2iB,UAAY,GACjB3iB,KAAK5V,YAAYs4B,IAEjB1iB,KAAK2iB,UAAYD,EAEd1iB,O,kBCxCN0hB,QAAQt5B,UAAUy5B,UACnBH,QAAQt5B,UAAUy5B,QACdH,QAAQt5B,UAAUw6B,iBAClBlB,QAAQt5B,UAAUy6B,oBAClBnB,QAAQt5B,UAAU06B,mBAClBpB,QAAQt5B,UAAU26B,kBAClBrB,QAAQt5B,UAAU46B,uBAClB,SAASz5B,GAGL,IAFA,IAAIs4B,GAAW7hB,KAAKrW,UAAYqW,KAAKijB,eAAeC,iBAAiB35B,GACjEvB,EAAI65B,EAAQ35B,SACPF,GAAK,GAAK65B,EAAQpd,KAAKzc,KAAOgY,OACvC,OAAOhY,GAAK,K,wCCTxByC,EAAOD,QAAU,CACb24B,SAHa,iBAAM,iEAAiErxB,KAAKge,UAAUsT,c,y1BCKjGC,E,YACF,WAAYvsB,GAAO,a,4FAAA,UACf,wBAAMA,KAIVwsB,kBAAoB,SAAC32B,EAAO42B,GACpB10B,OAAOmuB,SAASnuB,OAAOmuB,QAAQruB,QAAQsuB,IAAI,EAAKnmB,MAAM0sB,YAE1D,EAAKhe,SAAS,CACVie,UAAU,EACV92B,QACA42B,UAXW,EAenBjrB,OAAS,kBAAM,EAAKuN,MAAM4d,SACtB,kBAAC,UAAD,CAAgB9R,qBAAqB,IACrC,EAAK7a,MAAMzH,UAfX,EAAKwW,MAAQ,CAAE4d,UAAU,GAFV,E,kPADKnoB,IAAMsJ,WAqBlCye,EAAc3zB,UAAY,CACtB8zB,WAAY7zB,IAAUnB,QAGXqH,mBAAQ,SAAC1C,GAAD,MACnB,CACIqwB,WAAYrwB,KAFL0C,CAIZwtB,G,iCCxBGK,EAAc,SAAC,GAcf,IAZFr0B,EAYE,EAZFA,SACAs0B,EAWE,EAXFA,eAGAC,EAQE,EARFA,iBAGAC,GAKE,EANFlrB,aAME,EALFkrB,wBAsBA,OACI,kBAAC,IAAMjqB,SAAP,KAII,yBACIgQ,GAAG,eACHta,UAAWG,IAAW,eAAgB,CAClC,sCAAuCo0B,EAEvC,2BAAwCD,GAAoBD,KAIhE,kBAAC,aAAD,CACIG,UAAQ,EACR7B,MAAO,CAAE8B,OAAQ,uBAEhB10B,MAOrBq0B,EAAYh0B,UAAY,CACpBs0B,mBAAwBr0B,IAAUE,KAClCR,SAAwBM,IAAUs0B,IAClCN,eAAwBh0B,IAAU+Q,KAClCwjB,iBAAwBv0B,IAAU+Q,KAClCyjB,aAAwBx0B,IAAU+Q,KAClCkjB,iBAAwBj0B,IAAU+Q,KAClC0jB,WAAwBz0B,IAAU+Q,KAClC/H,aAAwBhJ,IAAU+Q,KAClCmjB,uBAAwBl0B,IAAU+Q,KAClC2jB,gBAAwB10B,IAAU+Q,KAClC4jB,iBAAwB30B,IAAUnB,OAClC+1B,kBAAwB50B,IAAUE,KAClC20B,oBAAwB70B,IAAUqK,OAGvBvE,kBAAWI,aACtB,gBAAGzC,EAAH,EAAGA,OAAsB0C,EAAzB,EAAyBA,GAAzB,MAAmC,CAE/B6tB,eAAwB7tB,EAAG6tB,eAE3BQ,aAAwBruB,EAAG2uB,gBAC3Bb,iBAAwB9tB,EAAG8tB,iBAC3BQ,WAAwBtuB,EAAGsuB,WAC3BzrB,aAAwBvF,EAAOuF,aAC/BkrB,uBAAwB/tB,EAAG+tB,uBAC3BQ,gBAAwBvuB,EAAGuuB,gBAC3BC,iBAAwBxuB,EAAGwuB,iBAC3BE,oBAAwB1uB,EAAG0uB,uBAZT3uB,CAexB6tB,I,iDC3FFpa,IAAOob,wBAA0B,SAAUC,GACvCA,EAAOC,GAAK,IAAI/hB,KAAKgiB,MAQlB,IAAMC,EAAgB,SAAAC,GAAK,OAAIzb,IAAO0b,KAAKD,GAAOE,OAQ5CC,EAAW,SAAAn3B,GACpB,IAAKA,EAAO,OAAOoD,IAAWxD,OAAS2b,MAAS2b,MAChD,GAAIl3B,aAAiBub,KAAUvb,EAAMo3B,WAAap3B,EAAMq3B,QAAS,OAAOr3B,EACxE,GAAqB,iBAAVA,EAAoB,OAAO+2B,EAAc/2B,GAEpD,GAAI,WAAW+D,KAAKwX,IAAOvb,IAAS,CAChC,IAAMs3B,EAAe/b,MACrB,OAAOvb,EAAQs3B,EAAaJ,MAAMK,cAAgBhc,IAAO2b,IAAII,EAAa5e,IAAI1Y,EAAO,KAAM,eAAiBub,IAAO2b,IAAIl3B,EAAO,eAElI,OAAOub,IAAO2b,IAAIl3B,IAyBTw3B,EAAa,SAACpH,GAAD,IAAOqH,EAAP,uDAAqB,aAArB,OAAsCN,EAAS/G,GAAM7G,OAAOkO,ICpDhFr0B,EAAa,SAAC,GAAoB,IDkDZs0B,EClDNn0B,EAAkB,EAAlBA,YACZo0B,GDiDkBD,ECjDKn0B,EDiDIgY,IAAOmc,QAAQh8B,GAAWw7B,MAAM3N,OAAO,8BC/CxE,OACI,yBAAKhoB,UAAU,eAAeo2B,IAItCv0B,EAAWzB,UAAY,CACnB4B,YAAa3B,IAAUnB,QAGZqH,mBACX,kBAAiB,CACbvE,YADJ,EAAG+B,OACqB/B,eAFbuE,CAIb1E,G,wzBCdF,IAAMw0B,EAASC,IAAMC,KAAK,CACtBhe,MAAO,CACHie,QAAY,EACZC,WAAY,CACRC,SAAU,MAGlBje,KAAM,CACF+d,QAAY,EACZC,WAAY,CACRC,SAAU,QAKhBC,E,yQACFC,kBAAoB,WAAM,MAC8B,EAAKpvB,MAAjDyQ,EADc,EACdA,UAAW4e,EADG,EACHA,iBADG,IACeC,cADf,MACwB,EADxB,EAGtB,OAAQ7e,GACJ,IAAK,MAAO,MAAO,CACf8e,KAAYF,EAAiBG,MAAQ,EAAKH,EAAiBE,KAC3DE,OAAY13B,OAAO23B,YAAcL,EAAiBM,IAAOL,EACzDM,UAAW,oBAEf,IAAK,SAAU,MAAO,CAClBL,KAAYF,EAAiBG,MAAQ,EAAKH,EAAiBE,KAC3DI,IAAWN,EAAiBI,OAASH,EACrCM,UAAW,oBAEf,IAAK,OAAQ,MAAO,CAChBC,MAAY93B,OAAO+3B,WAAaT,EAAiBE,KAAQD,EACzDK,IAAYN,EAAiBpC,OAAS,EAAKoC,EAAiBM,IAC5DC,UAAW,oBAEf,IAAK,QAAS,MAAO,CACjBL,KAAWF,EAAiBQ,MAAQP,EACpCK,IAAYN,EAAiBpC,OAAS,EAAKoC,EAAiBM,IAC5DC,UAAW,oBAEf,QAAS,MAAO,CACZL,KAAMF,EAAiBE,KACvBI,IAAMN,EAAiBM,O,kSAK1B,MASDzmB,KAAKlJ,MAPLyQ,EAFC,EAEDA,UACAjY,EAHC,EAGDA,UACAu3B,EAJC,EAIDA,UACArmB,EALC,EAKDA,KACAyG,EANC,EAMDA,QACAja,EAPC,EAODA,QACAm5B,EARC,EAQDA,iBAGJ,IAAKA,EAAkB,OAAO,KAE9B,IAAMW,EACF,kBAAC,IAAD,KACM7f,GACF,kBAAC0e,EAAD,CAAQt3B,IAAI,UAAU04B,YAAY,OAAO9E,MAAO,CAAE+E,SAAU,QAASC,OAAQ,MACzE,0BACIhF,MAAQkE,EAAmBnmB,KAAKkmB,oBAAsB,GACtDgB,mBAAkB3f,EAClBjY,UAAWG,IACPH,EACA,kBACA,CAAE,yBAA0Bu3B,KAGrB,SAATrmB,GACE,uBAAGlR,UAAU,yBACT,kBAAC,IAAD,CAAMkR,KAAK,kBAInB,0BAAMlR,UAAU,yBACVtC,GAEN,0BAAMsC,UAAU,8BAOhC,OAAO8X,IAASC,aACZyf,EACAn9B,SAASqR,eAAe,mB,8BA5ERM,IAAMmF,eAiFlCwlB,EAAcv2B,UAAY,CACtB6X,UAAkB5X,IAAUC,OAC5BP,SAAkBM,IAAUoK,KAC5BzK,UAAkBK,IAAUC,OAC5Bi3B,UAAkBl3B,IAAU+Q,KAC5BF,KAAkB7Q,IAAUC,OAC5BqX,QAAkBtX,IAAU+Q,KAC5B0lB,OAAkBz2B,IAAUkK,OAC5B7M,QAAkB2C,IAAUC,OAAOsW,WACnCigB,iBAAkBx2B,IAAUnB,QAGjBy3B,Q,2yBC7GTkB,E,YACF,WAAYrwB,GAAO,a,4FAAA,UACf,wBAAMA,KAeVswB,WAAa,WACT,EAAK5hB,SAAS,CACVyB,QAAkBogB,QAAQ,EAAKvwB,MAAM9J,SACrCm5B,iBAAkB,EAAKmB,iBAAiBC,QAAQC,2BAnBrC,EAuBnBC,YAAc,kBAAM,EAAKjiB,SAAS,CAAEyB,SAAS,KArBzC,EAAKpB,MAAQ,CACToB,SAAkB,EAClBkf,iBAAkB,MAEtB,EAAKmB,iBAAmBhsB,IAAMosB,YANf,E,2SAUf1nB,KAAKwF,SAAS,CACVyB,QAAkBjH,KAAKlJ,MAAM+vB,UAC7BV,iBAAkBnmB,KAAKsnB,iBAAiBC,QAAQC,4B,+BAa/C,MAYDxnB,KAAKlJ,MAVLyQ,EAFC,EAEDA,UACAlY,EAHC,EAGDA,SACAs4B,EAJC,EAIDA,gBACAC,EALC,EAKDA,gBACAC,EANC,EAMDA,oBACAC,EAPC,EAODA,oBACAjB,EARC,EAQDA,UACArmB,EATC,EASDA,KACA4lB,EAVC,EAUDA,OACAp5B,EAXC,EAWDA,QAGE+6B,EAAkBt4B,IAAWo4B,EAAqBrnB,GACxD,OACI,yBACIlR,UAAU,UACV+Q,aAAcL,KAAKonB,WACnB9mB,aAAcN,KAAKynB,aAEnB,yBAAKn4B,UAAWG,IAAWm4B,EAAiB,mBAAoBtgB,IAAKtH,KAAKsnB,mBACnEQ,GACC,uBAAGx4B,UAAWtC,EAAU,wBAA0B,mCACnC,SAATwT,GAAwB,kBAAC,IAAD,CAAMA,KAAK,kBAAkBlR,UAAWy4B,IACvD,aAATvnB,GAAwB,kBAAC,IAAD,CAAMA,KAAK,eAAkBlR,UAAWy4B,IACvD,QAATvnB,GAAwB,kBAAC,IAAD,CAAMA,KAAK,aAAkBlR,UAAWy4B,KAIxE14B,GAGN,kBAAC,EAAD,CACIkY,UAAWA,EACXjY,UAAWq4B,EACXd,UAAWA,EACXrmB,KAAMA,EACNyG,QAASjH,KAAK6F,MAAMoB,QACpBkf,iBAAkBnmB,KAAK6F,MAAMsgB,iBAC7BC,OAAQA,EACRp5B,QAASA,U,8BAnEPsO,IAAMmF,eA0E5B0mB,EAAQz3B,UAAY,CAChB6X,UAAqB5X,IAAUC,OAC/BP,SAAqBM,IAAUoK,KAC/B4tB,gBAAqBh4B,IAAUC,OAC/Bg4B,gBAAqBj4B,IAAUC,OAC/Bi4B,oBAAqBl4B,IAAUC,OAC/Bk4B,oBAAqBn4B,IAAU+Q,KAC/BmmB,UAAqBl3B,IAAU+Q,KAC/BF,KAAqB7Q,IAAUC,OAC/Bw2B,OAAqBz2B,IAAUkK,OAC/B7M,QAAqB2C,IAAUC,QAGpBu3B,QCtFTa,EAAgB,SAAC,GAAD,IAAGvb,EAAH,EAAGA,OAAH,OAClB,yBAAKnd,UAAU,2BACX,kBAAC,EAAD,CACIq4B,gBAAgB,0BAChBpgB,UAAU,MACVva,QAASkG,mBAAS,6BAA8B,CAAEuZ,OAASA,EAAOgD,SAAWvc,mBAAS,2BAEtF,yBAAK5D,UAAWG,IACZ,yBAA0B,CACtB,kCAAqD,YAAjBgd,EAAM,MAC1C,iCAAqD,WAAjBA,EAAM,MAC1C,kCAAqD,YAAjBA,EAAM,aAO9Dub,EAAct4B,UAAY,CACtB+c,OAAQ9c,IAAUnB,QAKPqH,oBACX,kBAAiB,CACb4W,OADJ,EAAGpZ,OACgBqb,kBAFR7Y,CAIbmyB,G,ozBC/BIC,G,YACF,WAAYnxB,GAAO,a,4FAAA,UACf,0BAAMA,KAmBVoxB,aAAe,WACX,IAAMC,EAAiB,EAAKC,eAAeC,QAAQlxB,MAAK,SAAAoP,GAAE,OAAI5c,SAAS4c,MACvE,EAAKf,SAAS,CAAE2iB,oBAtBD,EAyBnBG,iBAAmB,SAAC39B,GAChBA,EAAE49B,kBAEF,IAAMC,EAAY,EAAK3iB,MAAMsiB,eACvB5hB,EAAYiiB,EAAU7+B,SAAWA,SAASi4B,gBAC1C6G,EAAY,EAAKL,eAAeI,EAAU,WAAa,aAAahkB,MAAK,SAAAsW,GAAG,OAAIvU,EAAGuU,MAErF2N,EACAliB,EAAGkiB,KAEH,EAAKjjB,SAAS,CAAE2iB,gBAAgB,KAjCpC,EAAKtiB,MAAQ,CACTsiB,gBAAgB,GAEpB,EAAKC,eAAiB,CAClBz8B,MAAW,CAAC,mBAAqB,yBAA2B,sBAAwB,sBACpF08B,QAAW,CAAC,oBAAqB,0BAA2B,uBAAwB,uBACpFK,UAAW,CAAC,oBAAqB,0BAA2B,uBAAwB,uBACpFC,SAAW,CAAC,iBAAqB,uBAA2B,sBAAwB,qBATzE,E,4SAcC,WAChB3oB,KAAKooB,eAAez8B,MAAMnC,SAAQ,SAACmC,GAC/BhC,SAAS0c,iBAAiB1a,EAAO,EAAKu8B,cAAc,Q,+BAwBxD,IAAMU,EAAyBn5B,IAAW,gBAAiB,eAAgB,CACvE,wBAAyBuQ,KAAK6F,MAAMsiB,iBAExC,OACI,uBACI74B,UAAWs5B,EACXp5B,QAASwQ,KAAKsoB,kBAEd,kBAAC,IAAD,CAAM9nB,KAAK,eAAelR,UAAU,uB,gCAjDrBgM,IAAMsJ,WCC/BikB,GAAkB,SAAC,GAInB,IAHFC,EAGE,EAHFA,gBACAjF,EAEE,EAFFA,uBACAkF,EACE,EADFA,sBAEMC,EAAyBv5B,IAC3B,eACA,eAAgB,CACZ,uBAA2Bo0B,EAC3B,0BAA4BiF,EAAkB,IAGtD,OACI,uBACIx5B,UAAW05B,EACXx5B,QAASu5B,EACTE,aAAYH,GAEZ,kBAAC,IAAD,CAAMtoB,KAAK,gBAAgBlR,UAAU,sCAKjDu5B,GAAgBn5B,UAAY,CACxBm0B,uBAAwBl0B,IAAU+Q,KAClCooB,gBAAwBn5B,IAAUkK,OAClCkvB,sBAAwBp5B,IAAUE,M,wBCtBhC4X,I,OAAgB,CAClB,CACIjH,KAAO,YACPkE,MAAOxR,mBAAS,UAChBnF,MAAOuN,IAAMtF,MAAK,kBAAM,iDACzB,CACCwK,KAAO,eACPkE,MAAOxR,mBAAS,YAChBnF,MAAOuN,IAAMtF,MAAK,kBAAM,oDACzB,CACCwK,KAAO,aACPkE,MAAOxR,mBAAS,UAChBnF,MAAOuN,IAAMtF,MAAK,kBAAM,mDAQ1BkzB,GAAiB,SAAC,GAKlB,IAJFpiB,EAIE,EAJFA,aACAqiB,EAGE,EAHFA,oBACAziB,EAEE,EAFFA,aACA0iB,EACE,EADFA,eAEMC,EAAwB55B,IAAW,cAAe,eAAgB,CACpE,sBAAuB05B,IAE3B,OACI,kBAAC,IAAMvvB,SAAP,KACI,uBACIpK,QAAS45B,EACT95B,UAAW+5B,GAEX,kBAAC,IAAD,CAAM7oB,KAAK,eAAelR,UAAU,oCAExC,kBAAC,IAAM2J,SAAP,CAAgBC,SAAU,kBAAC,KAAD,OACtB,kBAAC,KAAD,CACIuO,cAAeA,GACfX,aAAcA,EACdG,QAASkiB,EACTziB,aAAcA,EACdpR,MAAOpC,mBAAS,qBAChBgU,YAAakiB,OAOjCF,GAAex5B,UAAY,CACvBoX,aAAqBnX,IAAUE,KAC/Bs5B,oBAAqBx5B,IAAU+Q,KAC/BgG,aAAqB/W,IAAUE,KAC/Bu5B,eAAqBz5B,IAAUE,MClDnC,IAAMy5B,GAAS,SAAC,GAAD,IAEXxiB,EAFW,EAEXA,aACA8c,EAHW,EAGXA,iBAEAjrB,EALW,EAKXA,aACAkrB,EANW,EAMXA,uBACA0F,EAPW,EAOXA,iBACAC,EARW,EAQXA,qBAEA9iB,EAVW,EAUXA,aACA+iB,EAXW,EAWXA,sBACAV,EAZW,EAYXA,sBACAW,EAbW,EAaXA,oBAbW,OAeX,kBAAC,IAAM9vB,SAAP,KAEI,4BAAQtK,UAAWG,IAAW,SAAU,CACpC,qBAAuBm0B,GAAoB2F,KAG3C,yBAAKj6B,UAAU,qCAENqJ,GAAgB8wB,GACjB,kBAAC,GAAD,CACI5F,uBAAwBA,EACxBkF,sBAAuBA,EACvBD,gBAAiB,KAK7B,kBAAC,GAAD,MACA,kBAAC,EAAD,MACA,yBAAKx5B,UAAU,iBACX,kBAAC,GAAD,CACI65B,oBAAqBK,EACrBJ,eAAgBM,EAChBhjB,aAAcA,EACdI,aAAcA,IAElB,kBAAC,GAAD,UAOhBwiB,GAAO55B,UAAY,CACfi6B,iBAAwBC,IAAcC,uBACtCjG,iBAAwBj0B,IAAU+Q,KAClC/H,aAAwBhJ,IAAU+Q,KAClCmjB,uBAAwBl0B,IAAU+Q,KAClC6oB,iBAAwB55B,IAAU+Q,KAClC8oB,qBAAwB75B,IAAU+Q,KAClCjM,SAAwB9E,IAAUnB,OAClCi7B,sBAAwB95B,IAAU+Q,KAClCqoB,sBAAwBp5B,IAAUE,KAClC65B,oBAAwB/5B,IAAUE,MAGvB4F,mBAAWI,aACtB,gBAAGzC,EAAH,EAAGA,OAAsB0C,EAAzB,EAAyBA,GAAzB,MAAmC,CAE/BgR,aAAwBhR,EAAGgR,aAC3B8c,iBAAwB9tB,EAAG8tB,iBAC3B2F,iBAAwBzzB,EAAGyzB,iBAC3B5wB,aAAwBvF,EAAOuF,aAC/ByrB,WAAwBtuB,EAAGsuB,WAC3BP,uBAAwB/tB,EAAG+tB,uBAC3B2F,qBAAwB1zB,EAAG0zB,qBAC3B9iB,aAAwB5Q,EAAG4Q,aAC3B+iB,sBAAwB3zB,EAAG2zB,sBAC3BV,sBAAwBjzB,EAAGizB,sBAC3BW,oBAAwB5zB,EAAG4zB,uBAbT7zB,CAexByzB,K,UCtFIQ,GAAY,SAAC,GAAD,IAAGnxB,EAAH,EAAGA,aAAc0L,EAAjB,EAAiBA,MAAjB,OACd,kBAAC,IAAMzK,SAAP,OACOyK,EAAMnc,QACT,yBAAKoH,UAAU,sBAEP+U,EAAMlL,KAAI,SAACsL,EAAMrL,GAAP,OACLqL,EAAKslB,YAAetlB,EAAKslB,aAAepxB,EACrC,KAEA,kBAAC,KAAD,CAAYtK,IAAK+K,EAAK7J,GAAIkV,EAAKulB,QAAS16B,UAAU,oBAAoBuH,aAAa,6BAC/E,kBAAC,IAAM+C,SAAP,KACK6K,EAAKiM,MACF,0BAAMpb,MAAOmP,EAAKiM,KAAMphB,UAAU,0BAA0BmV,EAAKjE,KAAMiE,EAAKiM,KAAMjM,EAAKwlB,MAE1FxlB,EAAKylB,OACF,0BAAM56B,UAAU,0BAA0BmV,EAAKylB,MAAOzlB,EAAKwlB,cAW/FH,GAAUp6B,UAAY,CAClB2U,MAAO1U,IAAUqU,QAAQrU,IAAUqW,MAAM,CACrCxF,KAAM7Q,IAAUqW,MAAM,CAClB1W,UAAWK,IAAUC,SAEzB+I,aAAchJ,IAAU+Q,KACxBspB,QAAcr6B,IAAUC,OACxB8gB,KAAc/gB,IAAUC,W,iDC9B1Bu6B,GAAc,SAAC,GAAD,IAAG76B,EAAH,EAAGA,UAAH,OAChB,kBAAC,KAAD,CACIA,UAAWG,IAAWH,EAAW,yCACjC86B,YAAU,EACV1Z,KAAMxd,mBAAS,UACf1D,QAASoJ,sBAIjBuxB,GAAYz6B,UAAY,CACpBJ,UAAWK,IAAUC,QCVzB,IAAMy6B,GAAe,SAAC,GAAD,IAAG/6B,EAAH,EAAGA,UAAH,OACjB,kBAAC,KAAD,CACIA,UAAWG,IAAWH,EAAW,qCACjC86B,YAAU,EACV1Z,KAAMxd,mBAAS,WACf1D,QAAS,WAAQX,OAAOsJ,KAAKC,kBAAO,mBAAe3O,OAAWA,GAAW,QAIjF4gC,GAAa36B,UAAY,CACrBJ,UAAWK,IAAUC,QCXzB,IAAM06B,GAAgB,SAAC,GAAD,IAAGh7B,EAAH,EAAGA,UAAWE,EAAd,EAAcA,QAAd,OAClB,kBAAC,KAAD,CACIoa,GAAG,kBACHta,UAAWG,IAAWH,EAAW,qCACjC86B,YAAU,EACV1Z,KAAMxd,mBAAS,WACf1D,QAASA,KAIjB86B,GAAc56B,UAAY,CACtBJ,UAAWK,IAAUC,OACrBJ,QAAWG,IAAUE,M,uzBCNzB,IAEa06B,GAAb,gC,4FAAA,8C,UAAA,O,mOAAA,M,EAAA,G,EAAA,6CAC0BC,GAClB,OAEIA,EAAU13B,UAAYkN,KAAKlJ,MAAMhE,SACjC03B,EAAUnd,cAAgBrN,KAAKlJ,MAAMuW,aACrCmd,EAAU3d,iBAAmB7M,KAAKlJ,MAAM+V,gBACxC2d,EAAUr2B,WAAa6L,KAAKlJ,MAAM3C,UAClCq2B,EAAUC,qBAAuBzqB,KAAKlJ,MAAM2zB,oBAE5CD,EAAU7xB,eAAiBqH,KAAKlJ,MAAM6B,cACtC6xB,EAAUx2B,aAAegM,KAAKlJ,MAAM9C,YACpCw2B,EAAUv4B,UAAY+N,KAAKlJ,MAAM7E,UAZ7C,+BAgBa,MAiBD+N,KAAKlJ,MAdLhE,EAHC,EAGDA,QACAua,EAJC,EAIDA,YACAR,EALC,EAKDA,eACA1Y,EANC,EAMDA,SAEAs2B,EARC,EAQDA,mBAEA9xB,EAVC,EAUDA,aACA3E,EAXC,EAWDA,WACA/B,EAZC,EAYDA,QACAy4B,EAbC,EAaDA,eACAC,EAdC,EAcDA,qBAIJ,OAAIhyB,EAEI,kBAAC,IAAMiB,SAAP,KACI,kBAACgxB,GAAA,EAAD,CACIC,KAAM,kBAAM,4CACZC,aAAa,EACbC,cAAc,EACdj4B,QAASyjB,uBAAYpiB,EAAUrB,GAAS,GACxCk4B,mBAAoB3d,EACpBrZ,WAAYA,EACZ02B,eAAgBA,EAChBv2B,SAAUA,EACVlC,QAASA,EACTg5B,aAAcR,EACdS,aAAcP,OAGd9d,IAAkB7Y,IACjB,kBAAC,GAAD,CACD1E,UAAU,mBACVE,QAAS,WACLX,OAAOsJ,KAAKC,kBAAO,qBAAiB3O,OAAWA,GAAW,QAzD1D,GAyEJuK,GAEJ,kBAAC,KAAD,CACI1E,UAAU,qDACV86B,YAAU,EACV1Z,KAAMxd,mBAAS,WACf1D,QAAS,WACLX,OAAOsJ,KAAKC,kBAAO,eAAW3O,OAAWA,GAAW,GAChD,SACA,WACA,kBAQpB,kBAAC,IAAMmQ,SAAP,KACI,kBAAC,GAAD,CAAatK,UAAU,qBACvB,kBAAC,GAAD,CAAcA,UAAU,2B,6BA3FxC,GAAoCsV,aAiGpC2lB,GAAe76B,UAAY,CACvBy7B,mBAAsBx7B,MACtBmD,QAAsBnD,MACtB0d,YAAsB1d,MACtBkd,eAAsBld,MACtBwE,SAAsBxE,MACtBmX,aAAsBnX,MACtB86B,mBAAsB96B,MACtBy7B,oBAAsBz7B,MACtBgJ,aAAsBhJ,MACtBqE,WAAsBrE,MACtBsC,QAAsBtC,MACtB+6B,eAAsB/6B,MACtB+W,aAAsB/W,MACtBg7B,qBAAsBh7B,MACtBsF,mBAAsBtF,O,aC3GX07B,GAdM,CACjB,CACIpB,KAAS,yBAAK36B,UAAU,gBAAgB4D,mBAAS,SACjDg3B,MAAS,kBAAC,IAAD,CAAM1pB,KAAK,YAAYlR,UAAU,iBAC1C06B,QAASz0B,KAAOsc,QCKlByZ,GAAS,SAAC,GAAD,IAEXx4B,EAFW,EAEXA,QACAua,EAHW,EAGXA,YACAR,EAJW,EAIXA,eACA1Y,EALW,EAKXA,SAEAs2B,EAPW,EAOXA,mBAEA7G,EATW,EASXA,iBAEAjrB,EAXW,EAWXA,aACA4yB,EAZW,EAYXA,UACAhC,EAbW,EAaXA,iBACAv1B,EAdW,EAcXA,WAEA/B,EAhBW,EAgBXA,QACAy4B,EAjBW,EAiBXA,eAEAC,EAnBW,EAmBXA,qBAnBW,OAsBX,kBAAC,IAAM/wB,SAAP,KAEI,4BAAQtK,UAAWG,IAAW,SAAU,CACpC,qBAAuBm0B,GAAoB2F,KAG3C,yBAAKj6B,UAAU,sBACX,yBAAKA,UAAU,qBACX,kBAACs7B,GAAA,EAAD,CACIG,cAAc,EACdF,KAAM,kBAAM,kDACZC,YAAaS,IAEjB,kBAAC,GAAD,CACI5yB,aAAcA,EACd0L,MAAOgnB,MAGf,yBAAK/7B,UAAU,sBACX,yBAAKA,UAAU,uBACX,kBAAC,GAAD,CAEIwD,QAASA,EACT+Z,eAAgBA,EAChB1Y,SAAUA,EACVkZ,YAAaA,EAEbod,mBAAoBA,EAEpB9xB,aAAcA,EACd3E,WAAYA,EACZ/B,QAASA,EACTy4B,eAAgBA,EAChBC,qBAAsBA,UAYlDW,GAAO57B,UAAY,CAEfoD,QAAsBnD,IAAUC,OAChCyd,YAAsB1d,IAAU+Q,KAChCmM,eAAsBld,IAAUC,OAChCuE,SAAsBxE,IAAUC,OAEhC66B,mBAAsB96B,IAAU+Q,KAEhCyjB,aAAsBx0B,IAAU+Q,KAChCkjB,iBAAsBj0B,IAAU+Q,KAChC0jB,WAAsBz0B,IAAU+Q,KAChC/H,aAAsBhJ,IAAU+Q,KAChC6qB,UAAsB57B,IAAU+Q,KAChC6oB,iBAAsB55B,IAAU+Q,KAChC1M,WAAsBrE,IAAU+Q,KAChCjM,SAAsB9E,IAAUnB,OAChCyD,QAAsBtC,IAAUC,OAChC86B,eAAsB/6B,IAAUE,KAEhC86B,qBAAsBh7B,IAAUE,MAMrB4F,mBAAWI,aACtB,gBAAGzC,EAAH,EAAGA,OAAQ0C,EAAX,EAAWA,GAAX,MAAqB,CAEjBhD,QAAsBM,EAAON,QAC7Bua,YAAsBja,EAAOia,YAC7BR,eAAsBzZ,EAAOyZ,eAC7B1Y,SAAsBf,EAAOe,SAE7BiwB,WAAsBtuB,EAAGsuB,WACzBzrB,aAAsBvF,EAAOuF,aAC7B3E,WAAsBZ,EAAOY,WAC7B/B,QAAsBmB,EAAOnB,QAC7Bw4B,mBAAsB30B,EAAG01B,wBAEzBrH,aAAsBruB,EAAG2uB,gBACzBb,iBAAsB9tB,EAAG8tB,iBACzB2F,iBAAsBzzB,EAAGyzB,iBACzBgC,UAAsBz1B,EAAGy1B,UAEzBZ,qBAAsB70B,EAAG60B,wBAnBP90B,CAsBxBy1B,K,iNCzHF,IAAMG,GAAS,SAAC30B,GACZ,OAAIA,EAAM+vB,UAEF,kBAAC+D,GAAA,EAAD,IACIC,KAAM,kBAAM,0CACZC,YAAah0B,EAAM+vB,UACnBkE,cAAc,GACVj0B,EAAMnK,QAKf,kBAAC,KAAD,CAAcgM,aAAc7B,EAAM6B,aAAcE,YAAa/B,EAAM+B,eAG9E4yB,GAAO/7B,UAAY,CACf/C,MAAci9B,IAAc8B,yBAC5B7E,UAAcl3B,IAAU+Q,KACxB/H,aAAchJ,IAAU+Q,MAKbjL,IC3BX1F,GAQM47B,GCTN57B,GF4BW0F,eAAWI,aACtB,gBAAGzC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,OAAX,MAAyB,CACrBsF,aAAcvF,EAAOuF,aACrBhM,MAAc0G,EAAO1G,MACrBk6B,UAAcxzB,EAAOwzB,aAJHhxB,CAMxB41B,K,0DCdaG,IAXLD,GAAct6B,cAAO,SAACob,EAAQof,GAC5B97B,IACAA,GAAa+7B,iBAAiBrf,EAAQof,MAIvC,CACHz6B,KAZS,SAAC+B,GACVmc,KAAmBle,KAAKZ,KAAoBY,KAAK+B,GAAQw4B,IACzD57B,GAAeoD,EAAME,UCqCd04B,GAzCU,WACrB,IAsBMJ,EAAct6B,aAAO,aAAa,WAChCtB,IACAA,GAAai8B,UAAU,CACnBh/B,QAASkG,mBAAS,oIAAqI,CACnJ+4B,YAAe,+FACfC,YAAe,OACfC,cAAe,CAAEC,aAAa,KAElC3yB,UAAU,OAKtB,MAAO,CACHrI,KApCS,SAAC+B,GACVpD,GAAeoD,EAAME,OAErB,IAAMvH,EAAM,qCACZ,IAAInC,SAASuM,cAAT,uBAAuCpK,EAAvC,SACJ+C,OAAOw9B,OAAS,CACZC,GAAW,CAAEtkC,EAAG,GAAIukC,GAAI,EAAG/+B,GAAI,EAAGjE,EAAG,EAAG8D,GAAI,GAC5Cm/B,IAAW,EACX5S,IAAW,2BACX6S,SAAW,EACXC,SAAW,EACXC,OAAWhB,EACXiB,WAAW,EACXC,UAAW,GAEXljC,SAASgwB,MAAM,CACf,IAAMntB,EAAS7C,SAASC,cAAc,UACtC4C,EAAO1C,aAAa,MAAOgC,GAC3BnC,SAASgwB,KAAKvvB,YAAYoC,MAnBb,G,8YCWzB,IC6FIsgC,GD7FEC,GAAuB,CACzB54B,SAAU,CACN0D,OAAS3E,mBAAS,gBAClBlG,QACI,kBAAC,KAAD,CACI8K,kBAAkB,oEAClBE,WAAY,CAAC,uBAAG3J,IAAK,EAAGiB,UAAU,mBAAmBzD,OAAO,SAAS5B,KAAMmO,kBAAO,yBAAqB3O,OAAWA,GAAW,QAGrI+B,KAAM,UAEVwhC,eAAgB,SAAC7iB,GAAD,MAAqB,CACjCtS,OAAS3E,mBAAS,2BAClBlG,QACI,kBAAC,KAAD,CACI8K,kBAAkB,kHAClBC,OAAQ,CAAEk1B,cAAe1H,EAAWpb,EAAgB,cAAegiB,cAAe,CAAEC,aAAa,IACjGp0B,WAAY,CAAE,uBAAG3J,IAAK,EAAGiB,UAAU,mBAAmBzD,OAAO,SAAS5B,KAAMmO,kBAAO,eAAW3O,OAAWA,GAAW,QAG5H+B,KAAM,WAEV0hC,aAAc,CACVr1B,OAAS3E,mBAAS,0BAClBlG,QACI,kBAAC,KAAD,CACI8K,kBAAkB,gGAClBE,WAAY,CAAE,uBAAG3J,IAAK,EAAGiB,UAAU,mBAAmBzD,OAAO,SAAS5B,KAAMmO,kBAAO,yBAAqB3O,OAAWA,GAAW,QAGtI+B,KAAM,QAEV2hC,eAAgB,CACZt1B,OAAS3E,mBAAS,oBAClBlG,QAASkG,mBAAS,0GAClB1H,KAAS,WAEb4hC,kBAAmB,CACfv1B,OAAS3E,mBAAS,uBAClBlG,QAASkG,mBAAS,6FAClB1H,KAAS,WAEb6hC,sBAAuB,CACnBx1B,OAAS3E,mBAAS,2BAClBlG,QAASkG,mBAAS,iGAClB1H,KAAS,WAEb8hC,sBAAuB,CACnBz1B,OAAS3E,mBAAS,yBAClBlG,QACI,kBAAC,KAAD,CACI8K,kBAAkB,qIAClBE,WAAY,CAAE,uBAAG3J,IAAK,EAAGiB,UAAU,mBAAmBzD,OAAO,SAAS5B,KAAMmO,kBAAO,yBAAqB3O,OAAWA,GAAW,QAGtI+B,KAAM,WAEV+hC,UAAW,CACP11B,OAAS3E,mBAAS,iCAClBlG,QACI,kBAAC,KAAD,CACI8K,kBAAkB,kHAClBE,WAAY,CAAE,uBAAG3J,IAAK,EAAGiB,UAAU,mBAAmBzD,OAAO,SAAS5B,KAAMmO,kBAAO,eAAW3O,OAAWA,GAAW,QAG5H+B,KAAM,UAEVgiC,UAAW,CACP31B,OAAS3E,mBAAS,mCAClBlG,QACI,kBAAC,KAAD,CACI8K,kBAAkB,mHAClBE,WAAY,CAAE,uBAAG3J,IAAK,EAAGiB,UAAU,mBAAmBzD,OAAO,SAAS5B,KAAMmO,kBAAO,eAAW3O,OAAWA,GAAW,QAG5H+B,KAAM,UAEViiC,gBAAiB,CACb51B,OAAS3E,mBAAS,yBAClBlG,QACI,kBAAC,KAAD,CACI8K,kBAAkB,yEAClBE,WAAY,CAAE,uBAAG3J,IAAK,EAAGiB,UAAU,mBAAmBzD,OAAO,SAAS5B,KAAMmO,kBAAO,sCAAkC3O,OAAWA,GAAW,QAGnJ+B,KAAM,WAEVkiC,KAAM,CACF71B,OAAS3E,mBAAS,iCAClBlG,QACI,kBAAC,KAAD,CACI8K,kBAAkB,mGAClBE,WAAY,CAAE,uBAAG3J,IAAK,EAAGiB,UAAU,mBAAmBzD,OAAO,SAAS5B,KAAMmO,kBAAO,kCAA8B3O,OAAWA,GAAW,QAG/I+B,KAAM,QAEVmiC,IAAK,CACD91B,OAAS3E,mBAAS,kCAClBlG,QACI,kBAAC,KAAD,CACI8K,kBAAkB,mEAClBE,WAAY,CAAE,uBAAG3J,IAAK,EAAGiB,UAAU,mBAAmBzD,OAAO,SAAS5B,KAAMmO,kBAAO,+BAA2B3O,OAAWA,GAAW,QAG5I+B,KAAM,UAEVoiC,IAAK,CACD/1B,OAAS3E,mBAAS,8BAClBlG,QACI,kBAAC,KAAD,CACI8K,kBAAkB,uFAClBE,WAAY,CAAE,uBAAG3J,IAAK,EAAGiB,UAAU,mBAAmBzD,OAAO,SAAS5B,KAAMmO,kBAAO,2BAAuB3O,OAAWA,GAAW,QAGxI+B,KAAM,UAEVqiC,gBAAiB,CACbh2B,OAAS3E,mBAAS,kCAClBlG,QACI,kBAAC,KAAD,CACI8K,kBAAkB,mEAClBE,WAAY,CAAE,uBAAG3J,IAAK,EAAGiB,UAAU,mBAAmBzD,OAAO,SAAS5B,KAAMmO,kBAAO,+BAA2B3O,OAAWA,GAAW,QAG5I+B,KAAM,WAwFDsiC,GAA4B,SAAC16B,EAAQ26B,EAAiB97B,GAAY,IACnEkC,EAA6Bf,EAA7Be,SAAUgW,EAAmB/W,EAAnB+W,eACbhW,GAAkB45B,EAAgBhB,GAAqB54B,UACxDgW,GAAmB4jB,EAAgBhB,GAAqBC,eAAe7iB,IAE3EpZ,KAAG4C,mBAAmBvH,MAAK,SAACmF,GAAD,OA/CJ,SAACA,EAAU6B,EAAQ26B,EAAiB97B,GAC3D,GAAKV,EAASwsB,oBACV9rB,IAAYqR,cAAW3V,IAAI,kBAA/B,CAFuE,MAIrB4D,EAASwsB,mBAAnDiQ,EAJ+D,EAI/DA,8BAA+BvhB,EAJgC,EAIhCA,OAJgC,EAe9CA,EAoBHnE,QAAO,SAAC2lB,EAAaC,GAEnC,OADAD,EAAYC,IAAkB,EACvBD,IACR,IA/BHE,EAPmE,EAOnEA,sBACAhB,EARmE,EAQnEA,eACAC,EATmE,EASnEA,kBACAC,EAVmE,EAUnEA,sBACAC,EAXmE,EAWnEA,sBACAC,EAZmE,EAYnEA,UACAa,EAbmE,EAanEA,iCACAC,EAdmE,EAcnEA,aAEEC,EAAoD,gBAArCl7B,EAAOm7B,4BAAgDF,EAExElB,GAAuBY,EAAgBhB,GAAqBI,gBAC5DC,GAAuBW,EAAgBhB,GAAqBK,mBAC5DC,GAAuBU,EAAgBhB,GAAqBM,uBAC5DC,GAAuBS,EAAgBhB,GAAqBO,uBAC5DC,GAAuBQ,EAAgBhB,GAAqBQ,WAC5De,GAAuBP,EAAgBhB,GAAqBS,WAC5DY,GACAL,EAAgBhB,GAAqBU,iBAErC9f,gCAAqBogB,EAAgBhB,GAAqBW,MAC1DlhB,gCAAqBuhB,EAAgBhB,GAAqBY,OAExDK,GAAoCG,GAAyBb,GAC/DS,EAAgBhB,GAAqBG,eAgBAsB,CAAmBj9B,EAAU6B,EAAQ26B,EAAiB97B,MAE/FlB,KAAG0C,YAAY,CAAEtB,aAAc,GAAK,CAAEuB,QAAQ,IAAQtH,MAAK,SAACmF,GACpDU,IAAYqR,cAAW3V,IAAI,oBAE3Bke,8BAAmBkiB,EAAgBhB,GAAqBa,KA9FpC,SAACr8B,EAAU6B,GACvC,IAAK7B,EAASY,aAAc,OAAO,EADe,IAM9C07B,EAWMY,EACAC,EAfFH,EAA8Bn7B,EAA9Bm7B,0BACsC,QAA9BA,GAAqE,cAA9BA,GAa7CE,EAA8B18B,SAAMmQ,YAAY,6DAChDwsB,EAA8B38B,SAAMmQ,YAAY,yDACjD/I,KAAI,SAAAw1B,GAAK,MAAe,cAAVA,EAAwB,UAAYA,KAXvDd,EAaA,aAAWY,GAAX,GAA2CC,KAX3Cb,EAcJ,WACI,IAAK5kB,2BAAgB,aAAc,MAAO,GADjB,IAEjBtW,EAAcS,EAAdT,UAEFi8B,EAA2B,CAC7B,yBACA,iBACA,eACA,QACA,4BACA,iBACgD,OAAdj8B,GAAoD,QAA9B47B,GAC1BK,EAAyBpmC,KAAK,oBAEhE,gBAAWomC,GA5BOC,GAGtB,IAAM18B,EAAeZ,EAASY,aAC9B,OAAO07B,EAAgB12B,MAAK,SAAAw3B,GAAK,OAAKx8B,EAAaw8B,MAkF3CG,CAAwBv9B,EAAU6B,IAClC26B,EAAgBhB,GAAqBc,sB,4BCtO3CkB,GAAoB,SAAChhC,GACvB,OAAIA,SAIQ4iB,OAAO5iB,GAAO0K,QAAQ,MAAO,IAC9BvQ,OAAS,GAElB8mC,GAAoB,SAAAjhC,GAAK,MAAI,oDAAoD+D,KAAK/D,IACtFkhC,GAAoB,SAAAlhC,GAAK,MAAI,4CAA4C+D,KAAK/D,IAC9EmhC,GAAoB,SAAAnhC,GAAK,OAAK,wCAAuC+D,KAAK/D,IAC1EohC,GAAoB,SAAAphC,GAAK,OAAK,qCAAoC+D,KAAK/D,IACvEqhC,GAAoB,SAAArhC,GAAK,OAAK,6BAA6B+D,KAAK/D,IAChEshC,GAAoB,SAAAthC,GAAK,MAAI,mBAAmB+D,KAAK/D,IACrDuhC,GAAoB,SAAAvhC,GAAK,MAAI,gBAAgB+D,KAAK/D,IAClDwhC,GAAoB,SAACxhC,EAAO+R,GAAR,OAAoBA,EAAQ0vB,MAAM19B,KAAK/D,IAC3D0hC,GAAoB,SAAA1hC,GAAK,OAA4B,IAAxBA,EAAM8rB,OAAO3xB,QAC1CwnC,GAAoB,SAAA3hC,GAAK,MAAI,uBAAuB+D,KAAK/D,IACzD4hC,GAAoB,SAAA5hC,GAAK,MAAI,mBAAmB+D,KAAK/D,IAErD6hC,GAAgB,SAAC7hC,EAAO+R,GAAR,OAAoB/R,IAAUiN,0BAAe8E,EAAQvQ,GAAGwhB,OAAO,IAAIhjB,OACnF8hC,GAAgB,SAAC9hC,EAAO+R,GAAR,OAAoB/R,IAAUiN,0BAAe8E,EAAQvQ,GAAGwhB,OAAO,IAAIhjB,OACnF+hC,GAAgB,SAAC/hC,EAAO+R,GAAR,OAAqBA,EAAQ8X,KAAM7pB,EAAM7F,QAAU4X,EAAQ8X,KAC3EmY,GAAgB,SAAChiC,EAAO+R,GAAR,QACjBA,EAAQ8X,KAAM7pB,EAAM7F,QAAU4X,EAAQ8X,QACtC9X,EAAQyR,KAAMxjB,EAAM7F,QAAU4X,EAAQyR,MAGrCye,GAAc,SAACjiC,EAAOkiC,GACxB,IAAMnwB,EAAU6b,uBAAYsU,GACxBjjC,EAAU,KACd,GAAI8S,EAAQowB,aAAgC,IAAjBniC,EAAM7F,OAC7B,OAAO,EAGX,IAAIioC,GAAQ,EAoCZ,MAnCI,QAASrwB,GAAkC,mBAAhBA,EAAQ8X,MACnC9X,EAAQ8X,IAAM9X,EAAQ8X,OAEtB,QAAS9X,GAAkC,mBAAhBA,EAAQyR,MACnCzR,EAAQyR,IAAMzR,EAAQyR,SAGH,UAAjBzR,EAAQtU,KAAmB,gBAAkB,SAASsG,KAAK/D,IAAUkpB,MAAMlpB,IAC7EoiC,GAAU,EACVnjC,EAAUkG,mBAAS,8BACK,UAAjB4M,EAAQtU,MAAoBsU,EAAQ6W,WACzC,IAAI/S,OAAJ,yBAA6B9D,EAAQ6W,SAArC,SAAqD7kB,KAAK/D,IAC5DoiC,GAAU,EACVnjC,EAAUkG,mBAAS,sDAAuD,CAAEk9B,cAAetwB,EAAQ6W,YAC5F,QAAS7W,GAAW,QAASA,IAAYA,EAAQ8X,MAAS9X,EAAQyR,MAAQxjB,IAAW+R,EAAQ8X,KACpGuY,GAAU,EACVnjC,EAAUkG,mBAAS,sBAAuB,CAAEnF,MAAOgnB,oBAASjV,EAAQ8X,IAAK9X,EAAQuwB,aAAe5a,4BAAiB6a,KAAO3iC,IAAI,kBAAelE,MACpI,QAASqW,GAAW,QAASA,KAAa/R,GAAS+R,EAAQ8X,KAAO2Y,GAAcxiC,EAAO+R,KAC9FqwB,GAAU,EACVnjC,EAAUkG,mBACN,oDACA,CACIs9B,UAAWzb,oBAASjV,EAAQ8X,IAAK9X,EAAQuwB,aAAe5a,4BAAiB6a,KAAO3iC,IAAI,kBAAelE,GACnGgnC,UAAW1b,oBAASjV,EAAQyR,IAAKzR,EAAQuwB,aAAe5a,4BAAiB6a,KAAO3iC,IAAI,kBAAelE,MAGpG,QAASqW,IAAY/R,GAAS+R,EAAQ8X,KAC7CuY,GAAU,EACVnjC,EAAUkG,mBAAS,oCAAqC,CAAEs9B,UAAWzb,oBAASjV,EAAQ8X,IAAK9X,EAAQuwB,aAAe5a,4BAAiB6a,KAAO3iC,IAAI,kBAAelE,MACtJ,QAASqW,GAAWywB,GAAcxiC,EAAO+R,KAChDqwB,GAAU,EACVnjC,EAAUkG,mBAAS,oCAAqC,CAAEu9B,UAAW1b,oBAASjV,EAAQyR,IAAKzR,EAAQuwB,aAAe5a,4BAAiB6a,KAAO3iC,IAAI,kBAAelE,MAGjKinC,KAAkB72B,OAAO7M,QAAUA,EAC5BmjC,GAGLI,GAAgB,SAACxiC,EAAO+R,GAAR,MACA,UAAjBA,EAAQtU,MAAoBuC,GAAS+R,EAAQyR,IAAoD,IAA9CP,iCAAsBjjB,EAAO+R,EAAQyR,MAuBhFmf,GAAkB,WAI3B,OAHK5D,KACDA,GAvBwB,CAC5B6D,QAAe,CAAE9gC,KAAMu/B,GAAmBpiC,QAASkG,mBAAS,mGAAoG,CAAE09B,qBAAsB,2BACxLC,QAAe,CAAEhhC,KAAM8/B,GAAmB3iC,QAASkG,mBAAS,kFAAmF,CAAE09B,qBAAsB,WACvKE,QAAe,CAAEjhC,KAAM+/B,GAAmB5iC,QAASkG,mBAAS,qDAC5DZ,MAAe,CAAEzC,KAAMm/B,GAAmBhiC,QAASkG,mBAAS,2BAC5D69B,QAAe,CAAElhC,KAAMs/B,GAAmBniC,QAASkG,mBAAS,8EAC5DhL,OAAe,CAAE2H,KAAMkgC,GAAmB/iC,QAASkG,mBAAS,yCAA0C,CAAEnF,MAAO,eAC/GijC,cAAe,CAAEnhC,KAAMq/B,GAAmBliC,QAASkG,mBAAS,qEAC5D0kB,IAAe,CAAE/nB,KAAMigC,GAAmB9iC,QAASkG,mBAAS,4CAA6C,CAAEnF,MAAO,eAClHkjC,UAAe,CAAEphC,KAAMggC,GAAmB7iC,QAASkG,mBAAS,sDAAuD,CAAEg+B,UAAW,gBAAiBC,UAAW,mBAC5Jt3B,OAAe,CAAEhK,KAAMmgC,GAAmBhjC,QAAS,IACnDokC,SAAe,CAAEvhC,KAAMo/B,GAAmBjiC,QAASkG,mBAAS,mEAC5Dm+B,MAAe,CAAExhC,KAAMy/B,GAAmBtiC,QAASkG,mBAAS,yCAC5Do+B,SAAe,CAAEzhC,KAAMw/B,GAAmBriC,QAASkG,mBAAS,0DAC5Dq+B,QAAe,CAAE1hC,KAAM0/B,GAAmBviC,QAAS,IACnDgzB,IAAe,CAAEnwB,KAAMk/B,GAAmB/hC,QAAS,IACnDwkC,aAAe,CAAE3hC,KAAM4/B,GAAmBziC,QAASkG,mBAAS,qCAC5Du+B,OAAe,CAAE5hC,KAAM6/B,GAAmB1iC,QAASkG,mBAAS,iFAQrD45B,I,2KC3EI4E,G,WAtCX,c,4FAAc,SACV1xB,KAAK2xB,OAAS,G,mDAGdC,EAAW5kC,GACNgT,KAAKiC,IAAI2vB,KACV5xB,KAAK2xB,OAAOC,GAAa,KAGoB,IAA7C5xB,KAAK2xB,OAAOC,GAAW3kB,QAAQjgB,IAC/BgT,KAAK2xB,OAAOC,GAAWppC,KAAKwE,K,4BAKhC,OAAOgT,KAAK2xB,S,4BAGVC,GACF,OAAI5xB,KAAKiC,IAAI2vB,GACF5xB,KAAK2xB,OAAOC,GAAW,GAE3B,O,0BAGPA,GACA,OAAI5xB,KAAKiC,IAAI2vB,GACF5xB,KAAK2xB,OAAOC,GAGhB,K,0BAGPA,GACA,OAAOzpC,OAAOC,UAAUC,eAAeC,KAAK0X,KAAK2xB,OAAQC,Q,2OCmElDC,G,WAjGX,WAAYC,EAAOC,GAAqB,IAAd5+B,EAAc,uDAAN,M,4FAAM,SACpC6M,KAAK8xB,MAASA,EACd9xB,KAAK+xB,MAASA,EACd/xB,KAAK7M,MAASA,EACd6M,KAAK2xB,OAAS,IAAI3lC,GAElBgU,KAAKgyB,YAAc,E,4DA8EFC,GACjB,IAAMC,EAAiC,iBAATD,EACxBE,EAAc,CAChBllC,KAASilC,EAAiBD,EAAOA,EAAK,GACtCnyB,QAASoyB,EAAiB,GAAKD,EAAK,IAAM,IAK9C,OAFAE,EAAYC,UAAiC,WAArBD,EAAYllC,KAAoBglC,EAAK,GAAGpiC,KAAO6gC,KAAkByB,EAAYllC,MAAM4C,KAEpGsiC,M,oCA9EAP,EAAWK,GAClB,IAAIjlC,EAAUilC,EAAKnyB,QAAQ9S,SAAW0jC,KAAkBuB,EAAKhlC,MAAMD,QACjD,WAAdilC,EAAKhlC,KACLD,EAAUqlC,oBAASrlC,EAAS,CAACilC,EAAKnyB,QAAQ8X,MAAQqa,EAAKnyB,QAAQyR,IAAM0gB,EAAKnyB,QAAQ8X,IAArD,UAA8Dqa,EAAKnyB,QAAQ8X,IAA3E,YAAkFqa,EAAKnyB,QAAQyR,OACvG,QAAd0gB,EAAKhlC,KACZD,EAAUqlC,oBAASrlC,EAAS,CAACilC,EAAKnyB,QAAQ8X,MACrB,cAAdqa,EAAKhlC,OACZD,EAAUqlC,oBAASrlC,EAAS,CAACilC,EAAKnyB,QAAQwyB,MAAOL,EAAKnyB,QAAQyyB,SAElEvyB,KAAK2xB,OAAOlrB,IAAImrB,EAAW5kC,GAC3BgT,KAAKgyB,gB,8BAQD,WAiCJ,OAhCA7pC,OAAO6Z,KAAKhC,KAAK8xB,OAAOtoC,SAAQ,SAAAooC,GACvBzpC,OAAOC,UAAUC,eAAeC,KAAK,EAAKypC,MAAOH,IAItD,EAAKG,MAAMH,GAAWpoC,SAAQ,SAAAyoC,GAC1B,IAAMO,EAAaX,EAAUY,cAAcR,IAEtCO,EAAWJ,WAA6C,mBAAzBI,EAAWJ,aAI3CI,EAAW1yB,QAAQ4yB,YAAcF,EAAW1yB,QAAQ4yB,UAAU,EAAKv/B,QAIzC,KAA1B,EAAK2+B,MAAMF,IAAyC,QAApBY,EAAWvlC,MAI9BulC,EAAWJ,UACxB,EAAKN,MAAMF,GACXY,EAAW1yB,QACX,EAAK3M,MACL,EAAK2+B,QAIL,EAAKa,WAAWf,EAAWY,WAI/BxyB,KAAKgyB,c,iCASb,OAAOhyB,KAAK4yB,a,u8CC/DCC,I,GAwQhBxhC,KAAOyhC,M,GA2BPzhC,KAAOyhC,M,GAQPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,iBAjRR,aAA0B,IAAdhzB,EAAc,uDAAJ,I,4FAAI,uFAf1BizB,sBAAwB,KAeE,KAd1BC,wBAA0B,KAcA,2CA0R1BC,QA1R0B,4BA0RhB,6HACAlgC,KAAaC,KAAb,MAAAD,KAAY,GADZ,2CA1RgB,IAElBywB,EAKA1jB,EALA0jB,WACA0P,EAIApzB,EAJAozB,yBACAC,EAGArzB,EAHAqzB,2BACAC,EAEAtzB,EAFAszB,iBACAC,EACAvzB,EADAuzB,WAmBJ,GAhBAlrC,OAAOsF,eAAeuS,KAAM,aAAc,CACtCtS,YAAY,EACZ4lC,UAAY,IAEhBnrC,OAAOsF,eAAeuS,KAAM,2BAA4B,CACpDtS,YAAY,EACZ4lC,UAAY,IAEhBnrC,OAAOsF,eAAeuS,KAAM,6BAA8B,CACtDtS,YAAY,EACZ4lC,UAAY,IAGqBJ,GAA4BA,EAAyBhrC,QACnFirC,GAA8BA,EAA2BjrC,OAE9B,CAC9B,IAAKmrC,EACD,MAAM,IAAIrnC,MAAM,oDAGpB7D,OAAOsF,eAAeuS,KAAM,aAAc,CACtCjS,MAAYslC,EACZ3lC,YAAY,EACZ4lC,UAAY,IAIpBtzB,KAAKwjB,WAA6BA,EAClCxjB,KAAKkzB,yBAA6BA,GAA4B,GAC9DlzB,KAAKmzB,2BAA6BA,GAA8B,GAChEnzB,KAAKuzB,mBAAmBH,GAExBpzB,KAAKwzB,+BACLxzB,KAAKyzB,iCACLzzB,KAAK0zB,sB,2DAUGC,GACR,IAAIC,EAAWC,aAAK7zB,MAapB,OAXKY,yBAAcZ,KAAKwjB,cACpBoQ,EAASpQ,WAAaxjB,KAAKwjB,YAG3BmQ,GAAcA,EAAWzrC,SACzB0rC,EAAWD,EAAWrrB,QAClB,SAACtf,EAAQuB,GAAT,OAAepC,OAAO0hB,OAAO7gB,EAAd,MAAyBuB,EAAIqpC,EAASrpC,OACrD,KAIDqpC,I,qDAQoB,WACvB5zB,KAAKkzB,yBAAyBhrC,QAC9B4rC,cACI,kBAAM,EAAKZ,yBAAyB/5B,KAAI,SAAAnR,GAAC,OAAI,EAAKA,SAClD,kBAAM,EAAK+rC,cAAc,EAAKb,yBAA0BL,EAAUmB,SAASC,oB,uDAUtD,WACzBj0B,KAAKmzB,2BAA2BjrC,QAChC4rC,cACI,kBAAM,EAAKX,2BAA2Bh6B,KAAI,SAAAnR,GAAC,OAAI,EAAKA,SACpD,kBAAM,EAAK+rC,cAAc,EAAKZ,2BAA4BN,EAAUmB,SAASE,sB,oCAY3EP,EAAYryB,GACtB,IAAMsyB,EAAW7yB,KAAKI,UAAUnB,KAAKm0B,YAAYR,IAAa,SAACtlC,EAAKN,GAChE,GAAc,OAAVA,EAAgB,OAAOA,KAI3BuT,IAAYuxB,EAAUmB,SAASC,cAC/B1wB,aAAarC,QAAQlB,KAAKqzB,WAAYO,GAC/BtyB,IAAYuxB,EAAUmB,SAASE,iBACtCxiC,eAAewP,QAAQlB,KAAKqzB,WAAYO,K,4CAS1B,WAIZA,E,kVAAW,CAAH,GAHmB7yB,KAAKC,MAAMuC,aAAa5R,QAAQqO,KAAKqzB,WAAY,KAGpE,GAFmBtyB,KAAKC,MAAMtP,eAAeC,QAAQqO,KAAKqzB,WAAY,MAIpFlrC,OAAO6Z,KAAK4xB,GAAUpqC,SAAQ,SAACoY,GAAD,OAAO,EAAKA,GAAKgyB,EAAShyB,Q,iDAWjCwyB,EAAcn8B,GAAU,WAK1C+H,KAAKq0B,kBAAkBD,KAJC,EAAKC,kBAAkBD,GAC/CzuB,QAAO,SAAA2uB,GAAC,OAAKr8B,EAASoQ,SAASisB,MAC/BlyB,OAAOnK,EAAS0N,QAAO,SAAA2uB,GAAC,OAAK,EAAKD,kBAAkBD,GAAc/rB,SAASisB,OAC3EpsC,SAED8X,KAAKq0B,kBAAkBD,GAAgBn8B,K,2CAWhB,WAAZ85B,EAAY,uDAAJ,GACvB5pC,OAAO6Z,KAAK+vB,GAAOvoC,SAAQ,SAAA6E,GACvB,EAAKkmC,QAAQlmC,EAAK0jC,EAAM1jC,S,8BAYxBI,EAAUsjC,GAAO,WACrB/xB,KAAKozB,iBAAiB3kC,GAAYsjC,EAElCyC,aAAUx0B,KAAMvR,GAAU,SAAAgmC,GAEtB,OADA,EAAKC,iBAAiBjmC,EAAUgmC,EAAOE,UAChCF,O,uCAYEhmC,EAAUV,GAAO,WACxB6mC,EAAmB50B,KAAKozB,iBAAiB3kC,GAAUmmC,QACnDC,EAAM,MAAgBpmC,OAAqBhF,IAAVsE,EAAsBA,EAAQiS,KAAKvR,IACpE2kC,EAAmB,GAAH,GAAM3kC,EAAYuR,KAAKozB,iBAAiB3kC,GAAUsjC,OAAS,IAE3E6C,GAAWzsC,OAAOE,eAAeC,KAAK0X,KAAM40B,KAC9CC,EAAOD,GAAqB50B,KAAK40B,GACjCxB,EAAiBwB,GAAW50B,KAAKozB,iBAAiBwB,GAAS7C,OAAS,IAGxE,IAAMK,EAAY,IAAIP,GAClBgD,EACAzB,EACApzB,MAGJoyB,EAAU0C,WAEV3sC,OAAO6Z,KAAK6yB,GAAQrrC,SAAQ,SAAA6E,GACxB,EAAK0mC,2BAA2B1mC,EAAK+jC,EAAUT,OAAOhkC,IAAIU,S,8CAS1C,WACd+kC,EAAoBjrC,OAAO6Z,KAAKhC,KAAKozB,kBACrCiB,EAAoBlsC,OAAO6Z,KAAKhC,KAAKq0B,mBAE3CjB,EAAiB5pC,SAAQ,SAAAe,GACrB,EAAKmqC,iBAAiBnqC,EAAG,EAAKA,OAIlC8pC,EAAkB7qC,SAAQ,SAAAmD,GACjBymC,EAAiB/qB,SAAS1b,WACpB,EAAK0nC,kBAAkB1nC,Q,sCAM1BqoC,GAAU,WACtBh1B,KAAK+yB,sBAAwBkC,cACzB,kBAAM,EAAKzR,WAAWpwB,OAAO8hC,mBADA,4BAE7B,iHAEclsC,EAAS,EAAKgqC,6BACNhqC,EAAOoD,MAA+B,mBAAhBpD,EAAOoD,KAHnD,gBAIYpD,EAAOoD,MAAK,WACR,EAAKo3B,WAAWpwB,OAAO+hC,kBACvB,EAAKC,gBAAgB,EAAKpC,4BAN1C,4BASkB,IAAIhnC,MAAM,iEAT5B,uDAca6U,2BACDlS,QAAQhC,MAAR,MAfZ,0DAoBJqT,KAAKgzB,wBAA0BgC,I,6CAKW,mBAA/Bh1B,KAAK+yB,uBACZ/yB,KAAK+yB,wBAET/yB,KAAKgzB,wBAA0B,O,kCAK/BhzB,KAAKq1B,yB,0CAIWpjC,GAEhB,GAAI+N,KAAKwjB,WAAWpwB,OAAOnB,UAAYA,EAAS,4BAFpBqjC,EAEoB,iCAFpBA,EAEoB,kBAC5CA,EAAU9rC,SAAQ,SAAA+rC,GAAG,OAAIA,OACzBv1B,KAAKw1B,oBAAqB,Q,qCAhT3BxB,SAAW7rC,OAAOstC,OAAO,CAC5BxB,cAAiBpmC,OAAO,iBACxBqmC,gBAAiBrmC,OAAO,qB,6CAG3B6nC,M,wEACmB,M,uCAEnBA,M,wEACkB,M,yCAKlBA,M,yEAAgC,K,uCAuIhCrkC,M,gIAiBAA,M,+HAiBAA,M,4GAcAA,M,0GAiBAA,M,wHA4BAA,M,2qBCrQE,I,mvDCsBP,I,mDACqBskC,I,GA0IhBtkC,KAAOyhC,M,GAQPzhC,KAAOyhC,M,GA2BPzhC,KAAOyhC,M,GAOPzhC,KAAOyhC,M,GAYPzhC,KAAOyhC,M,GAYPzhC,KAAOyhC,M,GAqBPzhC,KAAOyhC,M,GAMPzhC,KAAOyhC,M,GAUPzhC,KAAOyhC,M,GA+BPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAuDPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAqCPzhC,KAAOyhC,M,GASPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAMPzhC,KAAOyhC,M,GAoBPzhC,KAAOyhC,M,GAgEPzhC,KAAOyhC,M,GAkCPzhC,KAAOyhC,M,GAYPzhC,KAAOyhC,M,sBA7gBR,WAAYtP,GAAY,M,IAAA,O,4FAAA,S,EACpB,KADoB,GACpB,I,EAAA,gBAAM,CAAEA,iB,+CADY,oX,sTA6HAvxB,GACpB+N,KAAKjM,SAAS9B,GAASmC,aAAe,EACtCkP,cAAWrC,UA9IC,kBA8IsBjB,KAAKjM,UACvCuP,cAAW9B,IAAI,iBAAkBvP,GACjC+N,KAAK/N,QAAUA,I,4CAIG,IAGdzG,EACAqhB,EAJc,OACZC,EAAgC/a,SAAMmQ,YAAY,2CACpD6K,GAAkC,EAgBtC,OAbKD,GAAiC,IAAI5kB,SACtC6kB,GACgE,IAD7CD,EAA8BG,QAC7CjN,KAAKjM,SAASiM,KAAK/N,SAASs8B,4BAKhC1hB,EAJmB,sCAAIK,EAAJ,yBAAIA,EAAJ,uBAA0BA,EAAkB1I,MAAK,SAAA2I,GAAe,OAC/EA,IAAoB,EAAKpZ,SAAS,EAAK9B,SAASs8B,4BACY,IAA5DzhB,EAA8BG,QAAQE,MAEvBC,CAAW,MAAO,MAAO,QAAS,kBAEjD5hB,EAA0B,gBAAnBqhB,EAAmC,YAAc,SAIzD,CACHrhB,OACA6hB,cAAeR,EACfA,iBACAE,oB,+CAKiBxb,GACrB,IDtMkD,EAChDqkC,EACAC,ECoMInwB,EAAOnU,EAASkB,mBAAqBlB,EAC3CyO,KAAK81B,iBDtMHF,EAAS,GACTC,EAAS,GCqMgCnwB,EDnM7Blc,SAAQ,SAACusC,GACvB,IAAMC,EAAWzsB,4BAAiBwsB,IACjCC,EAAWH,EAASD,GAAMptC,KAAK,CAAEkoB,KAAMqlB,EAAKhoC,MAAOgoC,EAAKE,YAAaD,OAG1E,QACK9iC,mBAAS,QAAY0iC,GAD1B,KAEK1iC,mBAAS,UAAY2iC,GAF1B,GC+LI71B,KAAKk2B,eAAe,M,wCAIN3kC,GACdyO,KAAKjM,SAASiM,KAAK/N,SAASK,MAA4Bf,EAASS,UAAUM,MAC3E0N,KAAKjM,SAASiM,KAAK/N,SAASkC,SAA4B5C,EAASS,UAAUmC,SAC3E6L,KAAKjM,SAASiM,KAAK/N,SAAS+B,YAA6BzC,EAASS,UAAUgC,WAC5EgM,KAAKjM,SAASiM,KAAK/N,SAASkkC,cAA4BzqB,SAASpC,MAAS2b,MAAMtZ,UAAY,KAC5F3L,KAAKjM,SAASiM,KAAK/N,SAASs8B,0BAA4Bh9B,EAASS,UAAU4Z,qBAC3E5L,KAAKoJ,kBAAkB7X,EAASS,UAAUiY,cAC1CjK,KAAKo2B,aAAep2B,KAAK4M,sBACzB5M,KAAKq2B,QAAe9kC,EAASS,UAAUqkC,U,uCAI1B9kC,GACbyO,KAAK1L,eAAiB/C,EAAS+C,eAC/BijB,yBAAcvX,KAAK1L,kB,wCAUL2V,GAAc,WAC5BA,EAAazgB,SAAQ,SAAC0gB,GACd,EAAKnW,SAASmW,EAAQjY,WACtB,EAAK8B,SAASmW,EAAQjY,SAASkY,eAAiBD,EAAQC,gBAAkB,GAC1EhiB,OAAO6Z,KAAKkI,GAAS1gB,SAAQ,SAAC4gB,GAC1B,IAAMC,EAAyB,YAAVD,EAAsB,YAAcA,EACnDE,OAAyC,IAAnBJ,EAAQE,GAAyB,GAAKF,EAAQE,GACrD,YAAjBC,IACA,EAAKtW,SAASmW,EAAQjY,SAASoY,GAAgBC,Y,oCAarDrY,GACV+N,KAAKwjB,WAAW1tB,GAAGwgC,yBACnBt2B,KAAKu2B,YAAYtkC,K,wCAKjB+N,KAAKk1B,kBAAmB,EACxBl1B,KAAKwjB,WAAW1tB,GAAG6tB,gBAAiB,I,6KASH3jB,KAAKw2B,e,UAAhCC,E,OACNz2B,KAAK02B,WAAWpzB,cAAW3V,IAAI,mBAC/BqS,KAAK22B,YAAYrzB,cAAWxC,UAtPhB,oBAuPZd,KAAKu2B,YAAY,IACXnjC,EAAS4M,KAAKjM,SAASiM,KAAK/N,UAG9BwkC,E,oBAEIz2B,KAAK/N,UAAYwkC,EAAmBzkC,UAAUC,Q,iBAC9CzB,KAAoBD,iBAAiBkmC,G,yCAE/B1jC,KAAakd,KAAK,CAAEje,UAAWoB,EAAO8Y,OAAS,CAAExY,QAAQ,I,eAInEN,IAAWA,EAAOY,YAClBjB,KAAaC,KAAK,kBAAmB,kBAAkB5G,MAAK,WACxD0hC,GAA0B16B,EAAQ,EAAKowB,WAAW1tB,GAAGi4B,gBAAiB,EAAK97B,YAInF+N,KAAKk2B,eAAe,I,KAEpBl2B,K,UAAoCjP,KAAG6C,mB,yBAAlCpB,yB,gBAELwN,KAAK42B,oB,+HAIE3kC,GACP+N,KAAK/N,QAAUA,I,kCAIP8B,GACRiM,KAAKjM,SAAWA,I,kCAIR8iC,GACR72B,KAAK62B,SAAWA,I,mCASe,IAAxB5kC,EAAwB,uDAAd+N,KAAK/N,QACtB,OAAO+N,KAAK82B,WAAW7kC,GAASmO,c,iCASH,IAAxBnO,EAAwB,uDAAd+N,KAAK/N,QACpB,OAAO+N,KAAK82B,WAAW7kC,GAASia,Q,mCASD,IAAxBja,EAAwB,uDAAd+N,KAAK/N,QACtB,OAAO+N,KAAKjM,SAAS9B,K,uCASc,IAAxBA,EAAwB,uDAAd+N,KAAK/N,QACpBiY,EAAelK,KAAK82B,WAAW7kC,GAC/BkC,EAAe+V,EAAQ/V,SACvBH,EAAekW,EAAQlW,WACvBoX,GAAgBpX,GAAcG,EAAWA,EAAWqX,2BAAgBvZ,GAE1E,MAAO,CACHA,UACA+B,aACAwM,KAAO4K,EAAa5S,cACpBlD,MAAsC,YAA/B8V,EAAa5S,cAA8BtF,mBAAS,QAAUkY,K,+CAMzEpL,KAAKk1B,kBAAmB,I,4KAKnBl1B,KAAK62B,UAAa72B,KAAK62B,SAAS3uC,QAAW8X,KAAK82B,WAAW92B,KAAK62B,UAAU3qB,M,oBAEtElM,KAAK+2B,aAAa5/B,MAAK,SAAAyS,GAAE,OAAIA,IAAO,EAAKitB,aAAa72B,KAAK62B,WAAa72B,KAAK/N,Q,uBAC9E+N,KAAKwjB,WAAW1tB,GAAGi4B,gBAAgB,CAC/B/gC,QAASkG,mBAAS,wCAClB1H,KAAS,WAGbsF,e,iCAOJkP,KAAKwjB,WAAW1tB,GAAGi4B,gBAAgB,CAC/B/gC,QAASkG,mBAAS,iCAClB1H,KAAS,SAIbwU,KAAKg3B,cAAch3B,KAAK+2B,aAAa,I,SAC/B/2B,KAAKi3B,uB,gDAGfvlC,eAAewP,QAAQ,aAAc,KAErClB,KAAKwjB,WAAWlwB,IAAI4jC,eACpBl3B,KAAKm3B,wBAAwBn3B,KAAK62B,UAClCrtB,W,UACMzW,KAAakd,KAAK,CAAE,UAAajQ,KAAKo3B,YAAc,CAAE1jC,QAAQ,I,yBAC9DsM,KAAK5O,O,QACX4O,KAAKq3B,yB,wIAIW,WAEhBpC,cACI,kBAAM,EAAK4B,WACX72B,KAAKi3B,wB,iCAKFnkC,GACPkN,KAAKjM,SAASiM,KAAK/N,SAASa,QAAUA,I,qCAI3B/E,GACXiS,KAAKs3B,kBAAoBvpC,I,mCAIhB4E,GACTqN,KAAKjM,SAASiM,KAAK/N,SAASU,UAAYA,I,+BAInCL,GACL0N,KAAKjM,SAASiM,KAAK/N,SAASK,MAAQA,EACpC0N,KAAK1N,MAAQA,I,gCAIP,WAQN,OAPA0N,KAAKwjB,WAAWlwB,IAAI+E,cAAc,CAAE1M,MAAO,YAC3CqU,KAAK/N,QAAU,KACf+N,KAAKo2B,kBAAe3sC,EACpBuW,KAAKjM,SAAW,GAChBiM,KAAK81B,gBAAmB,GACxB91B,KAAKs3B,kBAAoB,GAElB,IAAIzsC,QAAJ,6CAAY,WAAOC,GAAP,4FAMRA,EANQ,SAMM,EAAK04B,WAAW1tB,GAAGwgC,yBANzB,uGAAZ,yD,0CAYSiB,EAAYttB,GAG5B,IAKIutB,EALEC,EAAY,CACd3jC,QAAsB,YACtB8X,qBAAsB,6BAEpBhD,EAAgB,GAGlB8uB,GAAkB,EAEtBztB,EAAazgB,SAAQ,SAAS0gB,GACrB,gBAAgBpY,KAAKoY,EAAQ0B,wBAC9B8rB,GAAkB,MAI1BztB,EAAazgB,SAAQ,SAAS0gB,GAC1B/hB,OAAO6Z,KAAKkI,GAAS1gB,SAAQ,SAAS4gB,GAClC,GAAc,YAAVA,EACKotB,GAAmBttB,EAAQ9J,cACxBs3B,IAAoBxtB,EAAQlW,WAC5BwjC,EAAiBttB,EAAQE,GAClBF,EAAQlW,aACfwjC,EAAiBttB,EAAQE,SAG9B,CACH,IAAMC,EAAeotB,EAAUrtB,IAAUA,EACnCE,OAAyC,IAAnBJ,EAAQE,GAAyB,GAAKF,EAAQE,GACpEF,EAAQjY,WAAW2W,IACrBA,EAAcsB,EAAQjY,SAAW,IAErC2W,EAAcsB,EAAQjY,SAASoY,GAAgBC,SAM3D,IADA,IAAItiB,EAAI,EACDuvC,EAAW,OAAD,OAAUvvC,KAAM,CAC7B,IAAMiK,EAAUslC,EAAW,OAAD,OAAUvvC,IAC9BkkB,EAAUqrB,EAAW,QAAD,OAAWvvC,IACjCiK,GAAWia,IACXtD,EAAc3W,GAASia,MAAQA,GAEnClkB,IAKCwvC,GAAmB5uB,EAAc4uB,GAAgBtrB,QAClDsrB,EAAiBD,EAAWI,OAK5BH,GAAkBrvC,OAAO6Z,KAAK4G,GAAe1gB,SAC7Cqb,aAAarC,QAAQ,iBAAkBs2B,GACvCj0B,aAAarC,QAAQ,kBAAmBH,KAAKI,UAAUyH,O,wKAMrD2uB,EAAa,GACA1oC,OAAO4F,SAASW,QAEZvG,OAAO4F,SAASW,OAAO2b,OAAO,GAAG5O,MAAM,KAC/C3Y,SAAQ,SAAS4gB,GACxB,GAAIA,EAAO,CACP,IAAMwtB,EAAcxtB,EAAMjI,MAAM,KAC5By1B,IACAL,EAAWK,EAAY,IAAMA,EAAY,SAK5BL,EAAWM,O,wBAGpChpC,OAAOgG,QAAQQ,aAAa,GAAI1L,SAAS2L,MAAO,KAGhD0K,KAAK9N,4BAA6B,E,SACDa,KAAakd,KAAK,CAAEje,UAAWulC,EAAWM,S,cAArEpB,E,OACNz2B,KAAK9N,4BAA6B,EAClC4lC,cAAY,WACR,IAAM7tB,GAAgBwsB,EAAmBzkC,WAAa,IAAIiY,aACtDA,IAAiB,EAAKlW,UACtB,EAAKgkC,oBAAoBR,EAAYttB,M,kBAGtCwsB,G,wIAKKxqC,GAChB+T,KAAK2d,kBAAoB1xB,EACrBA,EACAqX,cAAW9B,IAAI,oBAAqBvV,GAEpCqX,cAAW7B,OAAO,uB,kCAOQ,IAAvB2vB,EAAuB,EAAvBA,SAAUz+B,EAAa,EAAbA,UACZqN,KAAK2d,mBAAsByT,GAAaz+B,GAI7C5B,KAAGutB,kBAAkBte,KAAK2d,kBAAmByT,EAAUz+B,GAAWvG,MAAK,SAAAmF,GAAQ,OAAI5C,QAAQsuB,IAAI1rB,Q,2CAG9E,WACjBR,KAAGquB,gBAAgBhzB,MAAK,SAAAmF,GACpBumC,cAAY,WACR,EAAKzY,eAAiB9tB,EAAS8tB,gBAAkB,W,8BAnhBzD,OAAKrf,KAAKjM,UACFiM,KAAKjM,SAASiM,KAAK/N,UAAY+N,KAAKjM,SAASiM,KAAK/N,SAASa,QAC/DkN,KAAKjM,SAASiM,KAAK/N,SAASa,QAAQuiB,WAFb,K,iDAa3B,QACKrV,KAAKrH,eAAgBqH,KAAKhM,YAAwE,QAA1DgM,KAAKjM,SAASiM,KAAK/N,SAASs8B,6B,mCAK1D,WACf,OAAOvuB,KAAK+2B,aAAa59B,KAAI,SAAAyQ,GAAE,OAC1B,EAAKouB,WAAWpuB,IACjB,EAAKwtB,SAASxtB,GACV,EAAKquB,eAAeruB,QACpBngB,KACLkc,QAAO,SAAAuE,GAAO,OAAIA,O,sCAKrB,OAAOlK,KAAKjM,oBAAoB5L,OAC1BA,OAAO4P,OAAOiI,KAAKjM,UAAU4R,QAAO,SAAAuE,GAAO,OAAKA,EAAQ9J,eACxD,K,mCAKN,OAAOJ,KAAKjM,oBAAoB5L,OAASA,OAAO6Z,KAAKhC,KAAKjM,UAAY,K,oCAKtE,OAAOyX,2BAAgBxL,KAAK/N,W,+BAK5B,OAAI+N,KAAKs3B,kBAAkBpvC,OAChB8X,KAAKs3B,kBACLt3B,KAAKrH,aACLqH,KAAKjM,SAASiM,KAAK/N,SAASkC,SAEhC6L,KAAKk4B,mB,uCAMZ,GAAI/vC,OAAO6Z,KAAKhC,KAAK81B,iBAAiB5tC,OAAS,EAAG,CAC9C,IAAM8Z,EAAO7Z,OAAO6Z,KAAKhC,KAAK81B,iBAC9B,OAAO3tC,OAAO4P,OAAOiI,KAAK81B,gBAAL,UAAwB9zB,EAAK,MAAO,GAAG0O,KAC9D,MAAO,Q,qCAKT,IAAK1Q,KAAKrH,aAAc,OAAO,EAC/B,IAAMw/B,EAAwB,IAAIv0B,OAAO,kCAAmC,KAC5E,OAAO5D,KAAK+2B,aAAa7rB,OAAM,SAAAtB,GAAE,OAAIuuB,EAAsBrmC,KAAK8X,Q,mCAKhE,SACI5J,KAAKjM,oBAAoB5L,QACzBA,OAAO6Z,KAAKhC,KAAKjM,UAAU7L,OAAS,GACpC8X,KAAK/N,SACL+N,KAAKjM,SAASiM,KAAK/N,SAASia,S,iCAMhC,OAAOlM,KAAKjM,UAAYiM,KAAKjM,SAASiM,KAAK/N,YAAc+N,KAAKjM,SAASiM,KAAK/N,SAAS+B,a,kCAKrF,OAAOgM,KAAKo2B,eAAiBp2B,KAAKo2B,aAAa/oB,aAAerN,KAAKo2B,aAAarpB,kB,qCAKhF,OAAO/M,KAAKo2B,cAAiBp2B,KAAKo2B,aAAavpB,iB,8CAIrB,WAC1B,OAAO7M,KAAK+2B,aACPvyB,MAAK,SAAAvS,GAAO,QAAM,EAAK8B,SAAS9B,GAAS+B,gB,yCAIzB,WACrB,OAC4C,IADrC7L,OAAO6Z,KAAKhC,KAAK81B,iBAAiB38B,KAAI,SAAA3N,GAAI,OAAIrD,OAAO4P,OAAO,EAAK+9B,gBAAgBtqC,IAAOtD,UAC1FogB,QAAO,SAAC8vB,EAAKrC,GAAN,OAAcqC,EAAMrC,IAAK,K,mCAKrC,OC3J6B9jC,ED2JD+N,KAAK/N,QCzJjC,MAAMH,KAAKG,GAAmBmZ,EAAe,UACxC,MAAMtZ,KAAKG,GAAcmZ,EAAe,YACxC,UAAUtZ,KAAKG,KAAUmZ,EAAe,UAC1CA,EALyB,IAACnZ,EAC7BmZ,I,8CDgOA,OAAOpL,KAAK1L,gBAC4B,OAApC0L,KAAK1L,eAAeC,iB,gCAzMSs+B,K,qBACpC6C,M,iGACAA,M,6FACAA,M,0FACAA,M,6FACAA,M,wEAAwC,M,uCACxCA,M,yEAAwC,K,sCACxCA,M,wEAAwC,M,qCACxCA,M,wEAAwC,M,wCACxCA,M,wEAAwC,M,iDACxCA,M,yEAAwC,K,qCACxCA,M,wEAAwC,M,wCACxCA,M,wEAAwC,M,2BAMxC2C,M,oHAaAA,M,yHAOAA,M,8GAUAA,M,8GAOAA,M,4GAKAA,M,wGAKAA,M,2GAWAA,M,iHAQAA,M,6GAOAA,M,yGAUAA,M,wGAKAA,M,4GAKAA,M,wHAKAA,M,4HAMAA,M,iHAMAA,M,+uBAsEAA,M,g4HEzNgBC,I,GAmBhBjnC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAWPzhC,KAAOyhC,M,GAePzhC,KAAOyhC,M,GAYPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,s6BA/CUyF,GACdv4B,KAAKu4B,iBAAmBA,I,uCAIX9rB,EAAQof,GACjB7rB,KAAK0O,eAAL,OACA1O,KAAK0O,eAAL,MAA8BjC,EAAM,MACpCzM,KAAK0O,eAAee,QAAUhD,EAAOgD,SAErCzP,KAAK0O,eAAiBjC,EAE1BzM,KAAKw4B,kBAAoB3M,I,+BAIpBhF,EAAWl6B,GAChBqT,KAAK6mB,UAAYA,EACjB7mB,KAAKrT,M,kVAAL,EACInB,KAAMmB,EAAQA,EAAMnB,KAAO,QACvBmB,GAAS,CACTkL,OAAqBlL,EAAMkL,OAC3B7K,QAAqBL,EAAMK,QAC3BuM,eAAqB5M,EAAM4M,eAC3BmY,gBAAqB/kB,EAAM+kB,gBAC3BC,oBAAqBhlB,EAAMglB,wB,gCAM7B3kB,EAAS6K,EAAQ0B,EAAgBmY,EAAiBC,GACxD3R,KAAK/M,UAAS,EAAM,CAChB4E,SACA7K,UACAuM,iBACAmY,kBACAC,sBACAnmB,KAAM,Y,oCAKAitC,GACVz4B,KAAKy4B,YAAcA,I,qCAIRC,GACX14B,KAAK04B,aAAeA,O,gCArEa7F,K,yBACpC6C,M,yEAA8BpsB,IAAO2b,S,uCACrCyQ,M,yEAA8BztB,Q,gCAC9BytB,M,yEAA8B,K,4BAE9BA,M,wEAAmB,CAChBlqC,KAAS,OACTwB,QAAS,O,qCAGZ0oC,M,wEAA+B,M,wCAC/BA,M,yEAA+B,K,uCAC/BA,M,yEAA+B,K,qCAE/BA,M,wEAA4B,M,kCAE5BA,M,wEAAyB,M,mCACzBA,M,wEAA0B,M,+8FCVViD,I,GAkChBtnC,KAAOyhC,M,GAUPzhC,KAAOyhC,M,GAYPzhC,KAAOyhC,M,GAyCPzhC,KAAOyhC,M,GAyCPzhC,KAAOyhC,M,GAkDPzhC,KAAOyhC,M,mBAzLR,WAAYtP,GAAY,a,4FAAA,UACpB,0BAAM,CAAEA,iBAHZoV,kBAAoB,kBAAkB9mC,KAAK+mC,uBAKvC,EAAKzD,gBAAgB,EAAK0D,yBAHN,E,oTAgCE,WACtB,OAAO,IAAIjuC,QAAJ,6CAAY,WAAOC,GAAP,yGAAmBA,EAAQ,EAAKuN,cAAc,CAAE1M,MAAO,qBAAvD,2CAAZ,yD,qEASSlE,G,2FACZuY,KAAK44B,oBAAsBhoC,2BAC3BmC,KAAaC,KAAK,aAAa5G,MAAK,WAChC2sC,UAAUvwC,KAAV,MACO,EAAKwwC,iBADZ,GAEOvxC,O,qIAOFwxC,GACb,IAAMxxC,EAAO,CACTkE,MAAU,eACVutC,OAAU,MACVC,SAAU,CACN1iB,OAAewiB,EAAcxiB,OAC7B2iB,SAAeH,EAAcpI,QAC7BwI,SAAeJ,EAAcI,SAC7BC,MAAeL,EAAcK,MAC7BC,UAAeN,EAAcM,UAC7BC,cAAeP,EAAcO,cAC7BrlC,SAAe8kC,EAAc9kC,SAC7BslC,YAAeR,EAAcQ,YAC7BC,WAAeT,EAAcS,WAC7B1T,SAAeiT,EAAcjT,SAC7B2T,cAAeV,EAAcU,cAC7BC,OAAeX,EAAcW,OAC7B/b,OAAeob,EAAcpb,QAEjCgc,SAAU,CACNC,MAAkB95B,KAAKwjB,WAAW1tB,GAAG2uB,gBAAkB,OAAS,QAChEsV,iBAAkB/5B,KAAKwjB,WAAW1tB,GAAG+tB,uBAAyB,OAAS,SAEvEmW,MAAkB,CACdC,iBAAkBj6B,KAAKwjB,WAAW1tB,GAAGokC,wBAA0B,SAAW,OAC1EC,iBAAkBn6B,KAAKwjB,WAAW1tB,GAAGskC,4BAA8B,UAAY,SAC/EC,WAAkBr6B,KAAKwjB,WAAW/6B,QAAQ6xC,YAAYD,WACtDE,YAAkBv6B,KAAKwjB,WAAW/6B,QAAQ6xC,YAAYC,eAIlEv6B,KAAK3H,cAAc5Q,K,0CAUH8J,GAA2B,IAAjBipC,EAAiB,uDAAJ,GACvC,GAAKx6B,KAAK44B,oBAAqB54B,KAAKwjB,WAAWpwB,OAAOY,YACjDzC,EAASivB,aAAgBjvB,EAASivB,YAAYnvB,QAC9C,CAAC,UAAW,cAAcgX,SAAS9W,EAASivB,YAAYnvB,QAA7D,CAEA,IAAMopC,EAAcvV,IACdwV,EAAc,mBAGhBC,EAAmB55B,KAAKC,MAAMuC,aAAa5R,QAAQ+oC,KAAiB,GACpEvyC,OAAOC,UAAUC,eAAeC,KAAKqyC,EAAkB,cACnDF,EAAWG,QAAQ9V,EAAc6V,EAAiBE,WAAY,SAC9Dt3B,aAAa1R,WAAW6oC,GACxBC,EAAmB,CAAEE,UAAWJ,EAAWzV,SAGnD,IAAM8V,EAAmBH,EAAiBrsB,cAAgB,GAC1D,IAAKwsB,EAAiBzyB,SAAS9W,EAASivB,YAAYua,gBAAiB,CACjE,IAAMtzC,EAAO,CACTkE,MAAkB,cAClBqvC,iBAAkBh7B,KAAKwjB,WAAWpwB,OAAOgY,aACzC6vB,UAAkBR,EAAWzV,OAC7BxE,YAAkB,CACd5W,GAAQrY,EAASivB,YAAYua,eAC7BvvC,KAAQ+F,EAASivB,YAAYnvB,OAC7Bo0B,KAAQl0B,EAASivB,YAAY0a,iBAC7BzkB,OAAQllB,EAASivB,YAAY/J,SAGrCtuB,OAAO0hB,OAAOpiB,EAAM+yC,GACpBx6B,KAAK3H,cAAc5Q,GAEnBqzC,EAAiBtyC,KAAK+I,EAASivB,YAAYua,gBAC3CJ,EAAiBrsB,aAAewsB,EAChCH,EAAiBE,UAAeF,EAAiBE,WAAaJ,EAAWzV,OAEzEzhB,aAAarC,QAAQw5B,EAAa35B,KAAKI,UAAUw5B,Q,mCAK5CxoC,GAAc,WACvB,GAAK6N,KAAK44B,kBAAV,CAEA,IAAMuC,EAAoB53B,aAAa5R,QAAQ,aACzCypC,EAAgE,MAA5C73B,aAAa5R,QAAQ,mBAE/C4R,aAAa1R,WAAW,aACxB0R,aAAa1R,WAAW,mBAExB,IAAMwpC,EAAkB16B,WAAgB,sBACpC06B,GACAr7B,KAAK3H,cAAc,CAAEgjC,gBAAiBA,EAAgBrtC,IAI1D,IAAMysC,EAAavV,IACbz9B,EAAO,CACT6zC,UAAgBt7B,KAAKs7B,UACrBlwB,aAAgBpL,KAAKwjB,WAAWpwB,OAAOgY,aACvCjX,SAAgB6L,KAAKwjB,WAAWpwB,OAAOe,SACvCL,QAAgB3B,EAAa2B,QAC7BynC,eAAgBppC,EAAaC,aAC7BE,MAAgBH,EAAaG,MAC7BsnB,IAAgB/qB,OAAO4F,SAASxK,KAChCuxC,MAAgBf,EAAWzV,QAG3BoW,IACA3zC,EAAKkE,MAAQ,cACblE,EAAKg0C,gBAAkBh0C,EAAKwzC,WAG5BE,GACA1zC,EAAKkE,MAAQwvC,EACbpoC,KAAaC,KAAK,kBAAkB5G,MAAK,SAACmF,IACrCA,EAAS0c,gBAAkB,IAAIzkB,SAAQ,SAACqY,GACrC,IFnLa8K,EEmLP+uB,GFnLO/uB,EEmLuB9K,EAAI8K,OFnLjBA,EAAQA,EAAMlU,QAAQ,KAAM,KAAKA,QAAQ,wBAAyB,IAAM,KEmL7C,IAC7CA,QAAQ,eAAgB,aAAaA,QAAQ,WAAY,IAAIA,QAAQ,MAAO,UAC7EijC,IACAj0C,EAAK,OAAD,OAAQi0C,EAAR,QAAyB75B,EAAI85B,UAGzC,EAAKtjC,cAAc5Q,OAGvBuY,KAAK3H,cAAc5Q,M,mCAKdm0C,GACL57B,KAAK44B,mBACLr1B,aAAarC,QAAQ,YAAa06B,K,gCApLtC,OAAO57B,KAAKwjB,WAAWpwB,OAAOnB,U,uCAU9B,WACIgiB,SAAUhB,kBACPjT,KAAKwjB,WAAWpwB,OAAOuF,cAAgB,CACtC2iC,UAAWt7B,KAAKs7B,UAChBnnC,SAAW6L,KAAKwjB,WAAWpwB,OAAOe,SAClC0nC,OAAW77B,KAAKwjB,WAAWpwB,OAAOijC,SAL1C,GAOOr2B,KAAKwjB,WAAW1tB,GAAG2uB,iBAAmB,CACrCqV,MAAO95B,KAAKwjB,WAAW1tB,GAAG2uB,gBAAkB,OAAS,e,gCA7B/BoO,K,uBASjCwF,M,4GAUAA,M,m6EC1BgByD,I,GAsChBzqC,KAAOyhC,M,GA8CPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAcPzhC,KAAOyhC,M,GAQPzhC,KAAOyhC,M,GAOPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAaPzhC,KAAOyhC,M,GAgBPzhC,KAAOyhC,M,GAQPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAyBPzhC,KAAOyhC,M,sBAlLR,cAA4B,M,IAAdtP,EAAc,EAAdA,WAAc,O,4FAAA,S,EACxB,KADwB,GACxB,I,EAAA,gBAAM,CAAEA,iB,+CADgB,0PAd5BuY,WAAa,CACTC,QAAU,UACVC,SAAU,YAYc,EAT5BC,uBAAyB,KASG,EAP5BC,oBAAsB,CAClBH,QAAU,GACVC,SAAU,IAKc,EAF5BG,iCAE4B,EAGxB,EAAKhH,gBAAgB,EAAK0D,yBAHF,E,2UAOduD,EAAW1e,G,yFAChB,CAAC,UAAW,YAAYtV,SAASg0B,G,sBAC5B,IAAIrwC,MAAM,0E,UAEpBgU,KAAKs8B,gBAAgB,IACrBt8B,KAAKu8B,mBAAmB,GACxBv8B,KAAKw8B,YAAW,IAEZx8B,KAAKy8B,eAAeJ,IAAer8B,KAAK08B,mBAAmBL,G,uBAC3Dr8B,KAAK28B,oB,iCAIT38B,KAAK48B,mBAAkB,EAAO58B,KAAK+7B,WAAWM,IAE9Cr8B,KAAK68B,gBAAgB,GAAI78B,KAAK+7B,WAAWM,I,UACVtrC,KAAG2sB,QAAQ1d,KAAK+7B,WAAWM,GAAY1e,G,aAAhEmf,E,QAeenwC,M,iBACjBqT,KAAKw8B,YAAW,GAChBx8B,KAAKs8B,gBAAgBQ,EAAiBnwC,MAAMK,SACxC2wB,GAEA3d,KAAK+8B,oB,yCAGH/8B,KAAK28B,oB,QACX38B,KAAK68B,gBAAgBC,EAAiBpf,QAAS1d,KAAK+7B,WAAWM,IAC/Dr8B,KAAKg9B,qBAAqBX,G,yQAMxBr8B,KAAKi9B,QAAQ,W,wPAKnBpuC,OAAOgY,oBAAoB,UAAW7G,KAAKk9B,gBACvC3zB,4BAAiBvJ,KAAKwjB,WAAWpwB,OAAOe,WACxC6L,KAAKw8B,YAAW,GAChBx8B,KAAKu8B,mBAAmB,OAExBv8B,KAAKm9B,uBAAuBn9B,KAAKwjB,WAAW1tB,GAAGq1B,oBAC/CnrB,KAAK48B,mBAAkB,EAAM58B,KAAKwjB,WAAW1tB,GAAGq1B,qBAEhDt8B,OAAOwX,iBAAiB,UAAWrG,KAAKk9B,gBAAgB,G,kIAKjDvyC,GACXqV,KAAKw8B,YAAW,GAGhBx8B,KAAKu8B,oBAAoB5xC,EAAElD,MAAQuY,KAAKk8B,0B,sCAI5BtiB,EAAKyiB,GACbr8B,KAAKy8B,eAAeJ,KAAeziB,IACnC5Z,KAAKy8B,eAAeJ,GAAaziB,K,yCAKtBmK,GACf/jB,KAAKo9B,iBAAmBrZ,I,sCAIZ/2B,GACZgT,KAAKq9B,cAAgBrwC,I,iCAIdo3B,GACPpkB,KAAKokB,WAAaA,I,wCAIJkZ,EAAqBjB,GACnCr8B,KAAK08B,mBAAmBL,GAAaiB,I,mDAIZC,GACzBv9B,KAAKu9B,+BAAiCA,I,+CAIjBC,GACrBx9B,KAAKw9B,2BAA6BA,I,6CAGfnB,GACfr8B,KAAKm8B,oBAAoBE,IACzBzvC,aAAaoT,KAAKm8B,oBAAoBE,M,2CAOzBA,GAAW,WAC5Br8B,KAAKm9B,uBAAuBd,GAC5Br8B,KAAKm8B,oBAAoBE,GAAanvC,YAAW,WAC7C,EAAK0vC,mBAAkB,EAAMP,KAC9B,O,iDAICr8B,KAAKo8B,6BACLxvC,aAAaoT,KAAKo8B,+B,+CAOD,WACrBp8B,KAAKy9B,2BACLz9B,KAAKo8B,4BAA8BlvC,YAAW,WAC1C,EAAK6vC,sBACN,Q,uEAIepf,G,gGACZ3d,KAAKi9B,QAAQ,WAAYtf,G,2KAIPrrB,G,0FACpB0N,KAAKu9B,+B,wDAITv9B,KAAK09B,8BAA6B,G,SACE3sC,KAAG4uB,YAAYrtB,EAAO,oB,QAApDqrC,E,QAEoBhxC,OACtBqT,KAAK09B,8BAA6B,GAClC19B,KAAKs8B,gBAAgBqB,EAAsBhxC,MAAMK,WAEjDgT,KAAK49B,0BAAyB,GAC9B59B,KAAK69B,0B,wIAKT79B,KAAKy9B,2BACLz9B,KAAK09B,8BAA6B,GAClC19B,KAAK49B,0BAAyB,GAC9B59B,KAAKwjB,WAAWpwB,OAAO2B,oBAAoB,M,mCAIlCsnC,GAETr8B,KAAKwjB,WAAW1tB,GAAGhB,oBAAoBunC,K,kCAG/B,WACRr8B,KAAK+8B,oBACL50C,OAAO6Z,KAAKhC,KAAK+7B,YAAYvyC,SAAQ,SAAC6yC,GAClC,EAAKc,uBAAuBd,GAC5B,EAAKO,mBAAkB,EAAMP,Q,gDAIX,WACtB,OAAO,IAAIxxC,QAAJ,6CAAY,WAAOC,GAAP,yGAAmBA,EAAQ,EAAKgzC,cAAhC,2CAAZ,4D,gCAjO2BjL,K,wBACrC6C,M,yEAA8B,K,uCAC9BA,M,yEAA8B,K,oCAC9BA,M,wEAA8B,M,qCAE9BA,M,wEAA4B,CACzBsG,QAAU,GACVC,SAAU,O,yCAGbvG,M,wEAAgC,CAC7BsG,SAAU,EACVC,UAAU,M,qDAGbvG,M,yEAA4C,K,iDAC5CA,M,yEAA4C,K,k5DCd5BqI,GACjB,WAAYva,I,4FAAY,SACpBxjB,KAAK0d,QAAkB,IAAIoe,GAAa,CAAEtY,gB,SCR5Cwa,GAAc,SAAC,GAAD,IAAGxuC,EAAH,EAAGA,QAASF,EAAZ,EAAYA,UAAZ,OAChB,4BACIA,UAAWA,EACX9D,KAAK,SACLgE,QAASA,KAIjBwuC,GAAYtuC,UAAY,CACpBJ,UAAWK,IAAUC,OACrBJ,QAAWG,IAAUE,KAAKqW,YAGf83B,ICHLC,GDGKD,MCZFE,GAAQ,CACjBC,OAAe,uBACf5a,KAAe,qBACf6a,QAAe,wBACfC,QAAe,wBACfC,cAAe,sBAGNC,IACHN,GAAqB,CACvBK,cAAe,EACfH,OAAe,EACfE,QAAe,EACf9a,KAAe,EACf6a,QAAe,GAGZ,SAACntB,EAAGC,GAAJ,OAAU+sB,GAAmBhtB,EAAEzlB,MAAQyyC,GAAmB/sB,EAAE1lB,QCZjEgzC,GAAe,SAAC,GAGhB,IAFF/2C,EAEE,EAFFA,KACAg3C,EACE,EADFA,mBAEMC,EAAU,SAACC,GACbF,EAAmBh3C,GAEfA,EAAKm3C,cACLn3C,EAAKm3C,aAAan3C,EAAMk3C,IAUhC,OAJIl3C,EAAKo3C,eACL3xC,WAAWwxC,EAASj3C,EAAKq3C,ODxBJ,KC4BrB,yBAAKxvC,UACDG,IAAW,eAAgByuC,GAAMz2C,EAAK+D,MAAO,CACzC,sBAAsC,UAAd/D,EAAK60B,QAGjC,yBAAKhtB,UAAU,sBACK,WAAd7H,EAAK+D,MAAsB,kBAAC,IAAD,CAAMgV,KAAK,aAAalR,UAAU,6BAC9C,SAAd7H,EAAK+D,MAAiC,kBAAd/D,EAAK+D,OACzB,kBAAC,IAAD,CAAMgV,KAAK,kBAAkBlR,UAAU,4BAC9B,YAAd7H,EAAK+D,MAAsB,kBAAC,IAAD,CAAMgV,KAAK,cAAclR,UAAU,4BAChD,YAAd7H,EAAK+D,MAAsB,kBAAC,IAAD,CAAMgV,KAAK,cAAclR,UAAU,6BAEpE,yBAAKA,UAAU,gCACX,wBAAIA,UAAU,wBAAwB7H,EAAKoQ,QAC3C,uBAAGvI,UAAU,2BAAb,IAAyC7H,EAAKuF,UAEhDvF,EAAKs3C,2BAAwBt1C,EAAY,kBAAC,GAAD,CAAa+F,QAvBhD,kBAAMkvC,GAAQ,IAuBoDpvC,UAAU,iCAKhGkvC,GAAa9uC,UAAY,CACrBjI,KAAMkI,IAAUqW,MAAM,CAClB44B,aAAuBjvC,IAAUE,KACjCivC,MAAuBnvC,IAAUkK,OACjChC,OAAuBlI,IAAUC,OACjCivC,cAAuBlvC,IAAU+Q,KACjC1T,QAAuB2C,IAAUmK,UAAU,CAACnK,IAAUoK,KAAMpK,IAAUC,SACtEmvC,sBAAuBpvC,IAAU+Q,KACjC4b,KAAuB3sB,IAAUqvC,MAAM,CAAC,UACxCxzC,KAAuBmE,IAAUqvC,MAAM,CAAC,UAAW,OAAQ,UAAW,SAAU,kBAAkB94B,aAEtGu4B,mBAAoB9uC,IAAUE,MAGnB2uC,I,w3DCnDf,IAAMnL,GAAa,WAEE4L,I,GA8FhB5tC,KAAOyhC,M,GAQPzhC,KAAOyhC,M,GAkBPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAmBPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAWPzhC,KAAOyhC,M,GAePzhC,KAAOyhC,M,GAMPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAMPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAQPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,GAMPzhC,KAAOyhC,M,GAMPzhC,KAAOyhC,M,GAKPzhC,KAAOyhC,M,sBA3QR,aAAc,O,4FAAA,SACV,I,IADU,O,EAqBV,K,EAAA,gBAAM,CAAEI,yBApByB,CAC7B,yBACA,uBACA,uBACA,uBACA,aACA,aACA,aACA,aACA,aACA,8BACA,6BACA,0BACA,kBACA,yBACA,sBAK8BG,gBArBxB,GAqBV,G,kDArBU,6yCAFd6L,oBAAsB,SAACC,GAAD,OAAU,qBAAiBA,KAwB7CtwC,OAAOwX,iBAAiB,SAAU,EAAK+4B,cACvCC,cAAQ,WACA,EAAK5a,iBACL96B,SAASgwB,KAAKnT,UAAU/E,OAAO,gBAC/B9X,SAASgwB,KAAKnT,UAAUC,IAAI,iBAE5B9c,SAASgwB,KAAKnT,UAAU/E,OAAO,eAC/B9X,SAASgwB,KAAKnT,UAAUC,IAAI,oBA7B1B,E,2SAmCmB,IAAfxZ,EAAe,EAAfA,KAAMc,EAAS,EAATA,MACpB,KAAMd,KAAQ+S,MACV,MAAM,IAAIhU,MAAJ,4BAA+BiB,IAEzC+S,KAAK/S,GAAQc,I,qCAKbiS,KAAKs/B,aAAezwC,OAAO+3B,WACvB5mB,KAAKurB,YACLvrB,KAAK6jB,wBAAyB,K,sCAgBlC7jB,KAAKupB,kBAAmB,I,sCAKxBvpB,KAAKupB,kBAAmB,I,oCAKxBvpB,KAAK2jB,gBAAiB,I,oCAKtB3jB,KAAK2jB,gBAAiB,I,qCAKtB3jB,KAAK4jB,kBAAmB,I,qCAKxB5jB,KAAK4jB,kBAAmB,I,6CAKxB5jB,KAAKwrB,yBAA2BxrB,KAAKwrB,0B,oCAI3B+T,GACVv/B,KAAKokB,WAAamb,I,uCAILhpC,GACbyJ,KAAKw/B,gBAAgBjpC,IAAS,EAK9B,IAAMkpC,EAAsB91C,SAAS+1C,uBAAuB,gBACxDD,EAAoBlpC,IACpBkpC,EAAoBlpC,GAAOiQ,UAAUC,IAAI,wBAG7CvZ,YAAW,WACP,GAAG1D,QAAQ8E,KAAKmxC,GAAqB,SAACl5B,GAClCA,EAAGC,UAAUC,IAAI,4BADrB,KAGD,O,4CAKHzG,KAAKw/B,gBAAkB,EAAE,GAAO,K,0CAKhCx/B,KAAKk6B,yBAA2Bl6B,KAAKk6B,0B,6CAWrCl6B,KAAK2/B,4BAA8B3/B,KAAK2/B,6B,uCAgBxC,OADA3/B,KAAKykB,iBAAmBzkB,KAAKykB,gBACtBzkB,KAAKykB,kB,kDAKZzkB,KAAKypB,uBAAwB,I,kDAK7BzpB,KAAKypB,uBAAwB,I,2CAK7BzpB,KAAKorB,qBAAuBprB,KAAKorB,sB,4CAIA,IAAjBwU,EAAiB,uDAAX,UAClB5/B,KAAKmrB,qBAAuByU,IAAK5/B,KAAKmrB,mBAAqByU,K,4CAK/D5/B,KAAKwpB,sBAAwBxpB,KAAKwpB,uB,4CAKlCxpB,KAAK6jB,wBAAyB,I,8CAK9B7jB,KAAK6jB,wBAA0B7jB,KAAK6jB,yB,oCAI1B0b,GACVv/B,KAAK6/B,mBAAqBN,I,+CAILA,GACrBv/B,KAAK8/B,0BAA4BP,I,uCAKjCv/B,KAAK+/B,mBAAoB,I,gDAKzB//B,KAAKggC,4BAA6B,I,oCAKlChgC,KAAK+/B,mBAAoB,EACzB//B,KAAKggC,4BAA6B,I,6CAKlChgC,KAAKskB,iBAAmB,O,wCAIV35B,GACdqV,KAAKskB,iBAAmB35B,I,sCAIZs1C,GACZjgC,KAAKkgC,sBAAwB,aAAIlgC,KAAKkgC,uBAAT,CAAgCD,IAAcE,KAAK5B,M,yCAIjE0B,GACf,IAAM1pC,EAAQyJ,KAAKkgC,sBAAsBjzB,QAAQgzB,GAC7C1pC,GAAS,GACTyJ,KAAKkgC,sBAAsB72C,OAAOkN,EAAO,K,+CAM7CyJ,KAAKkgC,sBAAwB,K,oDAIHE,GAC1BpgC,KAAKogC,oCAAsCA,I,qCAIhC3zB,EAAQzf,GACnBgT,KAAKqkB,gBAAsB5X,EAC3BzM,KAAKwkB,oBAAsBx3B,I,yCAIZA,GACfgT,KAAKqgC,mBAAmB73C,KAAKwE,GAC7BgT,KAAKqgC,mBAAqBC,kBAAOtgC,KAAKqgC,mBAAoB,c,uDAI6B,IAA5DE,EAA4D,wDAA5CvgC,KAAKwgC,sCAChDxgC,KAAKwgC,sCAAwCD,I,iDAIoC,IAA5DA,EAA4D,wDAA5CvgC,KAAKwgC,sCAC1CxgC,KAAKygC,gCAAkCF,I,gCAzNvC,OAAOvgC,KAAKs/B,cAAgBoB,O,gCAK5B,OAAO1gC,KAAKs/B,cAAgBqB,U,gCArHC9N,K,+BAChC6C,M,yEAAwC,K,iDACxCA,M,yEAAwC,K,6CACxCA,M,yEAAwC,K,yCACxCA,M,yEAAwC,K,0CAExCA,M,yEAAqC,K,sCACrCA,M,yEAAqC,K,2CACrCA,M,yEAAqC,K,8CACrCA,M,yEAAqC,K,iCAErCA,M,yEAAqC,K,sCACrCA,M,yEAAqC,K,0CACrCA,M,wEAAqC,M,0DAErCA,M,yEAAiD,K,gDAIjDA,M,yEAAmD,K,4DACnDA,M,yEAAmD,K,sDACnDA,M,yEAAmD,K,iDAMnDA,M,yEAAyC,K,8CACzCA,M,yEAAyC,K,uCAGzCA,M,yEAA8B,Q,mCAE9BA,M,yEAA0B7mC,OAAO+3B,c,4CAEjC8O,M,wEAAmC,M,yCACnCA,M,wEAAgC,M,2CAEhCA,M,yEAAoC,K,6CACpCA,M,wEAAoC,O,2CACpCA,M,wEAAoC,c,2CACpCA,M,wEAAoC,O,iCACpCA,M,yEAAoC,K,iCACpCA,M,yEAAoC,M,iCACpCA,M,yEAAoC,K,iCACpCA,M,yEAAoC,K,iCACpCA,M,yEAAoC,K,sCAGpCA,M,wEAA6B,EAAE,GAAO,M,uCAEtCA,M,yEAA8B,K,qCAC9BA,M,yEAA8B,K,uCAC9BA,M,yEAA8B,K,4CAC9BA,M,yEAAmC,K,yCAEnCA,M,wEAAgC,a,iQAsDhC2C,M,qGAKAA,M,+xIC3HgBuI,GACjB,c,4FAAc,SACV5gC,KAAK5M,OAAU,IAAIuiC,GAAY31B,MAC/BA,KAAK3M,OAAU,IAAIilC,GACnBt4B,KAAKvX,QAAU,IAAIs1C,GAAa/9B,MAChCA,KAAKlK,GAAU,IAAImpC,GACnBj/B,KAAK1M,IAAU,IAAIqlC,GAAS34B,OCLpC6gC,aAAU,CAAEC,eAAgB,aAE5B,IAeeC,GAfG,WACdzQ,KAAOl/B,OAEP,IAAMoyB,EAAa,IAAIod,GASvB,OCrB4B,SAACpd,GAC7B30B,OAAOwX,iBAAiB,WAAW,SAAC26B,GAChC,OAAQA,EAAI3yC,KACR,IAAK,iBACG1E,SAASs3C,QACTpyC,OAAO4F,SAASC,SAEpB,MACJ,IAAK,oBACG/K,SAASs3C,QAAUzd,EAAW1tB,GAAGs1B,qBAA4D,aAArC5H,EAAW1tB,GAAGq1B,qBACtE3H,EAAW/6B,QAAQi1B,QAAQqf,oBAC3BvZ,EAAW1tB,GAAGb,0BDG9BisC,CAAiB1d,GAEjBoI,GAAex6B,KAAKoyB,GACpBuI,GAAgB36B,KAAKoyB,GACrBA,EAAWpwB,OAAOhC,OAGXoyB,GEHL2d,I,OAAgB,iBAAkBx3C,SAASi4B,iBAE3Cwf,GAAM,SAAC,GAAmB,IAAjB5d,EAAiB,EAAjBA,WACL94B,EAAImE,OAAO4F,SACX4sC,EAAO32C,EAAE6N,SAAS4J,MAAM,KAAK,GACnC,OACI,kBAAC,IAAD,CAAQm/B,SAAU,aAAaxvC,KAAKpH,EAAE6N,UAApB,WAAoC8oC,GAAS,MAC3D,kBAAC,IAAD,CAAcluC,MAAOqwB,GAEbA,EAAW1tB,GAAGy1B,WAAc/H,EAAW1tB,GAAGyrC,WAAaJ,GACnD,kBAACvW,GAAA,EAAD,CACIC,KAAM,kBAAM,gDACZC,YAAatH,EAAW1tB,GAAGy1B,WAAc/H,EAAW1tB,GAAGyrC,WAAaJ,GACpEpW,cAAc,IAElB,kBAAC,IAAMnxB,SAAP,KACI,kBAAC,GAAD,MACA,kBAAC,EAAD,KACI,kBAAC,EAAD,KACI,kBAAC,GAAD,CAAQf,YAAa,CAAE2qB,aAAYzyB,UACnC,kBAAC65B,GAAA,EAAD,CACIC,KAAM,kBAAM,iDACZC,aAActH,EAAW1tB,GAAGsuB,WAC5B2G,cAAc,MAI1B,kBAAC,GAAD,MACA,kBAACH,GAAA,EAAD,CACIC,KAAM,kBAAM,sCACZC,aAAa,EACbC,cAAc,QAS9CqW,GAAI1xC,UAAY,CACZ8zB,WAAY7zB,IAAUnB,QAGX4yC,IAET5d,GAAaud,KAEbS,GAAU73C,SAASqR,eAAe,aAExCwmC,IAAUp6B,IAAS9O,OAAO,kBAAC,GAAD,CAAKkrB,WAAYA,KAAgBge,ICnEJ,kBAAmB1xB,WAClEjhB,OAAOwX,iBAAiB,QAAQ,WAC5B,IAAIo7B,EAAY5yC,OAAO4F,SAAS8D,SAChCkpC,EAAY,eAAe3vC,KAAK2vC,GAAa5yC,OAAO4F,SAAS8D,SAASE,QAAQ,aAAc,IAAM,GAClG,IAAMipC,EAAS,GAAH,OAAMD,EAAN,qBACZ3xB,UAAU6xB,cACLC,SAASF,GACTt1C,MAAK,SAAAy1C,GACFA,EAAaC,cAAgB,WACzB,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACE,cAA3BF,EAAiBl8B,QACbiK,UAAU6xB,cAAcO,WAKxBvzC,QAAQsuB,IAAI,6CAKZtuB,QAAQsuB,IAAI,4CAjBpC,OAuBW,SAAAtwB,GACHgC,QAAQhC,MAAM,4CAA6CA,U,gCCPhE4I,IAvBA,CACXmB,SAAkB,OAClByrC,iBAAkB,6BAClBC,KAAkB,iBAClBC,iBAAkB,6BAClBlJ,SAAkB,yBAClBmJ,UAAkB,sBAClBx4B,UAAkB,sBAClBjV,QAAkB,oBAClB0B,MAAkB,SAClBgsC,OAAkB,mBAClBC,SAAkB,qBAClBz9B,UAAkB,qBAClB09B,OAAkB,kBAClB39B,QAAkB,WAClBtP,KAAkB,IAClBmB,SAAkB,YAClBkjC,SAAkB,YAClB7rB,UAAkB,qBAClB9B,MAAkB,kBAClB2F,MAAkB,M,icChBtB,IAAM+Y,EAAO,SAAC,GAKR,QAJFE,mBAIE,SAHFD,EAGE,EAHFA,KACAE,EAEE,EAFFA,aACG2X,EACD,2CACF,IAAK5X,EACD,OAAO,KAEX,IAAM6X,EAAsBrnC,IAAMtF,KAAK60B,GAEvC,OACI,kBAAC,IAAM5xB,SAAP,CAAgBC,SAAU6xB,EAAe,kBAAC,IAAD,MAAe,+BACpD,kBAAC4X,EAAwBD,KAMrC9X,EAAK1yB,aAAe,CAChB4yB,aAAc,EACdC,cAAc,GAGlBH,EAAKl7B,UAAY,CACbm7B,KAAcl7B,IAAUE,KAAKqW,WAC7B6kB,aAAcp7B,IAAU+Q,KACxBoqB,YAAcn7B,IAAU+Q,MAGbkqB,Q,0RClCf,IAkBQgY,EAEAje,EACAke,EACAC,EACAC,EACA1uC,EACA2uC,EACAC,EAEEC,EACAC,EACAv4C,EAEAw4C,EAUAC,EAUAC,EA6BAC,EAOAC,EAIAxzB,EAEAyzB,EAOAzwC,EA2BAid,EAhIJ/gB,EAAmByL,EAAQ,KAA4BzL,aACvDua,EAAmB9O,EAAQ,IAC3B6O,EAAmB7O,EAAQ,IAC3BsY,EAAmBtY,EAAQ,IAAehN,IAC1CoE,EAAmB4I,EAAQ,IAAc5I,MACzC4pB,EAAmBhhB,EAAQ,GAAcghB,YACzC/pB,EAAmB+I,EAAQ,GAAc/I,iBACzCgP,EAAmBjG,EAAQ,GAAciG,cACzC8iC,EAAmB/oC,EAAQ,GAAc+oC,aACzC7K,EAAmBl+B,EAAQ,IAAgBk+B,SAC3C8K,EAAmBhpC,EAAQ,IAAgBgpC,aAO3CC,GAGEjf,EAAuB,GACvBke,EAAuB,GACvBC,EAAuB,EACvBC,EAAuB,EACvB1uC,GAAuB,EACvB2uC,GAAuB,EACvBC,GAAuB,EAErBC,EAAa,GAAH,OAAMS,IAAN,mBAA+B9K,IAA/B,cAA+C5lB,IAA/C,kBAAsE/jB,EAAasJ,eAC7F2qC,EAAa,GACbv4C,EAAa,GAEbw4C,EAAwB,CAC1B,YACA,eACA,iBACA,kBACA,oBACA,cACA,kBAGEC,EAAgB,CAClBh/B,MAAQ,GACR3C,MAAQ,WAAQ2hC,EAAch/B,MAAQ,IACtCpC,IAAQ,SAAAzQ,GAAQ,OAAI6xC,EAAch/B,MAAM4I,QAAQzb,IAAa,GAC7DiV,IAAQ,SAACjV,GAAoB6xC,EAAcphC,IAAIzQ,IAAW6xC,EAAch/B,MAAM7b,KAAKgJ,IACnFiQ,OAAQ,SAACjQ,GACD6xC,EAAcphC,IAAIzQ,IAAW6xC,EAAch/B,MAAMhb,OAAOg6C,EAAch/B,MAAM4I,QAAQzb,EAAU,MAIpG8xC,EAAe,CACjBj/B,MAAO,GACPoC,IAAO,SAACjV,EAAUqyC,GACTP,EAAaj/B,MAAM7S,KACpB8xC,EAAaj/B,MAAM7S,GAAY,IAEnC8xC,EAAaj/B,MAAM7S,GAAUhJ,KAAKq7C,IAEtC/4C,QAAS,SAACyG,GACN,IAAMC,EAAgBD,EAASC,SACzBsyC,EAAgBR,EAAaj/B,MAAM7S,GACrCsyC,GAAiBA,EAAc57C,SAC/B47C,EAAct6C,SAAQ,SAACu6C,GACdT,EAAaU,eAAeD,EAAIvyC,IACjCuyC,EAAGj5C,QAAQyG,MAGnB+xC,EAAaj/B,MAAM7S,GAAY,KAGvCwyC,eAAgB,SAACD,EAAIvyC,GAAL,OACZrJ,OAAO6Z,KAAKshC,EAAaj/B,OACpBlN,MAAK,SAAA3L,GAAI,OACNA,IAASgG,IACiC,IAA1C8xC,EAAaj/B,MAAM7Y,GAAMyhB,QAAQ82B,QAY3CP,EAAU,kBAAMxzB,EAAc,IAM9ByzB,EAAuB,WACzB,KAAOZ,EAAe36C,OAAS,GAAKmM,GAAc,CAC9C,IAAM4vC,EAAUpB,EAAeh6C,QAC/BonB,EAAKg0B,EAAQr4C,QAASq4C,EAAQnkC,WA+BhCmQ,EAAO,SAAUxoB,GAAoB,IAAdqY,EAAc,uDAAJ,GAC7B+jC,EAAc/jC,EAAQxT,SAAW,IAAIo3C,EACrCQ,EAA2C,mBAArBpkC,EAAQ2b,SAEpC,IAAKh0B,GAAQmZ,EAAcnZ,GAAO,OAAOo8C,EAAYv3C,QAErD,IAAMkF,EAAWsO,EAAQtO,UAAY4xC,EAAsB5+B,MAAK,SAAAnX,GAAC,OAAIA,KAAK5F,KAG1E,IAAKqY,EAAQpM,OAAQ,CACjB,IAAMnC,EAAWiY,EAAY7b,IAAIlG,EAAM+J,GACvC,GAAID,EAAU,CAWV,GAVAQ,EAAMyP,IAAI,CAAC,WAAYhQ,GAAWmqB,EAAYpqB,IAC1CiyC,KAAanvC,IAAiByL,EAAQqkC,oBAAsBD,EAC5DtB,EAAc3yB,KAAKlP,KAAKI,UAAU1Z,GAAO,CAAEiM,QAAQ,IAC7B,IAAdjM,EAAKg+B,MACbod,EAAer6C,KAAK,CAChBoD,QAASnE,EACTqY,QAAS3X,OAAO0hB,OAAO/J,EAAS,CAAExT,QAASu3C,EAAanwC,QAAQ,MAGxEmwC,EAAY/4C,QAAQyG,IAChB2yC,EAGA,OAAOL,EAAYv3C,QAFnBwT,EAAQ2b,SAASlqB,IAQ7B,IAAKuO,EAAQpM,QAAUlC,IAAyD,IAA7C4xC,EAAsBn2B,QAAQzb,GAAkB,CAC/E,IAAM4yC,EAAgBryC,EAAMpE,IAAI,CAAC,WAAY6D,IAC7C,GAAI4yC,EAEA,OADAP,EAAY/4C,QAAQs5C,GACbP,EAAYv3C,QAChB,GAAI+2C,EAAcphC,IAAIzQ,GACzB,OAAOwB,EAAKxB,GAAUpF,MAAK,SAACmF,GAExB,OADAsyC,EAAY/4C,QAAQyG,GACbsyC,EAAYv3C,WAkC/B,OA7BK7E,EAAKq7C,SACNr7C,EAAKq7C,SAAWA,GAEpBl4C,EAASnD,EAAKq7C,QAAU,CACpBrnB,SAAU,SAAClqB,GACH2yC,EACApkC,EAAQ2b,SAASlqB,GAEjBsyC,EAAY/4C,QAAQyG,IAG5BqqB,YAAan0B,EAAKm0B,WAGlB4nB,KAAanvC,GAAgBswB,EAAO3V,YACpCg0B,GAAuB,EAClBpxC,EAAiBnK,EAAM,gBAAmBmK,EAAiBnK,EAAM,kBAClEA,EAAKoR,YAAc,IAGvB+pC,EAAc3yB,KAAKlP,KAAKI,UAAU1Z,IAClCk9B,EAAOxV,QAAQ,QACX3d,IAAa6xC,EAAcphC,IAAIzQ,IAC/B6xC,EAAc58B,IAAIjV,IAEA,IAAd/J,EAAKg+B,MACbod,EAAer6C,KAAK,CAAEoD,QAASnE,EAAMqY,QAAS3X,OAAO0hB,OAAO/J,EAAS,CAAExT,QAASu3C,MAG7EA,EAAYv3C,SAoGhB,CACH8E,KAlGS,SAAC0O,GACNijC,IAAiBlK,MAGE,WAAnB,EAAO/4B,IAAwB6kB,IAAW7kB,IAC1C6kB,EAAiB7kB,EACjB+iC,EAAiB,IAErBU,IACA5e,EAAOxV,QAAQ,QA3HIyzB,IAAiB5yB,EAAc,EAAG,KA8HjD4yB,EAAgB,IAAIyB,UAAUnB,GAC9BnxC,EAAMyP,IAAI,WAAY,KAG1BohC,EAAc0B,OAAS,WACnB3f,EAAOxV,QAAQ,QACX1F,EAAWZ,aACXoH,EAAK,CAAEje,UAAWyX,EAAW9b,IAAI,UAAY,CAAE+F,QAAQ,IAEvD+vC,IAGyB,mBAAlB9e,EAAOz0B,QACdy0B,EAAOz0B,OAAOszC,KAGgB,mBAAvB7e,EAAO4f,aAA8BtB,GAC5Cte,EAAO4f,cAGNtB,IACDA,GAAsB,IAI9BL,EAAc4B,UAAY,SAACC,GACvB9f,EAAOxV,QAAQ,WACf,IAAM5d,EAAWkzC,EAAIh9C,KAAOsZ,KAAKC,MAAMyjC,EAAIh9C,WAAQgC,EACnD,GAAI8H,EAAU,CACViY,EAAYhI,IAAIjQ,GAChB,IAAMC,EAAWD,EAASC,SAGrBI,EAAiBL,EAAU,CAAC,WAAY,gBAAiB,yBAAyBO,KAAKN,IACxFO,EAAMyP,IAAI,CAAC,WAAYhQ,GAAWmqB,EAAYpqB,IAGlD,IAAMmzC,EAAcnzC,EAASuxC,OACvBiB,EAAcW,EAAc95C,EAAS85C,GAAe,KACtDX,GAA6B,mBAAhBA,EAAGtoB,WAChBsoB,EAAGtoB,SAASlqB,GACPwyC,EAAGnoB,kBACGhxB,EAAS85C,IAIxBpB,EAAax4C,QAAQyG,GAEiC,iBAAlDK,EAAiBL,EAAU,CAAC,QAAS,WACrCwxC,EAAelK,KAGa,mBAArBlU,EAAOx0B,WACdw0B,EAAOx0B,UAAUoB,KAK7BqxC,EAAc+B,QAAU,WACpBtB,EAAc3hC,QACd6hC,IACA5e,EAAOxV,QAAQ,SAEX4zB,IAAiBlK,KAA6C,mBAAxBlU,EAAO10B,cAAgC+yC,IAC7Ere,EAAO10B,eACP+yC,GAAuB,MAsB/BhwC,KA1MEA,EAAO,WAAkB,2BAAdipB,EAAc,yBAAdA,EAAc,gBAC3B,IAAM4nB,EAAc,IAAIH,EACpBkB,GAAgB,EAepB,OAdA3oB,EAAUzyB,SAAQ,SAACgI,GACf,IAAM4yC,EAAgBryC,EAAMpE,IAAI,CAAC,WAAY6D,IACxC4yC,EAK2B,IAArBnoB,EAAU/zB,QACjB27C,EAAY/4C,QAAQs5C,IALH,cAAb5yC,GAA4BiY,EAAWZ,gBACvCy6B,EAAa78B,IAAIjV,EAAUqyC,GAC3Be,GAAc,MAMtBA,GACAf,EAAY/4C,UAET+4C,EAAYv3C,SA0LnB2jB,OACAvO,MAnBU,SAAClQ,GACXqxC,EAAiB,GACbrxC,IACAO,EAAMyP,IAAI,CAAC,WAAYhQ,QAAW/H,GAClC45C,EAAc5hC,OAAOjQ,KAgBzB+xC,cAjOEA,EAAgB,WAClBp7C,OAAO6Z,KAAKmhC,GAAU35C,SAAQ,SAAC6E,GAC3BzB,aAAau2C,EAAS90C,WACf80C,EAAS90C,OA+NpBmG,aAbiB,SAACiY,GAIlB,YAHsB,IAAXA,IACPpY,IAAiBoY,GAEdpY,GAUP2b,cAxNEA,EAAgB,sCAAI60B,EAAJ,yBAAIA,EAAJ,uBAAejC,GAAiBiC,EAAO1tC,MAAK,SAAA5N,GAAC,OAAIq5C,EAAckC,aAAev7C,MAyNhG2K,aAAoBuvC,EACpB91C,IAAoB,kBAAMi1C,GAC1BmC,gBAAoB,SAAC90C,GAAmB00B,EAAO10B,aAAeA,GAC9D+0C,eAAoB,SAACT,GAAkB5f,EAAO4f,YAAcA,GAC5DU,kBAAoB,kBAAetgB,EAAO4f,aAC1CW,mBAAoB,kBAAevgB,EAAO10B,gBAIlDxF,EAAOD,QAAUo5C,G,iBCpTjB,IAAMuB,EAAiB,CACnB,YAAa,OAGXjyB,EAA6B,kBAC9B,aAAaphB,KAAKjD,OAAO4F,SAAS+N,WACnCra,OAAO6Z,KAAKmjC,GAAgB3gC,MAAK,SAAA9B,GAAM,OAAK,IAAIkB,OAAJ,WAAelB,EAAf,KAA0B,KAAK5Q,KAAKjD,OAAO4F,SAAS+N,cAG9F3B,EAAe,WACjB,IAAMukC,EAAcj9C,OAAO6Z,KAAKmjC,GAAgBhsC,KAAI,SAAAuJ,GAAM,sBAAaA,EAAOjK,QAAQ,IAAK,WAC3F,OAAO,IAAImL,OAAJ,YAAgBwhC,EAAYziC,KAAK,KAAjC,MAA2C,KAAK7Q,KAAKjD,OAAO4F,SAAS+N,WAyEhF/X,EAAOD,QAAU,CACb26C,iBACAjyB,6BACArS,eACAg4B,SAxEa,WACb,IAAIwM,EAAS,KAEPC,EAAgBz2C,OAAO0U,aAAa5R,QAAQ,iBAClD,GAAI2zC,EACAD,EAASC,OACN,GAAI,eAAexzC,KAAKjD,OAAO4F,SAASxK,OAAS4E,OAAO0U,aAAa5R,QAAQ,yBAChF9C,OAAO0U,aAAa1R,WAAW,yBAC/BhD,OAAO0U,aAAarC,QAAQ,wBAAyB,GACrDmkC,EAXsB,WAYnB,GARe,GAQCn9C,OACnB2G,OAAO0U,aAAarC,QAAQ,wBATV,IAUlBmkC,EAVkB,QAWf,GAAI,uBAAuBvzC,KAAKjD,OAAO4F,SAAS+N,UACnD3T,OAAO0U,aAAa1R,WAAW,yBAC/BwzC,EAAS,WACN,GAAI,aAAavzC,KAAKjD,OAAO4F,SAAS+N,UACzC6iC,EAAS,UACN,CACHx2C,OAAO0U,aAAa1R,WAAW,yBAC/B,IAAMwiB,EAAiBnB,IACvBmyB,EAASF,EAAe9wB,IAAmB,MAE/C,OAAOgxB,GAkDP1B,aA/CiB,WACjB,IAAI4B,EAAa12C,OAAO0U,aAAa5R,QAAQ,qBAC7C,IAAK4zC,EAAY,CA+Bb,IAAMtzC,EAAgBpD,OAAO0U,aAAa5R,QAAQ,kBAC5C6zC,EAAgBvzC,IAAY,OAAOH,KAAKG,GACxCwzC,EAAgB5kC,KAAkB2kC,EAAU,QAAU,OAE5DD,EAAa,GAAH,OAAME,EAAN,iBAEd,sBAAgBF,EAAhB,qB,qCCzFG,I,cCFP,qC,mBCAA,IAmBUG,EAmBA90C,EAtCJ1B,EAAsByL,EAAQ,KAA4BzL,aAC1DohC,EAAsB31B,EAAQ,IAC9BK,EAAsBL,EAAQ,KAAuBK,eACrDiY,EAAsBtY,EAAQ,IAAehN,IAC7Cw1B,EAAsBxoB,EAAQ,KAAgBwoB,SAC9C9hB,EAAsB1G,EAAQ,IAAc0G,mBAC5CiC,EAAsB3I,EAAQ,IAAc2I,WAC5C8Q,EAAsBzZ,EAAQ,IAAUyZ,oBACxC+wB,EAAsBxqC,EAAQ,IAAgBwqC,eAC9CtM,EAAsBl+B,EAAQ,IAAgBk+B,SAE9CloC,GAQI+0C,EAAW,WACb,IAAMH,EAAqBhiC,aAAa5R,QAAQ,qBAC1CsiB,EAAqBhB,IACrB0yB,EAAqBriC,EAAW3V,IAAI,mBAAqBw1B,IAAa,SAAW,WACjFyiB,EAAqBtiC,EAAW3V,IAAI,sBACpCk4C,EAAiB,yBAAsBF,GAAtB,OAAsCC,EAAqB,uBAAH,OAA0BA,GAAuB,IAC1HE,EAAiB,0DAAuDjN,IAAvD,cAAuE5kB,GAAvE,OAAkF4xB,EAAlF,kBAA6G32C,EAAasJ,eAEjJ,OAAI+sC,GAAc,KAAKzzC,KAAKyzC,GACxB,kBAAkBA,EAAlB,oCAAwD1M,IAAxD,cAAwE5kB,GAAxE,OAAmF4xB,EAAnF,kBAA8G32C,EAAasJ,eAE3HqgC,IAAasM,EAAe,aACrBW,EAGJ1xB,EAAoB0xB,IAmBxB,CACHltC,gBA1CoB,WACf03B,EAAOznB,cAAiBjY,MAAkByQ,EAAmB3P,kBAC9DA,eAAewP,QAAQ,eAAgBrS,OAAO4F,SAASxK,MACvD4E,OAAO4F,SAASxK,KAAOy7C,MAwC3B90C,aAjBEA,EAAe,iBAAM,wBAAwBkB,KAAKjD,OAAO4F,SAAS8D,WAkBpEwtC,WAde,WACf,CAAC,SAAU,YAAYv8C,SAAQ,SAAAw8C,GAC3B,IAAMC,EAAYjrC,EAAe,WAAD,OAAYgrC,IAC5CC,EAAUp/B,oBAAoB,SAC9Bo/B,EAAU5/B,iBAAiB,SAAS,SAAC1b,GANtB,IAAAu7C,EAOXv7C,EAAEw7C,iBACFt3C,OAAO4F,SAASxK,MARLi8C,EAQ2BF,EARtB,UAAQN,IAAR,0BAAoCQ,aAoBpEz7C,EAAOD,QAAUmG,G,gCC5DjB,oDAIMy1C,EAAS,SAAC,GAWV,IAVF/2C,EAUE,EAVFA,SAUE,IATFC,iBASE,MATU,GASV,EARF+2C,EAQE,EARFA,cACAjc,EAOE,EAPFA,WACAxgB,EAME,EANFA,GACAxJ,EAKE,EALFA,YACA5Q,EAIE,EAJFA,QACA82C,EAGE,EAHFA,SACA51B,EAEE,EAFFA,KACA61B,EACE,EADFA,iBAEMC,EAAU/2C,IAAW,MAAO,CAAEg3C,OAAQrc,GAAc96B,GACpDo3C,EACF,4BACI98B,GAAIA,EACJta,UAAWk3C,EACXh3C,QAASA,QAAW/F,EACpBk9C,SAAUvmC,EACVkmC,SAAUA,GAAY,KAEpB51B,GACE,0BAAMphB,UAAWG,IAAW,YAAa42C,IACpC31B,GAGRrhB,GAGHmyC,EAAW,yBAAKlyC,UAAWi3C,GAAmBG,GAEpD,OAAOH,EAAmB/E,EAAUkF,GAGxCN,EAAO12C,UAAY,CACfL,SAAkBM,IAAUoK,KAC5BzK,UAAkBK,IAAUC,OAC5Bw6B,WAAkBz6B,IAAU+Q,KAC5BkJ,GAAkBja,IAAUC,OAC5BwQ,YAAkBzQ,IAAUmK,UAAU,CAACnK,IAAUkK,OAAQlK,IAAU+Q,OACnElR,QAAkBG,IAAUE,KAC5B6gB,KAAkB/gB,IAAUC,OAC5B22C,iBAAkB52C,IAAUC,QAGjBw2C,O,uPCjDf,IAAMQ,EAASjsC,EAAQ,KACvBA,EAAQ,KAER,IAoFIksC,EA5EEjmC,EAAgB,SAACiB,GACnB,IAAIilC,GAAW,EAMf,OALIjlC,GAAOA,aAAe1Z,QACtBA,OAAO6Z,KAAKH,GAAKrY,SAAQ,SAAC6E,GAClBlG,OAAOC,UAAUC,eAAeC,KAAKuZ,EAAKxT,KAAMy4C,GAAW,MAGhEA,GAGLnrB,EAAc,SAAA9Z,GAAG,OAAMjB,EAAciB,GAAyDA,EAAlD+kC,GAAO,EAAM9kC,MAAMC,QAAQF,GAAO,GAAK,GAAIA,IAEvFia,EAAc,SAAC7K,EAAGC,GACpB,OAAI,EAAOD,KAAP,EAAoBC,KAEbpP,MAAMC,QAAQkP,GACd81B,EAAa91B,EAAGC,GAChBD,GAAKC,GAAkB,WAAb,EAAOD,GACjB+1B,EAAc/1B,EAAGC,GAGrBD,IAAMC,IAGX61B,EAAe,SAACE,EAAMC,GAAP,OACjBD,IAASC,GAELD,EAAK/+C,SAAWg/C,EAAKh/C,QACrB++C,EAAK/7B,OAAM,SAACnd,EAAOqL,GAAR,OAAgB0iB,EAAY/tB,EAAOm5C,EAAK9tC,QAIrD4tC,EAAgB,SAACG,EAAMC,GAAP,OAClBD,IAASC,GAELj/C,OAAO6Z,KAAKmlC,GAAMj/C,SAAWC,OAAO6Z,KAAKolC,GAAMl/C,QAC/CC,OAAO6Z,KAAKmlC,GAAMj8B,OAAM,SAAA7c,GAAG,OAAIytB,EAAYqrB,EAAK94C,GAAM+4C,EAAK/4C,QAuDnE5D,EAAOD,QAAU,CACb6nC,SApGa,SAACziC,EAAQ8yB,GACtB,IAAI2kB,EAAa3kB,EAIjB,OAHIA,IAAY5gB,MAAMC,QAAQ2gB,KAC1B2kB,EAAa,CAAC3kB,IAEX9yB,EAAO6I,QAAQ,cAAc,SAAClP,EAAGgN,GAAJ,OAAc8wC,GAAa9wC,EAAS,OAgGxEqK,gBACA+a,cACAG,cACAwkB,OAvDW,SAACtmC,EAAO3L,GAAR,OAAgB2L,EAAM2L,QAAO,SAAChb,EAAGyO,GAAJ,OACxCY,EAAMstC,WAAU,SAACr2B,EAAGjpB,GAAJ,OAAUipB,EAAE5iB,GAAO4iB,EAAE5iB,KAAS1D,EAAE0D,GAAOrG,IAAMoR,OAASA,MAuDtExH,iBArDqB,SAAnBA,EAAoBiQ,EAAKD,GAC3B,IAAII,EAAOJ,EAEX,OADKE,MAAMC,QAAQC,KAAOA,EAAO,CAACA,KAC7BpB,EAAciB,IAAQG,EAAK,KAAMH,GAAOG,GAAQA,EAAK9Z,OAAS,EACxD0J,EAAiBiQ,EAAIG,EAAK,IAAKA,EAAKjT,MAAM,IAG9C8S,EAAM8Z,EAAY9Z,EAAIG,EAAK,UAAOvY,GA+CzCG,cArCkB,SAAC29C,GAA8B,IAApBC,EAAoB,uDAAP,GACpCjhC,EAAK5c,SAASC,cAAc29C,GAWlC,OAVAp/C,OAAO6Z,KAAKwlC,GAAYh+C,SAAQ,SAACi+C,GAC7B,IAAM15C,EAAQy5C,EAAWC,GACZ,SAATA,EACAlhC,EAAGmhC,YAAc35C,EACD,SAAT05C,EACPlhC,EAAGkc,KAAK10B,GAERwY,EAAGzc,aAAa29C,EAAM15C,MAGvBwY,GA0BPohC,cAtBkB,WAElB,OADAd,EAAcA,IAAgBl9C,SAASuM,cAAc,uBAAuB7K,aAAa,QAAU,IAAI8W,MAAM,KAAK,IAsBlHuhC,aAjBA,aAAc,Y,4FAAA,SACV1jC,KAAK1T,QAAU,IAAIzB,SAAQ,SAACC,EAASC,GACjC,EAAKA,OAAUA,EACf,EAAKD,QAAUA,Q,wPCjG3B,IA8BU65B,EAgBFijB,EAEEC,EAwCAC,EAcAn6C,EAwBAo6C,EAaAtmC,EAaAC,EAxJJ4H,EAAmB3O,EAAQ,IAC3BsY,EAAmBtY,EAAQ,IAAehN,IAC1C2V,EAAmB3I,EAAQ,IAAc2I,WACzC1R,EAAmB+I,EAAQ,GAAc/I,iBACzC+1C,EAAmBhtC,EAAQ,GAAcgtC,cACzC/mC,EAAmBjG,EAAQ,GAAciG,cAmBzC4I,GAMImb,EAAS,CACXlyB,kBAAwB,CAAEu1C,OAAQ,KAClC7oB,uBAAwB,CAAE6oB,OAAQ,GAAKC,OAAQ,CAAC,gBAChD3qB,eAAwB,CAAE0qB,OAAQ,GAAKC,OAAQ,CAAC,eAAgB,kBAAmBh1B,IACnF6K,cAAwB,CAAEkqB,OAAQ,GAAKC,OAAQ,CAAC,gBAAiB,eAAgB,aACjFC,eAAwB,CAAEF,OAAQ,GAAKC,OAAQ,CAAC,kBAChDE,cAAwB,CAAEH,OAAQ,GAAKC,OAAQ,CAAC,gBAAiB,cAAe,QAAS,MAAO,UAChG7pB,cAAwB,CAAE4pB,OAAQ,IAAKC,OAAQ,CAAC,mBAShDL,EAAW,GAETC,EAAmB,CACrBhzC,QAAS,gBACTuzC,QAAS,iBAsCPN,EAAe,SAACrgD,GAClB,IAAI4gD,GAAgB,EAUpB,OATIvmC,MAAMC,QAAQta,GACTA,EAAKS,SACNmgD,GAAgB,GAEY,YAAzB,oBAAOC,cAAP,cAAOA,kBACTngD,OAAO6Z,KAAKva,GAAMS,SACnBmgD,GAAgB,IAGjBA,GAGL16C,EAAM,SAAC/B,EAAS4F,GAClB,IAAID,EAEJ,IAAIqP,EAAcgnC,KACdA,EAAWtkC,EAAWxC,UA9DV,aA+DRF,EAAcgnC,IAFtB,CAKIA,EAASf,cAAgBc,KACzBjmC,IAGJ,IAAMrT,EAAe05C,EAAQn8C,EAAS4F,GAChC+2C,EAAe32C,EAAiBg2C,EAAUv5C,IAAQ,GAQxD,OANIib,IAASk/B,SAASD,EAAa3lC,SAC/BrR,EAAWg3C,EAAax6C,MAExB0T,EAAOpT,GAGJkD,IAGLw2C,EAAU,WAAoC,IAAnCU,EAAmC,uDAAtB,GAAIj3C,EAAkB,uDAAP,GACrCnD,EAAMmD,GAAYrJ,OAAO6Z,KAAKymC,GAAYjkC,MAAK,SAAAhZ,GAAI,OAAIm5B,EAAOn5B,MASlE,OAPI6C,IAAQuS,EAAc6nC,MACpB9jB,EAAOt2B,IAAQ,IAAI45C,QAAU,IAAIz+C,SAAQ,SAACk/C,GACxC,IAAM36C,EAA2B,mBAAZ26C,EAAyBA,IAAYD,EAAWC,GACrEr6C,GAAOq6C,EAAU,IAAH,OAAO36C,GAAS,IAAO,MAItCM,GAqBJ,CACHmT,IAzGQ,SAACjQ,GACT,IAAMC,EAAWq2C,EAAiBt2C,EAASC,WAAaD,EAASC,SAGjE,IAAID,EAASopB,cAERgK,EAAOnzB,GAAZ,CAGA,IAAMm3C,EAAkBh7C,EAAI4D,EAASq3C,WAAa,GAC5CC,EAAkBF,EAAgBn3C,GAClCs3C,EAAkBv3C,EAASC,GAE3Bu3C,EAAuBx3C,EAAS5E,MAChCq8C,EAAuBH,GAAkBf,EAAae,KAAoBf,EAAagB,GACvFG,EAAuBJ,GAAkBf,EAAagB,KAAiBhB,EAAae,GACpFK,GAAwBpB,EAAaa,KAAqBA,EAAgBh8C,MAEhF,IAAKo8C,GAAwBC,GAAiBC,IAAkBC,EAC5DxnC,QADJ,CAMA,IAAMrT,EAAW05C,EAAQx2C,EAASq3C,SAAUp3C,GACtCoR,EAAW0G,IAAS7C,IAAIke,EAAOnzB,GAAUw2C,OAAQ,KAAKr8B,UAEvDi8B,EAASf,cACVe,EAASf,YAAcc,KAG3BC,EAASv5C,GAAO,CAAEN,MAAOwD,EAAUqR,WACnCU,EAAWrC,UAzCK,WAyCkB2mC,MA0ElCj6C,MACA8T,OArBEA,EAAS,SAACpT,EAAK86C,GACbA,EACAhhD,OAAO6Z,KAAK4lC,GAAUp+C,SAAQ,SAAC4/C,IACI,IAA3BA,EAASn8B,QAAQ5e,WACVu5C,EAASwB,MAGjB/6C,KAAOu5C,UACPA,EAASv5C,GAEpBiV,EAAWrC,UAzGK,WAyGkB2mC,IAYlClmC,MATEA,EAAQ,WACV4B,EAAW7B,OA7GK,YA8GhBmmC,EAAW,MAWnBn9C,EAAOD,QAAUgf,G,gCCrKjB,wFAKa1Y,EAAgB,kBACzBC,IAAGstB,SAASjyB,KAAKi9C,IAEfA,EAAW,SAAC93C,GACU,IAApBA,EAAS8sB,SACb7a,wBAAc,kBAAmB,sBACjC8sB,IAAOtkB,mBACPskB,IAAO9uB,IAAI,UAAW,IACtBgI,IAAY9H,W,gCCbhB,oEAAO,IAAMg/B,EAAmB,IACnBC,EAAmB,M,mBCDhC,IAOQrvC,EACAg4C,EACAC,EACAC,EACAC,EANAC,EACEC,EAOAv4C,EAUAw4C,EAKAC,EA5BJvgC,EAAe3O,EAAQ,IACvB5H,EAAe4H,EAAQ,GACvB+oC,EAAe/oC,EAAQ,GAAc+oC,aAErCvyC,GACEu4C,GAAgB,EACdC,EAAU,IAAIjG,EAOdtyC,EAAO,SAAC04C,GACLJ,IACDD,EAAgBK,EAChBF,IACAG,cAAcR,GACdA,EAAoBS,YAAYJ,EAAa,KAC7CF,GAAgB,IAIlBE,EAAc,WAChBN,EAA2BW,YAAYC,MACvCn3C,EAAakd,KAAK,CAAEwV,KAAM,IAAKr5B,KAAKy9C,IAGlCA,EAAc,SAACt4C,GACjB,IAAIA,EAAS5E,MAEb,GAAK+8C,EAAL,CAKAK,cAAcP,GAEd,IAAMW,EAAkB54C,EAASk0B,KAC3B2kB,EAA4BH,YAAYC,MAExCG,EAA8C,IAAlBF,GADfC,EAA4Bd,GAGzCgB,EAAa,WACf,IAAMC,EAAsBN,YAAYC,MAAQE,EAChD94C,EAAcgY,EAAO+gC,EAA0BE,GAAqBtlB,MAEvC,mBAAlBwkB,GACPA,KAGRa,IACAX,EAAQ7+C,UACR0+C,EAAuBQ,YAAYM,EAAY,UArB3Cl5C,KA0BD,CACHA,OACAzD,IAJQ,kBAAM2D,EAAcA,EAAYk5C,aAAU/gD,GAKlDghD,YAAad,EAAQr9C,UAI7B7B,EAAOD,QAAU2G","file":"js/main.8f1eafca3602d0867b45.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\tvar prefetchChunks = data[3] || [];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\tdeferredPrefetch.push.apply(deferredPrefetch, prefetchChunks);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\tif(deferredModules.length === 0) {\n \t\t\t// chunk prefetching for javascript\n \t\t\tdeferredPrefetch.forEach(function(chunkId) {\n \t\t\t\tif(installedChunks[chunkId] === undefined) {\n \t\t\t\t\tinstalledChunks[chunkId] = null;\n \t\t\t\t\tvar link = document.createElement('link');\n\n \t\t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\t\tlink.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t\t}\n \t\t\t\t\tlink.rel = \"prefetch\";\n \t\t\t\t\tlink.as = \"script\";\n \t\t\t\t\tlink.href = jsonpScriptSrc(chunkId);\n \t\t\t\t\tdocument.head.appendChild(link);\n \t\t\t\t}\n \t\t\t});\n \t\t\tdeferredPrefetch.length = 0;\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"main\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"main\": 0\n \t};\n\n \tvar deferredModules = [], deferredPrefetch = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"404\":\"404\",\"account-info\":\"account-info\",\"bot\":\"bot\",\"modals\":\"modals\",\"push-notification\":\"push-notification\",\"settings-chart\":\"settings-chart\",\"settings-language\":\"settings-language\",\"settings-theme\":\"settings-theme\",\"toggle-cashier\":\"toggle-cashier\",\"toggle-menu-drawer\":\"toggle-menu-drawer\",\"work-in-progress\":\"work-in-progress\",\"DenialOfServiceModal\":\"DenialOfServiceModal\",\"MarketUnavailableModal\":\"MarketUnavailableModal\",\"ServicesErrorModal\":\"ServicesErrorModal\",\"UnsupportedContractModal\":\"UnsupportedContractModal\",\"wallet-information\":\"wallet-information\"}[chunkId]||chunkId) + \".\" + \"8f1eafca3602d0867b45\" + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"modals\":1,\"work-in-progress\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + chunkId + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/bot/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \tvar startupResult = (function() {\n \t// add entry module to deferred list\n \tdeferredModules.push([463,\"vendors~main\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n \t})();\n\n \twebpackJsonpCallback([[], {}, 0, [\"modals\",\"settings-chart\",\"settings-language\",\"settings-theme\",\"toggle-cashier\"]]);\n \treturn startupResult;\n","export const website_domain = 'Deriv.app';\nexport const website_name   = 'Deriv';\nexport const default_title  = website_name;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport { Link }   from 'react-router-dom';\n\nconst ButtonLink = ({ children, className, to, onClick }) => (\n    <Link\n        className={classNames('btn btn--link', className, 'effect')}\n        to={to}\n        onClick={onClick}\n    >\n        {children}\n    </Link>\n);\n\nButtonLink.propTypes = {\n    children : PropTypes.object,\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n    to       : PropTypes.string,\n};\n\nexport default ButtonLink;\n","import { action, flow }     from 'mobx';\nimport Login                from '_common/base/login';\nimport ServerTime           from '_common/base/server_time';\nimport BinarySocket         from '_common/base/socket_base';\nimport { State }            from '_common/storage';\nimport { getPropertyValue } from '_common/utility';\nimport { localize }         from 'App/i18n';\nimport { requestLogout }    from './logout';\nimport WS                   from './ws-methods';\n\nlet client_store,\n    common_store,\n    gtm_store;\n\n// TODO: update commented statements to the corresponding functions from app\nconst BinarySocketGeneral = (() => {\n    const onDisconnect = () => {\n        common_store.setIsSocketOpened(false);\n    };\n\n    const onOpen = (is_ready) => {\n        // Header.hideNotification();\n        if (is_ready) {\n            if (!Login.isLoginPages()) {\n                if (!client_store.is_valid_login) {\n                    requestLogout();\n                    return;\n                }\n                WS.subscribeWebsiteStatus(ResponseHandlers.websiteStatus);\n            }\n            ServerTime.init(action('setTime', () => { common_store.server_time = ServerTime.get(); }));\n            common_store.setIsSocketOpened(true);\n        }\n    };\n\n    const onMessage = (response) => {\n        handleError(response);\n        // Header.hideNotification('CONNECTION_ERROR');\n        switch (response.msg_type) {\n            case 'authorize':\n                if (response.error) {\n                    const is_active_tab = sessionStorage.getItem('active_tab') === '1';\n                    if (getPropertyValue(response, ['error', 'code']) === 'SelfExclusion' && is_active_tab) {\n                        sessionStorage.removeItem('active_tab');\n                        // Dialog.alert({ id: 'authorize_error_alert', message: response.error.message });\n                    }\n                    requestLogout();\n                } else if (!Login.isLoginPages() && !/authorize/.test(State.get('skip_response'))) {\n                    // is_populating_account_list is a check to avoid logout on the first logged-in session\n                    // In any other case, if the response loginid does not match the store's loginid, user must be logged out\n                    if (response.authorize.loginid !== client_store.loginid &&\n                        !client_store.is_populating_account_list) {\n                        requestLogout();\n                    } else if (response.authorize.loginid === client_store.loginid) {\n                        // All other cases continue with the loginid and authorize the profile\n                        authorizeAccount(response);\n                    }\n                }\n                break;\n            case 'landing_company':\n                // Header.upgradeMessageVisibility();\n                break;\n            case 'get_self_exclusion':\n                // SessionDurationLimit.exclusionResponseHandler(response);\n                break;\n            case 'get_settings':\n                if (response.get_settings) {\n                    setResidence(response.get_settings.country_code);\n                    client_store.setEmail(response.get_settings.email);\n                    gtm_store.eventHandler(response.get_settings);\n                }\n                break;\n            case 'payout_currencies':\n                client_store.responsePayoutCurrencies(response.payout_currencies);\n                break;\n            case 'transaction':\n                gtm_store.pushTransactionData(response);\n                break;\n            // no default\n        }\n    };\n\n    const setResidence = (residence) => {\n        if (residence) {\n            client_store.setResidence(residence);\n            WS.landingCompany(residence);\n        }\n    };\n\n    const setBalance = flow(function* (balance) {\n        yield BinarySocket.wait('website_status');\n        client_store.setBalance(balance);\n    });\n\n    const handleError = (response) => {\n        const msg_type   = response.msg_type;\n        const error_code = getPropertyValue(response, ['error', 'code']);\n        switch (error_code) {\n            case 'WrongResponse':\n            case 'InternalServerError':\n            case 'OutputValidationFailed': {\n                if (msg_type !== 'mt5_login_list') {\n                    common_store.setError(true, { message: response.error.message });\n                }\n                break;\n            }\n            case 'RateLimit':\n                if (msg_type !== 'cashier_password') {\n                    common_store.setError(true, { message: localize('You have reached the rate limit of requests per second. Please try later.') });\n                }\n                break;\n            case 'InvalidAppID':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'DisabledClient':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            // no default\n        }\n    };\n\n    const init = (store) => {\n        client_store = store.client;\n        common_store = store.common;\n        gtm_store    = store.gtm;\n\n        return {\n            onDisconnect,\n            onOpen,\n            onMessage,\n        };\n    };\n\n    const authorizeAccount = (response) => {\n        client_store.responseAuthorize(response);\n        WS.subscribeBalance(ResponseHandlers.balance, true);\n        WS.sendRequest({ get_settings: 1 }, { forced: true });\n        WS.getAccountStatus();\n        WS.payoutCurrencies();\n        WS.mt5LoginList();\n        setResidence(\n            response.authorize.country ||\n            client_store.accounts[client_store.loginid].residence\n        );\n        if (!client_store.is_virtual) {\n            WS.getSelfExclusion();\n        }\n        BinarySocket.sendBuffered();\n        if (/bch/i.test(response.authorize.currency) && !client_store.accounts[client_store.loginid].accepted_bch) {\n            // showPopup({\n            //     url        : urlFor('user/warning'),\n            //     popup_id   : 'warning_popup',\n            //     form_id    : '#frm_warning',\n            //     content_id : '#warning_content',\n            //     validations: [{ selector: '#chk_accept', validations: [['req', { hide_asterisk: true }]] }],\n            //     onAccept   : () => { Client.set('accepted_bch', 1); },\n            // });\n        }\n    };\n\n    return {\n        init,\n        setBalance,\n        authorizeAccount,\n    };\n})();\n\nexport default BinarySocketGeneral;\n\nconst ResponseHandlers = (() => {\n    let is_available = false;\n    const websiteStatus = (response) => {\n        if (response.website_status) {\n            is_available = /^up$/i.test(response.website_status.site_status);\n            if (is_available && !BinarySocket.availability()) {\n                window.location.reload();\n                return;\n            }\n            if (response.website_status.message) {\n                // Footer.displayNotification(response.website_status.message);\n            } else {\n                // Footer.clearNotification();\n            }\n            BinarySocket.availability(is_available);\n            client_store.setWebsiteStatus(response);\n        }\n    };\n\n    const balance = (response) => {\n        if (!response.error){\n            BinarySocketGeneral.setBalance(response.balance.balance);\n        }\n    };\n\n    return {\n        websiteStatus,\n        balance,\n    };\n})();\n","import PropTypes      from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect }    from 'Stores/connect';\nimport routes         from '../../../Constants/routes';\n\nconst Redirect = ({\n    history,\n    setCashierActiveTab,\n    setVerificationCode,\n    toggleAccountSignupModal,\n    toggleCashierModal,\n}) => {\n    const url_params = new URLSearchParams(window.location.search);\n\n    setVerificationCode(url_params.get('code'));\n\n    switch (url_params.get('action')) {\n        case 'signup': {\n            toggleAccountSignupModal(true);\n            break;\n        }\n        case 'payment_withdraw': {\n            setCashierActiveTab('withdraw');\n            toggleCashierModal(true);\n            break;\n        }\n        default: break;\n    }\n\n    // Clear URL search params and route to root (currently set to `trade`)\n    window.history.replaceState({}, document.title, '/');\n    history.push(routes.root);\n\n    return null;\n};\n\nRedirect.propTypes = {\n    history                 : PropTypes.object,\n    setVerificationCode     : PropTypes.func,\n    toggleAccountSignupModal: PropTypes.func,\n    toggleCashierModal      : PropTypes.func,\n};\n\nexport default withRouter(connect(\n    ({ client, ui }) => ({\n        setCashierActiveTab     : ui.setCashierActiveTab,\n        setVerificationCode     : client.setVerificationCode,\n        toggleAccountSignupModal: ui.toggleAccountSignupModal,\n        toggleCashierModal      : ui.toggleCashierModal,\n    }),\n)(Redirect));\n","import { lazy }                       from 'react';\nimport { Redirect as RouterRedirect } from 'react-router-dom';\nimport { Redirect }                   from 'App/Containers/Redirect';\nimport { localize }                   from 'App/i18n';\nimport { routes }                     from 'Constants';\n\n// Error Routes\nconst Page404 = lazy(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404'));\n\nconst Bot = (() => {\n    const el_head = document.querySelector('head');\n    const el_scratch_js = document.createElement('script');\n    el_scratch_js.src = './js/bot/scratch.min.js';\n    el_head.appendChild(el_scratch_js);\n    return lazy(() => import(/* webpackChunkName: \"bot\" */ 'deriv-bot'));\n})();\n\n// TODO: search tag: test-route-parent-info -> Enable test for getting route parent info when there are nested routes\nconst initRoutesConfig = () => ([\n    { path: routes.index,     component: RouterRedirect,  title: '',                   to: routes.root },\n    { path: routes.root,      component: Bot,             title: localize('Trade'),    exact: true },\n    { path: routes.error404,  component: Page404,         title: localize('Error 404') },\n    { path: routes.redirect,  component: Redirect,        title: localize('Redirect') },\n]);\n\nlet routesConfig;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default  = { component: Page404, title: localize('Error 404') };\n\nconst getRoutesConfig = () => {\n    if (!routesConfig) {\n        routesConfig = initRoutesConfig();\n    }\n    routesConfig.push(route_default);\n    return routesConfig;\n};\n\nexport default getRoutesConfig;\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { NavLink }     from 'react-router-dom';\nimport {\n    findRouteByPath,\n    normalizePath }    from './helpers';\nimport getRoutesConfig from '../../Constants/routes-config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ active_class, to, children, ...props }) => {\n    const path  = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig());\n\n    if (!route) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return (\n        to ?\n            <NavLink to={path} activeClassName={active_class || 'active'} exact={route.exact} {...props}>\n                {children}\n            </NavLink>\n            :\n            <a {...props}>\n                {children}\n            </a>\n    );\n};\n\nBinaryLink.propTypes = {\n    active_class: PropTypes.string,\n    children    : PropTypes.object,\n    to          : PropTypes.string,\n};\n\nexport default BinaryLink;\n","import { matchPath } from 'react-router';\nimport routes        from 'Constants/routes';\n\nexport const normalizePath = (path) => /^\\//.test(path) ? path : `/${path || ''}`; // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some((route_info) => {\n        let match_path;\n        try {\n            match_path = matchPath(path, route_info);\n        } catch (e) {\n            if (/undefined/.test(e.message)) {\n                return undefined;\n            }\n        }\n\n        if (match_path) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) =>\n    !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) => (\n    Object.keys(params).reduce(\n        (p, name) => p.replace(`:${name}`, params[name]),\n        route_path,\n    )\n);\n\nexport const getContractPath = (contract_id) => getPath(routes.contract, { contract_id });\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { urlFor }   from '_common/url';\nimport PageError    from 'Modules/PageError';\nimport Localize     from './localize.jsx';\n\nconst LoginPrompt = ({\n    onLogin,\n    onSignup,\n    page_title,\n}) => (\n    <PageError\n        header={\n            <Localize\n                i18n_default_text='{{page_title}} page is only<0 />available for existing clients.'\n                values={{ page_title: page_title || 'This' }}\n                components={[ <br key={0} /> ]}\n            />\n        }\n        messages={[\n            <Localize\n                key={0}\n                i18n_default_text='If you have an active account, please <0>Log in</0> for full access. Otherwise, please <1>Sign up</1> to start trading.'\n                components={[\n                    <a key={0} className='link' onClick={onLogin} />,\n                    <a key={1} className='link' onClick={onSignup} />,\n                ]}\n            />,\n        ]}\n    />\n);\n\nLoginPrompt.propTypes = {\n    onLogin   : PropTypes.func,\n    onSignup  : PropTypes.func,\n    page_title: PropTypes.string,\n};\n\n// TODO - Remove this default setting once sign-up has been integrated to app 2\nLoginPrompt.defaultProps = {\n    onSignup: () => { window.open(urlFor('new-account', undefined, undefined, true)); },\n};\n\nexport default LoginPrompt;\n\n","import React               from 'react';\nimport {\n    Redirect,\n    Route }                from 'react-router-dom';\nimport { redirectToLogin } from '_common/base/login';\nimport BinarySocket        from '_common/base/socket_base';\nimport Language            from '_common/language';\nimport routes              from 'Constants/routes';\nimport { connect }         from 'Stores/connect';\nimport LoginPrompt         from '../Elements/login-prompt.jsx';\nimport { default_title }   from '../../Constants/app-config';\n\nconst RouteWithSubRoutes = route => {\n    const renderFactory = props => {\n        let result = null;\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else {\n            result = (\n                (route.is_authenticated && !route.is_logged_in) ?\n                    <LoginPrompt onLogin={redirectToLogin} page_title={route.title} />\n                    :\n                    <route.component {...props} routes={route.routes} passthrough={route.passthrough} />\n            );\n        }\n\n        Language.setCookie();\n        const title = route.title ? `${route.title} | ` : '';\n        document.title = `${ title }${ default_title }`;\n        BinarySocket.wait('website_status').then(() => {\n            route.pushDataLayer({ event: 'page_load' });\n        });\n        return result;\n    };\n\n    return <Route\n        exact={route.exact}\n        path={route.path}\n        render={renderFactory}\n    />;\n};\n\nexport { RouteWithSubRoutes as RouteWithSubRoutesRender }; // For tests\n\nexport default connect(({ gtm }) => ({\n    pushDataLayer: gtm.pushDataLayer,\n}))(RouteWithSubRoutes);\n","import React              from 'react';\nimport { Switch }         from 'react-router-dom';\nimport getRoutesConfig    from 'App/Constants/routes-config';\nimport RouteWithSubRoutes from './route-with-sub-routes.jsx';\n\nconst BinaryRoutes = (props) => (\n    <React.Suspense fallback={<div />}>\n        <Switch>\n            {\n                getRoutesConfig().map((route, idx) => (\n                    <RouteWithSubRoutes key={idx} {...route} {...props} />\n                ))\n            }\n        </Switch>\n    </React.Suspense>\n\n);\n\nexport default BinaryRoutes;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ButtonLink   from 'App/Components/Routes/button-link.jsx';\nimport Localize     from 'App/Components/Elements/localize.jsx';\n\nconst PageError = ({\n    buttonOnClick,\n    error_code,\n    messages,\n    header,\n    redirect_label,\n    redirect_url,\n}) => (\n    <div className='page-error__container'>\n        <div className='page-error__box'>\n            <h3 className='page-error__header'>\n                {header}\n            </h3>\n            <div className='page-error__message-wrapper'>\n                <span className='page-error__message'>\n                    { messages.map((message, index) => (\n                        message.has_html ?\n                            <p key={index} dangerouslySetInnerHTML={{ __html: message.message }} />\n                            :\n                            <p key={index}>{ message }</p>\n                    ))}\n                    { error_code &&\n                    <React.Fragment>\n                        <br />\n                        <p className='page-error__code'><Localize i18n_default_text={'Error Code: {{error_code}}'} values={{ error_code }} /></p>\n                    </React.Fragment>\n                    }\n                </span>\n            </div>\n            { redirect_label &&\n            <ButtonLink\n                className='page-error__btn btn--primary btn--primary--orange'\n                to={redirect_url}\n                onClick={buttonOnClick}\n            >\n                <span className='page-error__btn-text btn__text'>\n                    {redirect_label}\n                </span>\n            </ButtonLink>\n            }\n        </div>\n    </div>\n);\n\nPageError.propTypes = {\n    buttonOnClick : PropTypes.func,\n    error_code    : PropTypes.number,\n    header        : PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    messages      : PropTypes.array,\n    redirect_label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    redirect_url  : PropTypes.string,\n};\n\nexport default PageError;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst UILoader = ({ className, classNameBlock }) => {\n    const block_class   = classNames(classNameBlock, 'block-ui');\n    const loading_class = classNames('block-ui__loading', className);\n    return (\n        <div className={block_class}>\n            <div className={loading_class}>\n                <div className='block-ui__loading-spinner'>\n                    <svg className='block-ui__loading-spinner-circular' viewBox='25 25 50 50'>\n                        <circle className='block-ui__loading-spinner-path' cx='50' cy='50' r='20' fill='none' strokeWidth='4' strokeMiterlimit='10' />\n                    </svg>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nUILoader.propTypes = {\n    className     : PropTypes.string,\n    classNameBlock: PropTypes.string,\n};\n\nexport default UILoader;\n","const createElement = require('./utility').createElement;\n\n/*\n * function to check if element is visible or not\n *\n */\nconst isVisible = elem => !(!elem || (elem.offsetWidth === 0 && elem.offsetHeight === 0));\n\n/*\n * @param  {String}  id_selector   the selector for the element\n * @param  {Element} parent        optional selector to use for parent, defaults to document\n * @return {Element}               return element if it exists, if it doesn't return a dummy element\n */\nconst getElementById = (id_selector, parent = document) => parent.getElementById(id_selector) || createElement('div');\n\nmodule.exports = {\n    isVisible,\n    getElementById,\n};\n","import React     from 'react';\nimport PropTypes from 'prop-types';\n\nclass Icon extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        /* When adding a new icon, arrange it by following the ascending file system arrangement */\n        this.icons = {\n            // Common\n            IconArrowBold         : React.lazy(() => import('./Common/icon-arrow-bold.jsx')),\n            IconArrow             : React.lazy(() => import('./Common/icon-arrow.jsx')),\n            IconBack              : React.lazy(() => import('./Common/icon-back.jsx')),\n            IconCalendarToday     : React.lazy(() => import('./Common/icon-calendar-today.jsx')),\n            IconCalendar          : React.lazy(() => import('./Common/icon-calendar.jsx')),\n            IconChevronDoubleLeft : React.lazy(() => import('./Common/icon-chevron-double-left.jsx')),\n            IconChevronDoubleRight: React.lazy(() => import('./Common/icon-chevron-double-right.jsx')),\n            IconChevronLeft       : React.lazy(() => import('./Common/icon-chevron-left.jsx')),\n            IconChevronRight      : React.lazy(() => import('./Common/icon-chevron-right.jsx')),\n            IconClear             : React.lazy(() => import('./Common/icon-clear.jsx')),\n            IconClock             : React.lazy(() => import('./Common/icon-clock.jsx')),\n            IconClose             : React.lazy(() => import('./Common/icon-close.jsx')),\n            IconCountryFlag       : React.lazy(() => import('./Common/icon-country-flag.jsx')),\n            IconDanger            : React.lazy(() => import('./Common/icon-danger.jsx')),\n            IconDeposit           : React.lazy(() => import('./Common/icon-deposit.jsx')), // TODO: update big when design is ready\n            IconDepositSmall      : React.lazy(() => import('./Common/icon-deposit-small.jsx')),\n            IconExclamation       : React.lazy(() => import('./Common/icon-exclamation.jsx')),\n            IconFlag              : React.lazy(() => import('./Common/icon-flag.jsx')),\n            IconInfoBlue          : React.lazy(() => import('./Common/icon-info-blue.jsx')),\n            IconInfoOutline       : React.lazy(() => import('./Common/icon-info-outline.jsx')),\n            IconInformation       : React.lazy(() => import('./Common/icon-information.jsx')),\n            IconMinimize          : React.lazy(() => import('./Common/icon-minimize.jsx')),\n            IconMinus             : React.lazy(() => import('./Common/icon-minus.jsx')),\n            IconPlus              : React.lazy(() => import('./Common/icon-plus.jsx')),\n            IconQuestion          : React.lazy(() => import('./Common/icon-question.jsx')),\n            IconRedDot            : React.lazy(() => import('./Common/icon-red-dot.jsx')),\n            IconSuccess           : React.lazy(() => import('./Common/icon-success.jsx')),\n            IconWarning           : React.lazy(() => import('./Common/icon-warning.jsx')),\n            IconWip               : React.lazy(() => import('./Common/icon-wip.jsx')),\n            IconWithdrawal        : React.lazy(() => import('./Common/icon-withdrawal.jsx')), // TODO: update big when design is ready\n            IconWithdrawalSmall   : React.lazy(() => import('./Common/icon-withdrawal-small.jsx')),\n\n            // Contract\n            ContractIconClose: React.lazy(() => import('./Contract/icon-close.jsx')),\n            IconEndTime      : React.lazy(() => import('./Contract/icon-end-time.jsx')),\n            ContractIconFlag : React.lazy(() => import('./Contract/icon-flag.jsx')),\n            IconStartTime    : React.lazy(() => import('./Contract/icon-start-time.jsx')),\n            IconTick         : React.lazy(() => import('./Contract/icon-tick.jsx')),\n\n            // Cashier\n            IconAuthenticateWithdrawals: React.lazy(() => import('./Cashier/icon-authenticate-withdrawals.jsx')),\n            IconEmailSent              : React.lazy(() => import('./Cashier/icon-email-sent.jsx')),\n\n            // Modal\n            ModalIconClose: React.lazy(() => import('./Modal/icon-close.jsx')),\n\n            // Footer\n            IconMaximize : React.lazy(() => import('./Footer/icon-maximize.jsx')),\n            IconPositions: React.lazy(() => import('./Footer/icon-positions.jsx')),\n            IconSettings : React.lazy(() => import('./Footer/icon-settings.jsx')),\n\n            // Header\n            IconAccountsCurrency: React.lazy(() => import('./Header/AccountsCurrency/icon_accounts_currency.jsx')),\n            IconLogout          : React.lazy(() => import('./Header/Drawer/icon-logout.jsx')),\n            IconBell            : React.lazy(() => import('./Header/NavBar/icon-bell.jsx')),\n            IconCashier         : React.lazy(() => import('./Header/NavBar/icon-cashier.jsx')),\n            IconDeriv           : React.lazy(() => import('./Header/NavBar/icon-deriv.jsx')),\n            IconHamburger       : React.lazy(() => import('./Header/NavBar/icon-hamburger.jsx')),\n            IconPortfolio       : React.lazy(() => import('./Header/NavBar/icon-portfolio.jsx')),\n            IconReports         : React.lazy(() => import('./Header/NavBar/icon-reports.jsx')),\n            IconTrade           : React.lazy(() => import('./Header/NavBar/icon-trade.jsx')),\n\n            // Reports\n            IconDemo                : React.lazy(() => import('./Reports/icon-demo.jsx')),\n            IconOpenPositions       : React.lazy(() => import('./Reports/icon-open-positions.jsx')),\n            IconProfitTable         : React.lazy(() => import('./Reports/icon-profit-table.jsx')),\n            IconStatement           : React.lazy(() => import('./Reports/icon-statement.jsx')),\n            IconCalendarForwardToday: React.lazy(() => import('./Reports/ic-calendar-forwardtoday.jsx')),\n\n            // Settings\n            IconCharts  : React.lazy(() => import('./Settings/icon-charts.jsx')),\n            IconLanguage: React.lazy(() => import('./Settings/icon-language.jsx')),\n            IconPurchase: React.lazy(() => import('./Settings/icon-purchase.jsx')),\n            IconTheme   : React.lazy(() => import('./Settings/icon-theme.jsx')),\n\n            // Statement\n            IconBuy   : React.lazy(() => import('./Statement/icon-buy.jsx')),\n            IconPayout: React.lazy(() => import('./Statement/icon-payout.jsx')),\n            IconSell  : React.lazy(() => import('./Statement/icon-sell.jsx')),\n            IconWallet: React.lazy(() => import('./Statement/icon-wallet.jsx')),\n\n            // Trading\n            IconBarrierDown   : React.lazy(() => import('./Trading/Barriers/icon-barrier-down.jsx')),\n            IconBarrierUp     : React.lazy(() => import('./Trading/Barriers/icon-barrier-up.jsx')),\n            IconTradeCategory : React.lazy(() => import('./Trading/Categories/icon-trade-categories.jsx')),\n            TradeCategoriesGIF: React.lazy(() => import('./Trading/Categories/trade-categories-gif.jsx')),\n            TradeCategories   : React.lazy(() => import('./Trading/Categories/trade-categories.jsx')),\n            IconTradeType     : React.lazy(() => import('./Trading/Types/icon-trade-types.jsx')),\n            IconLock          : React.lazy(() => import('./Trading/icon-lock.jsx')),\n            IconPriceMove     : React.lazy(() => import('./Trading/icon-price-move.jsx')),\n        };\n    }\n\n    render() {\n        const options = {\n            category     : this.props.category,\n            className    : this.props.className,\n            classNamePath: this.props.classNamePath,\n            classNameRect: this.props.classNameRect,\n            is_dark_theme: this.props.is_dark_theme,\n            is_disabled  : this.props.is_disabled,\n            onClick      : this.props.onClick,\n            onMouseEnter : this.props.onMouseEnter,\n            onMouseLeave : this.props.onMouseLeave,\n            type         : this.props.type,\n        };\n\n        const IconLazy = this.icons[this.props.icon];\n        if (!IconLazy) return <div />;\n\n        return (\n            <React.Suspense fallback={<div />}>\n                <IconLazy {...options} />\n            </React.Suspense>\n        );\n    }\n}\n\nIcon.propTypes = {\n    category     : PropTypes.string,\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n    classNameRect: PropTypes.string,\n    icon         : PropTypes.string,\n    is_dark_theme: PropTypes.bool,\n    is_disabled  : PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n    onClick      : PropTypes.func,\n    type         : PropTypes.string,\n};\n\nexport default Icon;\n","const Cookies          = require('js-cookie');\nconst getPropertyValue = require('./utility').getPropertyValue;\nconst isEmptyObject    = require('./utility').isEmptyObject;\nconst isProduction     = require('../config').isProduction;\n\nconst getObject = function (key) {\n    return JSON.parse(this.getItem(key) || '{}');\n};\n\nconst setObject = function (key, value) {\n    if (value && value instanceof Object) {\n        try {\n            this.setItem(key, JSON.stringify(value));\n        } catch (e) { /* do nothing */ }\n    }\n};\n\nif (typeof Storage !== 'undefined') {\n    Storage.prototype.getObject = getObject;\n    Storage.prototype.setObject = setObject;\n}\n\nconst isStorageSupported = (storage) => {\n    if (typeof storage === 'undefined') {\n        return false;\n    }\n\n    const test_key = 'test';\n    try {\n        storage.setItem(test_key, '1');\n        storage.removeItem(test_key);\n        return true;\n    } catch (e) {\n        return false;\n    }\n};\n\nconst Store = function (storage) {\n    this.storage           = storage;\n    this.storage.getObject = getObject;\n    this.storage.setObject = setObject;\n};\n\nStore.prototype = {\n    get(key) {\n        return this.storage.getItem(key) || undefined;\n    },\n    set(key, value) {\n        if (typeof value !== 'undefined') {\n            this.storage.setItem(key, value);\n        }\n    },\n    getObject(key) {\n        return typeof this.storage.getObject === 'function' // Prevent runtime error in IE\n            ? this.storage.getObject(key)\n            : JSON.parse(this.storage.getItem(key) || '{}');\n    },\n    setObject(key, value) {\n        if (typeof this.storage.setObject === 'function') { // Prevent runtime error in IE\n            this.storage.setObject(key, value);\n        } else {\n            this.storage.setItem(key, JSON.stringify(value));\n        }\n    },\n    remove(key) { this.storage.removeItem(key); },\n    clear()     { this.storage.clear(); },\n};\n\nconst InScriptStore = function (object) {\n    this.store = typeof object !== 'undefined' ? object : {};\n};\n\nInScriptStore.prototype = {\n    get(key) {\n        return getPropertyValue(this.store, key);\n    },\n    set(k, value, obj = this.store) {\n        let key = k;\n        if (!Array.isArray(key)) key = [key];\n        if (key.length > 1) {\n            if (!(key[0] in obj) || isEmptyObject(obj[key[0]])) obj[key[0]] = {};\n            this.set(key.slice(1), value, obj[key[0]]);\n        } else {\n            obj[key[0]] = value;\n        }\n    },\n    getObject(key) {\n        return JSON.parse(this.get(key) || '{}');\n    },\n    setObject(key, value) {\n        this.set(key, JSON.stringify(value));\n    },\n    remove(...keys) {\n        keys.forEach((key) => { delete this.store[key]; });\n    },\n    clear()   { this.store = {}; },\n    has(key)  { return this.get(key) !== undefined; },\n    keys()    { return Object.keys(this.store); },\n    call(key) { if (typeof this.get(key) === 'function') this.get(key)(); },\n};\n\nconst State     = new InScriptStore();\nState.prototype = InScriptStore.prototype;\n/**\n * Shorthand function to get values from response object of State\n *\n * @param {String} pathname\n *     e.g. getResponse('authorize.currency') == get(['response', 'authorize', 'authorize', 'currency'])\n */\nState.prototype.getResponse = function (pathname) {\n    let path = pathname;\n    if (typeof path === 'string') {\n        const keys = path.split('.');\n        path = ['response', keys[0]].concat(keys);\n    }\n    return this.get(path);\n};\nState.set('response', {});\n\nconst CookieStorage = function (cookie_name, cookie_domain) {\n    const hostname = window.location.hostname;\n\n    this.initialized = false;\n    this.cookie_name = cookie_name;\n    this.domain      = cookie_domain || (isProduction() ? `.${hostname.split('.').slice(-2).join('.')}` : hostname);\n    this.path        = '/';\n    this.expires     = new Date('Thu, 1 Jan 2037 12:00:00 GMT');\n    this.value       = {};\n};\n\nCookieStorage.prototype = {\n    read() {\n        const cookie_value = Cookies.get(this.cookie_name);\n        try {\n            this.value = cookie_value ? JSON.parse(cookie_value) : {};\n        } catch (e) {\n            this.value = {};\n        }\n        this.initialized = true;\n    },\n    write(val, expireDate, isSecure) {\n        if (!this.initialized) this.read();\n        this.value = val;\n        if (expireDate) this.expires = expireDate;\n        Cookies.set(this.cookie_name, this.value, {\n            expires: this.expires,\n            path   : this.path,\n            domain : this.domain,\n            secure : !!isSecure,\n        });\n    },\n    get(key) {\n        if (!this.initialized) this.read();\n        return this.value[key];\n    },\n    set(key, val) {\n        if (!this.initialized) this.read();\n        this.value[key] = val;\n        Cookies.set(this.cookie_name, this.value, {\n            expires: new Date(this.expires),\n            path   : this.path,\n            domain : this.domain,\n        });\n    },\n    remove() {\n        Cookies.remove(this.cookie_name, {\n            path  : this.path,\n            domain: this.domain,\n        });\n    },\n};\n\nconst removeCookies = (...cookie_names) => {\n    const domains = [\n        `.${document.domain.split('.').slice(-2).join('.')}`,\n        `.${document.domain}`,\n    ];\n\n    let parent_path = window.location.pathname.split('/', 2)[1];\n    if (parent_path !== '') {\n        parent_path = `/${parent_path}`;\n    }\n\n    cookie_names.forEach((c) => {\n        Cookies.remove(c, { path: '/', domain: domains[0] });\n        Cookies.remove(c, { path: '/', domain: domains[1] });\n        Cookies.remove(c);\n        if (new RegExp(c).test(document.cookie) && parent_path) {\n            Cookies.remove(c, { path: parent_path, domain: domains[0] });\n            Cookies.remove(c, { path: parent_path, domain: domains[1] });\n            Cookies.remove(c, { path: parent_path });\n        }\n    });\n};\n\nlet SessionStore,\n    LocalStore;\n\nif (isStorageSupported(window.localStorage)) {\n    LocalStore = new Store(window.localStorage);\n}\nif (isStorageSupported(window.sessionStorage)) {\n    SessionStore = new Store(window.sessionStorage);\n}\n\nif (!LocalStore) {\n    LocalStore = new InScriptStore();\n}\nif (!SessionStore) {\n    SessionStore = new InScriptStore();\n}\n\nmodule.exports = {\n    isStorageSupported,\n    CookieStorage,\n    removeCookies,\n    State,\n    SessionStore,\n    LocalStore,\n};\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { Trans }        from 'react-i18next';\n\nconst Localize = ({ i18n_default_text, values, components }) => (\n    <Trans defaults={i18n_default_text} values={values} components={components} />\n);\n\nLocalize.propTypes = {\n    components       : PropTypes.arrayOf(PropTypes.node),\n    i18n_default_text: PropTypes.string,\n    values           : PropTypes.object,\n};\n\nexport default Localize;\n","import classNames                  from 'classnames';\nimport React                       from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport Icon                        from 'Assets/icon.jsx';\nimport routes                      from 'Constants/routes';\n\nclass VerticalTabContentContainer extends React.PureComponent {\n    render() {\n        const {\n            action_bar,\n            action_bar_classname,\n            is_routed,\n            items,\n            selected,\n        } = this.props;\n        const selected_item = items.find(item => item.label === selected.label);\n        const TabContent    = selected_item.value;\n\n        return (\n            <div className='vertical-tab__content'>\n                { action_bar &&\n                    <div className={classNames('vertical-tab__action-bar', {\n                        [action_bar_classname]: !!action_bar_classname,\n                    })}\n                    >\n                        {\n                            action_bar.map(({ component, icon, onClick, title }) => {\n                                const Component = component;\n                                return (\n                                    component ?\n                                        <Component key={title} />\n                                        :\n                                        <div\n                                            className='vertical-tab__action-bar-wrapper'\n                                            key={title}\n                                            onClick={onClick}\n                                        >\n                                            <Icon\n                                                className='vertical-tab__action-bar--icon'\n                                                icon={icon}\n                                            />\n                                        </div>\n                                );\n                            })\n                        }\n                    </div>\n                }\n                { is_routed ?\n                    <Switch>\n                        <Redirect exact from={routes.reports} to={routes.positions} />\n                        {\n                            items.map(({ value, path, icon }) => {\n                                const Component = value;\n                                return (\n                                    <Route\n                                        key={path}\n                                        path={path}\n                                        render={() => <Component component_icon={icon} />}\n                                    />\n                                );\n                            })\n                        }\n                    </Switch>\n                    :\n                    <TabContent\n                        key={selected_item.label}\n                        className='item-id'\n                    />\n                }\n            </div>\n        );\n    }\n}\n\nexport { VerticalTabContentContainer };\n","import classNames  from 'classnames';\nimport React       from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Icon        from 'Assets/icon.jsx';\n\nclass VerticalTabHeaders extends React.PureComponent {\n    render() {\n        return (\n            <div className='vertical-tab__tab'>\n                {this.props.header_title &&\n                    <div className='vertical-tab__header-title'>\n                        <p>{ this.props.header_title }</p>\n                    </div>\n                }\n\n                {this.props.items.map(item => {\n                    // Capitalize only the first letter of the label and make the rest lowercase\n                    const label = item.label.charAt(0).toUpperCase() + item.label.slice(1).toLowerCase();\n\n                    return (\n                        this.props.is_routed ?\n                            <NavLink\n                                key={item.path}\n                                to={item.path}\n                                onClick={() => this.props.onChange(item)}\n                                className='vertical-tab__header'\n                                activeClassName={\n                                    classNames({\n                                        'vertical-tab__header--active': this.props.selected.label === item.label,\n                                    })\n                                }\n                            >\n                                <Icon\n                                    icon={item.icon}\n                                    className={classNames('vertical-tab__header__icon', {\n                                        'vertical-tab__header__icon--active': this.props.selected.label === item.label,\n                                    })}\n                                />\n                                <span className='vertical-tab__header__link'>{label}</span>\n                            </NavLink>\n                            :\n                            <div\n                                className={\n                                    classNames('vertical-tab__header', {\n                                        'vertical-tab__header--active': this.props.selected.label === item.label,\n                                    })\n                                }\n                                key={item.label}\n                                onClick={() => this.props.onChange(item)}\n                            >\n                                <Icon\n                                    icon={item.icon}\n                                    className={classNames('vertical-tab__header__icon', {\n                                        'vertical-tab__header__icon--active': this.props.selected.label === item.label,\n                                    })}\n                                />\n                                <a\n                                    key={item.label}\n                                    className='vertical-tab__header__link'\n                                >\n                                    {label}\n                                </a>\n                            </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport { VerticalTabHeaders };\n","import classNames                      from 'classnames';\nimport PropTypes                       from 'prop-types';\nimport React                           from 'react';\nimport { VerticalTabContentContainer } from './vertical-tab-content-container.jsx';\nimport { VerticalTabHeaders }          from './vertical-tab-headers.jsx';\n\nclass VerticalTab extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        if (props.is_routed) {\n            const applicable_routes = props.list.filter(item => (\n                item.path === props.current_path || item.default\n            ));\n            const selected = applicable_routes.length > 1\n                ? applicable_routes[applicable_routes.length - 1]\n                : applicable_routes[0];\n\n            this.state = {\n                selected,\n            };\n        } else {\n            this.state = {\n                selected: props.list[props.selected_index || 0],\n            };\n        }\n    }\n\n    changeSelected = (e) => {\n        this.setState({\n            selected: e,\n        });\n    };\n\n    render() {\n        return (\n            <div\n                className={classNames('vertical-tab', {\n                    'vertical-tab--full-screen': this.props.is_full_width,\n                })}\n            >\n                <VerticalTabHeaders\n                    items={this.props.list}\n                    onChange={this.changeSelected}\n                    selected={this.state.selected}\n                    is_routed={this.props.is_routed}\n                    header_title={this.props.header_title}\n                />\n                <VerticalTabContentContainer\n                    action_bar={this.props.action_bar}\n                    action_bar_classname={this.props.action_bar_classname}\n                    items={this.props.list}\n                    selected={this.state.selected}\n                    is_routed={this.props.is_routed}\n                />\n            </div>\n        );\n    }\n}\n\nVerticalTab.propTypes = {\n    action_bar: PropTypes.arrayOf(\n        PropTypes.shape({\n            component: PropTypes.func,\n            icon     : PropTypes.string,\n            onClick  : PropTypes.func,\n            title    : PropTypes.string,\n        })\n    ),\n    action_bar_classname: PropTypes.string,\n    current_path        : PropTypes.string,\n    header_title        : PropTypes.string,\n    is_full_width       : PropTypes.bool,\n    is_routed           : PropTypes.bool,\n    list                : PropTypes.arrayOf(\n        PropTypes.shape({\n            default: PropTypes.bool,\n            icon   : PropTypes.string,\n            label  : PropTypes.string,\n            path   : PropTypes.string,\n            value  : PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n        })\n    ).isRequired,\n    selected_index: PropTypes.number,\n};\n\nexport default VerticalTab;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport ReactDOM          from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport Icon              from 'Assets/icon.jsx';\nimport VerticalTab       from 'App/Components/Elements/VerticalTabs';\n\nclass ModalElement extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.el = document.createElement('div');\n        this.state = {\n            modal_root: document.getElementById('modal_root'),\n        };\n    }\n\n    componentDidMount = () => {\n        document.addEventListener('mousedown', this.handleClickOutside);\n        this.el.classList.add('modal');\n        this.props.showFullBlur();\n        this.state.modal_root.appendChild(this.el);\n    };\n\n    componentWillUnmount = () => {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n        this.state.modal_root.removeChild(this.el);\n        this.props.hideFullBlur();\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.props.is_open) {\n            this.props.hideFullBlur();\n            this.props.toggleModal();\n        }\n    };\n\n    render() {\n        return ReactDOM.createPortal(\n            <div ref={this.setWrapperRef} className={classNames('modal__container', this.props.className && `modal__${this.props.className}`)}>\n                <div className='modal-header'>\n                    <h3 className='modal-header__sidebar'>{this.props.title}</h3>\n                    <div className='modal-header__main'>\n                        { this.props.header &&\n                            <div className='modal-header__section'>\n                                {this.props.header}\n                            </div>\n                        }\n                        <div className='modal-header__close' onClick={this.props.toggleModal}>\n                            <Icon icon='ModalIconClose' />\n                        </div>\n                    </div>\n                </div>\n                <VerticalTab\n                    alignment='center'\n                    classNameHeader='modal__tab-header'\n                    list={this.props.modal_content}\n                    selected_index={this.props.selected_index}\n                />\n            </div>,\n            this.el\n        );\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n}\n\nModalElement.propTypes = {\n    className     : PropTypes.string,\n    header        : PropTypes.node,\n    hideFullBlur  : PropTypes.func,\n    is_open       : PropTypes.bool,\n    modal_content : PropTypes.array,\n    selected_index: PropTypes.number,\n    showFullBlur  : PropTypes.func,\n    title         : PropTypes.string,\n    toggleModal   : PropTypes.func,\n};\n\nconst Modal = ({\n    className,\n    header,\n    hideFullBlur,\n    is_open,\n    modal_content,\n    selected_index,\n    showFullBlur,\n    title,\n    toggleModal,\n}) => (\n    <CSSTransition\n        appear\n        in={is_open}\n        timeout={250}\n        classNames={{\n            appear   : 'modal__container--enter',\n            enter    : 'modal__container--enter',\n            enterDone: 'modal__container--enter-done',\n            exit     : 'modal__container--exit',\n        }}\n        unmountOnExit\n    >\n        <ModalElement\n            className={className}\n            header={header}\n            hideFullBlur={hideFullBlur}\n            is_open={is_open}\n            modal_content={modal_content}\n            selected_index={selected_index}\n            showFullBlur={showFullBlur}\n            title={title}\n            toggleModal={toggleModal}\n        />\n    </CSSTransition>\n);\n\nModal.propTypes = {\n    className     : PropTypes.string,\n    header        : PropTypes.node,\n    hideFullBlur  : PropTypes.func,\n    is_open       : PropTypes.bool,\n    modal_content : PropTypes.array,\n    selected_index: PropTypes.number,\n    showFullBlur  : PropTypes.func,\n    title         : PropTypes.string,\n    toggleModal   : PropTypes.func,\n};\n\nexport {\n    Modal,\n    ModalElement,\n};\n","import { get, getAll, urlFor } from '_common/language';\n\nexport const currentLanguage = get();\n\nexport const getAllowedLanguages = () => {\n    const exclude_languages = [\n        'ACH',\n    ];\n    // TODO Change language_list to const when design is ready.\n    let language_list = Object.keys(getAll())\n        .filter(key => !(exclude_languages.includes(key)))\n        .reduce((obj, key) => {\n            obj[key] = getAll()[key];\n            return obj;\n        }, {});\n\n    // TODO Remove this one line below when design is ready.\n    language_list = { EN: 'English' };\n    return language_list;\n};\n\nexport const getURL = lang => urlFor(lang);\n","export * from './language';\n","const moment           = require('moment');\nconst isCryptocurrency = require('./currency_base').isCryptocurrency;\nconst SocketCache      = require('./socket_cache');\nconst localize         = require('../../App/i18n').localize;\nconst LocalStore       = require('../storage').LocalStore;\nconst State            = require('../storage').State;\nconst getPropertyValue = require('../utility').getPropertyValue;\nconst isEmptyObject    = require('../utility').isEmptyObject;\n\nconst ClientBase = (() => {\n    const storage_key = 'client.accounts';\n    let client_object = {};\n    let current_loginid;\n\n    const init = () => {\n        current_loginid = LocalStore.get('active_loginid');\n        client_object   = getAllAccountsObject();\n    };\n\n    const isLoggedIn = () => (\n        !isEmptyObject(getAllAccountsObject()) &&\n        get('loginid') &&\n        get('token')\n    );\n\n    const isValidLoginid = () => {\n        if (!isLoggedIn()) return true;\n        const valid_login_ids = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG)[0-9]+$', 'i');\n        return getAllLoginids().every(loginid => valid_login_ids.test(loginid));\n    };\n\n    /**\n     * Stores the client information in local variable and localStorage\n     *\n     * @param {String} key                 The property name to set\n     * @param {String|Number|Object} value The regarding value\n     * @param {String|null} loginid        The account to set the value for\n     */\n    const set = (key, value, loginid = current_loginid) => {\n        if (key === 'loginid' && value !== current_loginid) {\n            LocalStore.set('active_loginid', value);\n            current_loginid = value;\n        } else {\n            if (!(loginid in client_object)) {\n                client_object[loginid] = {};\n            }\n            client_object[loginid][key] = value;\n            LocalStore.setObject(storage_key, client_object);\n        }\n    };\n\n    /**\n     * Returns the client information\n     *\n     * @param {String|null} key     The property name to return the value from, if missing returns the account object\n     * @param {String|null} loginid The account to return the value from\n     */\n    const get = (key, loginid = current_loginid) => {\n        let value;\n        if (key === 'loginid') {\n            value = loginid || LocalStore.get('active_loginid');\n        } else {\n            const current_client = client_object[loginid] || getAllAccountsObject()[loginid] || client_object;\n\n            value = key ? current_client[key] : current_client;\n        }\n        if (!Array.isArray(value) && (+value === 1 || +value === 0 || value === 'true' || value === 'false')) {\n            value = JSON.parse(value || false);\n        }\n        return value;\n    };\n\n    const getAllAccountsObject = () => LocalStore.getObject(storage_key);\n\n    const getAllLoginids = () => Object.keys(getAllAccountsObject());\n\n    const getAccountType = (loginid = current_loginid) => {\n        let account_type;\n        if (/^VR/.test(loginid))          account_type = 'virtual';\n        else if (/^MF/.test(loginid))     account_type = 'financial';\n        else if (/^MLT|MX/.test(loginid)) account_type = 'gaming';\n        return account_type;\n    };\n\n    const isAccountOfType = (type, loginid = current_loginid, only_enabled = false) => {\n        const this_type   = getAccountType(loginid);\n        return ((\n            (type === 'virtual' && this_type === 'virtual') ||\n            (type === 'real'    && this_type !== 'virtual') ||\n            type === this_type) &&\n            (only_enabled ? !get('is_disabled', loginid) : true));\n    };\n\n    const getAccountOfType = (type, only_enabled) => {\n        const id = getAllLoginids().find(loginid => isAccountOfType(type, loginid, only_enabled));\n        return id ? Object.assign({ loginid: id }, get(null, id)) : {};\n    };\n\n    const hasAccountType = (type, only_enabled) => !isEmptyObject(getAccountOfType(type, only_enabled));\n\n    // only considers currency of real money accounts\n    // @param {String} type = crypto|fiat\n    const hasCurrencyType = (type) => {\n        const loginids = getAllLoginids();\n        if (type === 'crypto') {\n            // find if has crypto currency account\n            return loginids.find(loginid =>\n                !get('is_virtual', loginid) && isCryptocurrency(get('currency', loginid)));\n        }\n        // else find if have fiat currency account\n        return loginids.find(loginid =>\n            !get('is_virtual', loginid) && !isCryptocurrency(get('currency', loginid)));\n    };\n\n    const TypesMapConfig = (() => {\n        let types_map_config;\n\n        const initTypesMap = () => ({\n            default  : localize('Real'),\n            financial: localize('Investment'),\n            gaming   : localize('Gaming'),\n            virtual  : localize('Virtual'),\n        });\n\n        return {\n            get: () => {\n                if (!types_map_config) {\n                    types_map_config = initTypesMap();\n                }\n                return types_map_config;\n            },\n        };\n    })();\n\n    const getAccountTitle = loginid => {\n        const types_map = TypesMapConfig.get();\n        return (types_map[getAccountType(loginid)] || types_map.default);\n    };\n\n    const responseAuthorize = (response) => {\n        const authorize = response.authorize;\n        set('email',      authorize.email);\n        set('currency',   authorize.currency);\n        set('is_virtual', +authorize.is_virtual);\n        set('session_start', parseInt(moment().valueOf() / 1000));\n        set('landing_company_shortcode', authorize.landing_company_name);\n        updateAccountList(authorize.account_list);\n    };\n\n    const updateAccountList = (account_list) => {\n        account_list.forEach((account) => {\n            set('excluded_until', account.excluded_until || '', account.loginid);\n            Object.keys(account).forEach((param) => {\n                const param_to_set = param === 'country' ? 'residence' : param;\n                const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                if (param_to_set !== 'loginid') {\n                    set(param_to_set, value_to_set, account.loginid);\n                }\n            });\n        });\n    };\n\n    const shouldAcceptTnc = () => {\n        if (get('is_virtual')) return false;\n        const website_tnc_version = State.getResponse('website_status.terms_conditions_version');\n        const client_tnc_status   = State.getResponse('get_settings.client_tnc_status');\n        return typeof client_tnc_status !== 'undefined' && client_tnc_status !== website_tnc_version;\n    };\n\n    const clearAllAccounts = () => {\n        current_loginid = undefined;\n        client_object   = {};\n        LocalStore.setObject(storage_key, client_object);\n    };\n\n    const setNewAccount = (options) => {\n        if (!options.email || !options.loginid || !options.token) {\n            return false;\n        }\n\n        SocketCache.clear();\n        localStorage.setItem('GTM_new_account', '1');\n\n        set('token',      options.token,       options.loginid);\n        set('email',      options.email,       options.loginid);\n        set('is_virtual', +options.is_virtual, options.loginid);\n        set('loginid',    options.loginid);\n\n        return true;\n    };\n\n    const currentLandingCompany = () => {\n        const landing_company_response = State.getResponse('landing_company') || {};\n        const this_shortcode           = get('landing_company_shortcode');\n        const landing_company_prop     = Object.keys(landing_company_response).find((key) => (\n            this_shortcode === landing_company_response[key].shortcode\n        ));\n        return landing_company_response[landing_company_prop] || {};\n    };\n\n    const shouldCompleteTax = () => isAccountOfType('financial') &&\n        !/crs_tin_information/.test((State.getResponse('get_account_status') || {}).status);\n\n    // remove manager id or master distinction from group\n    // remove EUR or GBP distinction from group\n    const getMT5AccountType = group => (group ? group.replace('\\\\', '_').replace(/_(\\d+|master|EUR|GBP)/, '') : '');\n\n    const getBasicUpgradeInfo = () => {\n        const upgradeable_landing_companies = State.getResponse('authorize.upgradeable_landing_companies');\n\n        let can_open_multi = false;\n        let type,\n            can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            const current_landing_company = get('landing_company_shortcode');\n\n            can_open_multi = upgradeable_landing_companies.indexOf(current_landing_company) !== -1;\n\n            // only show upgrade message to landing companies other than current\n            const canUpgrade = (...landing_companies) => landing_companies.find(landing_company => (\n                landing_company !== current_landing_company &&\n                upgradeable_landing_companies.indexOf(landing_company) !== -1\n            ));\n\n            can_upgrade_to = canUpgrade('svg', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    };\n\n    const getLandingCompanyValue = (loginid, landing_company, key) => {\n        let landing_company_object;\n        if (loginid.financial || isAccountOfType('financial', loginid)) {\n            landing_company_object = getPropertyValue(landing_company, 'financial_company');\n        } else if (loginid.real || isAccountOfType('real', loginid)) {\n            landing_company_object = getPropertyValue(landing_company, 'gaming_company');\n\n            // handle accounts that don't have gaming company\n            if (!landing_company_object) {\n                landing_company_object = getPropertyValue(landing_company, 'financial_company');\n            }\n        } else {\n            const financial_company = (getPropertyValue(landing_company, 'financial_company') || {})[key] || [];\n            const gaming_company    = (getPropertyValue(landing_company, 'gaming_company') || {})[key] || [];\n            landing_company_object  = financial_company.concat(gaming_company);\n            return landing_company_object;\n        }\n        return (landing_company_object || {})[key];\n    };\n\n    const getRiskAssessment = () => {\n        const status       = State.getResponse('get_account_status.status');\n        const is_high_risk = /high/.test(State.getResponse('get_account_status.risk_classification'));\n\n        return (\n            isAccountOfType('financial') ?\n                /(financial_assessment|trading_experience)_not_complete/.test(status) :\n                (is_high_risk && /financial_assessment_not_complete/.test(status))\n        );\n    };\n\n    // API_V3: send a list of accounts the client can transfer to\n    const canTransferFunds = (account) => {\n        if (account) {\n            // this specific account can be used to transfer funds to\n            return canTransferFundsTo(account.loginid);\n        }\n        // at least one account can be used to transfer funds to\n        return Object.keys(client_object).some(loginid => canTransferFundsTo(loginid));\n    };\n\n    const canTransferFundsTo = (to_loginid) => {\n        if (to_loginid === current_loginid || get('is_virtual', to_loginid) || get('is_virtual') ||\n            get('is_disabled', to_loginid)) {\n            return false;\n        }\n        const from_currency = get('currency');\n        const to_currency   = get('currency', to_loginid);\n        if (!from_currency || !to_currency) {\n            return false;\n        }\n        // only transfer to other accounts that have the same currency as current account if one is maltainvest and one is malta\n        if (from_currency === to_currency) {\n            // these landing companies are allowed to transfer funds to each other if they have the same currency\n            const same_cur_allowed = {\n                maltainvest: 'malta',\n                malta      : 'maltainvest',\n            };\n            const from_landing_company = get('landing_company_shortcode');\n            const to_landing_company   = get('landing_company_shortcode', to_loginid);\n            // if same_cur_allowed[from_landing_company] is undefined and to_landing_company is also undefined, it will return true\n            // so we should compare '' === undefined instead\n            return (same_cur_allowed[from_landing_company] || '') === to_landing_company;\n        }\n        // or for other clients if current account is cryptocurrency it should only transfer to fiat currencies and vice versa\n        const is_from_crypto = isCryptocurrency(from_currency);\n        const is_to_crypto   = isCryptocurrency(to_currency);\n        return (is_from_crypto ? !is_to_crypto : is_to_crypto);\n    };\n\n    const hasSvgAccount = () => !!(getAllLoginids().find(loginid => /^CR/.test(loginid)));\n\n    const canChangeCurrency = (statement, mt5_login_list, is_current = true) => {\n        const currency             = get('currency');\n        const has_no_mt5           = mt5_login_list.length === 0;\n        const has_no_transaction   = (statement.count === 0 && statement.transactions.length === 0);\n        const has_account_criteria = has_no_transaction && has_no_mt5;\n\n        // Current API requirements for currently logged-in user successfully changing their account's currency:\n        // 1. User must not have made any transactions\n        // 2. User must not have any MT5 account\n        // 3. Not be a crypto account\n        // 4. Not be a virtual account\n        return is_current ? currency && !get('is_virtual') && has_account_criteria && !isCryptocurrency(currency) : has_account_criteria;\n    };\n\n    return {\n        init,\n        isLoggedIn,\n        isValidLoginid,\n        set,\n        get,\n        getAllLoginids,\n        getAccountType,\n        isAccountOfType,\n        getAccountOfType,\n        hasAccountType,\n        hasCurrencyType,\n        getAccountTitle,\n        responseAuthorize,\n        shouldAcceptTnc,\n        clearAllAccounts,\n        setNewAccount,\n        currentLandingCompany,\n        shouldCompleteTax,\n        getAllAccountsObject,\n        getMT5AccountType,\n        getBasicUpgradeInfo,\n        getLandingCompanyValue,\n        getRiskAssessment,\n        canTransferFunds,\n        hasSvgAccount,\n        canChangeCurrency,\n    };\n})();\n\nmodule.exports = ClientBase;\n","const BinarySocket = require('./socket_base');\nconst localize     = require('../../App/i18n').localize;\n\n/*\n * Monitors the network status and initialises the WebSocket connection\n * 1. online : check the WS status (init/send: blink after timeout, open/message: online)\n * 2. offline: it is offline\n */\nconst NetworkMonitorBase = (() => {\n    const StatusConfig = (() => {\n        let status_config;\n\n        const initStatusConfig = () => ({\n            online  : { class: 'online',  tooltip: localize('Online') },\n            offline : { class: 'offline', tooltip: localize('Offline') },\n            blinking: { class: 'blinker', tooltip: localize('Connecting to server') },\n        });\n\n        return {\n            get: (status) => {\n                if (!status_config) {\n                    status_config = initStatusConfig();\n                }\n                return status_config[status];\n            },\n        };\n    })();\n\n    const pendings = {};\n    const pending_keys = {\n        ws_init   : 'ws_init',\n        ws_request: 'ws_request',\n    };\n    const pending_timeouts = {\n        [pending_keys.ws_init]   : 5000,\n        [pending_keys.ws_request]: 10000,\n    };\n\n    let ws_config,\n        network_status,\n        updateUI;\n\n    const init = (socket_general_functions, fncUpdateUI) => {\n        updateUI  = fncUpdateUI;\n        ws_config = Object.assign({ wsEvent, isOnline }, socket_general_functions);\n\n        if ('onLine' in navigator) {\n            window.addEventListener('online',  setStatus);\n            window.addEventListener('offline', setStatus);\n        } else { // if not supported, default to online and fallback to WS checks\n            navigator.onLine = true;\n        }\n\n        if (isOnline()) {\n            BinarySocket.init(ws_config);\n        }\n\n        setStatus(isOnline() ? 'online' : 'offline');\n    };\n\n    const isOnline = () => navigator.onLine;\n\n    const wsReconnect = () => {\n        if (isOnline() && BinarySocket.hasReadyState(2, 3)) { // CLOSING or CLOSED\n            BinarySocket.init(ws_config);\n        } else {\n            BinarySocket.send({ ping: 1 }); // trigger a request to get stable status sooner\n        }\n    };\n\n    const setStatus = (status) => {\n        if (!isOnline()) {\n            network_status = 'offline';\n        } else if (pending_keys[status] || network_status === 'offline') {\n            network_status = 'blinking';\n            wsReconnect();\n        } else {\n            network_status = 'online';\n        }\n\n        if (typeof updateUI === 'function') {\n            updateUI(StatusConfig.get(network_status), isOnline());\n        }\n    };\n\n    const ws_events_map = {\n        init   : () => setPending(pending_keys.ws_init),\n        open   : () => clearPendings(pending_keys.ws_init),\n        send   : () => setPending(pending_keys.ws_request),\n        message: () => clearPendings(),\n        close  : () => setPending(pending_keys.ws_init),\n    };\n\n    const wsEvent = (event) => {\n        if (typeof ws_events_map[event] === 'function') {\n            ws_events_map[event]();\n        }\n    };\n\n    const setPending = (key) => {\n        if (!pendings[key]) {\n            pendings[key] = setTimeout(() => {\n                pendings[key] = undefined;\n                setStatus(key);\n            }, pending_timeouts[key]);\n        }\n    };\n\n    const clearPendings = (key) => {\n        const clear = (k) => {\n            clearTimeout(pendings[k]);\n            pendings[k] = undefined;\n            if (k === pending_keys.ws_request) {\n                setStatus('online');\n            }\n        };\n\n        if (key) {\n            clear(key);\n        } else {\n            Object.keys(pendings).forEach(clear);\n        }\n    };\n\n    return {\n        init,\n        wsEvent,\n    };\n})();\n\nmodule.exports = NetworkMonitorBase;\n","const toTitleCase = str => (\n    (str || '').replace(/\\w[^\\s/\\\\]*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase())\n);\n\nconst padLeft = (txt, len, char) => {\n    const text = String(txt || '');\n    return text.length >= len ? text : `${Array((len - text.length) + 1).join(char)}${text}`;\n};\n\nconst compareBigUnsignedInt = (a, b) => {\n    let first_num  = numberToString(a);\n    let second_num = numberToString(b);\n    if (!first_num || !second_num) {\n        return '';\n    }\n    const max_length = Math.max(first_num.length, second_num.length);\n    first_num        = padLeft(first_num, max_length, '0');\n    second_num       = padLeft(second_num, max_length, '0');\n\n    // lexicographical comparison\n    let order = 0;\n    if (first_num !== second_num) {\n        order = first_num > second_num ? 1 : -1;\n    }\n\n    return order;\n};\n\nconst numberToString = n => (typeof n === 'number' ? String(n) : n);\n\nmodule.exports = {\n    toTitleCase,\n    padLeft,\n    numberToString,\n    compareBigUnsignedInt,\n};\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport PageError     from 'Modules/PageError';\nimport { routes }    from 'Constants/index';\nimport Localize      from '../localize.jsx';\n\nconst ErrorComponent = ({\n    header,\n    message,\n    redirect_label,\n    redirectOnClick,\n    should_show_refresh = true,\n}) => {\n    const refresh_message = should_show_refresh ? <Localize i18n_default_text='Please refresh this page to continue.' /> : '';\n\n    return (\n        <PageError\n            header={header || <Localize i18n_default_text='Oops, something went wrong.' />}\n            messages={\n                message\n                    ? [\n                        message,\n                        refresh_message,\n                    ]\n                    : [\n                        <Localize key={0} i18n_default_text='Sorry, an error occured while processing your request.' />,\n                        refresh_message,\n                    ]}\n            redirect_url={routes.trade}\n            redirect_label={redirect_label || <Localize i18n_default_text='Refresh' />}\n            buttonOnClick={redirectOnClick || (() => location.reload())}\n        />\n    );\n};\n\nErrorComponent.propTypes = {\n    message: PropTypes.oneOfType([\n        PropTypes.node,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    type: PropTypes.string,\n};\n\nexport default ErrorComponent;\n","import {\n    inject,\n    Provider,\n    observer }   from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst SPECIAL_REACT_KEYS = { children: true, key: true, ref: true };\n\nexport class MobxProvider extends Provider {\n    getChildContext() {\n        const stores = {};\n\n        // inherit stores\n        const baseStores = this.context.mobxStores;\n        if (baseStores) {\n            for (const key in baseStores) { // eslint-disable-line\n                stores[key] = baseStores[key];\n            }\n        }\n\n        // add own stores\n        for (const key in this.props.store) { // eslint-disable-line\n            if (!SPECIAL_REACT_KEYS[key]) {\n                stores[key] = this.props.store[key];\n            }\n        }\n\n        return {\n            mobxStores: stores,\n            ...stores,\n        };\n    }\n\n    static childContextTypes = {\n        mobxStores: PropTypes.object,\n        client    : PropTypes.object,\n        common    : PropTypes.object,\n        gtm       : PropTypes.object,\n        modules   : PropTypes.object,\n        ui        : PropTypes.object,\n    };\n}\n\nconst connect_global_store = (mapper) => Component => inject(mapper)(observer(Component));\n\nexport const connect = (StoreClass, mapper) => Component => {\n    if (!mapper) {\n        return connect_global_store(StoreClass)(Component);\n    }\n\n    const observed = observer(Component);\n\n    class StoredComponent extends Component {\n        store = new StoreClass();\n\n        render() {\n            return React.createElement(\n                observed,\n                {\n                    ...this.props,\n                    store: this.store,\n                },\n                this.props.children,\n            );\n        }\n\n        propTypes = {\n            children: PropTypes.object,\n        }\n    }\n\n    const wrappedDisplayName = Component.displayName\n        || Component.name\n        || (Component.constructor && Component.constructor.name)\n        || 'Unknown';\n    StoredComponent.displayName = `store-${wrappedDisplayName}`;\n\n    return inject(mapper)(StoredComponent);\n};\n","const urlForLanguage             = require('./language').urlFor;\nconst getLanguage                = require('./language').get;\nconst getCurrentProductionDomain = require('../config').getCurrentProductionDomain;\nrequire('url-polyfill');\n\nconst Url = (() => {\n    let location_url,\n        static_host;\n\n    const reset = () => {\n        location_url = window ? window.location : location_url;\n    };\n\n    const params = (href) => {\n        const arr_params = [];\n        const parsed     = ((href ? new URL(href) : location_url).search || '').substr(1).split('&');\n        let p_l          = parsed.length;\n        while (p_l--) {\n            const param = parsed[p_l].split('=');\n            arr_params.push(param);\n        }\n        return arr_params;\n    };\n\n    const paramsHash = (href) => {\n        const param_hash = {};\n        const arr_params = params(href);\n        let param        = arr_params.length;\n        while (param--) {\n            if (arr_params[param][0]) {\n                param_hash[arr_params[param][0]] = arr_params[param][1] || '';\n            }\n        }\n        return param_hash;\n    };\n\n    const normalizePath = path => (path ? path.replace(/(^\\/|\\/$|[^a-zA-Z0-9-_/])/g, '') : '');\n\n    const urlFor = (path, pars, language, should_change_to_legacy = false) => {\n        const lang = (language || getLanguage()).toLowerCase();\n        let domain = `https://${window.location.hostname}/`;\n        if (should_change_to_legacy) {\n            if (/localhost|binary\\.sx/.test(domain)) {\n                domain = `https://binary.com/${lang || 'en'}/`;\n            } else {\n                domain = domain.replace(/deriv\\.app/, `binary.com/${lang || 'en'}`);\n            }\n        }\n        const new_url = `${domain}${(normalizePath(path) || 'home')}.html${(pars ? `?${pars}` : '')}`;\n        // replace old lang with new lang\n        return urlForLanguage(lang, new_url);\n    };\n\n    const default_domain = 'binary.com';\n    const host_map = { // the exceptions regarding updating the URLs\n        'bot.binary.com'       : 'www.binary.bot',\n        'developers.binary.com': 'developers.binary.com', // same, shouldn't change\n        'academy.binary.com'   : 'academy.binary.com',\n        'tech.binary.com'      : 'tech.binary.com',\n        'blog.binary.com'      : 'blog.binary.com',\n    };\n\n    const urlForCurrentDomain = (href) => {\n        const current_domain = getCurrentProductionDomain();\n\n        if (!current_domain) {\n            return href; // don't change when domain is not supported\n        }\n\n        const url_object = new URL(href);\n        if (Object.keys(host_map).includes(url_object.hostname)) {\n            url_object.hostname = host_map[url_object.hostname];\n        } else if (url_object.hostname.indexOf(default_domain) !== -1) {\n            // to keep all non-Binary links unchanged, we use default domain for all Binary links in the codebase (javascript and templates)\n            url_object.hostname = url_object.hostname.replace(new RegExp(`\\\\.${default_domain}`, 'i'), `.${current_domain}`);\n        } else {\n            return href;\n        }\n\n        return url_object.href;\n    };\n\n    const urlForStatic = (path = '') => {\n        if (!static_host || static_host.length === 0) {\n            static_host = document.querySelector('script[src*=\"vendor.min.js\"]');\n            if (static_host) {\n                static_host = static_host.getAttribute('src');\n            }\n\n            if (static_host && static_host.length > 0) {\n                static_host = static_host.substr(0, static_host.indexOf('/js/') + 1);\n            } else {\n                static_host = Url.websiteUrl();\n            }\n        }\n\n        return static_host + path.replace(/(^\\/)/g, '');\n    };\n\n    const getUrlBase = (path = '') => {\n        const l = window.location;\n\n        if (!/^\\/br_|bot/.test(l.pathname)) return path;\n\n        return `/${l.pathname.split('/')[1]}${/^\\//.test(path) ? path : `/${path}`}`;\n    };\n\n    return {\n        getUrlBase,\n        reset,\n        paramsHash,\n        urlFor,\n        urlForCurrentDomain,\n        urlForStatic,\n\n        param          : name => paramsHash()[name],\n        websiteUrl     : () => `${location.protocol}//${location.hostname}/`,\n        getHostMap     : () => host_map,\n        resetStaticHost: () => { static_host = undefined; },\n    };\n})();\n\nmodule.exports = Url;\n","const getLanguage      = require('../language').get;\nconst localize         = require('../../App/i18n').localize;\nconst getPropertyValue = require('../utility').getPropertyValue;\n\nlet currencies_config = {};\n\nconst getTextFormat = (number, currency) => `${currency} ${addComma(number, getDecimalPlaces(currency), isCryptocurrency(currency))}`;\n\nconst formatMoney = (currency_value, amount, exclude_currency, decimals = 0, minimumFractionDigits = 0) => {\n    let money = amount;\n    if (money) money = String(money).replace(/,/g, '');\n    const sign           = money && Number(money) < 0 ? '-' : '';\n    const decimal_places = decimals || getDecimalPlaces(currency_value);\n\n    money = isNaN(money) ? 0 : Math.abs(money);\n    if (typeof Intl !== 'undefined') {\n        const options = {\n            minimumFractionDigits: minimumFractionDigits || decimal_places,\n            maximumFractionDigits: decimal_places,\n        };\n        money = new Intl.NumberFormat(getLanguage().toLowerCase().replace('_', '-'), options).format(money);\n    } else {\n        money = addComma(money, decimal_places);\n    }\n\n    return sign + (exclude_currency ? '' : formatCurrency(currency_value)) + money;\n};\n\nconst formatCurrency = currency => `<span class=\"symbols ${(currency || '').toLowerCase()}\"></span>`;\n\nconst addComma = (num, decimal_points, is_crypto) => {\n    let number = String(num || 0).replace(/,/g, '');\n    if (typeof decimal_points !== 'undefined') {\n        number = (+number).toFixed(decimal_points);\n    }\n    if (is_crypto) {\n        number = parseFloat(+number);\n    }\n\n    return number.toString().replace(/(^|[^\\w.])(\\d{4,})/g, ($0, $1, $2) => (\n        $1 + $2.replace(/\\d(?=(?:\\d\\d\\d)+(?!\\d))/g, '$&,')\n    ));\n};\n\nconst calcDecimalPlaces = (currency) => isCryptocurrency(currency) ? 8 : 2;\n\nconst getDecimalPlaces = (currency) => (\n    // need to check currencies_config[currency] exists instead of || in case of 0 value\n    currencies_config[currency] ? getPropertyValue(currencies_config, [currency, 'fractional_digits']) : calcDecimalPlaces(currency)\n);\n\nconst setCurrencies = (website_status) => {\n    currencies_config = website_status.currencies_config;\n};\n\n// (currency in crypto_config) is a back-up in case website_status doesn't include the currency config, in some cases where it's disabled\nconst isCryptocurrency = currency => /crypto/i.test(getPropertyValue(currencies_config, [currency, 'type'])) || (currency in CryptoConfig.get());\n\nconst CryptoConfig = (() => {\n    let crypto_config;\n\n    const initCryptoConfig = () => ({\n        BTC: { name: localize('Bitcoin'),       min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        BCH: { name: localize('Bitcoin Cash'),  min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        ETH: { name: localize('Ether'),         min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        ETC: { name: localize('Ether Classic'), min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        LTC: { name: localize('Litecoin'),      min_withdrawal: 0.002, pa_max_withdrawal: 5,    pa_min_withdrawal: 0.002 },\n        UST: { name: localize('Tether'),        min_withdrawal: 0.02,  pa_max_withdrawal: 2000, pa_min_withdrawal: 10 },\n        USB: { name: localize('Binary Coin'),   min_withdrawal: 0.02,  pa_max_withdrawal: 2000, pa_min_withdrawal: 10 },\n    });\n\n    return {\n        get: () => {\n            if (!crypto_config) {\n                crypto_config = initCryptoConfig();\n            }\n            return crypto_config;\n        },\n    };\n})();\n\nconst getMinWithdrawal = currency => (isCryptocurrency(currency) ? (getPropertyValue(CryptoConfig.get(), [currency, 'min_withdrawal']) || 0.002) : 1);\n\n/**\n * Returns the transfer limits for the account.\n * @param currency\n * @param {string} max|undefined\n * @returns numeric|undefined\n */\nconst getTransferLimits = (currency, which) => {\n    const transfer_limits = getPropertyValue(currencies_config, [currency, 'transfer_between_accounts', 'limits']) || getMinWithdrawal(currency);\n    const decimals        = getDecimalPlaces(currency);\n    if (which === 'max') {\n        return transfer_limits.max ? transfer_limits.max.toFixed(decimals) : undefined;\n    }\n\n    return transfer_limits.min ? transfer_limits.min.toFixed(decimals) : undefined;\n};\n\nconst getTransferFee = (currency_from, currency_to) => {\n    const transfer_fee = getPropertyValue(currencies_config, [currency_from, 'transfer_between_accounts', 'fees', currency_to]);\n    return `${typeof transfer_fee === 'undefined' ? '1' : transfer_fee}%`;\n};\n\n// returns in a string format, e.g. '0.00000001'\nconst getMinimumTransferFee = (currency) => {\n    const decimals = getDecimalPlaces(currency);\n    return `${currency} ${(1 / Math.pow(10, decimals)).toFixed(decimals)}`; // we need toFixed() so that it doesn't display in scientific notation, e.g. 1e-8 for currencies with 8 decimal places\n};\n\n// @param {String} limit = max|min\nconst getPaWithdrawalLimit = (currency, limit) => {\n    if (isCryptocurrency(currency)) {\n        return getPropertyValue(CryptoConfig.get(), [currency, `pa_${limit}_withdrawal`]); // pa_min_withdrawal and pa_max_withdrawal used here\n    }\n    return limit === 'max' ? 2000 : 10; // limits for fiat currency\n};\n\nconst getCurrencyName = currency => getPropertyValue(CryptoConfig.get(), [currency, 'name']) || '';\n\nconst getMinPayout = currency => getPropertyValue(currencies_config, [currency, 'stake_default']);\n\nmodule.exports = {\n    formatMoney,\n    formatCurrency,\n    addComma,\n    getDecimalPlaces,\n    setCurrencies,\n    isCryptocurrency,\n    getCurrencyName,\n    getMinWithdrawal,\n    getTransferLimits,\n    getTransferFee,\n    getMinimumTransferFee,\n    getTextFormat,\n    getMinPayout,\n    getPaWithdrawalLimit,\n    getCurrencies: () => currencies_config,\n};\n","const Cookies       = require('js-cookie');\nconst CookieStorage = require('./storage').CookieStorage;\n\nconst Language = (() => {\n    const all_languages = {\n        ACH  : 'Translations',\n        EN   : 'English',\n        DE   : 'Deutsch',\n        ES   : 'Español',\n        FR   : 'Français',\n        ID   : 'Indonesia',\n        IT   : 'Italiano',\n        PL   : 'Polish',\n        PT   : 'Português',\n        RU   : 'Русский',\n        TH   : 'Thai',\n        VI   : 'Tiếng Việt',\n        ZH_CN: '简体中文',\n        ZH_TW: '繁體中文',\n    };\n    const default_language = 'EN';\n\n    const setCookieLanguage = (lang) => {\n        if (!Cookies.get('language') || lang) {\n            const cookie = new CookieStorage('language');\n            cookie.write((lang || getLanguage()).toUpperCase());\n        }\n    };\n\n    let url_lang = null;\n\n    const lang_regex = new RegExp(`^(${Object.keys(all_languages).join('|')})$`, 'i');\n\n    const languageFromUrl = (custom_url) => {\n        if (url_lang && !custom_url) return url_lang;\n        const url_params = (custom_url || window.location.href).split('/').slice(3);\n        const language   = (url_params.find(lang => lang_regex.test(lang)) || '');\n        if (!custom_url) {\n            url_lang = language;\n        }\n        return language;\n    };\n\n    let current_lang = null;\n\n    const getLanguage = () => {\n        if (/ach/i.test(current_lang) || /ach/i.test(languageFromUrl())) {\n            const crowdin_lang_key = 'jipt_language_code_binary-static';\n            const crowdin_lang     = localStorage.getItem(crowdin_lang_key) || Cookies.get(crowdin_lang_key); // selected language for in-context translation\n            if (crowdin_lang) {\n                current_lang = crowdin_lang.toUpperCase().replace('-', '_').toUpperCase();\n                if (document.body) {\n                    document.body.classList.add(current_lang); // set the body class removed by crowdin code\n                }\n            }\n        }\n        current_lang = (current_lang || (languageFromUrl() || Cookies.get('language') || default_language).toUpperCase());\n        return current_lang;\n    };\n\n    const urlForLanguage = (lang, url = window.location.href) =>\n        url.replace(new RegExp(`/${getLanguage()}/`, 'i'), `/${(lang || default_language).trim().toLowerCase()}/`);\n\n    return {\n        getAll   : () => all_languages,\n        setCookie: setCookieLanguage,\n        get      : getLanguage,\n        urlFor   : urlForLanguage,\n        urlLang  : languageFromUrl,\n        reset    : () => { url_lang = null; current_lang = null; },\n    };\n})();\n\nmodule.exports = Language;\n","import BinarySocket   from './socket_base';\nimport {\n    cloneObject,\n    getPropertyValue,\n    isDeepEqual,\n    isEmptyObject }   from '../utility';\n\n/**\n * A layer over BinarySocket to handle subscribing to streaming calls\n * in order to keep track of subscriptions, manage forget, prevent multiple subscription at the same time, ...\n *\n * structure of the the subscription object is:\n * {\n *     1: { msg_type: 'proposal', request: { ... }, stream_id: '...', subscribers: [ ... ] },\n *     2: ...\n * }\n * object keys: subscription_id that assigned to each subscription\n * msg_type   : msg_type of the request for faster filtering\n * request    : the request object, used to subscribe to the same stream when there is a new subscribe request with exactly the same values\n * stream_id  : id of the stream which stored from its response and used to forget the stream when needed\n * subscribers: an array of callbacks to dispatch the response to\n */\nconst SubscriptionManager = (() => {\n    const subscriptions    = {};\n    const forget_requested = {};\n\n    let subscription_id = 0;\n\n    /**\n     * To submit request for a new subscription\n     *\n     * @param {String}   msg_type             msg_type of the request\n     * @param {Object}   request_obj          the whole object of the request to be made\n     * @param {Function} fncCallback          callback function to pass the responses to\n     * @param {Boolean}  should_forget_first  when it's true: forgets the previous subscription, then subscribes after receiving the forget response (if any)\n     */\n    const subscribe = (msg_type, request_obj, fncCallback, should_forget_first = false) => {\n        if (should_forget_first) {\n            forget(msg_type, fncCallback).then(() => {\n                subscribe(msg_type, request_obj, fncCallback);\n            });\n            return;\n        }\n\n        let sub_id = Object.keys(subscriptions).find(id => isDeepEqual(request_obj, subscriptions[id].request));\n\n        if (!sub_id) {\n            sub_id = ++subscription_id;\n\n            subscriptions[sub_id] = {\n                msg_type,\n                request    : cloneObject(request_obj),\n                stream_id  : '',             // stream_id will be updated after receiving the response\n                subscribers: [fncCallback],\n            };\n\n            BinarySocket.send(request_obj, {\n                callback: (response) => dispatch(response, sub_id),\n            });\n        } else if (!hasCallbackFunction(sub_id, fncCallback)) {\n            // there is already an active subscription for the very same request which fncCallback is not subscribed to it yet\n            subscriptions[sub_id].subscribers.push(fncCallback);\n        }\n    };\n\n    /**\n     * Add subscription without subscribers from request\n     * E.g. open subscription to proposal_open_contract on buy request\n     * @param {String}   msg_type               msg_type of the subscription\n     * @param {Object}   send_request           the object of the request to be made\n     * @param {Object}   subscribe_request      the object of the subscription request\n     * @param {Array}    subscription_props     Array of prop strings to add to subscribe_request from initial request, e.g. contract_id\n     */\n    const addSubscriptionFromRequest = (msg_type, send_request, subscribe_request, subscription_props) =>\n        new Promise((resolve) => {\n            let sub_id;\n            let is_stream = false;\n\n            BinarySocket.send(send_request, {\n                callback: (response) => {\n                    if (response.error) {\n                        return resolve(response);\n                    }\n                    if (!is_stream) {\n                        is_stream = true;\n                        sub_id    = ++subscription_id;\n\n                        if (subscription_props && Array.isArray(subscription_props)) {\n                            subscription_props.forEach((prop) => {\n                                if (response[response.msg_type][prop]) {\n                                    subscribe_request[prop] = response[response.msg_type][prop];\n                                }\n                            });\n                        }\n\n                        subscriptions[sub_id] = {\n                            msg_type,\n                            request    : cloneObject(subscribe_request),\n                            stream_id  : '',             // stream_id will be updated after receiving the response\n                            subscribers: [],\n                        };\n                        return resolve(response);\n                    }\n                    return dispatch(response, sub_id);\n                },\n            });\n        });\n\n    // dispatches the response to subscribers of the specific subscription id (internal use only)\n    const dispatch = (response, sub_id) => {\n        const stream_id = getPropertyValue(response, [response.msg_type, 'id']) || getPropertyValue(response.subscription, ['id']);\n\n        if (!subscriptions[sub_id]) {\n            if (!forget_requested[stream_id]) {\n                forgetStream(stream_id);\n            }\n            return;\n        }\n\n        const sub_info = subscriptions[sub_id];\n        // set the stream_id\n        if (!sub_info.stream_id && stream_id) {\n            sub_info.stream_id = stream_id;\n        }\n\n        // callback subscribers\n        const subscribers = sub_info.subscribers;\n        if (subscribers.length) {\n            if (\n                // it is the first response\n                !sub_info.stream_id &&\n                    (\n                        // the first response returned error\n                        response.error\n                        || (\n                            // not a subscription (i.e. subscribed proposal_open_contract for an expired contract)\n                            // also to filter out streams with no stream id but later it will continue streaming (i.e. proposal_open_contract without contract id)\n                            !isEmptyObject(response[response.msg_type]) &&\n                            // check msg_type to filter out those calls which don't return stream `id` on first response (tick_history, ...)\n                            response.msg_type === sub_info.msg_type\n                        )\n                    )\n                ||\n                // remove when response isn't first and response has no stream_id\n                !stream_id && sub_info.stream_id\n            ) {\n                delete subscriptions[sub_id];\n            }\n            sub_info.subscribers.forEach((fnc) => {\n                fnc(response);\n            });\n        } else {\n            delete subscriptions[sub_id];\n            forgetStream(sub_info.stream_id);\n        }\n    };\n\n    /**\n     * To forget a subscription which submitted for a specific callback function\n     *\n     * @param  {String}   msg_type      msg_type to forget\n     * @param  {Function} fncCallback   the same function passed to subscribe()\n     *     (this is the way to distinguish between different subscribers of the same stream at the same time)\n     * @param  {Object}   match_values  optional, to only forget subscriptions having request that \"contains\" provided values\n     * @return {Promise}  the promise object of all possible forget requests\n     */\n    const forget = (msg_type, fncCallback, match_values) => {\n        if (typeof fncCallback !== 'function') {\n            throw new Error(`Missing callback function. To forget all subscriptions of msg_type: ${msg_type}, please call forgetAll().`);\n        }\n\n        const forgets_list = [];\n        Object.keys(subscriptions).forEach((id) => {\n            if (subscriptions[id].msg_type === msg_type) { // it's the msg_type we are looking for\n                if (!match_values || hasValues(subscriptions[id].request, match_values)) { // the value matches as well\n                    const stream_id = subscriptions[id].stream_id;\n                    if (stream_id && subscriptions[id].subscribers.length === 1) { // there is only one subscriber, so we can forget the call\n                        delete subscriptions[id];\n                        forgets_list.push(forgetStream(stream_id));\n                    } else if (hasCallbackFunction(id, fncCallback)) {\n                        // there are other subscribers, or for some reason there is no stream_id:\n                        // (i.e. returned an error, or forget() being called before the first response)\n                        subscriptions[id].subscribers.splice(subscriptions[id].subscribers.indexOf(fncCallback), 1);\n                    }\n                }\n            }\n        });\n        return Promise.all(forgets_list);\n    };\n\n    /**\n     * To forget all active subscriptions of a list of msg_types\n     *\n     * @param  {String}  msg_types  list of msg_types to forget\n     * @return {Promise} the promise object of all possible forget_all requests\n     */\n    const forgetAll = (...msg_types) => {\n        const types_to_forget = {};\n\n        msg_types.forEach((msg_type) => {\n            const sub_ids = Object.keys(subscriptions).filter(id => subscriptions[id].msg_type === msg_type);\n            if (sub_ids.length) {\n                sub_ids.forEach((id) => {\n                    delete subscriptions[id];\n                });\n                types_to_forget[msg_type] = true;\n            }\n        });\n\n        return Promise.resolve(\n            !isEmptyObject(types_to_forget) ?\n                BinarySocket.send({ forget_all: Object.keys(types_to_forget) }) :\n                {}\n        );\n    };\n\n    const forgetStream = (stream_id) => {\n        forget_requested[stream_id] = true; // to prevent forgetting multiple times\n        return Promise.resolve(\n            stream_id ?\n                BinarySocket.send({ forget: stream_id }).then(() => { delete forget_requested[stream_id]; }) :\n                {}\n        );\n    };\n\n    const hasCallbackFunction = (sub_id, fncCallback) =>\n        (subscriptions[sub_id] && subscriptions[sub_id].subscribers.indexOf(fncCallback) !== -1);\n\n    const hasValues = (request_obj, values_obj) => (\n        typeof request_obj === 'object' &&\n        typeof values_obj  === 'object' &&\n        Object.keys(values_obj).every(key => request_obj[key] === values_obj[key])\n    );\n\n    return {\n        addSubscriptionFromRequest,\n        subscribe,\n        forget,\n        forgetAll,\n        forgetStream,\n    };\n})();\n\nexport default SubscriptionManager;\n","/*\n Responses that should be ignored upon receiving errors.\n We still log them, but having an error inside of these\n will not break the queue and send them to trackjs.\n This will look for predefined `ignored_responses_in_trackjs` from GTM, if\n there is none, then it just does not filter out any response.\n*/\nconst ignored_responses_in_trackjs = window.ignored_responses_in_trackjs || [];\n\nclass ResponseQueue {\n    constructor() {\n        this.list = [];\n        this.size = 3;\n    }\n\n    add (response) {\n        this.list.unshift(response);\n    }\n\n    remove () {\n        this.list.pop();\n    }\n\n    push (response) {\n        if (this.list.length >= this.size) {\n            this.remove();\n        }\n        this.add(response);\n    }\n\n    fresh () {\n        this.list = [];\n    }\n}\n\nconst queue = new ResponseQueue();\n\n/**\n * Listen on method calls and inspect the response to see if error is thrown.\n * Handling the response status is NOT this function's responsibility\n */\nexport const ApiCallProxyHandler = {\n    get(target, prop_key, receiver) {\n        try {\n            const target_value = Reflect.get(target, prop_key, receiver);\n            if (typeof target_value === 'function') {\n                return function(...args) {\n                    const result = target_value.apply(this, args);\n                    if (result instanceof Promise) {\n                        return new Promise((resolve) => {\n                            let return_value;\n                            result.then(response => {\n                                if (response.error) {\n                                    queue.push(response);\n                                    if (window.TrackJS) window.TrackJS.console.log(queue.list);\n                                    queue.fresh();\n                                    if (\n                                        window.TrackJS &&\n                                        !ignored_responses_in_trackjs.some(item => item === response.error.code)\n                                    ) {\n                                        window.TrackJS.track(response.error.code);\n                                    }\n                                }\n                                queue.push(response);\n                                return_value = response;\n                            }).catch(error => {\n                                if (window.TrackJS) {\n                                    window.TrackJS.console.log(queue.list);\n                                    window.TrackJS.track(error.getMessage());\n                                }\n                            }).finally(() => {\n                                resolve(return_value);\n                            });\n                        });\n                    }\n                    return result;\n                }.bind(this);\n            }\n            return target_value;\n        } catch (error) {\n            throw new Error(error.getMessage());\n        }\n    },\n};\n\nexport const trackJSNetworkMonitor = (obj) => new Proxy(obj, ApiCallProxyHandler);\n","import BinarySocket              from '_common/base/socket_base';\nimport SubscriptionManager       from '_common/base/subscription_manager';\nimport { isEmptyObject }         from '_common/utility';\nimport { trackJSNetworkMonitor } from './trackjs';\n\nconst WS = (() => {\n    const activeSymbols = (options) =>\n        BinarySocket.send({ active_symbols: 'brief' }, { msg_type: 'active_symbols', ...(options && options) });\n\n    const buy = (proposal_id, price) =>\n        BinarySocket.send({ buy: proposal_id, price });\n\n    const cashier = (action, verification_code) =>\n        BinarySocket.send({ cashier: action, ...(verification_code && { verification_code }) });\n\n    const contractsFor = (symbol) =>\n        BinarySocket.send({ contracts_for: symbol });\n\n    const getAccountStatus = () =>\n        BinarySocket.send({ get_account_status: 1 });\n\n    const getSelfExclusion = () =>\n        BinarySocket.send({ get_self_exclusion: 1 });\n\n    const getSettings = () =>\n        BinarySocket.send({ get_settings: 1 });\n\n    const getTradingTimes = (date) =>\n        BinarySocket.send({ trading_times: date });\n\n    const landingCompany = (residence) =>\n        BinarySocket.send({ landing_company: residence });\n\n    const logout = () =>\n        BinarySocket.send({ logout: 1 });\n\n    const mt5LoginList = () =>\n        BinarySocket.send({ mt5_login_list: 1 });\n\n    const newAccountVirtual = (verification_code, client_password, residence) =>\n        BinarySocket.send({\n            new_account_virtual: 1,\n            verification_code,\n            client_password,\n            residence,\n        });\n\n    const oauthApps = () =>\n        BinarySocket.send({ oauth_apps: 1 });\n\n    const payoutCurrencies = () =>\n        BinarySocket.send({ payout_currencies: 1 });\n\n    const portfolio = () =>\n        BinarySocket.send({ portfolio: 1 });\n\n    const profitTable = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ profit_table: 1, description: 1, limit, offset, ...date_boundaries });\n\n    const proposalOpenContract = (contract_id) =>\n        BinarySocket.send({ proposal_open_contract: 1, contract_id });\n\n    const sell = (contract_id, price) =>\n        BinarySocket.send({ sell: contract_id, price });\n\n    const residenceList = () =>\n        BinarySocket.send({ residence_list: 1 });\n\n    const sellExpired = () =>\n        BinarySocket.send({ sell_expired: 1 });\n\n    const sendRequest = (request_object, force_request) =>\n        Promise.resolve(!isEmptyObject(request_object) ? BinarySocket.send(request_object, force_request) : {});\n\n    const statement = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ statement: 1, description: 1, limit, offset, ...date_boundaries });\n\n    const verifyEmail = (email, type) =>\n        BinarySocket.send({ verify_email: email, type });\n\n    // ----- Streaming calls -----\n    const forget = (msg_type, cb, match_values) =>\n        SubscriptionManager.forget(msg_type, cb, match_values);\n\n    const forgetAll = (...msg_types) =>\n        SubscriptionManager.forgetAll(...msg_types);\n\n    const forgetStream = (stream_id) =>\n        SubscriptionManager.forgetStream(stream_id);\n\n    const subscribeBalance = (cb, is_forced) =>\n        SubscriptionManager.subscribe('balance', { balance: 1, subscribe: 1 }, cb, is_forced);\n\n    const subscribeProposal = (req, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal', req, cb, should_forget_first);\n\n    const subscribeProposalOpenContract = (contract_id = null, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal_open_contract', { proposal_open_contract: 1, subscribe: 1, ...(contract_id && { contract_id }) }, cb, should_forget_first);\n\n    const subscribeProposalOpenContractOnBuy = (buy_request) =>\n        SubscriptionManager.addSubscriptionFromRequest(\n            'proposal_open_contract',\n            { ...buy_request, subscribe: 1 },\n            { proposal_open_contract: 1, subscribe: 1 },\n            ['contract_id'],\n        );\n\n    const subscribeTicks = (symbol, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks', { ticks: symbol, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeTicksHistory = (request_object, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks_history', request_object, cb, should_forget_first);\n\n    const subscribeTransaction = (cb, should_forget_first) =>\n        SubscriptionManager.subscribe('transaction', { transaction: 1, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeWebsiteStatus = (cb) =>\n        SubscriptionManager.subscribe('website_status', { website_status: 1, subscribe: 1 }, cb);\n\n    return {\n        activeSymbols,\n        buy,\n        cashier,\n        contractsFor,\n        getAccountStatus,\n        getSelfExclusion,\n        getSettings,\n        getTradingTimes,\n        landingCompany,\n        logout,\n        mt5LoginList,\n        newAccountVirtual,\n        oauthApps,\n        portfolio,\n        payoutCurrencies,\n        profitTable,\n        proposalOpenContract,\n        residenceList,\n        sell,\n        sellExpired,\n        sendRequest,\n        statement,\n        verifyEmail,\n\n        // streams\n        forget,\n        forgetAll,\n        forgetStream,\n        subscribeBalance,\n        subscribeProposal,\n        subscribeProposalOpenContract,\n        subscribeProposalOpenContractOnBuy,\n        subscribeTicks,\n        subscribeTicksHistory,\n        subscribeTransaction,\n        subscribeWebsiteStatus,\n    };\n})();\n\nexport default trackJSNetworkMonitor(WS);\n","import { str as crc32 }     from 'crc-32';\nimport i18n                 from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport * as messages        from 'Translations/messages.json';\n\nconst i18n_config = {\n    resources: {\n        EN: {\n            translation: {\n                ...messages,\n            },\n        },\n    },\n    react: {\n        hashTransKey(defaultValue) {\n            return crc32(defaultValue);\n        },\n    },\n    lng: window.location.search ?\n        window.location.search.includes('lang=') ?\n            window.location.search\n                .substr(1).split('&')\n                .find(query => query.includes('lang='))\n                .split('=')[1]\n                .toUpperCase()\n            : undefined\n        : undefined,\n    fallbackLng: 'EN',\n};\n\ni18n\n    .use(initReactI18next) // passes i18n down to react-i18next\n    .init(i18n_config);\n\nexport const localize = (string, values) => i18n.t(crc32(string), { defaultValue: string, ...values });\n\nexport default i18n;\n","export *                   from './logout';\nexport BinarySocketGeneral from './socket-general';\nexport WS                  from './ws-methods';\n","if (window.NodeList && !NodeList.prototype.forEach) {\n    NodeList.prototype.forEach = function (callback, thisArg) {\n        thisArg = thisArg || window;\n        for (var i = 0; i < this.length; i++) {\n            callback.call(thisArg, this[i], i, this);\n        }\n    };\n}\n","if (!Element.prototype.closest) {\n    Element.prototype.closest = function(s) {\n        var el = this;\n        if (!document.documentElement.contains(el)) return null;\n        do {\n            if (el.matches(s)) return el;\n            el = el.parentElement || el.parentNode;\n        } while (el !== null && el.nodeType === 1); \n        return null;\n    };\n}\n","Element.prototype.hide = function() {\n    this.style.display = 'none';\n    return this;\n};\n\nElement.prototype.show = function() {\n    this.style.display = '';\n    return this;\n};\n\nif (!('remove' in Element.prototype)) {\n    Element.prototype.remove = function() {\n        if (this.parentNode) {\n            this.parentNode.removeChild(this);\n        }\n        return this;\n    };\n}\n\nElement.prototype.toggleClass = function(class_name, should_add) {\n    if (typeof should_add === 'undefined') { // toggle\n        should_add = !this.classList.contains(class_name);\n    }\n    this.classList[should_add ? 'add' : 'remove'](class_name);\n    return this;\n};\n\nElement.prototype.setVisibility = function(make_visible) {\n    this.toggleClass('invisible', !make_visible);\n    return this;\n};\n\n\nElement.prototype.html = function(content) {\n    if (typeof content === 'object') {\n        this.innerHTML = '';\n        this.appendChild(content);\n    } else {\n        this.innerHTML = content;\n    }\n    return this;\n};\n","if (!Element.prototype.matches) {\n    Element.prototype.matches =\n        Element.prototype.matchesSelector ||\n        Element.prototype.mozMatchesSelector ||\n        Element.prototype.msMatchesSelector ||\n        Element.prototype.oMatchesSelector ||\n        Element.prototype.webkitMatchesSelector ||\n        function(s) {\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n                i = matches.length;\n            while (--i >= 0 && matches.item(i) !== this) {}\n            return i > -1;\n        };\n}\n","const isMobile = () => /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n\nmodule.exports = {\n    isMobile,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport ErrorComponent from './index';\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch = (error, info) => {\n        if (window.TrackJS) window.TrackJS.console.log(this.props.root_store);\n\n        this.setState({\n            hasError: true,\n            error,\n            info,\n        });\n    };\n\n    render = () => this.state.hasError ? (\n        <ErrorComponent should_show_refresh={true} />\n    ) : this.props.children;\n}\n\nErrorBoundary.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default connect((store) => (\n    {\n        root_store: store,\n    }\n))(ErrorBoundary);\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { Scrollbars } from 'tt-react-custom-scrollbars';\nimport { connect }    from 'Stores/connect';\n// import routes         from 'Constants/routes';\n// import InstallPWA     from './install-pwa.jsx';\n// import Loading        from '../../../templates/app/components/loading.jsx';\n\nconst AppContents = ({\n    // addNotificationBar,\n    children,\n    is_app_blurred,\n    // is_contract_mode,\n    // is_dark_mode,\n    is_fully_blurred,\n    // is_loading,\n    is_logged_in,\n    is_positions_drawer_on,\n    // is_slow_loading,\n    // location,\n    // slow_loading_status,\n    // setPWAPromptEvent,\n}) => {\n    if (is_logged_in) {\n        // TODO: uncomment these after the issues with showing the prompt too often and in the app are fixed\n        // window.addEventListener('beforeinstallprompt', e => {\n        //     console.log('Going to show the installation prompt'); // eslint-disable-line no-console\n        //\n        //     e.preventDefault();\n        //\n        //     setPWAPromptEvent(e);\n        //     addNotificationBar({\n        //         content : <InstallPWA />,\n        //         autoShow: 10000, // show after 10 secs\n        //         msg_type: 'pwa',\n        //     });\n        // });\n    }\n\n    return (\n        <React.Fragment>\n            {/* { is_loading && location.pathname === routes.trade &&\n                <Loading status={slow_loading_status} is_slow_loading={is_slow_loading} theme={is_dark_mode ? 'dark' : 'light'} />\n            } */}\n            <div\n                id='app_contents'\n                className={classNames('app-contents', {\n                    'app-contents--show-positions-drawer': is_positions_drawer_on,\n                    // 'app-contents--contract-mode'        : is_contract_mode,\n                    'app-contents--is-blurred'           : (is_fully_blurred || is_app_blurred),\n                })}\n            >\n                {/* Calculate height of user screen and offset height of header and footer */}\n                <Scrollbars\n                    autoHide\n                    style={{ height: 'calc(100vh - 83px)' }}\n                >\n                    {children}\n                </Scrollbars>\n            </div>\n        </React.Fragment>\n    );\n};\n\nAppContents.propTypes = {\n    addNotificationBar    : PropTypes.func,\n    children              : PropTypes.any,\n    is_app_blurred        : PropTypes.bool,\n    is_contract_mode      : PropTypes.bool,\n    is_dark_mode          : PropTypes.bool,\n    is_fully_blurred      : PropTypes.bool,\n    is_loading            : PropTypes.bool,\n    is_logged_in          : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    is_slow_loading       : PropTypes.bool,\n    pwa_prompt_event      : PropTypes.object,\n    setPWAPromptEvent     : PropTypes.func,\n    slow_loading_status   : PropTypes.array,\n};\n\nexport default withRouter(connect(\n    ({ client,/* modules, */ ui }) => ({\n        // addNotificationBar    : ui.addNotificationBar,\n        is_app_blurred        : ui.is_app_blurred,\n        // is_contract_mode      : modules.smart_chart.is_contract_mode,\n        is_dark_mode          : ui.is_dark_mode_on,\n        is_fully_blurred      : ui.is_fully_blurred,\n        is_loading            : ui.is_loading,\n        is_logged_in          : client.is_logged_in,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        is_slow_loading       : ui.is_slow_loading,\n        pwa_prompt_event      : ui.pwa_prompt_event,\n        slow_loading_status   : ui.slow_loading_status,\n        // setPWAPromptEvent     : ui.setPWAPromptEvent,\n    })\n)(AppContents));\n","import moment       from 'moment';\nimport { localize } from 'App/i18n';\nimport ServerTime   from '_common/base/server_time';\n\n// Disables moment's fallback to native Date object\n// moment will return `Invalid Date` if date cannot be parsed\nmoment.createFromInputFallback = function (config) {\n    config._d = new Date(NaN); // eslint-disable-line no-underscore-dangle\n};\n\n/**\n * Convert epoch to moment object\n * @param  {Number} epoch\n * @return {moment} the moment object of provided epoch\n */\nexport const epochToMoment = epoch => moment.unix(epoch).utc();\n\n/**\n * Convert date string or epoch to moment object\n * @param  {Number} value   the date in epoch format\n * @param  {String} value   the date in string format\n * @return {moment} the moment object of 'now' or the provided date epoch or string\n */\nexport const toMoment = value => {\n    if (!value) return ServerTime.get() || moment().utc(); // returns 'now' moment object\n    if (value instanceof moment && value.isValid() && value.isUTC()) return value; // returns if already a moment object\n    if (typeof value === 'number') return epochToMoment(value); // returns epochToMoment() if not a date\n\n    if (/invalid/i.test(moment(value))) {\n        const today_moment = moment();\n        return value > today_moment.utc().daysInMonth() ? moment.utc(today_moment.add(value, 'd'), 'DD MMM YYYY') : moment.utc(value, 'DD MMM YYYY'); // returns target date\n    }\n    return moment.utc(value);\n};\n\n/**\n * Set specified time on moment object\n * @param  {moment} moment_obj  the moment to set the time on\n * @param  {String} time        24 hours format, may or may not include seconds\n * @return {moment} a new moment object of result\n */\nexport const setTime = (moment_obj, time) => {\n    const [hour, minute, second] = time ? time.split(':') : [0, 0, 0];\n    moment_obj.hour(hour).minute(minute || 0).second(second || 0);\n    return moment_obj;\n};\n\n/**\n * return the unix value of provided epoch and time\n * @param  {Number} epoch  the date to update with provided time\n * @param  {String} time   the time to set on the date\n * @return {Number} unix value of the result\n */\nexport const convertToUnix = (epoch, time) => setTime(toMoment(epoch), time).unix();\n\nexport const toGMTFormat = (time) => moment(time || undefined).utc().format('YYYY-MM-DD HH:mm:ss [GMT]');\n\nexport const formatDate = (date, date_format = 'YYYY-MM-DD') => toMoment(date).format(date_format);\n\n/**\n * return the number of days from today to date specified\n * @param  {String} date   the date to calculate number of days from today\n * @return {Number} an integer of the number of days\n */\nexport const daysFromTodayTo = (date) => {\n    const diff = toMoment(date).startOf('day').diff(toMoment().startOf('day'), 'days');\n    return (!date || diff < 0) ? '' : diff;\n};\n\n/**\n * return the number of months between two specified dates\n */\nexport const diffInMonths = (now, then) => then.diff(now, 'month');\n/**\n * return moment duration between two dates\n * @param  {Number} epoch start time\n * @param  {Number} epoch end time\n * @return {moment.duration} moment duration between start time and end time\n */\nexport const getDiffDuration = (start_time, end_time) =>\n    moment.duration(moment.unix(end_time).diff(moment.unix(start_time)));\n\n/**\n * return formatted duration `2 days 01:23:59`\n * @param  {moment.duration} moment duration object\n * @return {String} formatted display string\n */\nexport const formatDuration = (duration) => {\n    const d = Math.floor(duration.asDays()); // duration.days() does not include months/years\n    const h = duration.hours();\n    const m = duration.minutes();\n    const s = duration.seconds();\n    let formatted_str = moment(0).hour(h).minute(m).seconds(s).format('HH:mm:ss');\n    if (d > 0) {\n        formatted_str = `${d} ${d > 1 ? localize('days') : localize('day')} ${formatted_str}`;\n    }\n    return formatted_str;\n};\n\n/**\n * return true if the time_str is in \"HH:MM\" format, else return false\n * @param {String} time_str time\n */\nexport const isTimeValid = time_str => /^([0-9]|[0-1][0-9]|2[0-3]):([0-9]|[0-5][0-9])(:([0-9]|[0-5][0-9]))?$/.test(time_str);\n\n/**\n * return true if the time_str's hour is between 0 and 23, else return false\n * @param {String} time_str time\n */\nexport const isHourValid = time_str => isTimeValid(time_str) && /^([01][0-9]|2[0-3])$/.test(time_str.split(':')[0]);\n\n/**\n * return true if the time_str's minute is between 0 and 59, else return false\n * @param {String} time_str time\n */\nexport const isMinuteValid = time_str => isTimeValid(time_str) && /^[0-5][0-9]$/.test(time_str.split(':')[1]);\n\n/**\n * return true if the date is typeof string and a valid moment date, else return false\n * @param {String|moment} date date\n */\nexport const isDateValid = date => moment(date, 'DD MMM YYYY').isValid();\n\n/**\n * add the specified number of days to the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to add\n */\nexport const addDays = (date, num_of_days) => toMoment(date).clone().add(num_of_days, 'day');\n\n/**\n * add the specified number of months to the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to add\n */\nexport const addMonths = (date, num_of_months) => toMoment(date).clone().add(num_of_months, 'month');\n\n/**\n * add the specified number of years to the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to add\n */\nexport const addYears = (date, num_of_years) => toMoment(date).clone().add(num_of_years, 'year');\n\n/**\n * subtract the specified number of days from the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to subtract\n */\nexport const subDays = (date, num_of_days) => toMoment(date).clone().subtract(num_of_days, 'day');\n\n/**\n * subtract the specified number of months from the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to subtract\n */\nexport const subMonths = (date, num_of_months) => toMoment(date).clone().subtract(num_of_months, 'month');\n\n/**\n * subtract the specified number of years from the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to subtract\n */\nexport const subYears = (date, num_of_years) => toMoment(date).clone().subtract(num_of_years, 'year');\n\n/**\n * returns the minimum moment between the two passing parameters\n * @param {moment|string|epoch} first datetime parameter\n * @param {moment|string|epoch} second datetime parameter\n */\nexport const minDate = (date_1, date_2) => moment.min(toMoment(date_1), toMoment(date_2));\n\n/**\n * returns a new date\n * @param {moment|string|epoch} date date\n */\nexport const getStartOfMonth = (date) => toMoment(date).clone().startOf('month').format('YYYY-MM-DD');\n\n/**\n * returns miliseconds into UTC formatted string\n * @param {Number} miliseconds miliseconds\n * @param {String} str_format formatting using moment e.g - YYYY-MM-DD HH:mm\n */\nexport const formatMiliseconds = (miliseconds, str_format) => moment.utc(miliseconds).format(str_format);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { connect }     from 'Stores/connect';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst ServerTime = ({ server_time }) => {\n    const gmt_time = toGMTFormat(server_time);\n\n    return (\n        <div className='server-time'>{gmt_time}</div>\n    );\n};\n\nServerTime.propTypes = {\n    server_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        server_time: common.server_time,\n    })\n)(ServerTime);\n","import classNames           from 'classnames';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport ReactDOM             from 'react-dom';\nimport posed, { PoseGroup } from 'react-pose';\nimport Icon                 from 'Assets/icon.jsx';\n\nconst FadeIn = posed.span({\n    enter: {\n        opacity   : 1,\n        transition: {\n            duration: 150,\n        },\n    },\n    exit: {\n        opacity   : 0,\n        transition: {\n            duration: 150,\n        },\n    },\n});\n\nclass PopoverBubble extends React.PureComponent {\n    calculatePosition = () => {\n        const { alignment, target_rectangle, margin = 0 } = this.props;\n\n        switch (alignment) {\n            case 'top': return {\n                left     : (target_rectangle.width / 2) + target_rectangle.left,\n                bottom   : (window.innerHeight - target_rectangle.top) + margin,\n                transform: 'translateX(-50%)',\n            };\n            case 'bottom': return {\n                left     : (target_rectangle.width / 2) + target_rectangle.left,\n                top      : target_rectangle.bottom + margin,\n                transform: 'translateX(-50%)',\n            };\n            case 'left': return {\n                right    : (window.innerWidth - target_rectangle.left) + margin,\n                top      : (target_rectangle.height / 2) + target_rectangle.top,\n                transform: 'translateY(-50%)',\n            };\n            case 'right': return {\n                left     : target_rectangle.right + margin,\n                top      : (target_rectangle.height / 2) + target_rectangle.top,\n                transform: 'translateY(-50%)',\n            };\n            default: return {\n                left: target_rectangle.left,\n                top : target_rectangle.top,\n            };\n        }\n    };\n\n    render() {\n        const {\n            alignment,\n            className,\n            has_error,\n            icon,\n            is_open,\n            message,\n            target_rectangle,\n        } = this.props;\n\n        if (!target_rectangle) return null;\n\n        const popover_bubble = (\n            <PoseGroup>\n                { is_open &&\n                <FadeIn key='fade_in' initialPose='exit' style={{ position: 'fixed', zIndex: 999 }}>\n                    <span\n                        style={ target_rectangle ? this.calculatePosition() : {}}\n                        data-popover-pos={alignment}\n                        className={classNames(\n                            className,\n                            'popover__bubble',\n                            { 'popover__bubble--error': has_error },\n                        )}\n                    >\n                        { icon === 'info' &&\n                            <i className='popover__bubble__icon'>\n                                <Icon icon='IconInfoBlue' />\n                            </i>\n                        }\n\n                        <span className='popover__bubble__text'>\n                            { message }\n                        </span>\n                        <span className='popover__bubble__arrow' />\n                    </span>\n                </FadeIn>\n                }\n            </PoseGroup>\n        );\n\n        return ReactDOM.createPortal(\n            popover_bubble,\n            document.getElementById('deriv_app')\n        );\n    }\n}\n\nPopoverBubble.propTypes = {\n    alignment       : PropTypes.string,\n    children        : PropTypes.node,\n    className       : PropTypes.string,\n    has_error       : PropTypes.bool,\n    icon            : PropTypes.string,\n    is_open         : PropTypes.bool,\n    margin          : PropTypes.number,\n    message         : PropTypes.string.isRequired,\n    target_rectangle: PropTypes.object,\n};\n\nexport default PopoverBubble;\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport Icon          from 'Assets/icon.jsx';\nimport PopoverBubble from './popover-bubble.jsx';\n\nclass Popover extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_open         : false,\n            target_rectangle: null,\n        };\n        this.target_reference = React.createRef();\n    }\n\n    componentDidMount() {\n        this.setState({\n            is_open         : this.props.has_error,\n            target_rectangle: this.target_reference.current.getBoundingClientRect(),\n        });\n    }\n\n    toggleOpen = () => {\n        this.setState({\n            is_open         : Boolean(this.props.message),\n            target_rectangle: this.target_reference.current.getBoundingClientRect(),\n        });\n    }\n\n    toggleClose = () => this.setState({ is_open: false });\n\n    render() {\n        const {\n            alignment,\n            children,\n            classNameBubble,\n            classNameTarget,\n            classNameTargetIcon,\n            disable_target_icon,\n            has_error,\n            icon,\n            margin,\n            message,\n        } = this.props;\n\n        const icon_class_name = classNames(classNameTargetIcon, icon);\n        return (\n            <div\n                className='popover'\n                onMouseEnter={this.toggleOpen}\n                onMouseLeave={this.toggleClose}\n            >\n                <div className={classNames(classNameTarget, 'popover__target')} ref={this.target_reference}>\n                    { !disable_target_icon &&\n                        <i className={message ? 'popover__target__icon' : 'popover__target__icon--disabled'}>\n                            {(icon === 'info')     && <Icon icon='IconInfoOutline' className={icon_class_name} /> }\n                            {(icon === 'question') && <Icon icon='IconQuestion'    className={icon_class_name} />}\n                            {(icon === 'dot')      && <Icon icon='IconRedDot'      className={icon_class_name} />}\n                        </i>\n                    }\n\n                    { children }\n                </div>\n\n                <PopoverBubble\n                    alignment={alignment}\n                    className={classNameBubble}\n                    has_error={has_error}\n                    icon={icon}\n                    is_open={this.state.is_open}\n                    target_rectangle={this.state.target_rectangle}\n                    margin={margin}\n                    message={message}\n                />\n            </div>\n        );\n    }\n}\n\nPopover.propTypes = {\n    alignment          : PropTypes.string,\n    children           : PropTypes.node,\n    classNameBubble    : PropTypes.string,\n    classNameTarget    : PropTypes.string,\n    classNameTargetIcon: PropTypes.string,\n    disable_target_icon: PropTypes.bool,\n    has_error          : PropTypes.bool,\n    icon               : PropTypes.string,\n    margin             : PropTypes.number,\n    message            : PropTypes.string,\n};\n\nexport default Popover;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from 'App/i18n';\nimport { connect }  from 'Stores/connect';\nimport { Popover }  from 'App/Components/Elements/Popover';\n\nconst NetworkStatus = ({ status }) => (\n    <div className='network-status__wrapper'>\n        <Popover\n            classNameBubble='network-status__tooltip'\n            alignment='top'\n            message={localize('Network status: {{status}}', { status: (status.tooltip || localize('Connecting to server')) })}\n        >\n            <div className={classNames(\n                'network-status__circle', {\n                    'network-status__circle--offline': (status.class === 'offline'),\n                    'network-status__circle--online' : (status.class === 'online'),\n                    'network-status__circle--blinker': (status.class === 'blinker'),\n                })}\n            />\n        </Popover>\n    </div>\n);\n\nNetworkStatus.propTypes = {\n    status: PropTypes.object,\n};\n\nexport { NetworkStatus };\n\nexport default connect(\n    ({ common }) => ({\n        status: common.network_status,\n    })\n)(NetworkStatus);\n","import classNames from 'classnames';\nimport React      from 'react';\nimport Icon       from 'Assets/icon.jsx';\n\nclass ToggleFullScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_full_screen: false,\n        };\n        this.fullscreen_map = {\n            event    : ['fullscreenchange',  'webkitfullscreenchange',  'mozfullscreenchange',  'MSFullscreenChange'],\n            element  : ['fullscreenElement', 'webkitFullscreenElement', 'mozFullScreenElement', 'msFullscreenElement'],\n            fnc_enter: ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'],\n            fnc_exit : ['exitFullscreen',    'webkitExitFullscreen',    'mozCancelFullScreen',  'msExitFullscreen'],\n        };\n\n    }\n\n    componentDidMount() {\n        this.fullscreen_map.event.forEach((event) => {\n            document.addEventListener(event, this.onFullScreen, false);\n        });\n    }\n\n    onFullScreen = () => {\n        const is_full_screen = this.fullscreen_map.element.some(el => document[el]);\n        this.setState({ is_full_screen });\n    };\n\n    toggleFullScreen = (e) => {\n        e.stopPropagation();\n\n        const to_exit   = this.state.is_full_screen;\n        const el        = to_exit ? document : document.documentElement;\n        const fncToCall = this.fullscreen_map[to_exit ? 'fnc_exit' : 'fnc_enter'].find(fnc => el[fnc]);\n\n        if (fncToCall) {\n            el[fncToCall]();\n        } else {\n            this.setState({ is_full_screen: false }); // fullscreen API is not enabled\n        }\n    };\n\n    render() {\n        const full_screen_icon_class = classNames('ic-fullscreen', 'footer__link', {\n            'ic-fullscreen--active': this.state.is_full_screen,\n        });\n        return (\n            <a\n                className={full_screen_icon_class}\n                onClick={this.toggleFullScreen}\n            >\n                <Icon icon='IconMaximize' className='footer__icon' />\n            </a>\n        );\n    }\n}\n\nexport { ToggleFullScreen };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Icon       from 'Assets/icon.jsx';\n\nconst TogglePositions = ({\n    positions_count,\n    is_positions_drawer_on,\n    togglePositionsDrawer,\n}) => {\n    const toggle_positions_class = classNames(\n        'ic-positions',\n        'footer__link', {\n            'ic-positions--active'   : is_positions_drawer_on,\n            'ic-positions--has-count': (positions_count > 0),\n        }\n    );\n    return (\n        <a\n            className={toggle_positions_class}\n            onClick={togglePositionsDrawer}\n            data-count={positions_count}\n        >\n            <Icon icon='IconPositions' className='footer__icon ic-positions__icon' />\n        </a>\n    );\n};\n\nTogglePositions.propTypes = {\n    is_positions_drawer_on: PropTypes.bool,\n    positions_count       : PropTypes.number,\n    togglePositionsDrawer : PropTypes.func,\n};\n\nexport { TogglePositions };\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { Modal }    from 'App/Components/Elements/modal.jsx';\nimport UILoader     from 'App/Components/Elements/ui-loader.jsx';\nimport { localize } from 'App/i18n';\nimport Icon         from 'Assets/icon.jsx';\nimport 'Sass/app/modules/settings.scss';\n\nconst modal_content = [\n    {\n        icon : 'IconTheme',\n        label: localize('Themes'),\n        value: React.lazy(() => import(/* webpackChunkName: \"settings-theme\", webpackPrefetch: true */'App/Containers/SettingsModal/settings-theme.jsx')),\n    }, {\n        icon : 'IconLanguage',\n        label: localize('Language'),\n        value: React.lazy(() => import(/* webpackChunkName: \"settings-language\", webpackPrefetch: true */'App/Containers/SettingsModal/settings-language.jsx')),\n    }, {\n        icon : 'IconCharts',\n        label: localize('Charts'),\n        value: React.lazy(() => import(/* webpackChunkName: \"settings-chart\", webpackPrefetch: true */'App/Containers/SettingsModal/settings-chart.jsx')), // uncomment below lines to bring back purchase lock and purchase confirmation\n        // }, {\n        //     icon : IconPurchase,\n        //     label: localize('Purchase'),\n        //     value: PurchaseSettings,\n    },\n];\n\nconst ToggleSettings = ({\n    hideFullBlur,\n    is_settings_visible,\n    showFullBlur,\n    toggleSettings,\n}) => {\n    const toggle_settings_class = classNames('ic-settings', 'footer__link', {\n        'ic-settings--active': is_settings_visible,\n    });\n    return (\n        <React.Fragment>\n            <a\n                onClick={toggleSettings}\n                className={toggle_settings_class}\n            >\n                <Icon icon='IconSettings' className='footer__icon ic-settings__icon' />\n            </a>\n            <React.Suspense fallback={<UILoader />}>\n                <Modal\n                    modal_content={modal_content}\n                    hideFullBlur={hideFullBlur}\n                    is_open={is_settings_visible}\n                    showFullBlur={showFullBlur}\n                    title={localize('Platform settings')}\n                    toggleModal={toggleSettings}\n                />\n            </React.Suspense>\n        </React.Fragment>\n    );\n};\n\nToggleSettings.propTypes = {\n    hideFullBlur       : PropTypes.func,\n    is_settings_visible: PropTypes.bool,\n    showFullBlur       : PropTypes.func,\n    toggleSettings     : PropTypes.func,\n};\n\nexport { ToggleSettings };\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport { withRouter }                 from 'react-router';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\n// import routes                         from 'Constants/routes';\nimport { connect }                    from 'Stores/connect';\nimport ServerTime                     from '../server-time.jsx';\nimport {\n    NetworkStatus,\n    ToggleFullScreen,\n    TogglePositions,\n    ToggleSettings }                  from '../../Components/Layout/Footer';\n\nconst Footer = ({\n    // active_positions,\n    hideFullBlur,\n    is_fully_blurred,\n    // is_loading,\n    is_logged_in,\n    is_positions_drawer_on,\n    is_route_blurred,\n    is_settings_modal_on,\n    // location,\n    showFullBlur,\n    show_positions_toggle,\n    togglePositionsDrawer,\n    toggleSettingsModal,\n}) => (\n    <React.Fragment>\n        {/* { (!is_loading || location.pathname !== routes.trade) && */}\n        <footer className={classNames('footer', {\n            'footer--is-blurred': (is_fully_blurred || is_route_blurred),\n        })}\n        >\n            <div className='footer__links footer__links--left'>\n                {\n                    (is_logged_in && show_positions_toggle) &&\n                    <TogglePositions\n                        is_positions_drawer_on={is_positions_drawer_on}\n                        togglePositionsDrawer={togglePositionsDrawer}\n                        positions_count={0}\n                        // positions_count={active_positions.length || 0}\n                    />\n                }\n            </div>\n            <NetworkStatus />\n            <ServerTime />\n            <div className='footer__links'>\n                <ToggleSettings\n                    is_settings_visible={is_settings_modal_on}\n                    toggleSettings={toggleSettingsModal}\n                    showFullBlur={showFullBlur}\n                    hideFullBlur={hideFullBlur}\n                />\n                <ToggleFullScreen />\n            </div>\n        </footer>\n        {/* } */}\n    </React.Fragment>\n);\n\nFooter.propTypes = {\n    active_positions      : MobxPropTypes.arrayOrObservableArray,\n    is_fully_blurred      : PropTypes.bool,\n    is_logged_in          : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    is_route_blurred      : PropTypes.bool,\n    is_settings_modal_on  : PropTypes.bool,\n    location              : PropTypes.object,\n    show_positions_toggle : PropTypes.bool,\n    togglePositionsDrawer : PropTypes.func,\n    toggleSettingsModal   : PropTypes.func,\n};\n\nexport default withRouter(connect(\n    ({ client,/* modules, */ ui }) => ({\n        // active_positions      : modules.portfolio.active_positions,\n        hideFullBlur          : ui.hideFullBlur,\n        is_fully_blurred      : ui.is_fully_blurred,\n        is_route_blurred      : ui.is_route_blurred,\n        is_logged_in          : client.is_logged_in,\n        is_loading            : ui.is_loading,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        is_settings_modal_on  : ui.is_settings_modal_on,\n        showFullBlur          : ui.showFullBlur,\n        show_positions_toggle : ui.show_positions_toggle,\n        togglePositionsDrawer : ui.togglePositionsDrawer,\n        toggleSettingsModal   : ui.toggleSettingsModal,\n    })\n)(Footer));\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { BinaryLink } from '../../Routes';\n\nconst MenuLinks = ({ is_logged_in, items }) => (\n    <React.Fragment>\n        {!!items.length &&\n        <div className='header__menu-links'>\n            {\n                items.map((item, idx) => (\n                    (item.login_only && (item.login_only !== is_logged_in)) ?\n                        null\n                        :\n                        <BinaryLink key={idx} to={item.link_to} className='header__menu-link' active_class='header__menu-link--active'>\n                            <React.Fragment>\n                                {item.text &&\n                                    <span title={item.text} className='header__menu-link-text'>{item.icon}{item.text}{item.logo}</span>\n                                }\n                                {item.image &&\n                                    <span className='header__menu-link-text'>{item.image}{item.logo}</span>\n                                }\n                            </React.Fragment>\n                        </BinaryLink>\n                ))\n            }\n        </div>\n        }\n    </React.Fragment>\n);\n\nMenuLinks.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        icon: PropTypes.shape({\n            className: PropTypes.string,\n        }),\n        is_logged_in: PropTypes.bool,\n        link_to     : PropTypes.string,\n        text        : PropTypes.string,\n    })),\n};\n\nexport { MenuLinks };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from 'App/i18n';\nimport Button              from '../../Form/button.jsx';\n\nconst LoginButton = ({ className }) => (\n    <Button\n        className={classNames(className, 'btn--secondary btn--secondary--orange')}\n        has_effect\n        text={localize('Log in')}\n        onClick={redirectToLogin}\n    />\n);\n\nLoginButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { LoginButton };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { localize }        from 'App/i18n';\nimport { urlFor }          from '_common/url';\nimport Button              from '../../Form/button.jsx';\n\nconst SignupButton = ({ className }) => (\n    <Button\n        className={classNames(className, 'btn--primary btn--primary--orange')}\n        has_effect\n        text={localize('Sign up')}\n        onClick={() => { window.open(urlFor('new-account', undefined, undefined, true)); }}\n    />\n);\n\nSignupButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { SignupButton };\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from 'App/i18n';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst UpgradeButton = ({ className, onClick }) => (\n    <Button\n        id='acc-balance-btn'\n        className={classNames(className, 'btn--primary btn--primary--orange')}\n        has_effect\n        text={localize('Upgrade')}\n        onClick={onClick}\n    />\n);\n\nUpgradeButton.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { UpgradeButton };\n","import * as PropTypes       from 'prop-types';\nimport React, { Component } from 'react';\nimport { formatMoney }      from '_common/base/currency_base';\nimport { urlFor }           from '_common/url';\nimport Button               from 'App/Components/Form/button.jsx';\nimport Lazy                 from 'App/Containers/Lazy';\nimport { localize }         from 'App/i18n';\nimport { LoginButton }      from './login-button.jsx';\nimport { SignupButton }     from './signup-button.jsx';\nimport { UpgradeButton }    from './upgrade-button.jsx';\nimport 'Sass/app/_common/components/account-switcher.scss';\n\nconst should_show_deposit = false; // TODO remove this and all commented props when Deposit is ready\n\nexport class AccountActions extends Component {\n    shouldComponentUpdate(nextProps) {\n        return (\n            // nextProps.active_cashier_tab !== this.props.active_cashier_tab ||\n            nextProps.balance !== this.props.balance ||\n            nextProps.can_upgrade !== this.props.can_upgrade ||\n            nextProps.can_upgrade_to !== this.props.can_upgrade_to ||\n            nextProps.currency !== this.props.currency ||\n            nextProps.is_acc_switcher_on !== this.props.is_acc_switcher_on ||\n            // nextProps.is_cashier_modal_on !== this.props.is_cashier_modal_on ||\n            nextProps.is_logged_in !== this.props.is_logged_in ||\n            nextProps.is_virtual !== this.props.is_virtual ||\n            nextProps.loginid !== this.props.loginid\n        );\n    }\n\n    render() {\n        const {\n            // active_cashier_tab,\n            balance,\n            can_upgrade,\n            can_upgrade_to,\n            currency,\n            // hideFullBlur,\n            is_acc_switcher_on,\n            // is_cashier_modal_on,\n            is_logged_in,\n            is_virtual,\n            loginid,\n            onClickUpgrade,\n            toggleAccountsDialog,\n            // toggleCashierModal,\n            // showFullBlur,\n        } = this.props;\n        if (is_logged_in) {\n            return (\n                <React.Fragment>\n                    <Lazy\n                        ctor={() => import(/* webpackChunkName: \"account-info\", webpackPreload: true */'App/Components/Layout/Header/account-info.jsx')}\n                        should_load={true}\n                        has_progress={false}\n                        balance={formatMoney(currency, balance, true)}\n                        is_upgrade_enabled={can_upgrade}\n                        is_virtual={is_virtual}\n                        onClickUpgrade={onClickUpgrade}\n                        currency={currency}\n                        loginid={loginid}\n                        is_dialog_on={is_acc_switcher_on}\n                        toggleDialog={toggleAccountsDialog}\n                    />\n                    {!!(\n                        can_upgrade_to && is_virtual\n                    ) && <UpgradeButton\n                        className='acc-info__button'\n                        onClick={() => {\n                            window.open(urlFor('user/accounts', undefined, undefined, true));\n                        }}\n                    />}\n                    { should_show_deposit &&\n                    <Lazy\n                        ctor={() => import(/* webpackChunkName: \"toggle-cashier\", webpackPrefetch: true */'App/Components/Layout/Header/toggle-cashier.jsx')}\n                        should_load={!is_virtual} // remove false when cashier is ready.\n                        // active_tab={active_cashier_tab}\n                        className='acc-info__button'\n                        // toggleCashier={toggleCashierModal}\n                        // is_cashier_visible={is_cashier_modal_on}\n                        // showFullBlur={showFullBlur}\n                        // hideFullBlur={hideFullBlur}\n                    />\n                    }\n                    {!(\n                        is_virtual\n                    ) && // TODO: remove this when cashier pop up is ready\n                    <Button\n                        className='btn--primary btn--primary--orange acc-info__button'\n                        has_effect\n                        text={localize('Deposit')}\n                        onClick={() => {\n                            window.open(urlFor('cashier', undefined, undefined, true),\n                                '_blank',\n                                'noopener',\n                                'noreferrer',\n                            );\n                        }}\n                    />}\n                </React.Fragment>\n            );\n        }\n        return (\n            <React.Fragment>\n                <LoginButton className='acc-info__button' />\n                <SignupButton className='acc-info__button' />\n            </React.Fragment>\n        );\n    }\n}\n\nAccountActions.propTypes = {\n    active_cashier_tab  : PropTypes.any,\n    balance             : PropTypes.any,\n    can_upgrade         : PropTypes.any,\n    can_upgrade_to      : PropTypes.any,\n    currency            : PropTypes.any,\n    hideFullBlur        : PropTypes.any,\n    is_acc_switcher_on  : PropTypes.any,\n    is_cashier_modal_on : PropTypes.any,\n    is_logged_in        : PropTypes.any,\n    is_virtual          : PropTypes.any,\n    loginid             : PropTypes.any,\n    onClickUpgrade      : PropTypes.any,\n    showFullBlur        : PropTypes.any,\n    toggleAccountsDialog: PropTypes.any,\n    toggleCashierModal  : PropTypes.any,\n};\n","import React           from 'react';\nimport { localize }    from 'App/i18n';\nimport Icon            from 'Assets/icon.jsx';\nimport { routes }      from 'Constants/index';\n\nconst header_links = [\n    {\n        logo   : <div className='header__logo'>{localize('BETA')}</div>,\n        image  : <Icon icon='IconDeriv' className='header__icon' />,\n        link_to: routes.trade,\n    },\n    // {\n    //     icon      : <Icon icon='IconReports' className='header__icon' />,\n    //     text      : localize('Reports'),\n    //     link_to   : routes.reports,\n    //     login_only: true,\n    // },\n];\n\nexport default header_links;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport {\n    AccountActions,\n    MenuLinks,\n    // ToggleCashier,\n}                     from 'App/Components/Layout/Header';\nimport header_links   from 'App/Constants/header-links';\nimport Lazy           from 'App/Containers/Lazy';\n// import routes         from 'Constants/routes';\nimport { connect }    from 'Stores/connect';\n\nconst Header = ({\n    // active_cashier_tab,\n    balance,\n    can_upgrade,\n    can_upgrade_to,\n    currency,\n    // hideFullBlur,\n    is_acc_switcher_on,\n    // is_cashier_modal_on,\n    is_fully_blurred,\n    // is_loading,\n    is_logged_in,\n    is_mobile,\n    is_route_blurred,\n    is_virtual,\n    // location,\n    loginid,\n    onClickUpgrade,\n    // showFullBlur,\n    toggleAccountsDialog,\n    // toggleCashierModal,\n}) => (\n    <React.Fragment>\n        {/* {(!is_loading || location.pathname !== routes.trade) && */}\n        <header className={classNames('header', {\n            'header--is-blurred': (is_fully_blurred || is_route_blurred),\n        })}\n        >\n            <div className='header__menu-items'>\n                <div className='header__menu-left'>\n                    <Lazy\n                        has_progress={false}\n                        ctor={() => import(/* webpackChunkName: \"toggle-menu-drawer\", webpackPreload: true */'App/Components/Layout/Header/toggle-menu-drawer.jsx')}\n                        should_load={is_mobile}\n                    />\n                    <MenuLinks\n                        is_logged_in={is_logged_in}\n                        items={header_links}\n                    />\n                </div>\n                <div className='header__menu-right'>\n                    <div className='acc-info__container'>\n                        <AccountActions\n                            // active_cashier_tab={active_cashier_tab}\n                            balance={balance}\n                            can_upgrade_to={can_upgrade_to}\n                            currency={currency}\n                            can_upgrade={can_upgrade}\n                            // hideFullBlur={hideFullBlur}\n                            is_acc_switcher_on={is_acc_switcher_on}\n                            // is_cashier_modal_on={is_cashier_modal_on}\n                            is_logged_in={is_logged_in}\n                            is_virtual={is_virtual}\n                            loginid={loginid}\n                            onClickUpgrade={onClickUpgrade}\n                            toggleAccountsDialog={toggleAccountsDialog}\n                            // toggleCashierModal={toggleCashierModal}\n                            // showFullBlur={showFullBlur}\n                        />\n                    </div>\n                </div>\n            </div>\n        </header>\n        {/* } */}\n    </React.Fragment>\n);\n\nHeader.propTypes = {\n    // active_cashier_tab  : PropTypes.string,\n    balance             : PropTypes.string,\n    can_upgrade         : PropTypes.bool,\n    can_upgrade_to      : PropTypes.string,\n    currency            : PropTypes.string,\n    // hideFullBlur        : PropTypes.func,\n    is_acc_switcher_on  : PropTypes.bool,\n    // is_cashier_modal_on : PropTypes.bool,\n    is_dark_mode        : PropTypes.bool,\n    is_fully_blurred    : PropTypes.bool,\n    is_loading          : PropTypes.bool,\n    is_logged_in        : PropTypes.bool,\n    is_mobile           : PropTypes.bool,\n    is_route_blurred    : PropTypes.bool,\n    is_virtual          : PropTypes.bool,\n    location            : PropTypes.object,\n    loginid             : PropTypes.string,\n    onClickUpgrade      : PropTypes.func,\n    // showFullBlur        : PropTypes.func,\n    toggleAccountsDialog: PropTypes.func,\n    // toggleCashierModal  : PropTypes.func,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <MenuLinks /> from being blocked\nexport default withRouter(connect(\n    ({ client, ui }) => ({\n        // active_cashier_tab  : ui.active_cashier_tab,\n        balance             : client.balance,\n        can_upgrade         : client.can_upgrade,\n        can_upgrade_to      : client.can_upgrade_to,\n        currency            : client.currency,\n        // hideFullBlur        : ui.hideFullBlur,\n        is_loading          : ui.is_loading,\n        is_logged_in        : client.is_logged_in,\n        is_virtual          : client.is_virtual,\n        loginid             : client.loginid,\n        is_acc_switcher_on  : ui.is_accounts_switcher_on,\n        // is_cashier_modal_on : ui.is_cashier_modal_on,\n        is_dark_mode        : ui.is_dark_mode_on,\n        is_fully_blurred    : ui.is_fully_blurred,\n        is_route_blurred    : ui.is_route_blurred,\n        is_mobile           : ui.is_mobile,\n        // showFullBlur        : ui.showFullBlur,\n        toggleAccountsDialog: ui.toggleAccountsDialog,\n        // toggleCashierModal  : ui.toggleCashierModal,\n    })\n)(Header));\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { withRouter }                 from 'react-router';\nimport BinaryRoutes                   from 'App/Components/Routes';\nimport Lazy                           from 'App/Containers/Lazy';\nimport { connect }                    from 'Stores/connect';\n\nconst Routes = (props) => {\n    if (props.has_error) {\n        return (\n            <Lazy\n                ctor={() => import(/* webpackChunkName: \"error-component\" */'App/Components/Elements/Errors')}\n                should_load={props.has_error}\n                has_progress={true}\n                {...props.error}\n            />\n        );\n    }\n\n    return <BinaryRoutes is_logged_in={props.is_logged_in} passthrough={props.passthrough} />;\n};\n\nRoutes.propTypes = {\n    error       : MobxPropTypes.objectOrObservableObject,\n    has_error   : PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <BinaryRoutes /> from being blocked\nexport default withRouter(connect(\n    ({ client, common }) => ({\n        is_logged_in: client.is_logged_in,\n        error       : common.error,\n        has_error   : common.has_error,\n    })\n)(Routes));\n","import { action }              from 'mobx';\nimport NetworkMonitorBase      from '_common/base/network_monitor_base'; // eslint-disable-line import/order\nimport { BinarySocketGeneral } from './index';\n\nlet common_store;\n\nconst NetworkMonitor = (() => {\n    const init = (store) => {\n        NetworkMonitorBase.init(BinarySocketGeneral.init(store), updateStore);\n        common_store = store.common;\n    };\n\n    const updateStore = action((status, is_online) => {\n        if (common_store) {\n            common_store.setNetworkStatus(status, is_online);\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default NetworkMonitor;\n","import { action }   from 'mobx';\nimport { localize } from 'App/i18n';\n\nlet common_store;\n\nconst OutdatedBrowser = (() => {\n    const init = (store) => {\n        common_store = store.common;\n\n        const src = '//browser-update.org/update.min.js';\n        if (document.querySelector(`script[src*=\"${src}\"]`)) return;\n        window.$buoop = {\n            vs       : { i: 11, f: -4, o: -4, s: 9, c: -4 },\n            api      : 4,\n            url      : 'https://whatbrowser.org/',\n            noclose  : true, // Do not show the 'ignore' button to close the notification\n            reminder : 0, // show all the time\n            onshow   : updateStore,\n            nomessage: true,\n            insecure : true,\n        };\n        if (document.body) {\n            const script = document.createElement('script');\n            script.setAttribute('src', src);\n            document.body.appendChild(script);\n        }\n    };\n\n    const updateStore = action('showError', () => {\n        if (common_store) { // TODO: i18n_issue\n            common_store.showError({\n                message: localize('Your web browser is out of date and may affect your trading experience. Please {{opening_tag}}update your browser{{closing_tag}}.', {\n                    opening_tag  : '<a href=\"http://outdatedbrowser.com\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"link\">',\n                    closing_tag  : '</a>',\n                    interpolation: { escapeValue: false },\n                }),\n                has_html: true,\n            });\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default OutdatedBrowser;\n","import React            from 'react';\nimport { formatDate }   from 'Utils/Date';\nimport { WS }           from 'Services';\nimport { getRiskAssessment,\n    isAccountOfType,\n    shouldAcceptTnc,\n    shouldCompleteTax } from '_common/base/client_base';\nimport { localize }     from 'App/i18n';\nimport {\n    LocalStore,\n    State }             from '_common/storage';\nimport { urlFor }       from '_common/url';\nimport Localize         from '../../App/Components/Elements/localize.jsx';\n\n// TODO: Update links to app_2 links when components are done.\n/* eslint-disable react/jsx-no-target-blank */\nconst client_notifications = {\n    currency: {\n        header : localize('Set Currency'),\n        message: (\n            <Localize\n                i18n_default_text='Please set the <0>currency</0> of your account to enable trading.'\n                components={[<a key={0} className='link link--white' target='_blank' href={urlFor('user/set-currency', undefined, undefined, true)} />]}\n            />\n        ),\n        type: 'danger',\n    },\n    self_exclusion: (excluded_until) => ({\n        header : localize('Self-exclusion Detected'),\n        message: (\n            <Localize\n                i18n_default_text='You have opted to be excluded from Binary.com until {{exclusion_end}}. Please <0>contact us</0> for assistance.'\n                values={{ exclusion_end: formatDate(excluded_until, 'DD/MM/YYYY'), interpolation: { escapeValue: false } }}\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('contact', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    }),\n    authenticate: {\n        header : localize('Account Authentication'),\n        message: (\n            <Localize\n                i18n_default_text='<0>Authenticate your account</0> now to take full advantage of all payment methods available.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/authenticate', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'info',\n    },\n    cashier_locked: {\n        header : localize('Cashier Disabled'),\n        message: localize('Deposits and withdrawals have been disabled on your account. Please check your email for more details.'),\n        type   : 'warning',\n    },\n    withdrawal_locked: {\n        header : localize('Withdrawal Disabled'),\n        message: localize('Withdrawals have been disabled on your account. Please check your email for more details.'),\n        type   : 'warning',\n    },\n    mt5_withdrawal_locked: {\n        header : localize('MT5 Withdrawal Disabled'),\n        message: localize('MT5 withdrawals have been disabled on your account. Please check your email for more details.'),\n        type   : 'warning',\n    },\n    document_needs_action: {\n        header : localize('Authentication Failed'),\n        message: (\n            <Localize\n                i18n_default_text='<0>Your Proof of Identity or Proof of Address</0> did not meet our requirements. Please check your email for further instructions.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/authenticate', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'warning',\n    },\n    unwelcome: {\n        header : localize('Trading and Deposits Disabled'),\n        message: (\n            <Localize\n                i18n_default_text='Trading and deposits have been disabled on your account. Kindly contact <0>customer support</0> for assistance.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('contact', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n    mf_retail: {\n        header : localize('Binary Options Trading Disabled'),\n        message: (\n            <Localize\n                i18n_default_text='Binary Options Trading has been disabled on your account. Kindly contact <0>customer support</0> for assistance.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('contact', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n    financial_limit: {\n        header : localize('Remove Deposit Limits'),\n        message: (\n            <Localize\n                i18n_default_text='Please set your <0>30-day turnover limit</0> to remove deposit limits.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/security/self_exclusionws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'warning',\n    },\n    risk: {\n        header : localize('Withdrawal and Trading Limits'),\n        message: (\n            <Localize\n                i18n_default_text='Please complete the <0>Financial Assessment form</0> to lift your withdrawal and trading limits.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/settings/assessmentws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'info',\n    },\n    tax: {\n        header : localize('Complete your personal details'),\n        message: (\n            <Localize\n                i18n_default_text='Please complete your <0>Personal Details</0> before you proceed.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/settings/detailsws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n    tnc: {\n        header : localize('Terms & Conditions Updated'),\n        message: (\n            <Localize\n                i18n_default_text='Please <0>accept the updated Terms and Conditions</0> to enable deposit and trading.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/tnc_approvalws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n    required_fields: {\n        header : localize('Complete your personal details'),\n        message: (\n            <Localize\n                i18n_default_text='Please complete your <0>Personal Details</0> before you proceed.'\n                components={[ <a key={0} className='link link--white' target='_blank' href={urlFor('user/settings/detailsws', undefined, undefined, true)} /> ]}\n            />\n        ),\n        type: 'danger',\n    },\n};\n\nconst hasMissingRequiredField = (response, client) => {\n    if (!response.get_settings) return false;\n\n    const { landing_company_shortcode } = client;\n    const is_svg = (landing_company_shortcode === 'svg' || landing_company_shortcode === 'costarica');\n\n    let required_fields;\n    if (is_svg) {\n        required_fields = getSVGRequiredFields();\n    } else {\n        required_fields = getRequiredFields();\n    }\n\n    const get_settings = response.get_settings;\n    return required_fields.some(field => !get_settings[field]);\n\n    function getSVGRequiredFields() {\n        const necessary_withdrawal_fields = State.getResponse('landing_company.financial_company.requirements.withdrawal');\n        const necessary_signup_fields     = State.getResponse('landing_company.financial_company.requirements.signup')\n            .map(field => (field === 'residence' ? 'country' : field));\n\n        return [...necessary_withdrawal_fields, ...necessary_signup_fields];\n    }\n\n    function getRequiredFields() {\n        if (!isAccountOfType('financial')) return [];\n        const { residence } = client;\n\n        const required_settings_fields = [\n            'account_opening_reason',\n            'address_line_1',\n            'address_city',\n            'phone',\n            'tax_identification_number',\n            'tax_residence'];\n        const address_postcode_is_required = (residence === 'gb' || landing_company_shortcode === 'iom');\n        if (address_postcode_is_required) required_settings_fields.push('address_postcode');\n\n        return [...required_settings_fields];\n    }\n};\n\nconst checkAccountStatus = (response, client, addNotification, loginid) => {\n    if (!response.get_account_status) return;\n    if (loginid !== LocalStore.get('active_loginid')) return;\n\n    const { prompt_client_to_authenticate, status } = response.get_account_status;\n\n    const {\n        document_under_review,\n        cashier_locked,\n        withdrawal_locked,\n        mt5_withdrawal_locked,\n        document_needs_action,\n        unwelcome,\n        ukrts_max_turnover_limit_not_set,\n        professional,\n    } = getStatusValidations(status);\n    const is_mf_retail = client.landing_company_shortcode === 'maltainvest' && !professional;\n\n    if (cashier_locked)        addNotification(client_notifications.cashier_locked);\n    if (withdrawal_locked)     addNotification(client_notifications.withdrawal_locked);\n    if (mt5_withdrawal_locked) addNotification(client_notifications.mt5_withdrawal_locked);\n    if (document_needs_action) addNotification(client_notifications.document_needs_action);\n    if (unwelcome)             addNotification(client_notifications.unwelcome);\n    if (is_mf_retail)          addNotification(client_notifications.mf_retail);\n    if (ukrts_max_turnover_limit_not_set) {\n        addNotification(client_notifications.financial_limit);\n    }\n    if (getRiskAssessment()) addNotification(client_notifications.risk);\n    if (shouldCompleteTax()) addNotification(client_notifications.tax);\n\n    if ((+prompt_client_to_authenticate) && !(document_under_review || document_needs_action)) {\n        addNotification(client_notifications.authenticate);\n    }\n\n    function getStatusValidations(status_arr) {\n        return status_arr.reduce((validations, account_status) => {\n            validations[account_status] = true;\n            return validations;\n        }, {});\n    }\n};\n\nexport const handleClientNotifications = (client, addNotification, loginid) => {\n    const { currency, excluded_until } = client;\n    if (!currency)         addNotification(client_notifications.currency);\n    if (excluded_until)    addNotification(client_notifications.self_exclusion(excluded_until));\n\n    WS.getAccountStatus().then((response) => checkAccountStatus(response, client, addNotification, loginid));\n\n    WS.sendRequest({ get_settings: 1 }, { forced: true }).then((response) => {\n        if (loginid !== LocalStore.get('active_loginid')) return;\n\n        if (shouldAcceptTnc()) addNotification(client_notifications.tnc);\n\n        if (hasMissingRequiredField(response, client)) {\n            addNotification(client_notifications.required_fields);\n        }\n    });\n};\n","import Client                    from '_common/base/client_base';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport { getElementById }        from '_common/common_functions';\nimport { localize }              from 'App/i18n';\nimport { compareBigUnsignedInt } from '_common/string_util';\nimport { cloneObject }           from '_common/utility';\n\n// ------------------------------\n// ----- Validation Methods -----\n// ------------------------------\nconst validRequired     = (value/* , options, field */) => {\n    if (value === undefined || value === null) {\n        return false;\n    }\n\n    const str = String(value).replace(/\\s/g, '');\n    return str.length > 0;\n};\nconst validEmail        = value => /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,63}$/.test(value);\nconst validPassword     = value => /(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]+/.test(value);\nconst validLetterSymbol = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><,|\\d]+/.test(value);\nconst validGeneral      = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><|]+/.test(value);\nconst validAddress      = value => !/[`~!$%^&*_=+[}{\\]\\\\\"?><|]+/.test(value);\nconst validPostCode     = value => /^[a-zA-Z\\d-\\s]*$/.test(value);\nconst validPhone        = value => /^\\+?[0-9\\s]*$/.test(value);\nconst validRegular      = (value, options) => options.regex.test(value);\nconst validEmailToken   = value => value.trim().length === 8;\nconst validTaxID        = value => /^[a-zA-Z0-9]*[\\w-]*$/.test(value);\nconst validBarrier      = value => /^[+-]?\\d+\\.?\\d*$/.test(value);\n\nconst validCompare  = (value, options) => value === getElementById(options.to.substr(1)).value;\nconst validNotEqual = (value, options) => value !== getElementById(options.to.substr(1)).value;\nconst validMin      = (value, options) => (options.min ? value.length >= options.min : true);\nconst validLength   = (value, options) => (\n    (options.min ? value.length >= options.min : true) &&\n    (options.max ? value.length <= options.max : true)\n);\n\nconst validNumber = (value, opts) => {\n    const options = cloneObject(opts);\n    let message = null;\n    if (options.allow_empty && value.length === 0) {\n        return true;\n    }\n\n    let is_ok = true;\n    if ('min' in options && typeof options.min === 'function') {\n        options.min = options.min();\n    }\n    if ('max' in options && typeof options.max === 'function') {\n        options.max = options.max();\n    }\n\n    if (!(options.type === 'float' ? /^\\d*(\\.\\d+)?$/ : /^\\d+$/).test(value) || isNaN(value)) {\n        is_ok   = false;\n        message = localize('Should be a valid number.');\n    } else if (options.type === 'float' && options.decimals &&\n        !(new RegExp(`^\\\\d+(\\\\.\\\\d{0,${options.decimals}})?$`).test(value))) {\n        is_ok   = false;\n        message = localize('Up to {{decimal_count}} decimal places are allowed.', { decimal_count: options.decimals });\n    } else if ('min' in options && 'max' in options && +options.min === +options.max && +value !== +options.min) {\n        is_ok   = false;\n        message = localize('Should be {{value}}', { value: addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined) });\n    } else if ('min' in options && 'max' in options && (+value < +options.min || isMoreThanMax(value, options))) {\n        is_ok   = false;\n        message = localize(\n            'Should be between {{min_value}} and {{max_value}}',\n            {\n                min_value: addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined),\n                max_value: addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined),\n            }\n        );\n    } else if ('min' in options && +value < +options.min) {\n        is_ok   = false;\n        message = localize('Should be more than {{min_value}}', { min_value: addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined) });\n    } else if ('max' in options && isMoreThanMax(value, options)) {\n        is_ok   = false;\n        message = localize('Should be less than {{max_value}}', { max_value: addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined) });\n    }\n\n    getPreBuildDVRs().number.message = message;\n    return is_ok;\n};\n\nconst isMoreThanMax = (value, options) =>\n    (options.type === 'float' ? +value > +options.max : compareBigUnsignedInt(value, options.max) === 1);\n\nconst initPreBuildDVRs = () => ({\n    address      : { func: validAddress,      message: localize('Only letters, numbers, space, and these special characters are allowed: {{permitted_characters}}', { permitted_characters: '- . \\' # ; : ( ) , @ /' }) },\n    barrier      : { func: validBarrier,      message: localize('Only numbers and these special characters are allowed: {{permitted_characters}}', { permitted_characters: '+ - .' }) },\n    compare      : { func: validCompare,      message: localize('The two passwords that you entered do not match.') },\n    email        : { func: validEmail,        message: localize('Invalid email address.') },\n    general      : { func: validGeneral,      message: localize('Only letters, numbers, space, hyphen, period, and apostrophe are allowed.') },\n    length       : { func: validLength,       message: localize('You should enter {{value}} characters.', { value: '{{value}}' }) },\n    letter_symbol: { func: validLetterSymbol, message: localize('Only letters, space, hyphen, period, and apostrophe are allowed.') },\n    min          : { func: validMin,          message: localize('Minimum of {{value}} characters required.', { value: '{{value}}' }) },\n    not_equal    : { func: validNotEqual,     message: localize('{{value_one}} and {{value_two}} cannot be the same.', { value_one: '{{value_one}}', value_two: '{{value_two}}' }) },\n    number       : { func: validNumber,       message: '' }, // TODO: i18n_issue\n    password     : { func: validPassword,     message: localize('Password should have lower and uppercase letters with numbers.') },\n    phone        : { func: validPhone,        message: localize('Only numbers and spaces are allowed.') },\n    postcode     : { func: validPostCode,     message: localize('Only letters, numbers, space, and hyphen are allowed.') },\n    regular      : { func: validRegular,      message: '' },\n    req          : { func: validRequired,     message: '' },\n    signup_token : { func: validEmailToken,   message: localize('The length of token should be 8.') },\n    tax_id       : { func: validTaxID,        message: localize('Should start with letter or number, and may contain hyphen and underscore.') },\n});\n\nlet pre_build_dvrs;\nexport const getPreBuildDVRs = () => {\n    if (!pre_build_dvrs) {\n        pre_build_dvrs = initPreBuildDVRs();\n    }\n    return pre_build_dvrs;\n};\n\nexport const getPasswordLengthConfig = type => ({ min: (/^mt$/.test(type) ? 8 : 6), max: 25 });\n","class Errors {\n    constructor() {\n        this.errors = {};\n    }\n\n    add(attribute, message) {\n        if (!this.has(attribute)) {\n            this.errors[attribute] = [];\n        }\n\n        if (this.errors[attribute].indexOf(message) === -1) {\n            this.errors[attribute].push(message);\n        }\n    }\n\n    all() {\n        return this.errors;\n    }\n\n    first(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute][0];\n        }\n        return null;\n    }\n\n    get(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute];\n        }\n\n        return [];\n    }\n\n    has(attribute) {\n        return Object.prototype.hasOwnProperty.call(this.errors, attribute);\n    }\n}\n\nexport default Errors;\n","import { template }        from '_common/utility';\nimport { getPreBuildDVRs } from './declarative-validation-rules';\nimport Error               from './errors';\n\nclass Validator {\n    constructor(input, rules, store = null) {\n        this.input  = input;\n        this.rules  = rules;\n        this.store  = store;\n        this.errors = new Error();\n\n        this.error_count = 0;\n    }\n\n    /**\n     * Add failure and error message for given rule\n     *\n     * @param {string} attribute\n     * @param {object} rule\n     */\n    addFailure(attribute, rule) {\n        let message = rule.options.message || getPreBuildDVRs()[rule.name].message;\n        if (rule.name === 'length') {\n            message = template(message, [rule.options.min === rule.options.max ? rule.options.min : `${rule.options.min}-${rule.options.max}`]);\n        } else if (rule.name === 'min') {\n            message = template(message, [rule.options.min]);\n        } else if (rule.name === 'not_equal') {\n            message = template(message, [rule.options.name1, rule.options.name2]);\n        }\n        this.errors.add(attribute, message);\n        this.error_count++;\n    }\n\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n    check() {\n        Object.keys(this.input).forEach(attribute => {\n            if (!Object.prototype.hasOwnProperty.call(this.rules, attribute)) {\n                return;\n            }\n\n            this.rules[attribute].forEach(rule => {\n                const ruleObject = Validator.getRuleObject(rule);\n\n                if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n                    return;\n                }\n\n                if (ruleObject.options.condition && !ruleObject.options.condition(this.store)) {\n                    return;\n                }\n\n                if (this.input[attribute] === '' && ruleObject.name !== 'req') {\n                    return;\n                }\n\n                const is_valid = ruleObject.validator(\n                    this.input[attribute],\n                    ruleObject.options,\n                    this.store,\n                    this.input\n                );\n\n                if (!is_valid) {\n                    this.addFailure(attribute, ruleObject);\n                }\n            });\n        });\n        return !this.error_count;\n    }\n\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n    isPassed() {\n        return this.check();\n    }\n\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n    static getRuleObject(rule) {\n        const is_rule_string = typeof rule === 'string';\n        const rule_object = {\n            name   : is_rule_string ? rule : rule[0],\n            options: is_rule_string ? {} : rule[1] || {},\n        };\n\n        rule_object.validator = rule_object.name === 'custom' ? rule[1].func : getPreBuildDVRs()[rule_object.name].func;\n\n        return rule_object;\n    }\n}\n\nexport default Validator;\n","import {\n    action,\n    intercept,\n    observable,\n    reaction,\n    toJS,\n    when }               from 'mobx';\nimport BinarySocket      from '_common/base/socket_base';\nimport { isEmptyObject } from '_common/utility';\nimport Validator         from 'Utils/Validator';\nimport { isProduction }  from '../config';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE  : Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    @observable\n    validation_errors = {};\n\n    @observable\n    validation_rules = {};\n\n    switchAccountDisposer = null;\n    switch_account_listener = null;\n\n    @observable partial_fetch_time = 0;\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     *     @property {String}   store_name - Explicit store name for browser application storage (to bypass minification)\n     */\n    constructor(options = {}) {\n        const {\n            root_store,\n            local_storage_properties,\n            session_storage_properties,\n            validation_rules,\n            store_name,\n        } = options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n\n        const has_local_or_session_storage = local_storage_properties && local_storage_properties.length\n            || session_storage_properties && session_storage_properties.length;\n\n        if (has_local_or_session_storage) {\n            if (!store_name) {\n                throw new Error('store_name is required for local/session storage');\n            }\n\n            Object.defineProperty(this, 'store_name', {\n                value     : store_name,\n                enumerable: false,\n                writable  : false,\n            });\n        }\n\n        this.root_store                 = root_store;\n        this.local_storage_properties   = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n        this.setValidationRules(validation_rules);\n\n        this.setupReactionForLocalStorage();\n        this.setupReactionForSessionStorage();\n        this.retrieveFromStorage();\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce(\n                (result, p) => Object.assign(result, { [p]: snapshot[p] }),\n                {},\n            );\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties), (key, value) => {\n            if (value !== null) return value;\n            return undefined;\n        });\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.store_name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.store_name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    @action\n    retrieveFromStorage() {\n        const local_storage_snapshot   = JSON.parse(localStorage.getItem(this.store_name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.store_name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach((k) => this[k] = snapshot[k]);\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param [{String}] messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    @action\n    setValidationErrorMessages(propertyName, messages) {\n        const is_different = () => !!this.validation_errors[propertyName]\n            .filter(x => !messages.includes(x))\n            .concat(messages.filter(x => !this.validation_errors[propertyName].includes(x)))\n            .length;\n        if (!this.validation_errors[propertyName] || is_different()) {\n            this.validation_errors[propertyName] = messages;\n        }\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    @action\n    setValidationRules(rules = {}) {\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    @action\n    addRule(property, rules) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    @action\n    validateProperty(property, value) {\n        const trigger          = this.validation_rules[property].trigger;\n        const inputs           = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: (this.validation_rules[property].rules || []) };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger]           = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(\n            inputs,\n            validation_rules,\n            this,\n        );\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    @action\n    validateAllProperties() {\n        const validation_rules  = Object.keys(this.validation_rules);\n        const validation_errors = Object.keys(this.validation_errors);\n\n        validation_rules.forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n\n        // Remove keys that are present in error, but not in rules:\n        validation_errors.forEach(error => {\n            if (!validation_rules.includes(error)) {\n                delete this.validation_errors[error];\n            }\n        });\n    }\n\n    @action.bound\n    onSwitchAccount(listener) {\n        this.switchAccountDisposer = when(\n            () => this.root_store.client.switch_broadcast,\n            async () => {\n                try {\n                    const result = this.switch_account_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.switchEndSignal();\n                            this.onSwitchAccount(this.switch_account_listener);\n                        });\n                    } else {\n                        throw new Error('Switching account listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            },\n        );\n        this.switch_account_listener = listener;\n    }\n\n    @action.bound\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n    }\n\n    @action.bound\n    assertHasValidCache(loginid, ...reactions) {\n        // account was changed when this was unmounted.\n        if (this.root_store.client.loginid !== loginid) {\n            reactions.forEach(act => act());\n            this.partial_fetch_time = false;\n        }\n    }\n\n    waitFor = async (...prerequisites) => {\n        await BinarySocket.wait(...prerequisites);\n    };\n}\n","import { isCryptocurrency } from '_common/base/currency_base';\nimport { localize }         from 'App/i18n';\n\nexport const buildCurrenciesList = (payout_currencies) => {\n    const fiat   = [];\n    const crypto = [];\n\n    payout_currencies.forEach((cur) => {\n        const isCrypto = isCryptocurrency(cur);\n        (isCrypto ? crypto : fiat).push({ text: cur, value: cur, has_tooltip: isCrypto });\n    });\n\n    return {\n        [localize('Fiat')]  : fiat,\n        [localize('Crypto')]: crypto,\n    };\n};\n\nexport const getDefaultCurrency = (currencies_list, currency = '') => {\n    const supported_currencies = Object.values(currencies_list).reduce((a, b) => [...a, ...b]);\n    const default_currency =\n              supported_currencies.find(c => c.value === currency) ? currency : supported_currencies[0].value;\n\n    return {\n        currency: default_currency,\n    };\n};\n","import {\n    action,\n    computed,\n    observable,\n    runInAction,\n    when,\n}                                    from 'mobx';\nimport moment                        from 'moment';\nimport {\n    requestLogout,\n    WS }                             from 'Services';\nimport { getAccountTitle }           from '_common/base/client_base';\nimport BinarySocket                  from '_common/base/socket_base';\nimport * as SocketCache              from '_common/base/socket_cache';\nimport { localize }                  from 'App/i18n';\nimport {\n    LocalStore,\n    State }                          from '_common/storage';\nimport BinarySocketGeneral           from 'Services/socket-general';\nimport { handleClientNotifications } from './Helpers/client-notifications';\nimport BaseStore                     from './base-store';\nimport { getClientAccountType }      from './Helpers/client';\nimport { buildCurrenciesList }       from './Modules/Trading/Helpers/currency';\nimport { setCurrencies }             from '../_common/base/currency_base';\n\nconst storage_key = 'client.accounts';\nexport default class ClientStore extends BaseStore {\n    @observable loginid;\n    @observable upgrade_info;\n    @observable accounts;\n    @observable email;\n    @observable switched                   = '';\n    @observable switch_broadcast           = false;\n    @observable currencies_list            = {};\n    @observable residence_list             = [];\n    @observable selected_currency          = '';\n    @observable is_populating_account_list = false;\n    @observable website_status             = {};\n    @observable verification_code          = '';\n\n    constructor(root_store) {\n        super({ root_store });\n    }\n\n    @computed\n    get balance() {\n        if (!this.accounts) return '';\n        return (this.accounts[this.loginid] && this.accounts[this.loginid].balance) ?\n            this.accounts[this.loginid].balance.toString() :\n            '';\n    }\n\n    /**\n     * Temporary property. should be removed once we are fully migrated from the old app.\n     *\n     * @returns {boolean}\n     */\n    @computed\n    get is_client_allowed_to_visit() {\n        return !!(\n            !this.is_logged_in || this.is_virtual || this.accounts[this.loginid].landing_company_shortcode === 'svg'\n        );\n    }\n\n    @computed\n    get account_list() {\n        return this.all_loginids.map(id => (\n            !this.isDisabled(id) &&\n            this.getToken(id) ?\n                this.getAccountInfo(id) :\n                undefined\n        )).filter(account => account);\n    }\n\n    @computed\n    get active_accounts() {\n        return this.accounts instanceof Object\n            ? Object.values(this.accounts).filter(account => !account.is_disabled)\n            : [];\n    }\n\n    @computed\n    get all_loginids() {\n        return this.accounts instanceof Object ? Object.keys(this.accounts) : [];\n    }\n\n    @computed\n    get account_title() {\n        return getAccountTitle(this.loginid);\n    }\n\n    @computed\n    get currency() {\n        if (this.selected_currency.length) {\n            return this.selected_currency;\n        } else if (this.is_logged_in) {\n            return this.accounts[this.loginid].currency;\n        }\n        return this.default_currency;\n\n    }\n\n    @computed\n    get default_currency() {\n        if (Object.keys(this.currencies_list).length > 0) {\n            const keys = Object.keys(this.currencies_list);\n            return Object.values(this.currencies_list[`${keys[0]}`])[0].text;\n        } return 'USD';\n    }\n\n    @computed\n    get is_valid_login() {\n        if (!this.is_logged_in) return true;\n        const valid_login_ids_regex = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG)[0-9]+$', 'i');\n        return this.all_loginids.every(id => valid_login_ids_regex.test(id));\n    }\n\n    @computed\n    get is_logged_in() {\n        return !!(\n            this.accounts instanceof Object &&\n            Object.keys(this.accounts).length > 0 &&\n            this.loginid &&\n            this.accounts[this.loginid].token\n        );\n    }\n\n    @computed\n    get is_virtual() {\n        return this.accounts && this.accounts[this.loginid] && !!this.accounts[this.loginid].is_virtual;\n    }\n\n    @computed\n    get can_upgrade() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade || this.upgrade_info.can_open_multi);\n    }\n\n    @computed\n    get can_upgrade_to() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade_to);\n    }\n\n    @computed\n    get virtual_account_loginid() {\n        return this.all_loginids\n            .find(loginid => !!this.accounts[loginid].is_virtual);\n    }\n\n    @computed\n    get is_single_currency() {\n        return Object.keys(this.currencies_list).map(type => Object.values(this.currencies_list[type]).length)\n            .reduce((acc, cur) => acc + cur, 0) === 1;\n    }\n\n    @computed\n    get account_type() {\n        return getClientAccountType(this.loginid);\n    }\n\n    /**\n     * Store Values relevant to the loginid to local storage.\n     *\n     * @param loginid\n     */\n    @action.bound\n    resetLocalStorageValues(loginid) {\n        this.accounts[loginid].accepted_bch = 0;\n        LocalStore.setObject(storage_key, this.accounts);\n        LocalStore.set('active_loginid', loginid);\n        this.loginid = loginid;\n    }\n\n    @action.bound\n    getBasicUpgradeInfo() {\n        const upgradeable_landing_companies = State.getResponse('authorize.upgradeable_landing_companies');\n        let can_open_multi                  = false;\n        let type,\n            can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            can_open_multi   = upgradeable_landing_companies.indexOf(\n                this.accounts[this.loginid].landing_company_shortcode) !== -1;\n            const canUpgrade = (...landing_companies) => landing_companies.find(landing_company => (\n                landing_company !== this.accounts[this.loginid].landing_company_shortcode &&\n                upgradeable_landing_companies.indexOf(landing_company) !== -1\n            ));\n            can_upgrade_to   = canUpgrade('svg', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    }\n\n    @action.bound\n    responsePayoutCurrencies(response) {\n        const list = response.payout_currencies || response;\n        this.currencies_list = buildCurrenciesList(list);\n        this.selectCurrency('');\n    }\n\n    @action.bound\n    responseAuthorize(response) {\n        this.accounts[this.loginid].email                     = response.authorize.email;\n        this.accounts[this.loginid].currency                  = response.authorize.currency;\n        this.accounts[this.loginid].is_virtual                = +response.authorize.is_virtual;\n        this.accounts[this.loginid].session_start             = parseInt(moment().utc().valueOf() / 1000);\n        this.accounts[this.loginid].landing_company_shortcode = response.authorize.landing_company_name;\n        this.updateAccountList(response.authorize.account_list);\n        this.upgrade_info = this.getBasicUpgradeInfo();\n        this.user_id      = response.authorize.user_id;\n    }\n\n    @action.bound\n    setWebsiteStatus(response) {\n        this.website_status = response.website_status;\n        setCurrencies(this.website_status);\n    }\n\n    @computed\n    get is_website_status_ready () {\n        return this.website_status &&\n            this.website_status.site_status === 'up';\n    }\n\n    @action.bound\n    updateAccountList(account_list) {\n        account_list.forEach((account) => {\n            if (this.accounts[account.loginid]) {\n                this.accounts[account.loginid].excluded_until = account.excluded_until || '';\n                Object.keys(account).forEach((param) => {\n                    const param_to_set = param === 'country' ? 'residence' : param;\n                    const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                    if (param_to_set !== 'loginid') {\n                        this.accounts[account.loginid][param_to_set] = value_to_set;\n                    }\n                });\n            }\n        });\n    }\n\n    /**\n     * Switch to the given loginid account.\n     *\n     * @param {string} loginid\n     */\n    @action.bound\n    switchAccount(loginid) {\n        this.root_store.ui.removeAllNotifications();\n        this.setSwitched(loginid);\n    }\n\n    @action.bound\n    switchEndSignal() {\n        this.switch_broadcast = false;\n        this.root_store.ui.is_app_blurred = false;\n    }\n\n    /**\n     * We initially fetch things from local storage, and then do everything inside the store.\n     * This will probably be the only place we are fetching data from Client_base.\n     */\n    @action.bound\n    async init() {\n        const authorize_response = await this.setUserLogin();\n        this.setLoginId(LocalStore.get('active_loginid'));\n        this.setAccounts(LocalStore.getObject(storage_key));\n        this.setSwitched('');\n        const client = this.accounts[this.loginid];\n\n        // If there is an authorize_response, it means it was the first login\n        if (authorize_response) {\n            // If this fails, it means the landing company check failed\n            if (this.loginid === authorize_response.authorize.loginid) {\n                BinarySocketGeneral.authorizeAccount(authorize_response);\n            } else { // So it will send an authorize with the accepted token, to be handled by socket-general\n                await BinarySocket.send({ authorize: client.token }, { forced: true });\n            }\n        }\n\n        if (client && !client.is_virtual) {\n            BinarySocket.wait('landing_company', 'website_status').then(() => {\n                handleClientNotifications(client, this.root_store.ui.addNotification, this.loginid);\n            });\n        }\n\n        this.selectCurrency('');\n\n        this.responsePayoutCurrencies(await WS.payoutCurrencies());\n\n        this.registerReactions();\n    }\n\n    @action.bound\n    setLoginId(loginid) {\n        this.loginid = loginid;\n    }\n\n    @action.bound\n    setAccounts(accounts) {\n        this.accounts = accounts;\n    }\n\n    @action.bound\n    setSwitched(switched) {\n        this.switched = switched;\n    }\n\n    /**\n     * Check if account is disabled or not\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    isDisabled(loginid = this.loginid) {\n        return this.getAccount(loginid).is_disabled;\n    }\n\n    /**\n     * Get accounts token from given login id.\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    getToken(loginid = this.loginid) {\n        return this.getAccount(loginid).token;\n    }\n\n    /**\n     * Get account object from given login id\n     *\n     * @param loginid\n     * @returns {object}\n     */\n    getAccount(loginid = this.loginid) {\n        return this.accounts[loginid];\n    }\n\n    /**\n     * Get information required by account switcher\n     *\n     * @param loginid\n     * @returns {{loginid: *, is_virtual: (number|number|*), icon: string, title: *}}\n     */\n    getAccountInfo(loginid = this.loginid) {\n        const account      = this.getAccount(loginid);\n        const currency     = account.currency;\n        const is_virtual   = account.is_virtual;\n        const account_type = !is_virtual && currency ? currency : getAccountTitle(loginid);\n\n        return {\n            loginid,\n            is_virtual,\n            icon : account_type.toLowerCase(), // TODO: display the icon\n            title: account_type.toLowerCase() === 'virtual' ? localize('DEMO') : account_type,\n        };\n    }\n\n    @action.bound\n    broadcastAccountChange() {\n        this.switch_broadcast = true;\n    }\n\n    @action.bound\n    async switchAccountHandler () {\n        if (!this.switched || !this.switched.length || !this.getAccount(this.switched).token) {\n            // Logout if the switched_account doesn't belong to any loginid.\n            if (!this.all_loginids.some(id => id !== this.switched) || this.switched === this.loginid) {\n                this.root_store.ui.addNotification({\n                    message: localize('Could not switch to default account.'),\n                    type   : 'danger',\n                });\n                // request a logout\n                requestLogout();\n                // this.root_store.modules.trade.clearContract();\n                return;\n            }\n\n            // this.root_store.modules.portfolio.clearTable();\n            // Send a toast message to let the user know we can't switch his account.\n            this.root_store.ui.addNotification({\n                message: localize('Switching to default account.'),\n                type   : 'info',\n            });\n\n            // switch to default account.\n            this.switchAccount(this.all_loginids[0]);\n            await this.switchAccountHandler();\n            return;\n        }\n        sessionStorage.setItem('active_tab', '1');\n        // set local storage\n        this.root_store.gtm.setLoginFlag();\n        this.resetLocalStorageValues(this.switched);\n        SocketCache.clear();\n        await BinarySocket.send({ 'authorize': this.getToken() }, { forced: true });\n        await this.init();\n        this.broadcastAccountChange();\n    }\n\n    @action.bound\n    registerReactions() {\n        // Switch account reactions.\n        when(\n            () => this.switched,\n            this.switchAccountHandler\n        );\n    }\n\n    @action.bound\n    setBalance(balance) {\n        this.accounts[this.loginid].balance = balance;\n    }\n\n    @action.bound\n    selectCurrency(value) {\n        this.selected_currency = value;\n    }\n\n    @action.bound\n    setResidence(residence) {\n        this.accounts[this.loginid].residence = residence;\n    }\n\n    @action.bound\n    setEmail(email) {\n        this.accounts[this.loginid].email = email;\n        this.email = email;\n    }\n\n    @action.bound\n    cleanUp() {\n        this.root_store.gtm.pushDataLayer({ event: 'log_out' });\n        this.loginid = null;\n        this.upgrade_info = undefined;\n        this.accounts = [];\n        this.currencies_list  = {};\n        this.selected_currency = '';\n        // this.root_store.modules.smart_chart.should_refresh_active_symbols = true;\n        return new Promise(async (resolve) => {\n            // await this.root_store.modules.trade.clearContract();\n            // await this.root_store.modules.trade.resetErrorServices();\n            // await this.root_store.ui.removeAllNotifications();\n            // await this.root_store.modules.trade.refresh();\n            // return resolve(this.root_store.modules.trade.debouncedProposal());\n            return resolve(await this.root_store.ui.removeAllNotifications());\n        });\n    }\n\n    /* eslint-disable */\n    @action.bound\n    storeClientAccounts(obj_params, account_list) {\n        // store consistent names with other API calls\n        // API_V4: send consistent names\n        const map_names = {\n            country             : 'residence',\n            landing_company_name: 'landing_company_shortcode',\n        };\n        const client_object = {};\n        let active_loginid;\n\n        let is_allowed_real = true;\n        // Performs check to avoid login of landing companies that are currently not supported in app\n        account_list.forEach(function(account) {\n            if (!/^virtual|svg$/.test(account.landing_company_name)) {\n                is_allowed_real = false;\n            }\n        });\n\n        account_list.forEach(function(account) {\n            Object.keys(account).forEach(function(param) {\n                if (param === 'loginid') {\n                    if (!active_loginid && !account.is_disabled) {\n                        if (is_allowed_real && !account.is_virtual) {\n                            active_loginid = account[param];\n                        } else if (account.is_virtual) { // TODO: [only_virtual] remove this to stop logging non-SVG clients into virtual\n                            active_loginid = account[param];\n                        }\n                    }\n                } else {\n                    const param_to_set = map_names[param] || param;\n                    const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                    if (!(account.loginid in client_object)) {\n                        client_object[account.loginid] = {};\n                    }\n                    client_object[account.loginid][param_to_set] = value_to_set;\n                }\n            });\n        });\n\n        let i = 1;\n        while (obj_params[`acct${  i}`]) {\n            const loginid = obj_params[`acct${  i}`];\n            const token   = obj_params[`token${  i}`];\n            if (loginid && token) {\n                client_object[loginid].token = token;\n            }\n            i++;\n        }\n\n        // if didn't find any login ID that matched the above condition\n        // or the selected one doesn't have a token, set the first one\n        if (!active_loginid || !client_object[active_loginid].token) {\n            active_loginid = obj_params.acct1;\n        }\n\n        // TODO: send login flag to GTM if needed\n\n        if (active_loginid && Object.keys(client_object).length) {\n            localStorage.setItem('active_loginid', active_loginid);\n            localStorage.setItem('client.accounts', JSON.stringify(client_object));\n        }\n    }\n\n    @action.bound\n    async setUserLogin() {\n        const obj_params = {};\n        const search     = window.location.search;\n        if (search) {\n            const arr_params = window.location.search.substr(1).split('&');\n            arr_params.forEach(function(param) {\n                if (param) {\n                    const param_value = param.split('=');\n                    if (param_value) {\n                        obj_params[param_value[0]] = param_value[1];\n                    }\n                }\n            });\n        }\n        const is_client_logging_in = obj_params.token1;\n\n        if (is_client_logging_in) {\n            window.history.replaceState({}, document.title, '/');\n\n            // is_populating_account_list is used for socket general to know not to filter the first-time logins\n            this.is_populating_account_list = true;\n            const authorize_response = await BinarySocket.send({ authorize: obj_params.token1 });\n            this.is_populating_account_list = false;\n            runInAction(() => {\n                const account_list = (authorize_response.authorize || {}).account_list;\n                if (account_list && !this.accounts) {\n                    this.storeClientAccounts(obj_params, account_list);\n                }\n            });\n            return authorize_response;\n        }\n    }\n\n    @action.bound\n    setVerificationCode(code) {\n        this.verification_code = code;\n        if (code) {\n            LocalStore.set('verification_code', code);\n        } else {\n            LocalStore.remove('verification_code');\n        }\n        // TODO: add await if error handling needs to happen before AccountSignup is initialised\n        // this.fetchResidenceList(); // Prefetch for use in account signup process\n    }\n\n    @action.bound\n    onSignup({ password, residence }) {\n        if (!this.verification_code || !password || !residence) return;\n\n        // Currently the code doesn't reach here and the console log is needed for debugging.\n        // TODO: remove console log when AccountSignup component and validation are ready\n        WS.newAccountVirtual(this.verification_code, password, residence).then(response => console.log(response));\n    }\n\n    fetchResidenceList() {\n        WS.residenceList().then(response => {\n            runInAction(() => {\n                this.residence_list = response.residence_list || [];\n            })\n        });\n    }\n}\n/* eslint-enable */\n","// TODO: [move-to-shared] - Remove the implementation in ClientBase and add this to shared utils\nexport const getClientAccountType = (loginid) => {\n    let account_type;\n    if (/^VR/.test(loginid))          account_type = 'virtual';\n    else if (/^MF/.test(loginid))     account_type = 'financial';\n    else if (/^MLT|MX/.test(loginid)) account_type = 'gaming';\n    return account_type;\n};\n\n// TODO: [move-to-shared] - Remove the implementation in ClientBase and add this to shared utils\nexport const getMT5AccountType = group => (group ? group.replace('\\\\', '_').replace(/_(\\d+|master|EUR|GBP)/, '') : '');\n","import {\n    action,\n    observable }           from 'mobx';\nimport moment              from 'moment';\nimport { currentLanguage } from 'Utils/Language/index';\nimport BaseStore           from './base-store';\n\nexport default class CommonStore extends BaseStore {\n    @observable server_time      = moment.utc();\n    @observable current_language = currentLanguage;\n    @observable has_error        = false;\n\n    @observable error = {\n        type   : 'info',\n        message: '',\n    };\n\n    @observable network_status    = {};\n    @observable is_network_online = false;\n    @observable is_socket_opened  = false;\n\n    @observable services_error = {};\n\n    @observable deposit_url = '';\n    @observable withdraw_url = '';\n\n    @action.bound\n    setIsSocketOpened(is_socket_opened) {\n        this.is_socket_opened = is_socket_opened;\n    }\n\n    @action.bound\n    setNetworkStatus(status, is_online) {\n        if (this.network_status.class) {\n            this.network_status.class   = status.class;\n            this.network_status.tooltip = status.tooltip;\n        } else {\n            this.network_status = status;\n        }\n        this.is_network_online = is_online;\n    }\n\n    @action.bound\n    setError(has_error, error) {\n        this.has_error = has_error;\n        this.error     = {\n            type: error ? error.type : 'info',\n            ...(error && {\n                header             : error.header,\n                message            : error.message,\n                redirect_label     : error.redirect_label,\n                redirectOnClick    : error.redirectOnClick,\n                should_show_refresh: error.should_show_refresh,\n            }),\n        };\n    }\n\n    @action.bound\n    showError(message, header, redirect_label, redirectOnClick, should_show_refresh) {\n        this.setError(true, {\n            header,\n            message,\n            redirect_label,\n            redirectOnClick,\n            should_show_refresh,\n            type: 'error',\n        });\n    }\n\n    @action.bound\n    setDepositURL(deposit_url) {\n        this.deposit_url = deposit_url;\n    }\n\n    @action.bound\n    setWithdrawURL(withdraw_url) {\n        this.withdraw_url = withdraw_url;\n    }\n}\n","import * as Cookies           from 'js-cookie';\nimport {\n    action,\n    computed }                from 'mobx';\nimport BinarySocket           from '_common/base/socket_base';\nimport { isLoginPages }       from '_common/base/login';\nimport { get as getLanguage } from '_common/language';\nimport {\n    toMoment,\n    epochToMoment }           from 'Utils/Date';\nimport BaseStore              from './base-store';\nimport { getMT5AccountType }  from './Helpers/client';\nimport { getAppId }           from '../config';\n\nexport default class GTMStore extends BaseStore {\n    is_gtm_applicable = /^(16303|16929)$/.test(getAppId());\n\n    constructor(root_store) {\n        super({ root_store });\n\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    @computed\n    get visitorId() {\n        return this.root_store.client.loginid;\n    }\n\n    /**\n     * Contains common data that will be passed to GTM on each datalayer push\n     *\n     * @returns {object}\n     */\n    @computed\n    get common_variables() {\n        return {\n            language: getLanguage(),\n            ...this.root_store.client.is_logged_in && {\n                visitorId: this.visitorId,\n                currency : this.root_store.client.currency,\n                userId   : this.root_store.client.user_id,\n            },\n            ...this.root_store.ui.is_dark_mode_on && {\n                theme: this.root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n            },\n        };\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => resolve(this.pushDataLayer({ event: 'account switch' })));\n    }\n\n    /**\n     * Pushes provided data as GTM DataLayer\n     *\n     * @param {object} data\n     */\n    @action.bound\n    async pushDataLayer(data) {\n        if (this.is_gtm_applicable && !isLoginPages()) {\n            BinarySocket.wait('authorize').then(() => {\n                dataLayer.push({\n                    ...this.common_variables,\n                    ...data,\n                });\n            });\n        }\n    }\n\n    @action.bound\n    pushPurchaseData(contract_data) {\n        const data = {\n            event   : 'buy_contract',\n            bom_ui  : 'new',\n            contract: {\n                amount       : contract_data.amount,\n                barrier1     : contract_data.barrier,\n                barrier2     : contract_data.barrier2,\n                basis        : contract_data.basis,\n                buy_price    : contract_data.buy_price,\n                contract_type: contract_data.contract_type,\n                currency     : contract_data.currency,\n                date_expiry  : contract_data.date_expiry,\n                date_start   : contract_data.date_start,\n                duration     : contract_data.duration,\n                duration_unit: contract_data.duration_unit,\n                payout       : contract_data.payout,\n                symbol       : contract_data.symbol,\n            },\n            settings: {\n                theme           : this.root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n                positions_drawer: this.root_store.ui.is_positions_drawer_on ? 'open' : 'closed',\n                // purchase_confirm: this.root_store.ui.is_purchase_confirm_on ? 'enabled' : 'disabled',\n                chart           : {\n                    toolbar_position: this.root_store.ui.is_chart_layout_default ? 'bottom' : 'left',\n                    chart_asset_info: this.root_store.ui.is_chart_asset_info_visible ? 'visible' : 'hidden',\n                    chart_type      : this.root_store.modules.smart_chart.chart_type,\n                    granularity     : this.root_store.modules.smart_chart.granularity,\n                },\n            },\n        };\n        this.pushDataLayer(data);\n    }\n\n    /**\n     * Pushes deposit & withdrawal data from transaction-stream to GTM\n     *\n     * @param {object} response\n     * @param {object} extra_data\n     */\n    @action.bound\n    pushTransactionData(response, extra_data = {}) {\n        if (!this.is_gtm_applicable || this.root_store.client.is_virtual) return;\n        if (!response.transaction || !response.transaction.action) return;\n        if (!['deposit', 'withdrawal'].includes(response.transaction.action)) return;\n\n        const moment_now  = toMoment();\n        const storage_key = 'GTM_transactions';\n\n        // Remove values from prev days so localStorage doesn't grow to infinity\n        let gtm_transactions = JSON.parse(localStorage.getItem(storage_key)) || {};\n        if (Object.prototype.hasOwnProperty.call(gtm_transactions, 'timestamp')) {\n            if (moment_now.isAfter(epochToMoment(gtm_transactions.timestamp), 'day')) {\n                localStorage.removeItem(storage_key);\n                gtm_transactions = { timestamp: moment_now.unix() };\n            }\n        }\n        const transactions_arr = gtm_transactions.transactions || [];\n        if (!transactions_arr.includes(response.transaction.transaction_id)) {\n            const data = {\n                event           : 'transaction',\n                bom_account_type: this.root_store.client.account_type,\n                bom_today       : moment_now.unix(),\n                transaction     : {\n                    id    : response.transaction.transaction_id,\n                    type  : response.transaction.action,\n                    time  : response.transaction.transaction_time,\n                    amount: response.transaction.amount,\n                },\n            };\n            Object.assign(data, extra_data);\n            this.pushDataLayer(data);\n\n            transactions_arr.push(response.transaction.transaction_id);\n            gtm_transactions.transactions = transactions_arr;\n            gtm_transactions.timestamp    = gtm_transactions.timestamp || moment_now.unix();\n\n            localStorage.setItem(storage_key, JSON.stringify(gtm_transactions));\n        }\n    }\n\n    @action.bound\n    eventHandler(get_settings) {\n        if (!this.is_gtm_applicable) return;\n\n        const login_event       = localStorage.getItem('GTM_login');\n        const is_new_account    = localStorage.getItem('GTM_new_account') === '1';\n\n        localStorage.removeItem('GTM_login');\n        localStorage.removeItem('GTM_new_account');\n\n        const affiliate_token = Cookies.getJSON('affiliate_tracking');\n        if (affiliate_token) {\n            this.pushDataLayer({ affiliate_token: affiliate_token.t });\n        }\n\n        // Get current time (moment, set by server), else fallback to client time\n        const moment_now = toMoment();\n        const data = {\n            visitorId     : this.visitorId,\n            account_type  : this.root_store.client.account_type,\n            currency      : this.root_store.client.currency,\n            country       : get_settings.country,\n            country_abbrev: get_settings.country_code,\n            email         : get_settings.email,\n            url           : window.location.href,\n            today         : moment_now.unix(),\n        };\n\n        if (is_new_account) {\n            data.event = 'new_account';\n            data.bom_date_joined = data.bom_today;\n        }\n\n        if (login_event) {\n            data.event = login_event;\n            BinarySocket.wait('mt5_login_list').then((response) => {\n                (response.mt5_login_list || []).forEach((obj) => {\n                    const acc_type = (getMT5AccountType(obj.group) || '')\n                        .replace('real_vanuatu', 'financial').replace('vanuatu_', '').replace(/svg/, 'gaming'); // i.e. financial_cent, demo_cent, demo_gaming, real_gaming\n                    if (acc_type) {\n                        data[`mt5_${acc_type}_id`] = obj.login;\n                    }\n                });\n                this.pushDataLayer(data);\n            });\n        } else {\n            this.pushDataLayer(data);\n        }\n    }\n\n    @action.bound\n    setLoginFlag(event_name) {\n        if (this.is_gtm_applicable) {\n            localStorage.setItem('GTM_login', event_name);\n        }\n    }\n}\n","import {\n    action,\n    observable }            from 'mobx';\nimport { isCryptocurrency } from '_common/base/currency_base';\nimport { WS }               from 'Services';\nimport BaseStore            from '../../base-store';\n\nexport default class CashierStore extends BaseStore {\n    @observable is_loading       = false;\n    @observable container_height = 0;\n    @observable error_message    = '';\n\n    @observable container_urls = {\n        deposit : '',\n        withdraw: '',\n    };\n\n    @observable is_session_timeout = {\n        deposit : false,\n        withdraw: false,\n    };\n\n    @observable is_verification_button_clicked = false;\n    @observable is_verification_email_sent     = false;\n\n    containers = {\n        deposit : 'deposit',\n        withdraw: 'withdraw',\n    };\n\n    default_cashier_height = 1200;\n\n    timeout_cashier_url = {\n        deposit : '',\n        withdraw: '',\n    };\n\n    timeout_verification_button;\n\n    constructor({ root_store }) {\n        super({ root_store });\n\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    @action.bound\n    async onMount(container, verification_code) {\n        if (!['deposit', 'withdraw'].includes(container)) {\n            throw new Error('Cahshier Store onMount requires deposit or cashier as a container name');\n        }\n        this.setErrorMessage('');\n        this.setContainerHeight(0);\n        this.setLoading(true);\n\n        if (this.container_urls[container] && !this.is_session_timeout[container]) {\n            this.checkIframeLoaded();\n            return;\n        }\n\n        this.setSessionTimeout(false, this.containers[container]);\n\n        this.setContainerUrl('', this.containers[container]);\n        const response_cashier = await WS.cashier(this.containers[container], verification_code);\n\n        // TODO: uncomment this if cross origin access is allowed\n        // const xhttp = new XMLHttpRequest();\n        // const that = this;\n        // xhttp.onreadystatechange = function() {\n        //     if (this.readyState !== 4 || this.status !== 200) {\n        //         return;\n        //     }\n        //     that.setContainerUrl(this.responseText, this.containers[container]);\n        // };\n        // xhttp.open('GET', response_cashier.cashier, true);\n        // xhttp.send();\n\n        // TODO: error handling UI & custom messages\n        if (response_cashier.error) {\n            this.setLoading(false);\n            this.setErrorMessage(response_cashier.error.message);\n            if (verification_code) {\n                // clear verification code on error\n                this.clearVerification();\n            }\n        } else {\n            await this.checkIframeLoaded();\n            this.setContainerUrl(response_cashier.cashier, this.containers[container]);\n            this.setTimeoutCashierUrl(container);\n        }\n    }\n\n    @action.bound\n    async onMountDeposit() {\n        await this.onMount('deposit');\n    }\n\n    @action.bound\n    async checkIframeLoaded() {\n        window.removeEventListener('message', this.onIframeLoaded);\n        if (isCryptocurrency(this.root_store.client.currency)) {\n            this.setLoading(false);\n            this.setContainerHeight('540');\n            // crypto cashier can only be accessed once and the session expires\n            this.clearTimeoutCashierUrl(this.root_store.ui.active_cashier_tab);\n            this.setSessionTimeout(true, this.root_store.ui.active_cashier_tab);\n        } else {\n            window.addEventListener('message', this.onIframeLoaded, false);\n        }\n    }\n\n    @action.bound\n    onIframeLoaded(e) {\n        this.setLoading(false);\n        // set the height of the container after content loads so that the\n        // loading bar stays vertically centered until the end\n        this.setContainerHeight(+e.data || this.default_cashier_height);\n    }\n\n    @action.bound\n    setContainerUrl(url, container) {\n        if (this.container_urls[container] !== url) {\n            this.container_urls[container] = url;\n        }\n    }\n\n    @action.bound\n    setContainerHeight(height) {\n        this.container_height = height;\n    }\n\n    @action.bound\n    setErrorMessage(message) {\n        this.error_message = message;\n    }\n\n    @action.bound\n    setLoading(is_loading) {\n        this.is_loading = is_loading;\n    }\n\n    @action.bound\n    setSessionTimeout(is_session_time_out, container) {\n        this.is_session_timeout[container] = is_session_time_out;\n    }\n\n    @action.bound\n    setVerificationButtonClicked(is_verification_button_clicked) {\n        this.is_verification_button_clicked = is_verification_button_clicked;\n    }\n\n    @action.bound\n    setVerificationEmailSent(is_verification_email_sent) {\n        this.is_verification_email_sent = is_verification_email_sent;\n    }\n\n    clearTimeoutCashierUrl(container) {\n        if (this.timeout_cashier_url[container]) {\n            clearTimeout(this.timeout_cashier_url[container]);\n        }\n    }\n\n    // cashier session expires after one minute\n    // so we should resend the request for container (deposit|withdraw) url on next mount\n    @action.bound\n    setTimeoutCashierUrl(container) {\n        this.clearTimeoutCashierUrl(container);\n        this.timeout_cashier_url[container] = setTimeout(() => {\n            this.setSessionTimeout(true, container);\n        }, 60000);\n    }\n\n    clearTimeoutVerification() {\n        if (this.timeout_verification_button) {\n            clearTimeout(this.timeout_verification_button);\n        }\n    }\n\n    // verification token expires after one hour\n    // so we should show the verification request button again after that\n    @action.bound\n    setTimeoutVerification() {\n        this.clearTimeoutVerification();\n        this.timeout_verification_button = setTimeout(() => {\n            this.clearVerification();\n        }, 3600000);\n    }\n\n    @action.bound\n    async onMountWithdraw(verification_code) {\n        await this.onMount('withdraw', verification_code);\n    }\n\n    @action.bound\n    async sendVerificationEmail(email) {\n        if (this.is_verification_button_clicked) {\n            return;\n        }\n\n        this.setVerificationButtonClicked(true);\n        const response_verify_email = await WS.verifyEmail(email, 'payment_withdraw');\n\n        if (response_verify_email.error) {\n            this.setVerificationButtonClicked(false);\n            this.setErrorMessage(response_verify_email.error.message);\n        } else {\n            this.setVerificationEmailSent(true);\n            this.setTimeoutVerification();\n        }\n    }\n\n    clearVerification() {\n        this.clearTimeoutVerification();\n        this.setVerificationButtonClicked(false);\n        this.setVerificationEmailSent(false);\n        this.root_store.client.setVerificationCode('');\n    }\n\n    @action.bound\n    setActiveTab(container) {\n        // used to detect if old tabs with withdrawal tab open should be closed after verification token is opened in new tab\n        this.root_store.ui.setCashierActiveTab(container);\n    }\n\n    onUnmount() {\n        this.clearVerification();\n        Object.keys(this.containers).forEach((container) => {\n            this.clearTimeoutCashierUrl(container);\n            this.setSessionTimeout(true, container);\n        });\n    }\n\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => resolve(this.onUnmount()));\n    }\n}\n","import CashierStore        from './Cashier/cashier-store';\n// import ContractReplayStore from './Contract/contract-replay-store';\n// import ContractTradeStore  from './Contract/contract-trade-store';\n// import PortfolioStore      from './Portfolio/portfolio-store';\n// import ProfitTableStore    from './Profit/profit-store';\n// import SmartChartStore     from './SmartChart/smart-chart-store';\n// import StatementStore      from './Statement/statement-store';\n// import TradeStore          from './Trading/trade-store';\n\nexport default class ModulesStore {\n    constructor(root_store) {\n        this.cashier         = new CashierStore({ root_store });\n        // this.contract_replay = new ContractReplayStore({ root_store });\n        // this.contract_trade  = new ContractTradeStore({ root_store });\n        // this.portfolio       = new PortfolioStore({ root_store }); // TODO: needs to be moved to Trader\n        // this.profit_table    = new ProfitTableStore({ root_store });\n        // this.smart_chart     = new SmartChartStore({ root_store });\n        // this.statement       = new StatementStore({ root_store });\n        // this.trade           = new TradeStore({ root_store });\n\n    }\n}\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CloseButton = ({ onClick, className }) => (\n    <button\n        className={className}\n        type='button'\n        onClick={onClick}\n    />\n);\n\nCloseButton.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func.isRequired,\n};\n\nexport default CloseButton;\n","export const default_delay = 3000;\n\nexport const max_display_notifications = 3;\n\nexport const types = {\n    danger       : 'notification--danger',\n    info         : 'notification--info',\n    success      : 'notification--success',\n    warning      : 'notification--warning',\n    contract_sold: 'notification--info',\n};\n\nexport const sortNotifications = (() => {\n    const notification_order = {\n        contract_sold: 1,\n        danger       : 2,\n        warning      : 3,\n        info         : 4,\n        success      : 5,\n    };\n\n    return (a, b) => notification_order[a.type] - notification_order[b.type];\n})();\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport classNames  from 'classnames';\nimport Icon        from 'Assets/icon.jsx';\nimport CloseButton from './close-button.jsx';\nimport {\n    default_delay,\n    types }        from './constants';\n\nconst Notification = ({\n    data,\n    removeNotification,\n}) => {\n    const destroy = (is_closed_by_user) => {\n        removeNotification(data);\n\n        if (data.closeOnClick) {\n            data.closeOnClick(data, is_closed_by_user);\n        }\n    };\n\n    const onClick = () => destroy(true);\n\n    if (data.is_auto_close) {\n        setTimeout(destroy, data.delay || default_delay);\n    }\n\n    return (\n        <div className={\n            classNames('notification', types[data.type], {\n                'notification--small': (data.size === 'small'),\n            })}\n        >\n            <div className='notification__icon'>\n                { data.type === 'danger'  && <Icon icon='IconDanger' className='notification__icon-type' /> }\n                { (data.type === 'info' || data.type === 'contract_sold')\n                    && <Icon icon='IconInformation' className='notification__icon-type' /> }\n                { data.type === 'success' && <Icon icon='IconSuccess' className='notification__icon-type' /> }\n                { data.type === 'warning' && <Icon icon='IconWarning' className='notification__icon-type' /> }\n            </div>\n            <div className='notification__text-container'>\n                <h4 className='notification__header'>{data.header}</h4>\n                <p className='notification__text-body'> {data.message}</p>\n            </div>\n            { data.should_hide_close_btn ? undefined : <CloseButton onClick={onClick} className='notification__close-button' />}\n        </div>\n    );\n};\n\nNotification.propTypes = {\n    data: PropTypes.shape({\n        closeOnClick         : PropTypes.func,\n        delay                : PropTypes.number,\n        header               : PropTypes.string,\n        is_auto_close        : PropTypes.bool,\n        message              : PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n        should_hide_close_btn: PropTypes.bool,\n        size                 : PropTypes.oneOf(['small']),\n        type                 : PropTypes.oneOf(['warning', 'info', 'success', 'danger', 'contract_sold']).isRequired,\n    }),\n    removeNotification: PropTypes.func,\n};\n\nexport default Notification;\n","import {\n    action,\n    autorun,\n    computed,\n    observable }             from 'mobx';\nimport {\n    MAX_MOBILE_WIDTH,\n    MAX_TABLET_WIDTH }       from 'Constants/ui';\nimport { unique }            from '_common/utility';\nimport BaseStore             from './base-store';\nimport { sortNotifications } from '../App/Components/Elements/NotificationMessage';\n\nconst store_name = 'ui_store';\n\nexport default class UIStore extends BaseStore {\n    @observable is_main_drawer_on          = false;\n    @observable is_notifications_drawer_on = false;\n    @observable is_positions_drawer_on     = false;\n    @observable is_reports_visible         = false;\n\n    @observable is_cashier_modal_on     = false;\n    @observable is_dark_mode_on         = false;\n    @observable is_settings_modal_on    = false;\n    @observable is_accounts_switcher_on = false;\n\n    @observable is_loading              = true;\n    @observable is_slow_loading         = false;\n    @observable slow_loading_status     = [];\n\n    @observable has_only_forward_starting_contracts = false;\n\n    // Purchase Controls\n    // @observable is_purchase_confirm_on    = false;\n    @observable is_services_error_visible             = false;\n    @observable is_unsupported_contract_modal_visible = false;\n    @observable is_account_signup_modal_visible       = false;\n    // @observable is_purchase_lock_on       = false;\n\n    // SmartCharts Controls\n    // TODO: enable asset information\n    // @observable is_chart_asset_info_visible = true;\n    @observable is_chart_countdown_visible  = false;\n    @observable is_chart_layout_default     = true;\n\n    // PWA event and config\n    @observable pwa_prompt_event = null;\n\n    @observable screen_width = window.innerWidth;\n\n    @observable notification_messages = [];\n    @observable push_notifications = [];\n\n    @observable is_advanced_duration   = false;\n    @observable advanced_duration_unit = 't';\n    @observable advanced_expiry_type   = 'duration';\n    @observable simple_duration_unit   = 't';\n    @observable duration_t             = 5;\n    @observable duration_s             = 15;\n    @observable duration_m             = 3;\n    @observable duration_h             = 1;\n    @observable duration_d             = 1;\n\n    // purchase button states\n    @observable purchase_states = [ false, false ];\n\n    @observable is_fully_blurred = false;\n    @observable is_app_blurred   = false;\n    @observable is_route_blurred = false;\n    @observable show_positions_toggle = true;\n\n    @observable active_cashier_tab = 'deposit';\n\n    getDurationFromUnit = (unit) => this[`duration_${unit}`];\n\n    constructor() {\n        const local_storage_properties = [\n            'advanced_duration_unit',\n            'is_advanced_duration',\n            'advanced_expiry_type',\n            'simple_duration_unit',\n            'duration_t',\n            'duration_s',\n            'duration_m',\n            'duration_h',\n            'duration_d',\n            'is_chart_asset_info_visible',\n            'is_chart_countdown_visible',\n            'is_chart_layout_default',\n            'is_dark_mode_on',\n            'is_positions_drawer_on',\n            'is_reports_visible',\n            // 'is_purchase_confirm_on',\n            // 'is_purchase_lock_on',\n        ];\n\n        super({ local_storage_properties, store_name });\n        window.addEventListener('resize', this.handleResize);\n        autorun(() => {\n            if (this.is_dark_mode_on) {\n                document.body.classList.remove('theme--light');\n                document.body.classList.add('theme--dark');\n            } else {\n                document.body.classList.remove('theme--dark');\n                document.body.classList.add('theme--light');\n            }\n        });\n    }\n\n    @action.bound\n    onChangeUiStore({ name, value }) {\n        if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n        this[name] = value;\n    }\n\n    @action.bound\n    handleResize() {\n        this.screen_width = window.innerWidth;\n        if (this.is_mobile) {\n            this.is_positions_drawer_on = false;\n        }\n    }\n\n    @computed\n    get is_mobile() {\n        return this.screen_width <= MAX_MOBILE_WIDTH;\n    }\n\n    @computed\n    get is_tablet() {\n        return this.screen_width <= MAX_TABLET_WIDTH;\n    }\n\n    @action.bound\n    showRouteBlur() {\n        this.is_route_blurred = true;\n    }\n\n    @action.bound\n    hideRouteBlur() {\n        this.is_route_blurred = false;\n    }\n\n    @action.bound\n    showAppBlur() {\n        this.is_app_blurred = true;\n    }\n\n    @action.bound\n    hideAppBlur() {\n        this.is_app_blurred = false;\n    }\n\n    @action.bound\n    showFullBlur() {\n        this.is_fully_blurred = true;\n    }\n\n    @action.bound\n    hideFullBlur() {\n        this.is_fully_blurred = false;\n    }\n\n    @action.bound\n    toggleAccountsDialog() {\n        this.is_accounts_switcher_on = !this.is_accounts_switcher_on;\n    }\n\n    @action.bound\n    setAppLoading(is_visible) {\n        this.is_loading = is_visible;\n    }\n\n    @action.bound\n    setPurchaseState(index) {\n        this.purchase_states[index] = true;\n\n        // TODO: Find better solution in the future for hack below\n        // Force the animation to start quicker by manually assigning class to compensate for mobx getter lag\n        // Because mobx has a delay before it can receive the updated prop used to assign the animation class\n        const el_purchase_buttons = document.getElementsByClassName('btn-purchase');\n        if (el_purchase_buttons[index]) {\n            el_purchase_buttons[index].classList.add('btn-purchase--swoosh');\n        }\n        // UI/UX wants button to remain green until transition is finished and only then disable buttons\n        setTimeout(() => {\n            [].forEach.bind(el_purchase_buttons, (el) => {\n                el.classList.add('btn-purchase--disabled');\n            })();\n        }, 250);\n    }\n\n    @action.bound\n    resetPurchaseStates() {\n        this.purchase_states = [ false, false ];\n    }\n\n    @action.bound\n    toggleChartLayout() {\n        this.is_chart_layout_default = !this.is_chart_layout_default;\n    }\n\n    // TODO: enable asset information\n    // @action.bound\n    // toggleChartAssetInfo() {\n    //     this.is_chart_asset_info_visible = !this.is_chart_asset_info_visible;\n    // }\n\n    @action.bound\n    toggleChartCountdown() {\n        this.is_chart_countdown_visible = !this.is_chart_countdown_visible;\n    }\n\n    // @action.bound\n    // togglePurchaseLock() {\n    //     this.is_purchase_lock_on = !this.is_purchase_lock_on;\n    // }\n\n    // @action.bound\n    // togglePurchaseConfirmation() {\n    //     this.is_purchase_confirm_on = !this.is_purchase_confirm_on;\n    // }\n\n    @action.bound\n    toggleDarkMode() {\n        this.is_dark_mode_on = !this.is_dark_mode_on;\n        return this.is_dark_mode_on;\n    }\n\n    @action.bound\n    showPositionsFooterToggle() {\n        this.show_positions_toggle = true;\n    }\n\n    @action.bound\n    hidePositionsFooterToggle() {\n        this.show_positions_toggle = false;\n    }\n\n    @action.bound\n    toggleCashierModal() {\n        this.is_cashier_modal_on = !this.is_cashier_modal_on;\n    }\n\n    @action.bound\n    setCashierActiveTab(tab = 'deposit') {\n        if (this.active_cashier_tab !== tab) this.active_cashier_tab = tab;\n    }\n\n    @action.bound\n    toggleSettingsModal() {\n        this.is_settings_modal_on = !this.is_settings_modal_on;\n    }\n\n    @action.bound\n    openPositionsDrawer() { // show and hide Positions Drawer\n        this.is_positions_drawer_on = true;\n    }\n\n    @action.bound\n    togglePositionsDrawer() { // toggle Positions Drawer\n        this.is_positions_drawer_on = !this.is_positions_drawer_on;\n    }\n\n    @action.bound\n    toggleReports(is_visible) {\n        this.is_reports_visible = is_visible;\n    }\n\n    @action.bound\n    toggleServicesErrorModal(is_visible) {\n        this.is_services_error_visible = is_visible;\n    }\n\n    @action.bound\n    showMainDrawer() { // show main Drawer\n        this.is_main_drawer_on = true;\n    }\n\n    @action.bound\n    showNotificationsDrawer() { // show nofitications Drawer\n        this.is_notifications_drawer_on = true;\n    }\n\n    @action.bound\n    hideDrawers() { // hide both menu drawers\n        this.is_main_drawer_on = false;\n        this.is_notifications_drawer_on = false;\n    }\n\n    @action.bound\n    removePWAPromptEvent() {\n        this.pwa_prompt_event = null;\n    }\n\n    @action.bound\n    setPWAPromptEvent(e) {\n        this.pwa_prompt_event = e;\n    }\n\n    @action.bound\n    addNotification(notification) {\n        this.notification_messages = [...this.notification_messages, notification].sort(sortNotifications);\n    }\n\n    @action.bound\n    removeNotification(notification) {\n        const index = this.notification_messages.indexOf(notification);\n        if (index > -1) {\n            this.notification_messages.splice(index, 1);\n        }\n    }\n\n    @action.bound\n    removeAllNotifications() {\n        this.notification_messages = [];\n    }\n\n    @action.bound\n    setHasOnlyForwardingContracts(has_only_forward_starting_contracts) {\n        this.has_only_forward_starting_contracts = has_only_forward_starting_contracts;\n    }\n\n    @action.bound\n    setSlowLoading(status, message) {\n        this.is_slow_loading     = status;\n        this.slow_loading_status = message;\n    }\n\n    @action.bound\n    addNotificationBar(message) {\n        this.push_notifications.push(message);\n        this.push_notifications = unique(this.push_notifications, 'msg_type');\n    }\n\n    @action.bound\n    toggleUnsupportedContractModal(state_change = !this.is_unsupported_contract_modal_visible) {\n        this.is_unsupported_contract_modal_visible = state_change;\n    }\n\n    @action.bound\n    toggleAccountSignupModal(state_change = !this.is_unsupported_contract_modal_visible) {\n        this.is_account_signup_modal_visible = state_change;\n    }\n}\n","import ClientStore  from './client-store';\nimport CommonStore  from './common-store';\nimport GTMStore     from './gtm-store';\nimport ModulesStore from './Modules';\nimport UIStore      from './ui-store';\n\nexport default class RootStore {\n    constructor() {\n        this.client  = new ClientStore(this);\n        this.common  = new CommonStore();\n        this.modules = new ModulesStore(this);\n        this.ui      = new UIStore();\n        this.gtm     = new GTMStore(this);\n    }\n}\n","import { configure }        from 'mobx';\nimport Client               from '_common/base/client_base';\nimport NetworkMonitor       from 'Services/network-monitor';\nimport OutdatedBrowser      from 'Services/outdated-browser';\nimport RootStore            from 'Stores';\nimport { setStorageEvents } from 'Utils/Events/storage';\n\nconfigure({ enforceActions: 'observed' });\n\nconst initStore = () => {\n    Client.init();\n\n    const root_store = new RootStore();\n\n    setStorageEvents(root_store);\n\n    NetworkMonitor.init(root_store);\n    OutdatedBrowser.init(root_store);\n    root_store.client.init();\n    // root_store.modules.trade.init();\n\n    return root_store;\n};\n\nexport default initStore;\n","export const setStorageEvents = (root_store) => {\n    window.addEventListener('storage', (evt) => {\n        switch (evt.key) {\n            case 'active_loginid':\n                if (document.hidden) {\n                    window.location.reload();\n                }\n                break;\n            case 'verification_code':\n                if (document.hidden && root_store.ui.is_cashier_modal_on && root_store.ui.active_cashier_tab === 'withdraw') {\n                    root_store.modules.cashier.clearVerification();\n                    root_store.ui.toggleCashierModal();\n                }\n            // no default\n        }\n    });\n};\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport ReactDOM                    from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport WS                          from 'Services/ws-methods';\nimport { MobxProvider }            from 'Stores/connect';\nimport ErrorBoundary               from './Components/Elements/Errors/error-boundary.jsx';\nimport AppContents                 from './Containers/Layout/app-contents.jsx';\nimport Footer                      from './Containers/Layout/footer.jsx';\nimport Header                      from './Containers/Layout/header.jsx';\nimport Lazy                        from './Containers/Lazy';\nimport Routes                      from './Containers/Routes/routes.jsx';\nimport './i18n';\n// eslint-disable-next-line import/extensions\nimport initStore                   from './app.js';\n// eslint-disable-next-line import/no-unresolved\nimport 'Sass/app.scss';\n// Check if device is touch capable\nconst isTouchDevice = 'ontouchstart' in document.documentElement;\n\nconst App = ({ root_store }) => {\n    const l = window.location;\n    const base = l.pathname.split('/')[1];\n    return (\n        <Router basename={/^\\/br_|bot/.test(l.pathname) ? `/${base}` : null}>\n            <MobxProvider store={root_store}>\n                {\n                    root_store.ui.is_mobile || (root_store.ui.is_tablet && isTouchDevice) ?\n                        <Lazy\n                            ctor={() => import(/* webpackChunkName: \"work-in-progress\" */'./Containers/Wip')}\n                            should_load={root_store.ui.is_mobile || (root_store.ui.is_tablet && isTouchDevice)}\n                            has_progress={true}\n                        /> :\n                        <React.Fragment>\n                            <Header />\n                            <ErrorBoundary>\n                                <AppContents>\n                                    <Routes passthrough={{ root_store, WS }} />\n                                    <Lazy\n                                        ctor={() => import(/* webpackChunkName: \"push-notification\" */'./Containers/push-notification.jsx')}\n                                        should_load={!root_store.ui.is_loading}\n                                        has_progress={false}\n                                    />\n                                </AppContents>\n                            </ErrorBoundary>\n                            <Footer />\n                            <Lazy\n                                ctor={() => import(/* webpackChunkName: \"modals\", webpackPrefetch: true */'./Containers/Modals')}\n                                should_load={true}\n                                has_progress={false}\n                            />\n                        </React.Fragment>\n                }\n            </MobxProvider>\n        </Router>\n    );\n};\n\nApp.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default App;\n\nconst root_store = initStore();\n\nconst wrapper = document.getElementById('deriv_app');\n// eslint-disable-next-line no-unused-expressions\nwrapper ? ReactDOM.render(<App root_store={root_store} />, wrapper) : false;\n","export default function register () { // Register the service worker\n    if (/* process.env.NODE_ENV === 'production' && */ 'serviceWorker' in navigator) {\n        window.addEventListener('load', () => {\n            let path_name = window.location.pathname;\n            path_name = /index\\.html/g.test(path_name) ? window.location.pathname.replace('index.html', '') : '';\n            const sw_url = `${path_name}service-worker.js`;\n            navigator.serviceWorker\n                .register(sw_url)\n                .then(registration => {\n                    registration.onupdatefound = () => {\n                        const installingWorker = registration.installing;\n                        installingWorker.onstatechange = () => {\n                            if (installingWorker.state === 'installed') {\n                                if (navigator.serviceWorker.controller) {\n                                    // At this point, the old content will have been purged and\n                                    // the fresh content will have been added to the cache.\n                                    // It's the perfect time to display a \"New content is\n                                    // available; please refresh.\" message in your web app.\n                                    console.log('New content is available; please refresh.'); // eslint-disable-line no-console\n                                } else {\n                                    // At this point, everything has been precached.\n                                    // It's the perfect time to display a\n                                    // \"Content is cached for offline use.\" message.\n                                    console.log('Content is cached for offline use.'); // eslint-disable-line no-console\n                                }\n                            }\n                        };\n                    };\n                })\n                .catch(error => {\n                    console.error('Error during service worker registration:', error); // eslint-disable-line no-console\n                });\n        });\n    }\n}\n\nexport function unregister () {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","const routes = {\n    error404        : '/404',\n    account_password: '/settings/account_password',\n    apps            : '/settings/apps',\n    cashier_password: '/settings/cashier_password',\n    contract        : '/contract/:contract_id',\n    exclusion       : '/settings/exclusion',\n    financial       : '/settings/financial',\n    history         : '/settings/history',\n    index           : '/index',\n    limits          : '/settings/limits',\n    personal        : '/settings/personal',\n    positions       : '/reports/positions',\n    profit          : '/reports/profit',\n    reports         : '/reports',\n    root            : '/',\n    redirect        : '/redirect',\n    settings        : '/settings',\n    statement       : '/reports/statement',\n    token           : '/settings/token',\n    trade           : '/',\n};\n\nexport default routes;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport UILoader  from 'App/Components/Elements/ui-loader.jsx';\n\nconst Lazy = ({\n    should_load = true,\n    ctor,\n    has_progress,\n    ...component_props\n}) => {\n    if (!should_load) {\n        return null;\n    }\n    const LazyLoadedComponent = React.lazy(ctor);\n\n    return (\n        <React.Suspense fallback={has_progress ? <UILoader /> : <div />}>\n            <LazyLoadedComponent {...component_props} />\n        </React.Suspense>\n    );\n};\n\n// Lazy Load the component by default.\nLazy.defaultProps = {\n    should_load : true,\n    has_progress: false,\n};\n\nLazy.propTypes = {\n    ctor        : PropTypes.func.isRequired,\n    has_progress: PropTypes.bool,\n    should_load : PropTypes.bool,\n};\n\nexport default Lazy;\n","const website_name     = require('App/Constants/app-config').website_name;\nconst ClientBase       = require('./client_base');\nconst SocketCache      = require('./socket_cache');\nconst getLanguage      = require('../language').get;\nconst State            = require('../storage').State;\nconst cloneObject      = require('../utility').cloneObject;\nconst getPropertyValue = require('../utility').getPropertyValue;\nconst isEmptyObject    = require('../utility').isEmptyObject;\nconst PromiseClass     = require('../utility').PromiseClass;\nconst getAppId         = require('../../config').getAppId;\nconst getSocketURL     = require('../../config').getSocketURL;\n\n/*\n * An abstraction layer over native javascript WebSocket,\n * which provides additional functionality like\n * reopen the closed connection and process the buffered requests\n */\nconst BinarySocketBase = (() => {\n    let binary_socket;\n\n    let config               = {};\n    let buffered_sends       = [];\n    let req_id               = 0;\n    let wrong_app_id         = 0;\n    let is_available         = true;\n    let is_disconnect_called = false;\n    let is_connected_before  = false;\n\n    const socket_url = `${getSocketURL()}?app_id=${getAppId()}&l=${getLanguage()}&brand=${website_name.toLowerCase()}`;\n    const timeouts   = {};\n    const promises   = {};\n\n    const no_duplicate_requests = [\n        'authorize',\n        'get_settings',\n        'residence_list',\n        'landing_company',\n        'payout_currencies',\n        'asset_index',\n        'active_symbols',\n    ];\n\n    const sent_requests = {\n        items : [],\n        clear : () => { sent_requests.items = []; },\n        has   : msg_type => sent_requests.items.indexOf(msg_type) >= 0,\n        add   : (msg_type) => { if (!sent_requests.has(msg_type)) sent_requests.items.push(msg_type); },\n        remove: (msg_type) => {\n            if (sent_requests.has(msg_type)) sent_requests.items.splice(sent_requests.items.indexOf(msg_type, 1));\n        },\n    };\n\n    const waiting_list = {\n        items: {},\n        add  : (msg_type, promise_obj) => {\n            if (!waiting_list.items[msg_type]) {\n                waiting_list.items[msg_type] = [];\n            }\n            waiting_list.items[msg_type].push(promise_obj);\n        },\n        resolve: (response) => {\n            const msg_type      = response.msg_type;\n            const this_promises = waiting_list.items[msg_type];\n            if (this_promises && this_promises.length) {\n                this_promises.forEach((pr) => {\n                    if (!waiting_list.another_exists(pr, msg_type)) {\n                        pr.resolve(response);\n                    }\n                });\n                waiting_list.items[msg_type] = [];\n            }\n        },\n        another_exists: (pr, msg_type) => (\n            Object.keys(waiting_list.items)\n                .some(type => (\n                    type !== msg_type &&\n                    waiting_list.items[type].indexOf(pr) !== -1\n                ))\n        ),\n    };\n\n    const clearTimeouts = () => {\n        Object.keys(timeouts).forEach((key) => {\n            clearTimeout(timeouts[key]);\n            delete timeouts[key];\n        });\n    };\n\n    const isReady = () => hasReadyState(1);\n\n    const isClose = () => !binary_socket || hasReadyState(2, 3);\n\n    const hasReadyState = (...states) => binary_socket && states.some(s => binary_socket.readyState === s);\n\n    const sendBufferedRequests = () => {\n        while (buffered_sends.length > 0 && is_available) {\n            const req_obj = buffered_sends.shift();\n            send(req_obj.request, req_obj.options);\n        }\n    };\n\n    const wait = (...msg_types) => {\n        const promise_obj = new PromiseClass();\n        let is_resolved   = true;\n        msg_types.forEach((msg_type) => {\n            const last_response = State.get(['response', msg_type]);\n            if (!last_response) {\n                if (msg_type !== 'authorize' || ClientBase.isLoggedIn()) {\n                    waiting_list.add(msg_type, promise_obj);\n                    is_resolved = false;\n                }\n            } else if (msg_types.length === 1) {\n                promise_obj.resolve(last_response);\n            }\n        });\n        if (is_resolved) {\n            promise_obj.resolve();\n        }\n        return promise_obj.promise;\n    };\n\n    /**\n     * @param {Object} data: request object\n     * @param {Object} options:\n     *      forced  : {boolean}  sends the request regardless the same msg_type has been sent before\n     *      msg_type: {string}   specify the type of request call\n     *      callback: {function} to call on response of streaming requests\n     */\n    const send = function (data, options = {}) {\n        const promise_obj = options.promise || new PromiseClass();\n        const has_callback = typeof options.callback === 'function';\n\n        if (!data || isEmptyObject(data)) return promise_obj.promise;\n\n        const msg_type = options.msg_type || no_duplicate_requests.find(c => c in data);\n\n        // Fetch from cache\n        if (!options.forced) {\n            const response = SocketCache.get(data, msg_type);\n            if (response) {\n                State.set(['response', msg_type], cloneObject(response));\n                if (isReady() && is_available && !options.skip_cache_update && !has_callback) { // make the request to keep the cache updated\n                    binary_socket.send(JSON.stringify(data), { forced: true });\n                } else if (+data.time !== 1) { // Do not buffer all time requests\n                    buffered_sends.push({\n                        request: data,\n                        options: Object.assign(options, { promise: promise_obj, forced: true }),\n                    });\n                }\n                promise_obj.resolve(response);\n                if (has_callback) {\n                    options.callback(response);\n                } else {\n                    return promise_obj.promise;\n                }\n            }\n        }\n\n        // Fetch from state\n        if (!options.forced && msg_type && no_duplicate_requests.indexOf(msg_type) !== -1) {\n            const last_response = State.get(['response', msg_type]);\n            if (last_response) {\n                promise_obj.resolve(last_response);\n                return promise_obj.promise;\n            } else if (sent_requests.has(msg_type)) {\n                return wait(msg_type).then((response) => {\n                    promise_obj.resolve(response);\n                    return promise_obj.promise;\n                });\n            }\n        }\n\n        if (!data.req_id) {\n            data.req_id = ++req_id;\n        }\n        promises[data.req_id] = {\n            callback: (response) => {\n                if (has_callback) {\n                    options.callback(response);\n                } else {\n                    promise_obj.resolve(response);\n                }\n            },\n            subscribe: !!data.subscribe,\n        };\n\n        if (isReady() && is_available && config.isOnline()) {\n            is_disconnect_called = false;\n            if (!getPropertyValue(data, 'passthrough') && !getPropertyValue(data, 'verify_email')) {\n                data.passthrough = {};\n            }\n\n            binary_socket.send(JSON.stringify(data));\n            config.wsEvent('send');\n            if (msg_type && !sent_requests.has(msg_type)) {\n                sent_requests.add(msg_type);\n            }\n        } else if (+data.time !== 1) { // Do not buffer all time requests\n            buffered_sends.push({ request: data, options: Object.assign(options, { promise: promise_obj }) });\n        }\n\n        return promise_obj.promise;\n    };\n\n    const init = (options) => {\n        if (wrong_app_id === getAppId()) {\n            return;\n        }\n        if (typeof options === 'object' && config !== options) {\n            config         = options;\n            buffered_sends = [];\n        }\n        clearTimeouts();\n        config.wsEvent('init');\n\n        if (isClose()) {\n            binary_socket = new WebSocket(socket_url);\n            State.set('response', {});\n        }\n\n        binary_socket.onopen = () => {\n            config.wsEvent('open');\n            if (ClientBase.isLoggedIn()) {\n                send({ authorize: ClientBase.get('token') }, { forced: true });\n            } else {\n                sendBufferedRequests();\n            }\n\n            if (typeof config.onOpen === 'function') {\n                config.onOpen(isReady());\n            }\n\n            if (typeof config.onReconnect === 'function' && is_connected_before) {\n                config.onReconnect();\n            }\n\n            if (!is_connected_before) {\n                is_connected_before = true;\n            }\n        };\n\n        binary_socket.onmessage = (msg) => {\n            config.wsEvent('message');\n            const response = msg.data ? JSON.parse(msg.data) : undefined;\n            if (response) {\n                SocketCache.set(response);\n                const msg_type = response.msg_type;\n\n                // store in State\n                if (!getPropertyValue(response, ['echo_req', 'subscribe']) || /balance|website_status/.test(msg_type)) {\n                    State.set(['response', msg_type], cloneObject(response));\n                }\n                // resolve the send promise\n                const this_req_id = response.req_id;\n                const pr          = this_req_id ? promises[this_req_id] : null;\n                if (pr && typeof pr.callback === 'function') {\n                    pr.callback(response);\n                    if (!pr.subscribe) {\n                        delete promises[this_req_id];\n                    }\n                }\n                // resolve the wait promise\n                waiting_list.resolve(response);\n\n                if (getPropertyValue(response, ['error', 'code']) === 'InvalidAppID') {\n                    wrong_app_id = getAppId();\n                }\n\n                if (typeof config.onMessage === 'function') {\n                    config.onMessage(response);\n                }\n            }\n        };\n\n        binary_socket.onclose = () => {\n            sent_requests.clear();\n            clearTimeouts();\n            config.wsEvent('close');\n\n            if (wrong_app_id !== getAppId() && typeof config.onDisconnect === 'function' && !is_disconnect_called) {\n                config.onDisconnect();\n                is_disconnect_called = true;\n            }\n        };\n    };\n\n    const clear = (msg_type) => {\n        buffered_sends = [];\n        if (msg_type) {\n            State.set(['response', msg_type], undefined);\n            sent_requests.remove(msg_type);\n        }\n    };\n\n    const availability = (status) => {\n        if (typeof status !== 'undefined') {\n            is_available = !!status;\n        }\n        return is_available;\n    };\n\n    return {\n        init,\n        wait,\n        send,\n        clear,\n        clearTimeouts,\n        availability,\n        hasReadyState,\n        sendBuffered      : sendBufferedRequests,\n        get               : () => binary_socket,\n        setOnDisconnect   : (onDisconnect) => { config.onDisconnect = onDisconnect; },\n        setOnReconnect    : (onReconnect) => { config.onReconnect = onReconnect; },\n        removeOnReconnect : () => { delete config.onReconnect; },\n        removeOnDisconnect: () => { delete config.onDisconnect; },\n    };\n})();\n\nmodule.exports = BinarySocketBase;\n","// const Cookies = require('js-cookie');\n\n/*\n * Configuration values needed in js codes\n *\n * NOTE:\n * Please use the following command to avoid accidentally committing personal changes\n * git update-index --assume-unchanged src/javascript/config.js\n *\n */\nconst domain_app_ids = { // these domains as supported \"production domains\"\n    'deriv.app': 16929,\n};\n\nconst getCurrentProductionDomain = () => (\n    !/^staging\\./.test(window.location.hostname) &&\n    Object.keys(domain_app_ids).find(domain => (new RegExp(`.${domain}$`, 'i').test(window.location.hostname)))\n);\n\nconst isProduction = () => {\n    const all_domains = Object.keys(domain_app_ids).map(domain => `www\\\\.${domain.replace('.', '\\\\.')}`);\n    return new RegExp(`^(${all_domains.join('|')})$`, 'i').test(window.location.hostname);\n};\n\nconst binary_desktop_app_id = 14473;\n\nconst getAppId = () => {\n    let app_id = null;\n    const user_app_id   = ''; // you can insert Application ID of your registered application here\n    const config_app_id = window.localStorage.getItem('config.app_id');\n    if (config_app_id) {\n        app_id = config_app_id;\n    } else if (/desktop-app/i.test(window.location.href) || window.localStorage.getItem('config.is_desktop_app')) {\n        window.localStorage.removeItem('config.default_app_id');\n        window.localStorage.setItem('config.is_desktop_app', 1);\n        app_id = binary_desktop_app_id;\n    } else if (user_app_id.length) {\n        window.localStorage.setItem('config.default_app_id', user_app_id);\n        app_id = user_app_id;\n    } else if (/staging\\.deriv\\.app/i.test(window.location.hostname)) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 16303; // it's being used in endpoint chrome extension - please do not remove\n    } else if (/localhost/i.test(window.location.hostname)) {\n        app_id = 17044;\n    } else {\n        window.localStorage.removeItem('config.default_app_id');\n        const current_domain = getCurrentProductionDomain();\n        app_id = domain_app_ids[current_domain] || 16929;\n    }\n    return app_id;\n};\n\nconst getSocketURL = () => {\n    let server_url = window.localStorage.getItem('config.server_url');\n    if (!server_url) {\n        // const to_green_percent = { real: 100, virtual: 0, logged_out: 0 }; // default percentage\n        // const category_map     = ['real', 'virtual', 'logged_out'];\n        // const percent_values   = Cookies.get('connection_setup'); // set by GTM\n        //\n        // // override defaults by cookie values\n        // if (percent_values && percent_values.indexOf(',') > 0) {\n        //     const cookie_percents = percent_values.split(',');\n        //     category_map.map((cat, idx) => {\n        //         if (cookie_percents[idx] && !isNaN(cookie_percents[idx])) {\n        //             to_green_percent[cat] = +cookie_percents[idx].trim();\n        //         }\n        //     });\n        // }\n\n        // let server = 'blue';\n        // if (/www\\.binary\\.com/i.test(window.location.hostname)) {\n        //     const loginid = window.localStorage.getItem('active_loginid');\n        //     let client_type = category_map[2];\n        //     if (loginid) {\n        //         client_type = /^VRT/.test(loginid) ? category_map[1] : category_map[0];\n        //     }\n        //\n        //     const random_percent = Math.random() * 100;\n        //     if (random_percent < to_green_percent[client_type]) {\n        //         server = 'green';\n        //     }\n        // }\n\n        // TODO: in order to use connection_setup config, uncomment the above section and remove next lines\n\n        const loginid       = window.localStorage.getItem('active_loginid');\n        const is_real       = loginid && !/^VRT/.test(loginid);\n        const server        = isProduction() && is_real ? 'green' : 'blue';\n\n        server_url = `${server}.binaryws.com`;\n    }\n    return `wss://${server_url}/websockets/v3`;\n};\n\nmodule.exports = {\n    domain_app_ids,\n    getCurrentProductionDomain,\n    isProduction,\n    getAppId,\n    getSocketURL,\n};\n","import { localize } from 'App/i18n';\n\nexport const getMarketNamesMap = () => ({\n    FRXAUDCAD : localize('AUD/CAD'),\n    FRXAUDCHF : localize('AUD/CHF'),\n    FRXAUDJPY : localize('AUD/JPY'),\n    FRXAUDNZD : localize('AUD/NZD'),\n    FRXAUDPLN : localize('AUD/PLN'),\n    FRXAUDUSD : localize('AUD/USD'),\n    FRXBROUSD : localize('Oil/USD'),\n    FRXEURAUD : localize('EUR/AUD'),\n    FRXEURCAD : localize('EUR/CAD'),\n    FRXEURCHF : localize('EUR/CHF'),\n    FRXEURGBP : localize('EUR/GBP'),\n    FRXEURJPY : localize('EUR/JPY'),\n    FRXEURNZD : localize('EUR/NZD'),\n    FRXEURUSD : localize('EUR/USD'),\n    FRXGBPAUD : localize('GBP/AUD'),\n    FRXGBPCAD : localize('GBP/CAD'),\n    FRXGBPCHF : localize('GBP/CHF'),\n    FRXGBPJPY : localize('GBP/JPY'),\n    FRXGBPNOK : localize('GBP/NOK'),\n    FRXGBPUSD : localize('GBP/USD'),\n    FRXNZDJPY : localize('NZD/JPY'),\n    FRXNZDUSD : localize('NZD/USD'),\n    FRXUSDCAD : localize('USD/CAD'),\n    FRXUSDCHF : localize('USD/CHF'),\n    FRXUSDJPY : localize('USD/JPY'),\n    FRXUSDNOK : localize('USD/NOK'),\n    FRXUSDPLN : localize('USD/PLN'),\n    FRXUSDSEK : localize('USD/SEK'),\n    FRXXAGUSD : localize('Silver/USD'),\n    FRXXAUUSD : localize('Gold/USD'),\n    FRXXPDUSD : localize('Palladium/USD'),\n    FRXXPTUSD : localize('Platinum/USD'),\n    OTC_AEX   : localize('Dutch Index'),\n    OTC_AS51  : localize('Australian Index'),\n    OTC_DJI   : localize('Wall Street Index'),\n    OTC_FCHI  : localize('French Index'),\n    OTC_FTSE  : localize('UK Index'),\n    OTC_GDAXI : localize('German Index'),\n    OTC_HSI   : localize('Hong Kong Index'),\n    OTC_IBEX35: localize('Spanish Index'),\n    OTC_N225  : localize('Japanese Index'),\n    OTC_NDX   : localize('US Tech Index'),\n    OTC_SPC   : localize('US Index'),\n    OTC_SSMI  : localize('Swiss Index'),\n    OTC_SX5E  : localize('Euro 50 Index'),\n    R_10      : localize('Volatility 10 Index'),\n    R_25      : localize('Volatility 25 Index'),\n    R_50      : localize('Volatility 50 Index'),\n    R_75      : localize('Volatility 75 Index'),\n    R_100     : localize('Volatility 100 Index'),\n    RDBEAR    : localize('Bear Market Index'),\n    RDBULL    : localize('Bull Market Index'),\n    WLDAUD    : localize('AUD Index'),\n    WLDEUR    : localize('EUR Index'),\n    WLDGBP    : localize('GBP Index'),\n    WLDUSD    : localize('USD Index'),\n});\n\nexport const getUnsupportedContracts = () => ({\n    EXPIRYMISS: {\n        name    : localize('Ends Outside'),\n        position: 'top',\n    },\n    EXPIRYRANGE: {\n        name    : localize('Ends Between'),\n        position: 'bottom',\n    },\n    RANGE: {\n        name    : localize('Stays Between'),\n        position: 'top',\n    },\n    UPORDOWN: {\n        name    : localize('Goes Outside'),\n        position: 'bottom',\n    },\n    RESETCALL: {\n        name    : localize('Reset Call'),\n        position: 'top',\n    },\n    RESETPUT: {\n        name    : localize('Reset Put'),\n        position: 'bottom',\n    },\n    TICKHIGH: {\n        name    : localize('High Tick'),\n        position: 'top',\n    },\n    TICKLOW: {\n        name    : localize('Low Tick'),\n        position: 'bottom',\n    },\n    ASIANU: {\n        name    : localize('Asian Up'),\n        position: 'top',\n    },\n    ASIAND: {\n        name    : localize('Asian Down'),\n        position: 'bottom',\n    },\n    LBFLOATCALL: {\n        name    : localize('Close-Low'),\n        position: 'top',\n    },\n    LBFLOATPUT: {\n        name    : localize('High-Close'),\n        position: 'top',\n    },\n    LBHIGHLOW: {\n        name    : localize('High-Low'),\n        position: 'top',\n    },\n    CALLSPREAD: {\n        name    : localize('Call Spread'),\n        position: 'top',\n    },\n    PUTSPREAD: {\n        name    : localize('Put Spread'),\n        position: 'bottom',\n    },\n    RUNHIGH: {\n        name    : localize('Only Ups'),\n        position: 'top',\n    },\n    RUNLOW: {\n        name    : localize('Only Downs'),\n        position: 'bottom',\n    },\n});\n\nexport const getSupportedContracts = is_high_low => ({\n    CALL: {\n        name    : is_high_low ?  localize('Higher') : localize('Rise'),\n        position: 'top',\n    },\n    PUT: {\n        name    : is_high_low ? localize('Lower') : localize('Fall'),\n        position: 'bottom',\n    },\n    CALLE: {\n        name    : localize('Rise'),\n        position: 'top',\n    },\n    PUTE: {\n        name    : localize('Fall'),\n        position: 'bottom',\n    },\n    DIGITMATCH: {\n        name    : localize('Matches'),\n        position: 'top',\n    },\n    DIGITDIFF: {\n        name    : localize('Differs'),\n        position: 'bottom',\n    },\n    DIGITEVEN: {\n        name    : localize('Even'),\n        position: 'top',\n    },\n    DIGITODD: {\n        name    : localize('Odd'),\n        position: 'bottom',\n    },\n    DIGITOVER: {\n        name    : localize('Over'),\n        position: 'top',\n    },\n    DIGITUNDER: {\n        name    : localize('Under'),\n        position: 'bottom',\n    },\n    ONETOUCH: {\n        name    : localize('Touch'),\n        position: 'top',\n    },\n    NOTOUCH: {\n        name    : localize('No Touch'),\n        position: 'bottom',\n    },\n});\n\nexport const getContractConfig = is_high_low => ({\n    ...getSupportedContracts(is_high_low),\n    ...getUnsupportedContracts(),\n});\n\nexport const getContractTypeDisplay  = (\n    type,\n    is_high_low = false) => (\n    getContractConfig(is_high_low)[type] ? getContractConfig(is_high_low)[type.toUpperCase()].name : ''\n);\n\nexport const getContractTypePosition = (\n    type,\n    is_high_low = false) => (\n    getContractConfig(is_high_low)[type] ? getContractConfig(is_high_low)[type.toUpperCase()].position : 'top'\n);\n","export *      from './contract';\nexport routes from './routes';\nexport *      from './ui';\n","const website_name        = require('App/Constants/app-config').website_name;\nconst Client              = require('./client_base');\nconst getElementById      = require('../common_functions').getElementById;\nconst getLanguage         = require('../language').get;\nconst isMobile            = require('../os_detect').isMobile;\nconst isStorageSupported  = require('../storage').isStorageSupported;\nconst LocalStore          = require('../storage').LocalStore;\nconst urlForCurrentDomain = require('../url').urlForCurrentDomain;\nconst domain_app_ids      = require('../../config').domain_app_ids;\nconst getAppId            = require('../../config').getAppId;\n\nconst Login = (() => {\n    const redirectToLogin = () => {\n        if (!Client.isLoggedIn() && !isLoginPages() && isStorageSupported(sessionStorage)) {\n            sessionStorage.setItem('redirect_url', window.location.href);\n            window.location.href = loginUrl();\n        }\n    };\n\n    const loginUrl = () => {\n        const server_url         = localStorage.getItem('config.server_url');\n        const language           = getLanguage();\n        const signup_device      = LocalStore.get('signup_device') || (isMobile() ? 'mobile' : 'desktop');\n        const date_first_contact = LocalStore.get('date_first_contact');\n        const marketing_queries  = `&signup_device=${signup_device}${date_first_contact ? `&date_first_contact=${date_first_contact}` : ''}`;\n        const default_login_url  = `https://oauth.deriv.app/oauth2/authorize?app_id=${getAppId()}&l=${language}${marketing_queries}&brand=${website_name.toLowerCase()}`;\n\n        if (server_url && /qa/.test(server_url)) {\n            return `https://${server_url}/oauth2/authorize?app_id=${getAppId()}&l=${language}${marketing_queries}&brand=${website_name.toLowerCase()}`;\n        }\n        if (getAppId === domain_app_ids['deriv.app']) {\n            return default_login_url;\n        }\n\n        return urlForCurrentDomain(default_login_url);\n    };\n\n    // TODO: update this to handle logging into /app/ url\n    const isLoginPages = () => /logged_inws|redirect/i.test(window.location.pathname);\n\n    const socialLoginUrl = brand => (`${loginUrl()}&social_signup=${brand}`);\n\n    const initOneAll = () => {\n        ['google', 'facebook'].forEach(provider => {\n            const el_button = getElementById(`#button_${provider}`);\n            el_button.removeEventListener('click');\n            el_button.addEventListener('click', (e) => {\n                e.preventDefault();\n                window.location.href = socialLoginUrl(provider);\n            });\n        });\n    };\n\n    return {\n        redirectToLogin,\n        isLoginPages,\n        initOneAll,\n    };\n})();\n\nmodule.exports = Login;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Button = ({\n    children,\n    className = '',\n    classNameSpan,\n    has_effect,\n    id,\n    is_disabled,\n    onClick,\n    tabIndex,\n    text,\n    wrapperClassName,\n}) => {\n    const classes = classNames('btn', { effect: has_effect }, className);\n    const button = (\n        <button\n            id={id}\n            className={classes}\n            onClick={onClick || undefined}\n            disabled={is_disabled}\n            tabIndex={tabIndex || '0'}\n        >\n            { text &&\n                <span className={classNames('btn__text', classNameSpan)}>\n                    {text}\n                </span>\n            }\n            {children}\n        </button>\n    );\n    const wrapper = (<div className={wrapperClassName}>{button}</div>);\n\n    return wrapperClassName ? wrapper : button;\n};\n\nButton.propTypes = {\n    children        : PropTypes.node,\n    className       : PropTypes.string,\n    has_effect      : PropTypes.bool,\n    id              : PropTypes.string,\n    is_disabled     : PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n    onClick         : PropTypes.func,\n    text            : PropTypes.string,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default Button;\n","const extend = require('extend');\nrequire('./lib/polyfills/element.matches');\n\nconst template = (string, content) => {\n    let to_replace = content;\n    if (content && !Array.isArray(content)) {\n        to_replace = [content];\n    }\n    return string.replace(/\\[_(\\d+)]/g, (s, index) => to_replace[(+index) - 1]);\n};\n\nconst isEmptyObject = (obj) => {\n    let is_empty = true;\n    if (obj && obj instanceof Object) {\n        Object.keys(obj).forEach((key) => {\n            if (Object.prototype.hasOwnProperty.call(obj, key)) is_empty = false;\n        });\n    }\n    return is_empty;\n};\n\nconst cloneObject = obj => (!isEmptyObject(obj) ? extend(true, Array.isArray(obj) ? [] : {}, obj) : obj);\n\nconst isDeepEqual = (a, b) => {\n    if (typeof a !== typeof b) {\n        return false;\n    } else if (Array.isArray(a)) {\n        return isEqualArray(a, b);\n    } else if (a && b && typeof a === 'object') {\n        return isEqualObject(a, b);\n    }\n    // else\n    return a === b;\n};\n\nconst isEqualArray = (arr1, arr2) => (\n    arr1 === arr2 ||\n    (\n        arr1.length === arr2.length &&\n        arr1.every((value, idx) => isDeepEqual(value, arr2[idx]))\n    )\n);\n\nconst isEqualObject = (obj1, obj2) => (\n    obj1 === obj2 ||\n    (\n        Object.keys(obj1).length === Object.keys(obj2).length &&\n        Object.keys(obj1).every(key => isDeepEqual(obj1[key], obj2[key]))\n    )\n);\n\n// Filters out duplicates in an array of objects by key\nconst unique = (array, key) => array.filter((e, idx) =>\n    array.findIndex((a, i) => a[key] ? a[key] === e[key] : i === idx) === idx);\n\nconst getPropertyValue = (obj, k) => {\n    let keys = k;\n    if (!Array.isArray(keys)) keys = [keys];\n    if (!isEmptyObject(obj) && keys[0] in obj && keys && keys.length > 1) {\n        return getPropertyValue(obj[keys[0]], keys.slice(1));\n    }\n    // else return clone of object to avoid overwriting data\n    return obj ? cloneObject(obj[keys[0]]) : undefined;\n};\n\n/**\n * Creates a DOM element and adds any attributes to it.\n *\n * @param {String} tag_name: the tag to create, e.g. 'div', 'a', etc\n * @param {Object} attributes: all the attributes to assign, e.g. { id: '...', class: '...', html: '...', ... }\n * @return the created DOM element\n */\nconst createElement = (tag_name, attributes = {}) => {\n    const el = document.createElement(tag_name);\n    Object.keys(attributes).forEach((attr) => {\n        const value = attributes[attr];\n        if (attr === 'text') {\n            el.textContent = value;\n        } else if (attr === 'html') {\n            el.html(value);\n        } else {\n            el.setAttribute(attr, value);\n        }\n    });\n    return el;\n};\n\nlet static_hash;\nconst getStaticHash = () => {\n    static_hash = static_hash || (document.querySelector('script[src*=\"main\"]').getAttribute('src') || '').split('.')[1];\n    return static_hash;\n};\n\nclass PromiseClass {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.reject  = reject;\n            this.resolve = resolve;\n        });\n    }\n}\n\nmodule.exports = {\n    template,\n    isEmptyObject,\n    cloneObject,\n    isDeepEqual,\n    unique,\n    getPropertyValue,\n    createElement,\n    getStaticHash,\n    PromiseClass,\n};\n","const moment           = require('moment');\nconst getLanguage      = require('../language').get;\nconst LocalStore       = require('../storage').LocalStore;\nconst getPropertyValue = require('../utility').getPropertyValue;\nconst getStaticHash    = require('../utility').getStaticHash;\nconst isEmptyObject    = require('../utility').isEmptyObject;\n\n/*\n * Caches WS responses to reduce delay time and number of requests\n * Stores data in LocalStore which is the first one available in: localStorage, sessionStorage, InScriptStore\n *\n * 1. It caches only the response of those calls which determined in `config`\n * 2. It doesn't cache responses which returned error\n * 3. The value is requested by BinarySocket,\n *    if this returns a value according to the logic here, socket code take it as response\n *    but also triggers an async `send` request, to keep the cache updated for next time\n * 4. Uses client's time to set and check for expiry, as the expire durations are not so long to need a more precise one\n *    (And doesn't worth to wait for the response of time call)\n * 5. Some responses should be cached by a particular value from request (e.g. contracts_for_frxAUDJPY)\n *    so there can be more than one value for a particular call\n * 6. Clears the whole cache regardless their expire time on the following events:\n *    6.1. Client changes: login / logout / switch loginid\n *    6.2. Detect a new release (static hash changed)\n */\nconst SocketCache = (() => {\n    // keys are msg_type\n    // expire: how long to keep the value (in minutes)\n    // map_to: to store different responses of the same key, should be array of:\n    //     string  : the property value from echo_req\n    //     function: return value of the function\n    const config = {\n        payout_currencies     : { expire: 120 },\n        proposal_open_contract: { expire: 10,  map_to: ['contract_id'] },\n        active_symbols        : { expire: 10,  map_to: ['product_type', 'landing_company', getLanguage] },\n        contracts_for         : { expire: 10,  map_to: ['contracts_for', 'product_type', 'currency'] },\n        exchange_rates        : { expire: 60,  map_to: ['base_currency'] },\n        ticks_history         : { expire: 10,  map_to: ['ticks_history', 'granularity', 'start', 'end', 'style'] },\n        trading_times         : { expire: 120, map_to: ['trading_times'] },\n        // TODO: Enable statement and profit table caching once we have UI design for handling\n        // transitions between cached table and newly added data to table\n        // statement             : { expire: 10,   map_to: ['limit', 'offset'] },\n        // profit_table          : { expire: 10,   map_to: ['date_from', 'limit', 'offset'] },\n    };\n\n    const storage_key = 'ws_cache';\n\n    let data_obj = {};\n\n    const msg_type_mapping = {\n        history: 'ticks_history',\n        candles: 'ticks_history',\n    };\n\n    const set = (response) => {\n        const msg_type = msg_type_mapping[response.msg_type] || response.msg_type;\n\n        // check if response has subscription, since only want to cache non-streamed responses\n        if (response.subscription) return;\n\n        if (!config[msg_type]) return;\n        // prevent unwanted page behaviour\n        // if a cached version already exists but it gives an error after being called for updating the cache\n        const cached_response = get(response.echo_req) || {};\n        const cached_message  = cached_response[msg_type];\n        const new_message     = response[msg_type];\n\n        const has_error_or_missing = response.error; // || !(msg_type in response);\n        const has_new_value        = cached_message && isEmptyValue(cached_message) && !isEmptyValue(new_message);\n        const has_old_cache        = cached_message && isEmptyValue(new_message) && !isEmptyValue(cached_message);\n        const has_valid_cache      = !isEmptyValue(cached_response) && !cached_response.error;\n\n        if ((has_error_or_missing || has_new_value || has_old_cache) && has_valid_cache) {\n            clear();\n            // window.location.reload();\n            return;\n        }\n\n        const key      = makeKey(response.echo_req, msg_type);\n        const expires  = moment().add(config[msg_type].expire, 'm').valueOf();\n\n        if (!data_obj.static_hash) {\n            data_obj.static_hash = getStaticHash();\n        }\n\n        data_obj[key] = { value: response, expires };\n        LocalStore.setObject(storage_key, data_obj);\n    };\n\n    const isEmptyValue = (data) => {\n        let is_empty_data = false;\n        if (Array.isArray(data)) {\n            if (!data.length) {\n                is_empty_data = true;\n            }\n        } else if (typeof response_data === 'object') {\n            if (!Object.keys(data).length) {\n                is_empty_data = true;\n            }\n        }\n        return is_empty_data;\n    };\n\n    const get = (request, msg_type) => {\n        let response;\n\n        if (isEmptyObject(data_obj)) {\n            data_obj = LocalStore.getObject(storage_key);\n            if (isEmptyObject(data_obj)) return undefined;\n        }\n\n        if (data_obj.static_hash !== getStaticHash()) { // new release\n            clear();\n        }\n\n        const key          = makeKey(request, msg_type);\n        const response_obj = getPropertyValue(data_obj, key) || {};\n\n        if (moment().isBefore(response_obj.expires)) {\n            response = response_obj.value;\n        } else { // remove if expired\n            remove(key);\n        }\n\n        return response;\n    };\n\n    const makeKey = (source_obj = {}, msg_type = '') => {\n        let key = msg_type || Object.keys(source_obj).find(type => config[type]);\n\n        if (key && !isEmptyObject(source_obj)) {\n            ((config[key] || {}).map_to || []).forEach((map_key) => {\n                const value = typeof map_key === 'function' ? map_key() : source_obj[map_key];\n                key += map_key ? `_${value || ''}` : '';\n            });\n        }\n\n        return key;\n    };\n\n    const remove = (key, should_match_all) => {\n        if (should_match_all) {\n            Object.keys(data_obj).forEach((data_key) => {\n                if (data_key.indexOf(key) !== -1) {\n                    delete data_obj[data_key];\n                }\n            });\n        } else if (key in data_obj) {\n            delete data_obj[key];\n        }\n        LocalStore.setObject(storage_key, data_obj);\n    };\n\n    const clear = () => {\n        LocalStore.remove(storage_key);\n        data_obj = {};\n    };\n\n    return {\n        set,\n        get,\n        remove,\n        clear,\n    };\n})();\n\nmodule.exports = SocketCache;\n","import Client            from '_common/base/client_base';\nimport SocketCache       from '_common/base/socket_cache';\nimport { removeCookies } from '_common/storage';\nimport WS                from './ws-methods';\n\nexport const requestLogout = () =>\n    WS.logout().then(doLogout);\n\nconst doLogout = (response) => {\n    if (response.logout !== 1) return;\n    removeCookies('affiliate_token', 'affiliate_tracking');\n    Client.clearAllAccounts();\n    Client.set('loginid', '');\n    SocketCache.clear();\n};\n","export const MAX_MOBILE_WIDTH = 767;\nexport const MAX_TABLET_WIDTH = 1024;\n","const moment       = require('moment');\nconst BinarySocket = require('./socket_base');\nconst PromiseClass = require('../utility').PromiseClass;\n\nconst ServerTime = (() => {\n    let clock_started = false;\n    const pending = new PromiseClass();\n    let server_time,\n        performance_request_time,\n        get_time_interval,\n        update_time_interval,\n        onTimeUpdated;\n\n    const init = (fncTimeUpdated) => {\n        if (!clock_started) {\n            onTimeUpdated = fncTimeUpdated;\n            requestTime();\n            clearInterval(get_time_interval);\n            get_time_interval = setInterval(requestTime, 30000);\n            clock_started = true;\n        }\n    };\n\n    const requestTime = () => {\n        performance_request_time = performance.now();\n        BinarySocket.send({ time: 1 }).then(timeCounter);\n    };\n\n    const timeCounter = (response) => {\n        if (response.error) return;\n\n        if (!clock_started) {\n            init();\n            return;\n        }\n\n        clearInterval(update_time_interval);\n\n        const start_timestamp = response.time;\n        const performance_response_time = performance.now();\n        const time_taken = performance_response_time - performance_request_time;\n        const server_time_at_response = ((start_timestamp * 1000) + time_taken);\n\n        const updateTime = () => {\n            const time_since_response = performance.now() - performance_response_time;\n            server_time = moment(server_time_at_response + time_since_response).utc();\n\n            if (typeof onTimeUpdated === 'function') {\n                onTimeUpdated();\n            }\n        };\n        updateTime();\n        pending.resolve();\n        update_time_interval = setInterval(updateTime, 1000);\n    };\n\n    const get = () => server_time ? server_time.clone() : undefined;\n\n    return {\n        init,\n        get,\n        timePromise: pending.promise,\n    };\n})();\n\nmodule.exports = ServerTime;\n"],"sourceRoot":""}